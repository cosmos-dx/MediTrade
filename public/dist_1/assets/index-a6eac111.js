var Ff = Object.defineProperty;
var Bf = (t, a, s) =>
  a in t
    ? Ff(t, a, { enumerable: !0, configurable: !0, writable: !0, value: s })
    : (t[a] = s);
var _a = (t, a, s) => (Bf(t, typeof a != "symbol" ? a + "" : a, s), s);
function Hf(t, a) {
  for (var s = 0; s < a.length; s++) {
    const c = a[s];
    if (typeof c != "string" && !Array.isArray(c)) {
      for (const u in c)
        if (u !== "default" && !(u in t)) {
          const p = Object.getOwnPropertyDescriptor(c, u);
          p &&
            Object.defineProperty(
              t,
              u,
              p.get ? p : { enumerable: !0, get: () => c[u] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(t, Symbol.toStringTag, { value: "Module" })
  );
}
(function () {
  const a = document.createElement("link").relList;
  if (a && a.supports && a.supports("modulepreload")) return;
  for (const u of document.querySelectorAll('link[rel="modulepreload"]')) c(u);
  new MutationObserver((u) => {
    for (const p of u)
      if (p.type === "childList")
        for (const b of p.addedNodes)
          b.tagName === "LINK" && b.rel === "modulepreload" && c(b);
  }).observe(document, { childList: !0, subtree: !0 });
  function s(u) {
    const p = {};
    return (
      u.integrity && (p.integrity = u.integrity),
      u.referrerPolicy && (p.referrerPolicy = u.referrerPolicy),
      u.crossOrigin === "use-credentials"
        ? (p.credentials = "include")
        : u.crossOrigin === "anonymous"
        ? (p.credentials = "omit")
        : (p.credentials = "same-origin"),
      p
    );
  }
  function c(u) {
    if (u.ep) return;
    u.ep = !0;
    const p = s(u);
    fetch(u.href, p);
  }
})();
function cd(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")
    ? t.default
    : t;
}
var k = {},
  Xf = {
    get exports() {
      return k;
    },
    set exports(t) {
      k = t;
    },
  },
  ro = {},
  ee = {},
  Yf = {
    get exports() {
      return ee;
    },
    set exports(t) {
      ee = t;
    },
  },
  Be = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Br = Symbol.for("react.element"),
  Wf = Symbol.for("react.portal"),
  Gf = Symbol.for("react.fragment"),
  Vf = Symbol.for("react.strict_mode"),
  Uf = Symbol.for("react.profiler"),
  $f = Symbol.for("react.provider"),
  Kf = Symbol.for("react.context"),
  Zf = Symbol.for("react.forward_ref"),
  qf = Symbol.for("react.suspense"),
  Jf = Symbol.for("react.memo"),
  Qf = Symbol.for("react.lazy"),
  xh = Symbol.iterator;
function eg(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (xh && t[xh]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var hd = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  ud = Object.assign,
  dd = {};
function Dn(t, a, s) {
  (this.props = t),
    (this.context = a),
    (this.refs = dd),
    (this.updater = s || hd);
}
Dn.prototype.isReactComponent = {};
Dn.prototype.setState = function (t, a) {
  if (typeof t != "object" && typeof t != "function" && t != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, t, a, "setState");
};
Dn.prototype.forceUpdate = function (t) {
  this.updater.enqueueForceUpdate(this, t, "forceUpdate");
};
function pd() {}
pd.prototype = Dn.prototype;
function gc(t, a, s) {
  (this.props = t),
    (this.context = a),
    (this.refs = dd),
    (this.updater = s || hd);
}
var mc = (gc.prototype = new pd());
mc.constructor = gc;
ud(mc, Dn.prototype);
mc.isPureReactComponent = !0;
var vh = Array.isArray,
  fd = Object.prototype.hasOwnProperty,
  xc = { current: null },
  gd = { key: !0, ref: !0, __self: !0, __source: !0 };
function md(t, a, s) {
  var c,
    u = {},
    p = null,
    b = null;
  if (a != null)
    for (c in (a.ref !== void 0 && (b = a.ref),
    a.key !== void 0 && (p = "" + a.key),
    a))
      fd.call(a, c) && !gd.hasOwnProperty(c) && (u[c] = a[c]);
  var S = arguments.length - 2;
  if (S === 1) u.children = s;
  else if (1 < S) {
    for (var E = Array(S), N = 0; N < S; N++) E[N] = arguments[N + 2];
    u.children = E;
  }
  if (t && t.defaultProps)
    for (c in ((S = t.defaultProps), S)) u[c] === void 0 && (u[c] = S[c]);
  return {
    $$typeof: Br,
    type: t,
    key: p,
    ref: b,
    props: u,
    _owner: xc.current,
  };
}
function tg(t, a) {
  return {
    $$typeof: Br,
    type: t.type,
    key: a,
    ref: t.ref,
    props: t.props,
    _owner: t._owner,
  };
}
function vc(t) {
  return typeof t == "object" && t !== null && t.$$typeof === Br;
}
function ig(t) {
  var a = { "=": "=0", ":": "=2" };
  return (
    "$" +
    t.replace(/[=:]/g, function (s) {
      return a[s];
    })
  );
}
var yh = /\/+/g;
function Mo(t, a) {
  return typeof t == "object" && t !== null && t.key != null
    ? ig("" + t.key)
    : a.toString(36);
}
function ms(t, a, s, c, u) {
  var p = typeof t;
  (p === "undefined" || p === "boolean") && (t = null);
  var b = !1;
  if (t === null) b = !0;
  else
    switch (p) {
      case "string":
      case "number":
        b = !0;
        break;
      case "object":
        switch (t.$$typeof) {
          case Br:
          case Wf:
            b = !0;
        }
    }
  if (b)
    return (
      (b = t),
      (u = u(b)),
      (t = c === "" ? "." + Mo(b, 0) : c),
      vh(u)
        ? ((s = ""),
          t != null && (s = t.replace(yh, "$&/") + "/"),
          ms(u, a, s, "", function (N) {
            return N;
          }))
        : u != null &&
          (vc(u) &&
            (u = tg(
              u,
              s +
                (!u.key || (b && b.key === u.key)
                  ? ""
                  : ("" + u.key).replace(yh, "$&/") + "/") +
                t
            )),
          a.push(u)),
      1
    );
  if (((b = 0), (c = c === "" ? "." : c + ":"), vh(t)))
    for (var S = 0; S < t.length; S++) {
      p = t[S];
      var E = c + Mo(p, S);
      b += ms(p, a, s, E, u);
    }
  else if (((E = eg(t)), typeof E == "function"))
    for (t = E.call(t), S = 0; !(p = t.next()).done; )
      (p = p.value), (E = c + Mo(p, S++)), (b += ms(p, a, s, E, u));
  else if (p === "object")
    throw (
      ((a = String(t)),
      Error(
        "Objects are not valid as a React child (found: " +
          (a === "[object Object]"
            ? "object with keys {" + Object.keys(t).join(", ") + "}"
            : a) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return b;
}
function Ur(t, a, s) {
  if (t == null) return t;
  var c = [],
    u = 0;
  return (
    ms(t, c, "", "", function (p) {
      return a.call(s, p, u++);
    }),
    c
  );
}
function ag(t) {
  if (t._status === -1) {
    var a = t._result;
    (a = a()),
      a.then(
        function (s) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 1), (t._result = s));
        },
        function (s) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 2), (t._result = s));
        }
      ),
      t._status === -1 && ((t._status = 0), (t._result = a));
  }
  if (t._status === 1) return t._result.default;
  throw t._result;
}
var Xt = { current: null },
  xs = { transition: null },
  ng = {
    ReactCurrentDispatcher: Xt,
    ReactCurrentBatchConfig: xs,
    ReactCurrentOwner: xc,
  };
Be.Children = {
  map: Ur,
  forEach: function (t, a, s) {
    Ur(
      t,
      function () {
        a.apply(this, arguments);
      },
      s
    );
  },
  count: function (t) {
    var a = 0;
    return (
      Ur(t, function () {
        a++;
      }),
      a
    );
  },
  toArray: function (t) {
    return (
      Ur(t, function (a) {
        return a;
      }) || []
    );
  },
  only: function (t) {
    if (!vc(t))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return t;
  },
};
Be.Component = Dn;
Be.Fragment = Gf;
Be.Profiler = Uf;
Be.PureComponent = gc;
Be.StrictMode = Vf;
Be.Suspense = qf;
Be.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ng;
Be.cloneElement = function (t, a, s) {
  if (t == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        t +
        "."
    );
  var c = ud({}, t.props),
    u = t.key,
    p = t.ref,
    b = t._owner;
  if (a != null) {
    if (
      (a.ref !== void 0 && ((p = a.ref), (b = xc.current)),
      a.key !== void 0 && (u = "" + a.key),
      t.type && t.type.defaultProps)
    )
      var S = t.type.defaultProps;
    for (E in a)
      fd.call(a, E) &&
        !gd.hasOwnProperty(E) &&
        (c[E] = a[E] === void 0 && S !== void 0 ? S[E] : a[E]);
  }
  var E = arguments.length - 2;
  if (E === 1) c.children = s;
  else if (1 < E) {
    S = Array(E);
    for (var N = 0; N < E; N++) S[N] = arguments[N + 2];
    c.children = S;
  }
  return { $$typeof: Br, type: t.type, key: u, ref: p, props: c, _owner: b };
};
Be.createContext = function (t) {
  return (
    (t = {
      $$typeof: Kf,
      _currentValue: t,
      _currentValue2: t,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (t.Provider = { $$typeof: $f, _context: t }),
    (t.Consumer = t)
  );
};
Be.createElement = md;
Be.createFactory = function (t) {
  var a = md.bind(null, t);
  return (a.type = t), a;
};
Be.createRef = function () {
  return { current: null };
};
Be.forwardRef = function (t) {
  return { $$typeof: Zf, render: t };
};
Be.isValidElement = vc;
Be.lazy = function (t) {
  return { $$typeof: Qf, _payload: { _status: -1, _result: t }, _init: ag };
};
Be.memo = function (t, a) {
  return { $$typeof: Jf, type: t, compare: a === void 0 ? null : a };
};
Be.startTransition = function (t) {
  var a = xs.transition;
  xs.transition = {};
  try {
    t();
  } finally {
    xs.transition = a;
  }
};
Be.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
Be.useCallback = function (t, a) {
  return Xt.current.useCallback(t, a);
};
Be.useContext = function (t) {
  return Xt.current.useContext(t);
};
Be.useDebugValue = function () {};
Be.useDeferredValue = function (t) {
  return Xt.current.useDeferredValue(t);
};
Be.useEffect = function (t, a) {
  return Xt.current.useEffect(t, a);
};
Be.useId = function () {
  return Xt.current.useId();
};
Be.useImperativeHandle = function (t, a, s) {
  return Xt.current.useImperativeHandle(t, a, s);
};
Be.useInsertionEffect = function (t, a) {
  return Xt.current.useInsertionEffect(t, a);
};
Be.useLayoutEffect = function (t, a) {
  return Xt.current.useLayoutEffect(t, a);
};
Be.useMemo = function (t, a) {
  return Xt.current.useMemo(t, a);
};
Be.useReducer = function (t, a, s) {
  return Xt.current.useReducer(t, a, s);
};
Be.useRef = function (t) {
  return Xt.current.useRef(t);
};
Be.useState = function (t) {
  return Xt.current.useState(t);
};
Be.useSyncExternalStore = function (t, a, s) {
  return Xt.current.useSyncExternalStore(t, a, s);
};
Be.useTransition = function () {
  return Xt.current.useTransition();
};
Be.version = "18.2.0";
(function (t) {
  t.exports = Be;
})(Yf);
const yt = cd(ee),
  rg = Hf({ __proto__: null, default: yt }, [ee]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var sg = ee,
  og = Symbol.for("react.element"),
  lg = Symbol.for("react.fragment"),
  cg = Object.prototype.hasOwnProperty,
  hg = sg.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  ug = { key: !0, ref: !0, __self: !0, __source: !0 };
function xd(t, a, s) {
  var c,
    u = {},
    p = null,
    b = null;
  s !== void 0 && (p = "" + s),
    a.key !== void 0 && (p = "" + a.key),
    a.ref !== void 0 && (b = a.ref);
  for (c in a) cg.call(a, c) && !ug.hasOwnProperty(c) && (u[c] = a[c]);
  if (t && t.defaultProps)
    for (c in ((a = t.defaultProps), a)) u[c] === void 0 && (u[c] = a[c]);
  return {
    $$typeof: og,
    type: t,
    key: p,
    ref: b,
    props: u,
    _owner: hg.current,
  };
}
ro.Fragment = lg;
ro.jsx = xd;
ro.jsxs = xd;
(function (t) {
  t.exports = ro;
})(Xf);
var cl = {},
  Ts = {},
  dg = {
    get exports() {
      return Ts;
    },
    set exports(t) {
      Ts = t;
    },
  },
  ri = {},
  hl = {},
  pg = {
    get exports() {
      return hl;
    },
    set exports(t) {
      hl = t;
    },
  },
  vd = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (t) {
  function a(ue, xe) {
    var be = ue.length;
    ue.push(xe);
    e: for (; 0 < be; ) {
      var Me = (be - 1) >>> 1,
        Te = ue[Me];
      if (0 < u(Te, xe)) (ue[Me] = xe), (ue[be] = Te), (be = Me);
      else break e;
    }
  }
  function s(ue) {
    return ue.length === 0 ? null : ue[0];
  }
  function c(ue) {
    if (ue.length === 0) return null;
    var xe = ue[0],
      be = ue.pop();
    if (be !== xe) {
      ue[0] = be;
      e: for (var Me = 0, Te = ue.length, He = Te >>> 1; Me < He; ) {
        var De = 2 * (Me + 1) - 1,
          Ke = ue[De],
          je = De + 1,
          pt = ue[je];
        if (0 > u(Ke, be))
          je < Te && 0 > u(pt, Ke)
            ? ((ue[Me] = pt), (ue[je] = be), (Me = je))
            : ((ue[Me] = Ke), (ue[De] = be), (Me = De));
        else if (je < Te && 0 > u(pt, be))
          (ue[Me] = pt), (ue[je] = be), (Me = je);
        else break e;
      }
    }
    return xe;
  }
  function u(ue, xe) {
    var be = ue.sortIndex - xe.sortIndex;
    return be !== 0 ? be : ue.id - xe.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var p = performance;
    t.unstable_now = function () {
      return p.now();
    };
  } else {
    var b = Date,
      S = b.now();
    t.unstable_now = function () {
      return b.now() - S;
    };
  }
  var E = [],
    N = [],
    F = 1,
    H = null,
    j = 3,
    V = !1,
    q = !1,
    K = !1,
    ae = typeof setTimeout == "function" ? setTimeout : null,
    G = typeof clearTimeout == "function" ? clearTimeout : null,
    L = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function R(ue) {
    for (var xe = s(N); xe !== null; ) {
      if (xe.callback === null) c(N);
      else if (xe.startTime <= ue)
        c(N), (xe.sortIndex = xe.expirationTime), a(E, xe);
      else break;
      xe = s(N);
    }
  }
  function O(ue) {
    if (((K = !1), R(ue), !q))
      if (s(E) !== null) (q = !0), _e(X);
      else {
        var xe = s(N);
        xe !== null && Le(O, xe.startTime - ue);
      }
  }
  function X(ue, xe) {
    (q = !1), K && ((K = !1), G(te), (te = -1)), (V = !0);
    var be = j;
    try {
      for (
        R(xe), H = s(E);
        H !== null && (!(H.expirationTime > xe) || (ue && !Y()));

      ) {
        var Me = H.callback;
        if (typeof Me == "function") {
          (H.callback = null), (j = H.priorityLevel);
          var Te = Me(H.expirationTime <= xe);
          (xe = t.unstable_now()),
            typeof Te == "function" ? (H.callback = Te) : H === s(E) && c(E),
            R(xe);
        } else c(E);
        H = s(E);
      }
      if (H !== null) var He = !0;
      else {
        var De = s(N);
        De !== null && Le(O, De.startTime - xe), (He = !1);
      }
      return He;
    } finally {
      (H = null), (j = be), (V = !1);
    }
  }
  var W = !1,
    U = null,
    te = -1,
    he = 5,
    J = -1;
  function Y() {
    return !(t.unstable_now() - J < he);
  }
  function se() {
    if (U !== null) {
      var ue = t.unstable_now();
      J = ue;
      var xe = !0;
      try {
        xe = U(!0, ue);
      } finally {
        xe ? fe() : ((W = !1), (U = null));
      }
    } else W = !1;
  }
  var fe;
  if (typeof L == "function")
    fe = function () {
      L(se);
    };
  else if (typeof MessageChannel < "u") {
    var ie = new MessageChannel(),
      ke = ie.port2;
    (ie.port1.onmessage = se),
      (fe = function () {
        ke.postMessage(null);
      });
  } else
    fe = function () {
      ae(se, 0);
    };
  function _e(ue) {
    (U = ue), W || ((W = !0), fe());
  }
  function Le(ue, xe) {
    te = ae(function () {
      ue(t.unstable_now());
    }, xe);
  }
  (t.unstable_IdlePriority = 5),
    (t.unstable_ImmediatePriority = 1),
    (t.unstable_LowPriority = 4),
    (t.unstable_NormalPriority = 3),
    (t.unstable_Profiling = null),
    (t.unstable_UserBlockingPriority = 2),
    (t.unstable_cancelCallback = function (ue) {
      ue.callback = null;
    }),
    (t.unstable_continueExecution = function () {
      q || V || ((q = !0), _e(X));
    }),
    (t.unstable_forceFrameRate = function (ue) {
      0 > ue || 125 < ue
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (he = 0 < ue ? Math.floor(1e3 / ue) : 5);
    }),
    (t.unstable_getCurrentPriorityLevel = function () {
      return j;
    }),
    (t.unstable_getFirstCallbackNode = function () {
      return s(E);
    }),
    (t.unstable_next = function (ue) {
      switch (j) {
        case 1:
        case 2:
        case 3:
          var xe = 3;
          break;
        default:
          xe = j;
      }
      var be = j;
      j = xe;
      try {
        return ue();
      } finally {
        j = be;
      }
    }),
    (t.unstable_pauseExecution = function () {}),
    (t.unstable_requestPaint = function () {}),
    (t.unstable_runWithPriority = function (ue, xe) {
      switch (ue) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          ue = 3;
      }
      var be = j;
      j = ue;
      try {
        return xe();
      } finally {
        j = be;
      }
    }),
    (t.unstable_scheduleCallback = function (ue, xe, be) {
      var Me = t.unstable_now();
      switch (
        (typeof be == "object" && be !== null
          ? ((be = be.delay),
            (be = typeof be == "number" && 0 < be ? Me + be : Me))
          : (be = Me),
        ue)
      ) {
        case 1:
          var Te = -1;
          break;
        case 2:
          Te = 250;
          break;
        case 5:
          Te = 1073741823;
          break;
        case 4:
          Te = 1e4;
          break;
        default:
          Te = 5e3;
      }
      return (
        (Te = be + Te),
        (ue = {
          id: F++,
          callback: xe,
          priorityLevel: ue,
          startTime: be,
          expirationTime: Te,
          sortIndex: -1,
        }),
        be > Me
          ? ((ue.sortIndex = be),
            a(N, ue),
            s(E) === null &&
              ue === s(N) &&
              (K ? (G(te), (te = -1)) : (K = !0), Le(O, be - Me)))
          : ((ue.sortIndex = Te), a(E, ue), q || V || ((q = !0), _e(X))),
        ue
      );
    }),
    (t.unstable_shouldYield = Y),
    (t.unstable_wrapCallback = function (ue) {
      var xe = j;
      return function () {
        var be = j;
        j = xe;
        try {
          return ue.apply(this, arguments);
        } finally {
          j = be;
        }
      };
    });
})(vd);
(function (t) {
  t.exports = vd;
})(pg);
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var yd = ee,
  ni = hl;
function pe(t) {
  for (
    var a = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, s = 1;
    s < arguments.length;
    s++
  )
    a += "&args[]=" + encodeURIComponent(arguments[s]);
  return (
    "Minified React error #" +
    t +
    "; visit " +
    a +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var bd = new Set(),
  wr = {};
function Ja(t, a) {
  Ln(t, a), Ln(t + "Capture", a);
}
function Ln(t, a) {
  for (wr[t] = a, t = 0; t < a.length; t++) bd.add(a[t]);
}
var Zi = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  ul = Object.prototype.hasOwnProperty,
  fg =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  bh = {},
  wh = {};
function gg(t) {
  return ul.call(wh, t)
    ? !0
    : ul.call(bh, t)
    ? !1
    : fg.test(t)
    ? (wh[t] = !0)
    : ((bh[t] = !0), !1);
}
function mg(t, a, s, c) {
  if (s !== null && s.type === 0) return !1;
  switch (typeof a) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return c
        ? !1
        : s !== null
        ? !s.acceptsBooleans
        : ((t = t.toLowerCase().slice(0, 5)), t !== "data-" && t !== "aria-");
    default:
      return !1;
  }
}
function xg(t, a, s, c) {
  if (a === null || typeof a > "u" || mg(t, a, s, c)) return !0;
  if (c) return !1;
  if (s !== null)
    switch (s.type) {
      case 3:
        return !a;
      case 4:
        return a === !1;
      case 5:
        return isNaN(a);
      case 6:
        return isNaN(a) || 1 > a;
    }
  return !1;
}
function Yt(t, a, s, c, u, p, b) {
  (this.acceptsBooleans = a === 2 || a === 3 || a === 4),
    (this.attributeName = c),
    (this.attributeNamespace = u),
    (this.mustUseProperty = s),
    (this.propertyName = t),
    (this.type = a),
    (this.sanitizeURL = p),
    (this.removeEmptyString = b);
}
var Nt = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (t) {
    Nt[t] = new Yt(t, 0, !1, t, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (t) {
  var a = t[0];
  Nt[a] = new Yt(a, 1, !1, t[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (t) {
  Nt[t] = new Yt(t, 2, !1, t.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (t) {
  Nt[t] = new Yt(t, 2, !1, t, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (t) {
    Nt[t] = new Yt(t, 3, !1, t.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (t) {
  Nt[t] = new Yt(t, 3, !0, t, null, !1, !1);
});
["capture", "download"].forEach(function (t) {
  Nt[t] = new Yt(t, 4, !1, t, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (t) {
  Nt[t] = new Yt(t, 6, !1, t, null, !1, !1);
});
["rowSpan", "start"].forEach(function (t) {
  Nt[t] = new Yt(t, 5, !1, t.toLowerCase(), null, !1, !1);
});
var yc = /[\-:]([a-z])/g;
function bc(t) {
  return t[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (t) {
    var a = t.replace(yc, bc);
    Nt[a] = new Yt(a, 1, !1, t, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (t) {
    var a = t.replace(yc, bc);
    Nt[a] = new Yt(a, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (t) {
  var a = t.replace(yc, bc);
  Nt[a] = new Yt(a, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (t) {
  Nt[t] = new Yt(t, 1, !1, t.toLowerCase(), null, !1, !1);
});
Nt.xlinkHref = new Yt(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (t) {
  Nt[t] = new Yt(t, 1, !1, t.toLowerCase(), null, !0, !0);
});
function wc(t, a, s, c) {
  var u = Nt.hasOwnProperty(a) ? Nt[a] : null;
  (u !== null
    ? u.type !== 0
    : c ||
      !(2 < a.length) ||
      (a[0] !== "o" && a[0] !== "O") ||
      (a[1] !== "n" && a[1] !== "N")) &&
    (xg(a, s, u, c) && (s = null),
    c || u === null
      ? gg(a) && (s === null ? t.removeAttribute(a) : t.setAttribute(a, "" + s))
      : u.mustUseProperty
      ? (t[u.propertyName] = s === null ? (u.type === 3 ? !1 : "") : s)
      : ((a = u.attributeName),
        (c = u.attributeNamespace),
        s === null
          ? t.removeAttribute(a)
          : ((u = u.type),
            (s = u === 3 || (u === 4 && s === !0) ? "" : "" + s),
            c ? t.setAttributeNS(c, a, s) : t.setAttribute(a, s))));
}
var ea = yd.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  $r = Symbol.for("react.element"),
  nn = Symbol.for("react.portal"),
  rn = Symbol.for("react.fragment"),
  kc = Symbol.for("react.strict_mode"),
  dl = Symbol.for("react.profiler"),
  wd = Symbol.for("react.provider"),
  kd = Symbol.for("react.context"),
  Sc = Symbol.for("react.forward_ref"),
  pl = Symbol.for("react.suspense"),
  fl = Symbol.for("react.suspense_list"),
  Cc = Symbol.for("react.memo"),
  ra = Symbol.for("react.lazy"),
  Sd = Symbol.for("react.offscreen"),
  kh = Symbol.iterator;
function Yn(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (kh && t[kh]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var lt = Object.assign,
  No;
function rr(t) {
  if (No === void 0)
    try {
      throw Error();
    } catch (s) {
      var a = s.stack.trim().match(/\n( *(at )?)/);
      No = (a && a[1]) || "";
    }
  return (
    `
` +
    No +
    t
  );
}
var To = !1;
function _o(t, a) {
  if (!t || To) return "";
  To = !0;
  var s = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (a)
      if (
        ((a = function () {
          throw Error();
        }),
        Object.defineProperty(a.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(a, []);
        } catch (N) {
          var c = N;
        }
        Reflect.construct(t, [], a);
      } else {
        try {
          a.call();
        } catch (N) {
          c = N;
        }
        t.call(a.prototype);
      }
    else {
      try {
        throw Error();
      } catch (N) {
        c = N;
      }
      t();
    }
  } catch (N) {
    if (N && c && typeof N.stack == "string") {
      for (
        var u = N.stack.split(`
`),
          p = c.stack.split(`
`),
          b = u.length - 1,
          S = p.length - 1;
        1 <= b && 0 <= S && u[b] !== p[S];

      )
        S--;
      for (; 1 <= b && 0 <= S; b--, S--)
        if (u[b] !== p[S]) {
          if (b !== 1 || S !== 1)
            do
              if ((b--, S--, 0 > S || u[b] !== p[S])) {
                var E =
                  `
` + u[b].replace(" at new ", " at ");
                return (
                  t.displayName &&
                    E.includes("<anonymous>") &&
                    (E = E.replace("<anonymous>", t.displayName)),
                  E
                );
              }
            while (1 <= b && 0 <= S);
          break;
        }
    }
  } finally {
    (To = !1), (Error.prepareStackTrace = s);
  }
  return (t = t ? t.displayName || t.name : "") ? rr(t) : "";
}
function vg(t) {
  switch (t.tag) {
    case 5:
      return rr(t.type);
    case 16:
      return rr("Lazy");
    case 13:
      return rr("Suspense");
    case 19:
      return rr("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (t = _o(t.type, !1)), t;
    case 11:
      return (t = _o(t.type.render, !1)), t;
    case 1:
      return (t = _o(t.type, !0)), t;
    default:
      return "";
  }
}
function gl(t) {
  if (t == null) return null;
  if (typeof t == "function") return t.displayName || t.name || null;
  if (typeof t == "string") return t;
  switch (t) {
    case rn:
      return "Fragment";
    case nn:
      return "Portal";
    case dl:
      return "Profiler";
    case kc:
      return "StrictMode";
    case pl:
      return "Suspense";
    case fl:
      return "SuspenseList";
  }
  if (typeof t == "object")
    switch (t.$$typeof) {
      case kd:
        return (t.displayName || "Context") + ".Consumer";
      case wd:
        return (t._context.displayName || "Context") + ".Provider";
      case Sc:
        var a = t.render;
        return (
          (t = t.displayName),
          t ||
            ((t = a.displayName || a.name || ""),
            (t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")),
          t
        );
      case Cc:
        return (
          (a = t.displayName || null), a !== null ? a : gl(t.type) || "Memo"
        );
      case ra:
        (a = t._payload), (t = t._init);
        try {
          return gl(t(a));
        } catch {}
    }
  return null;
}
function yg(t) {
  var a = t.type;
  switch (t.tag) {
    case 24:
      return "Cache";
    case 9:
      return (a.displayName || "Context") + ".Consumer";
    case 10:
      return (a._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (t = a.render),
        (t = t.displayName || t.name || ""),
        a.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return a;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return gl(a);
    case 8:
      return a === kc ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof a == "function") return a.displayName || a.name || null;
      if (typeof a == "string") return a;
  }
  return null;
}
function wa(t) {
  switch (typeof t) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return t;
    case "object":
      return t;
    default:
      return "";
  }
}
function Cd(t) {
  var a = t.type;
  return (
    (t = t.nodeName) &&
    t.toLowerCase() === "input" &&
    (a === "checkbox" || a === "radio")
  );
}
function bg(t) {
  var a = Cd(t) ? "checked" : "value",
    s = Object.getOwnPropertyDescriptor(t.constructor.prototype, a),
    c = "" + t[a];
  if (
    !t.hasOwnProperty(a) &&
    typeof s < "u" &&
    typeof s.get == "function" &&
    typeof s.set == "function"
  ) {
    var u = s.get,
      p = s.set;
    return (
      Object.defineProperty(t, a, {
        configurable: !0,
        get: function () {
          return u.call(this);
        },
        set: function (b) {
          (c = "" + b), p.call(this, b);
        },
      }),
      Object.defineProperty(t, a, { enumerable: s.enumerable }),
      {
        getValue: function () {
          return c;
        },
        setValue: function (b) {
          c = "" + b;
        },
        stopTracking: function () {
          (t._valueTracker = null), delete t[a];
        },
      }
    );
  }
}
function Kr(t) {
  t._valueTracker || (t._valueTracker = bg(t));
}
function Ad(t) {
  if (!t) return !1;
  var a = t._valueTracker;
  if (!a) return !0;
  var s = a.getValue(),
    c = "";
  return (
    t && (c = Cd(t) ? (t.checked ? "true" : "false") : t.value),
    (t = c),
    t !== s ? (a.setValue(t), !0) : !1
  );
}
function _s(t) {
  if (((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u"))
    return null;
  try {
    return t.activeElement || t.body;
  } catch {
    return t.body;
  }
}
function ml(t, a) {
  var s = a.checked;
  return lt({}, a, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: s ?? t._wrapperState.initialChecked,
  });
}
function Sh(t, a) {
  var s = a.defaultValue == null ? "" : a.defaultValue,
    c = a.checked != null ? a.checked : a.defaultChecked;
  (s = wa(a.value != null ? a.value : s)),
    (t._wrapperState = {
      initialChecked: c,
      initialValue: s,
      controlled:
        a.type === "checkbox" || a.type === "radio"
          ? a.checked != null
          : a.value != null,
    });
}
function Pd(t, a) {
  (a = a.checked), a != null && wc(t, "checked", a, !1);
}
function xl(t, a) {
  Pd(t, a);
  var s = wa(a.value),
    c = a.type;
  if (s != null)
    c === "number"
      ? ((s === 0 && t.value === "") || t.value != s) && (t.value = "" + s)
      : t.value !== "" + s && (t.value = "" + s);
  else if (c === "submit" || c === "reset") {
    t.removeAttribute("value");
    return;
  }
  a.hasOwnProperty("value")
    ? vl(t, a.type, s)
    : a.hasOwnProperty("defaultValue") && vl(t, a.type, wa(a.defaultValue)),
    a.checked == null &&
      a.defaultChecked != null &&
      (t.defaultChecked = !!a.defaultChecked);
}
function Ch(t, a, s) {
  if (a.hasOwnProperty("value") || a.hasOwnProperty("defaultValue")) {
    var c = a.type;
    if (
      !(
        (c !== "submit" && c !== "reset") ||
        (a.value !== void 0 && a.value !== null)
      )
    )
      return;
    (a = "" + t._wrapperState.initialValue),
      s || a === t.value || (t.value = a),
      (t.defaultValue = a);
  }
  (s = t.name),
    s !== "" && (t.name = ""),
    (t.defaultChecked = !!t._wrapperState.initialChecked),
    s !== "" && (t.name = s);
}
function vl(t, a, s) {
  (a !== "number" || _s(t.ownerDocument) !== t) &&
    (s == null
      ? (t.defaultValue = "" + t._wrapperState.initialValue)
      : t.defaultValue !== "" + s && (t.defaultValue = "" + s));
}
var sr = Array.isArray;
function yn(t, a, s, c) {
  if (((t = t.options), a)) {
    a = {};
    for (var u = 0; u < s.length; u++) a["$" + s[u]] = !0;
    for (s = 0; s < t.length; s++)
      (u = a.hasOwnProperty("$" + t[s].value)),
        t[s].selected !== u && (t[s].selected = u),
        u && c && (t[s].defaultSelected = !0);
  } else {
    for (s = "" + wa(s), a = null, u = 0; u < t.length; u++) {
      if (t[u].value === s) {
        (t[u].selected = !0), c && (t[u].defaultSelected = !0);
        return;
      }
      a !== null || t[u].disabled || (a = t[u]);
    }
    a !== null && (a.selected = !0);
  }
}
function yl(t, a) {
  if (a.dangerouslySetInnerHTML != null) throw Error(pe(91));
  return lt({}, a, {
    value: void 0,
    defaultValue: void 0,
    children: "" + t._wrapperState.initialValue,
  });
}
function Ah(t, a) {
  var s = a.value;
  if (s == null) {
    if (((s = a.children), (a = a.defaultValue), s != null)) {
      if (a != null) throw Error(pe(92));
      if (sr(s)) {
        if (1 < s.length) throw Error(pe(93));
        s = s[0];
      }
      a = s;
    }
    a == null && (a = ""), (s = a);
  }
  t._wrapperState = { initialValue: wa(s) };
}
function Ld(t, a) {
  var s = wa(a.value),
    c = wa(a.defaultValue);
  s != null &&
    ((s = "" + s),
    s !== t.value && (t.value = s),
    a.defaultValue == null && t.defaultValue !== s && (t.defaultValue = s)),
    c != null && (t.defaultValue = "" + c);
}
function Ph(t) {
  var a = t.textContent;
  a === t._wrapperState.initialValue && a !== "" && a !== null && (t.value = a);
}
function Ed(t) {
  switch (t) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function bl(t, a) {
  return t == null || t === "http://www.w3.org/1999/xhtml"
    ? Ed(a)
    : t === "http://www.w3.org/2000/svg" && a === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : t;
}
var Zr,
  Md = (function (t) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (a, s, c, u) {
          MSApp.execUnsafeLocalFunction(function () {
            return t(a, s, c, u);
          });
        }
      : t;
  })(function (t, a) {
    if (t.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in t)
      t.innerHTML = a;
    else {
      for (
        Zr = Zr || document.createElement("div"),
          Zr.innerHTML = "<svg>" + a.valueOf().toString() + "</svg>",
          a = Zr.firstChild;
        t.firstChild;

      )
        t.removeChild(t.firstChild);
      for (; a.firstChild; ) t.appendChild(a.firstChild);
    }
  });
function kr(t, a) {
  if (a) {
    var s = t.firstChild;
    if (s && s === t.lastChild && s.nodeType === 3) {
      s.nodeValue = a;
      return;
    }
  }
  t.textContent = a;
}
var hr = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  wg = ["Webkit", "ms", "Moz", "O"];
Object.keys(hr).forEach(function (t) {
  wg.forEach(function (a) {
    (a = a + t.charAt(0).toUpperCase() + t.substring(1)), (hr[a] = hr[t]);
  });
});
function Nd(t, a, s) {
  return a == null || typeof a == "boolean" || a === ""
    ? ""
    : s || typeof a != "number" || a === 0 || (hr.hasOwnProperty(t) && hr[t])
    ? ("" + a).trim()
    : a + "px";
}
function Td(t, a) {
  t = t.style;
  for (var s in a)
    if (a.hasOwnProperty(s)) {
      var c = s.indexOf("--") === 0,
        u = Nd(s, a[s], c);
      s === "float" && (s = "cssFloat"), c ? t.setProperty(s, u) : (t[s] = u);
    }
}
var kg = lt(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function wl(t, a) {
  if (a) {
    if (kg[t] && (a.children != null || a.dangerouslySetInnerHTML != null))
      throw Error(pe(137, t));
    if (a.dangerouslySetInnerHTML != null) {
      if (a.children != null) throw Error(pe(60));
      if (
        typeof a.dangerouslySetInnerHTML != "object" ||
        !("__html" in a.dangerouslySetInnerHTML)
      )
        throw Error(pe(61));
    }
    if (a.style != null && typeof a.style != "object") throw Error(pe(62));
  }
}
function kl(t, a) {
  if (t.indexOf("-") === -1) return typeof a.is == "string";
  switch (t) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var Sl = null;
function Ac(t) {
  return (
    (t = t.target || t.srcElement || window),
    t.correspondingUseElement && (t = t.correspondingUseElement),
    t.nodeType === 3 ? t.parentNode : t
  );
}
var Cl = null,
  bn = null,
  wn = null;
function Lh(t) {
  if ((t = Yr(t))) {
    if (typeof Cl != "function") throw Error(pe(280));
    var a = t.stateNode;
    a && ((a = ho(a)), Cl(t.stateNode, t.type, a));
  }
}
function _d(t) {
  bn ? (wn ? wn.push(t) : (wn = [t])) : (bn = t);
}
function Id() {
  if (bn) {
    var t = bn,
      a = wn;
    if (((wn = bn = null), Lh(t), a)) for (t = 0; t < a.length; t++) Lh(a[t]);
  }
}
function Rd(t, a) {
  return t(a);
}
function Dd() {}
var Io = !1;
function jd(t, a, s) {
  if (Io) return t(a, s);
  Io = !0;
  try {
    return Rd(t, a, s);
  } finally {
    (Io = !1), (bn !== null || wn !== null) && (Dd(), Id());
  }
}
function Sr(t, a) {
  var s = t.stateNode;
  if (s === null) return null;
  var c = ho(s);
  if (c === null) return null;
  s = c[a];
  e: switch (a) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (c = !c.disabled) ||
        ((t = t.type),
        (c = !(
          t === "button" ||
          t === "input" ||
          t === "select" ||
          t === "textarea"
        ))),
        (t = !c);
      break e;
    default:
      t = !1;
  }
  if (t) return null;
  if (s && typeof s != "function") throw Error(pe(231, a, typeof s));
  return s;
}
var Al = !1;
if (Zi)
  try {
    var Wn = {};
    Object.defineProperty(Wn, "passive", {
      get: function () {
        Al = !0;
      },
    }),
      window.addEventListener("test", Wn, Wn),
      window.removeEventListener("test", Wn, Wn);
  } catch {
    Al = !1;
  }
function Sg(t, a, s, c, u, p, b, S, E) {
  var N = Array.prototype.slice.call(arguments, 3);
  try {
    a.apply(s, N);
  } catch (F) {
    this.onError(F);
  }
}
var ur = !1,
  Is = null,
  Rs = !1,
  Pl = null,
  Cg = {
    onError: function (t) {
      (ur = !0), (Is = t);
    },
  };
function Ag(t, a, s, c, u, p, b, S, E) {
  (ur = !1), (Is = null), Sg.apply(Cg, arguments);
}
function Pg(t, a, s, c, u, p, b, S, E) {
  if ((Ag.apply(this, arguments), ur)) {
    if (ur) {
      var N = Is;
      (ur = !1), (Is = null);
    } else throw Error(pe(198));
    Rs || ((Rs = !0), (Pl = N));
  }
}
function Qa(t) {
  var a = t,
    s = t;
  if (t.alternate) for (; a.return; ) a = a.return;
  else {
    t = a;
    do (a = t), a.flags & 4098 && (s = a.return), (t = a.return);
    while (t);
  }
  return a.tag === 3 ? s : null;
}
function zd(t) {
  if (t.tag === 13) {
    var a = t.memoizedState;
    if (
      (a === null && ((t = t.alternate), t !== null && (a = t.memoizedState)),
      a !== null)
    )
      return a.dehydrated;
  }
  return null;
}
function Eh(t) {
  if (Qa(t) !== t) throw Error(pe(188));
}
function Lg(t) {
  var a = t.alternate;
  if (!a) {
    if (((a = Qa(t)), a === null)) throw Error(pe(188));
    return a !== t ? null : t;
  }
  for (var s = t, c = a; ; ) {
    var u = s.return;
    if (u === null) break;
    var p = u.alternate;
    if (p === null) {
      if (((c = u.return), c !== null)) {
        s = c;
        continue;
      }
      break;
    }
    if (u.child === p.child) {
      for (p = u.child; p; ) {
        if (p === s) return Eh(u), t;
        if (p === c) return Eh(u), a;
        p = p.sibling;
      }
      throw Error(pe(188));
    }
    if (s.return !== c.return) (s = u), (c = p);
    else {
      for (var b = !1, S = u.child; S; ) {
        if (S === s) {
          (b = !0), (s = u), (c = p);
          break;
        }
        if (S === c) {
          (b = !0), (c = u), (s = p);
          break;
        }
        S = S.sibling;
      }
      if (!b) {
        for (S = p.child; S; ) {
          if (S === s) {
            (b = !0), (s = p), (c = u);
            break;
          }
          if (S === c) {
            (b = !0), (c = p), (s = u);
            break;
          }
          S = S.sibling;
        }
        if (!b) throw Error(pe(189));
      }
    }
    if (s.alternate !== c) throw Error(pe(190));
  }
  if (s.tag !== 3) throw Error(pe(188));
  return s.stateNode.current === s ? t : a;
}
function Od(t) {
  return (t = Lg(t)), t !== null ? Fd(t) : null;
}
function Fd(t) {
  if (t.tag === 5 || t.tag === 6) return t;
  for (t = t.child; t !== null; ) {
    var a = Fd(t);
    if (a !== null) return a;
    t = t.sibling;
  }
  return null;
}
var Bd = ni.unstable_scheduleCallback,
  Mh = ni.unstable_cancelCallback,
  Eg = ni.unstable_shouldYield,
  Mg = ni.unstable_requestPaint,
  dt = ni.unstable_now,
  Ng = ni.unstable_getCurrentPriorityLevel,
  Pc = ni.unstable_ImmediatePriority,
  Hd = ni.unstable_UserBlockingPriority,
  Ds = ni.unstable_NormalPriority,
  Tg = ni.unstable_LowPriority,
  Xd = ni.unstable_IdlePriority,
  so = null,
  Di = null;
function _g(t) {
  if (Di && typeof Di.onCommitFiberRoot == "function")
    try {
      Di.onCommitFiberRoot(so, t, void 0, (t.current.flags & 128) === 128);
    } catch {}
}
var Mi = Math.clz32 ? Math.clz32 : Dg,
  Ig = Math.log,
  Rg = Math.LN2;
function Dg(t) {
  return (t >>>= 0), t === 0 ? 32 : (31 - ((Ig(t) / Rg) | 0)) | 0;
}
var qr = 64,
  Jr = 4194304;
function or(t) {
  switch (t & -t) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return t & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return t;
  }
}
function js(t, a) {
  var s = t.pendingLanes;
  if (s === 0) return 0;
  var c = 0,
    u = t.suspendedLanes,
    p = t.pingedLanes,
    b = s & 268435455;
  if (b !== 0) {
    var S = b & ~u;
    S !== 0 ? (c = or(S)) : ((p &= b), p !== 0 && (c = or(p)));
  } else (b = s & ~u), b !== 0 ? (c = or(b)) : p !== 0 && (c = or(p));
  if (c === 0) return 0;
  if (
    a !== 0 &&
    a !== c &&
    !(a & u) &&
    ((u = c & -c), (p = a & -a), u >= p || (u === 16 && (p & 4194240) !== 0))
  )
    return a;
  if ((c & 4 && (c |= s & 16), (a = t.entangledLanes), a !== 0))
    for (t = t.entanglements, a &= c; 0 < a; )
      (s = 31 - Mi(a)), (u = 1 << s), (c |= t[s]), (a &= ~u);
  return c;
}
function jg(t, a) {
  switch (t) {
    case 1:
    case 2:
    case 4:
      return a + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function zg(t, a) {
  for (
    var s = t.suspendedLanes,
      c = t.pingedLanes,
      u = t.expirationTimes,
      p = t.pendingLanes;
    0 < p;

  ) {
    var b = 31 - Mi(p),
      S = 1 << b,
      E = u[b];
    E === -1
      ? (!(S & s) || S & c) && (u[b] = jg(S, a))
      : E <= a && (t.expiredLanes |= S),
      (p &= ~S);
  }
}
function Ll(t) {
  return (
    (t = t.pendingLanes & -1073741825),
    t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
  );
}
function Yd() {
  var t = qr;
  return (qr <<= 1), !(qr & 4194240) && (qr = 64), t;
}
function Ro(t) {
  for (var a = [], s = 0; 31 > s; s++) a.push(t);
  return a;
}
function Hr(t, a, s) {
  (t.pendingLanes |= a),
    a !== 536870912 && ((t.suspendedLanes = 0), (t.pingedLanes = 0)),
    (t = t.eventTimes),
    (a = 31 - Mi(a)),
    (t[a] = s);
}
function Og(t, a) {
  var s = t.pendingLanes & ~a;
  (t.pendingLanes = a),
    (t.suspendedLanes = 0),
    (t.pingedLanes = 0),
    (t.expiredLanes &= a),
    (t.mutableReadLanes &= a),
    (t.entangledLanes &= a),
    (a = t.entanglements);
  var c = t.eventTimes;
  for (t = t.expirationTimes; 0 < s; ) {
    var u = 31 - Mi(s),
      p = 1 << u;
    (a[u] = 0), (c[u] = -1), (t[u] = -1), (s &= ~p);
  }
}
function Lc(t, a) {
  var s = (t.entangledLanes |= a);
  for (t = t.entanglements; s; ) {
    var c = 31 - Mi(s),
      u = 1 << c;
    (u & a) | (t[c] & a) && (t[c] |= a), (s &= ~u);
  }
}
var $e = 0;
function Wd(t) {
  return (t &= -t), 1 < t ? (4 < t ? (t & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Gd,
  Ec,
  Vd,
  Ud,
  $d,
  El = !1,
  Qr = [],
  pa = null,
  fa = null,
  ga = null,
  Cr = new Map(),
  Ar = new Map(),
  oa = [],
  Fg =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function Nh(t, a) {
  switch (t) {
    case "focusin":
    case "focusout":
      pa = null;
      break;
    case "dragenter":
    case "dragleave":
      fa = null;
      break;
    case "mouseover":
    case "mouseout":
      ga = null;
      break;
    case "pointerover":
    case "pointerout":
      Cr.delete(a.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Ar.delete(a.pointerId);
  }
}
function Gn(t, a, s, c, u, p) {
  return t === null || t.nativeEvent !== p
    ? ((t = {
        blockedOn: a,
        domEventName: s,
        eventSystemFlags: c,
        nativeEvent: p,
        targetContainers: [u],
      }),
      a !== null && ((a = Yr(a)), a !== null && Ec(a)),
      t)
    : ((t.eventSystemFlags |= c),
      (a = t.targetContainers),
      u !== null && a.indexOf(u) === -1 && a.push(u),
      t);
}
function Bg(t, a, s, c, u) {
  switch (a) {
    case "focusin":
      return (pa = Gn(pa, t, a, s, c, u)), !0;
    case "dragenter":
      return (fa = Gn(fa, t, a, s, c, u)), !0;
    case "mouseover":
      return (ga = Gn(ga, t, a, s, c, u)), !0;
    case "pointerover":
      var p = u.pointerId;
      return Cr.set(p, Gn(Cr.get(p) || null, t, a, s, c, u)), !0;
    case "gotpointercapture":
      return (
        (p = u.pointerId), Ar.set(p, Gn(Ar.get(p) || null, t, a, s, c, u)), !0
      );
  }
  return !1;
}
function Kd(t) {
  var a = Oa(t.target);
  if (a !== null) {
    var s = Qa(a);
    if (s !== null) {
      if (((a = s.tag), a === 13)) {
        if (((a = zd(s)), a !== null)) {
          (t.blockedOn = a),
            $d(t.priority, function () {
              Vd(s);
            });
          return;
        }
      } else if (a === 3 && s.stateNode.current.memoizedState.isDehydrated) {
        t.blockedOn = s.tag === 3 ? s.stateNode.containerInfo : null;
        return;
      }
    }
  }
  t.blockedOn = null;
}
function vs(t) {
  if (t.blockedOn !== null) return !1;
  for (var a = t.targetContainers; 0 < a.length; ) {
    var s = Ml(t.domEventName, t.eventSystemFlags, a[0], t.nativeEvent);
    if (s === null) {
      s = t.nativeEvent;
      var c = new s.constructor(s.type, s);
      (Sl = c), s.target.dispatchEvent(c), (Sl = null);
    } else return (a = Yr(s)), a !== null && Ec(a), (t.blockedOn = s), !1;
    a.shift();
  }
  return !0;
}
function Th(t, a, s) {
  vs(t) && s.delete(a);
}
function Hg() {
  (El = !1),
    pa !== null && vs(pa) && (pa = null),
    fa !== null && vs(fa) && (fa = null),
    ga !== null && vs(ga) && (ga = null),
    Cr.forEach(Th),
    Ar.forEach(Th);
}
function Vn(t, a) {
  t.blockedOn === a &&
    ((t.blockedOn = null),
    El ||
      ((El = !0),
      ni.unstable_scheduleCallback(ni.unstable_NormalPriority, Hg)));
}
function Pr(t) {
  function a(u) {
    return Vn(u, t);
  }
  if (0 < Qr.length) {
    Vn(Qr[0], t);
    for (var s = 1; s < Qr.length; s++) {
      var c = Qr[s];
      c.blockedOn === t && (c.blockedOn = null);
    }
  }
  for (
    pa !== null && Vn(pa, t),
      fa !== null && Vn(fa, t),
      ga !== null && Vn(ga, t),
      Cr.forEach(a),
      Ar.forEach(a),
      s = 0;
    s < oa.length;
    s++
  )
    (c = oa[s]), c.blockedOn === t && (c.blockedOn = null);
  for (; 0 < oa.length && ((s = oa[0]), s.blockedOn === null); )
    Kd(s), s.blockedOn === null && oa.shift();
}
var kn = ea.ReactCurrentBatchConfig,
  zs = !0;
function Xg(t, a, s, c) {
  var u = $e,
    p = kn.transition;
  kn.transition = null;
  try {
    ($e = 1), Mc(t, a, s, c);
  } finally {
    ($e = u), (kn.transition = p);
  }
}
function Yg(t, a, s, c) {
  var u = $e,
    p = kn.transition;
  kn.transition = null;
  try {
    ($e = 4), Mc(t, a, s, c);
  } finally {
    ($e = u), (kn.transition = p);
  }
}
function Mc(t, a, s, c) {
  if (zs) {
    var u = Ml(t, a, s, c);
    if (u === null) Wo(t, a, c, Os, s), Nh(t, c);
    else if (Bg(u, t, a, s, c)) c.stopPropagation();
    else if ((Nh(t, c), a & 4 && -1 < Fg.indexOf(t))) {
      for (; u !== null; ) {
        var p = Yr(u);
        if (
          (p !== null && Gd(p),
          (p = Ml(t, a, s, c)),
          p === null && Wo(t, a, c, Os, s),
          p === u)
        )
          break;
        u = p;
      }
      u !== null && c.stopPropagation();
    } else Wo(t, a, c, null, s);
  }
}
var Os = null;
function Ml(t, a, s, c) {
  if (((Os = null), (t = Ac(c)), (t = Oa(t)), t !== null))
    if (((a = Qa(t)), a === null)) t = null;
    else if (((s = a.tag), s === 13)) {
      if (((t = zd(a)), t !== null)) return t;
      t = null;
    } else if (s === 3) {
      if (a.stateNode.current.memoizedState.isDehydrated)
        return a.tag === 3 ? a.stateNode.containerInfo : null;
      t = null;
    } else a !== t && (t = null);
  return (Os = t), null;
}
function Zd(t) {
  switch (t) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (Ng()) {
        case Pc:
          return 1;
        case Hd:
          return 4;
        case Ds:
        case Tg:
          return 16;
        case Xd:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var ha = null,
  Nc = null,
  ys = null;
function qd() {
  if (ys) return ys;
  var t,
    a = Nc,
    s = a.length,
    c,
    u = "value" in ha ? ha.value : ha.textContent,
    p = u.length;
  for (t = 0; t < s && a[t] === u[t]; t++);
  var b = s - t;
  for (c = 1; c <= b && a[s - c] === u[p - c]; c++);
  return (ys = u.slice(t, 1 < c ? 1 - c : void 0));
}
function bs(t) {
  var a = t.keyCode;
  return (
    "charCode" in t
      ? ((t = t.charCode), t === 0 && a === 13 && (t = 13))
      : (t = a),
    t === 10 && (t = 13),
    32 <= t || t === 13 ? t : 0
  );
}
function es() {
  return !0;
}
function _h() {
  return !1;
}
function si(t) {
  function a(s, c, u, p, b) {
    (this._reactName = s),
      (this._targetInst = u),
      (this.type = c),
      (this.nativeEvent = p),
      (this.target = b),
      (this.currentTarget = null);
    for (var S in t)
      t.hasOwnProperty(S) && ((s = t[S]), (this[S] = s ? s(p) : p[S]));
    return (
      (this.isDefaultPrevented = (
        p.defaultPrevented != null ? p.defaultPrevented : p.returnValue === !1
      )
        ? es
        : _h),
      (this.isPropagationStopped = _h),
      this
    );
  }
  return (
    lt(a.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var s = this.nativeEvent;
        s &&
          (s.preventDefault
            ? s.preventDefault()
            : typeof s.returnValue != "unknown" && (s.returnValue = !1),
          (this.isDefaultPrevented = es));
      },
      stopPropagation: function () {
        var s = this.nativeEvent;
        s &&
          (s.stopPropagation
            ? s.stopPropagation()
            : typeof s.cancelBubble != "unknown" && (s.cancelBubble = !0),
          (this.isPropagationStopped = es));
      },
      persist: function () {},
      isPersistent: es,
    }),
    a
  );
}
var jn = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (t) {
      return t.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  Tc = si(jn),
  Xr = lt({}, jn, { view: 0, detail: 0 }),
  Wg = si(Xr),
  Do,
  jo,
  Un,
  oo = lt({}, Xr, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: _c,
    button: 0,
    buttons: 0,
    relatedTarget: function (t) {
      return t.relatedTarget === void 0
        ? t.fromElement === t.srcElement
          ? t.toElement
          : t.fromElement
        : t.relatedTarget;
    },
    movementX: function (t) {
      return "movementX" in t
        ? t.movementX
        : (t !== Un &&
            (Un && t.type === "mousemove"
              ? ((Do = t.screenX - Un.screenX), (jo = t.screenY - Un.screenY))
              : (jo = Do = 0),
            (Un = t)),
          Do);
    },
    movementY: function (t) {
      return "movementY" in t ? t.movementY : jo;
    },
  }),
  Ih = si(oo),
  Gg = lt({}, oo, { dataTransfer: 0 }),
  Vg = si(Gg),
  Ug = lt({}, Xr, { relatedTarget: 0 }),
  zo = si(Ug),
  $g = lt({}, jn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  Kg = si($g),
  Zg = lt({}, jn, {
    clipboardData: function (t) {
      return "clipboardData" in t ? t.clipboardData : window.clipboardData;
    },
  }),
  qg = si(Zg),
  Jg = lt({}, jn, { data: 0 }),
  Rh = si(Jg),
  Qg = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  em = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  tm = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function im(t) {
  var a = this.nativeEvent;
  return a.getModifierState ? a.getModifierState(t) : (t = tm[t]) ? !!a[t] : !1;
}
function _c() {
  return im;
}
var am = lt({}, Xr, {
    key: function (t) {
      if (t.key) {
        var a = Qg[t.key] || t.key;
        if (a !== "Unidentified") return a;
      }
      return t.type === "keypress"
        ? ((t = bs(t)), t === 13 ? "Enter" : String.fromCharCode(t))
        : t.type === "keydown" || t.type === "keyup"
        ? em[t.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: _c,
    charCode: function (t) {
      return t.type === "keypress" ? bs(t) : 0;
    },
    keyCode: function (t) {
      return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
    },
    which: function (t) {
      return t.type === "keypress"
        ? bs(t)
        : t.type === "keydown" || t.type === "keyup"
        ? t.keyCode
        : 0;
    },
  }),
  nm = si(am),
  rm = lt({}, oo, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Dh = si(rm),
  sm = lt({}, Xr, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: _c,
  }),
  om = si(sm),
  lm = lt({}, jn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  cm = si(lm),
  hm = lt({}, oo, {
    deltaX: function (t) {
      return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0;
    },
    deltaY: function (t) {
      return "deltaY" in t
        ? t.deltaY
        : "wheelDeltaY" in t
        ? -t.wheelDeltaY
        : "wheelDelta" in t
        ? -t.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  um = si(hm),
  dm = [9, 13, 27, 32],
  Ic = Zi && "CompositionEvent" in window,
  dr = null;
Zi && "documentMode" in document && (dr = document.documentMode);
var pm = Zi && "TextEvent" in window && !dr,
  Jd = Zi && (!Ic || (dr && 8 < dr && 11 >= dr)),
  jh = String.fromCharCode(32),
  zh = !1;
function Qd(t, a) {
  switch (t) {
    case "keyup":
      return dm.indexOf(a.keyCode) !== -1;
    case "keydown":
      return a.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function ep(t) {
  return (t = t.detail), typeof t == "object" && "data" in t ? t.data : null;
}
var sn = !1;
function fm(t, a) {
  switch (t) {
    case "compositionend":
      return ep(a);
    case "keypress":
      return a.which !== 32 ? null : ((zh = !0), jh);
    case "textInput":
      return (t = a.data), t === jh && zh ? null : t;
    default:
      return null;
  }
}
function gm(t, a) {
  if (sn)
    return t === "compositionend" || (!Ic && Qd(t, a))
      ? ((t = qd()), (ys = Nc = ha = null), (sn = !1), t)
      : null;
  switch (t) {
    case "paste":
      return null;
    case "keypress":
      if (!(a.ctrlKey || a.altKey || a.metaKey) || (a.ctrlKey && a.altKey)) {
        if (a.char && 1 < a.char.length) return a.char;
        if (a.which) return String.fromCharCode(a.which);
      }
      return null;
    case "compositionend":
      return Jd && a.locale !== "ko" ? null : a.data;
    default:
      return null;
  }
}
var mm = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Oh(t) {
  var a = t && t.nodeName && t.nodeName.toLowerCase();
  return a === "input" ? !!mm[t.type] : a === "textarea";
}
function tp(t, a, s, c) {
  _d(c),
    (a = Fs(a, "onChange")),
    0 < a.length &&
      ((s = new Tc("onChange", "change", null, s, c)),
      t.push({ event: s, listeners: a }));
}
var pr = null,
  Lr = null;
function xm(t) {
  dp(t, 0);
}
function lo(t) {
  var a = cn(t);
  if (Ad(a)) return t;
}
function vm(t, a) {
  if (t === "change") return a;
}
var ip = !1;
if (Zi) {
  var Oo;
  if (Zi) {
    var Fo = "oninput" in document;
    if (!Fo) {
      var Fh = document.createElement("div");
      Fh.setAttribute("oninput", "return;"),
        (Fo = typeof Fh.oninput == "function");
    }
    Oo = Fo;
  } else Oo = !1;
  ip = Oo && (!document.documentMode || 9 < document.documentMode);
}
function Bh() {
  pr && (pr.detachEvent("onpropertychange", ap), (Lr = pr = null));
}
function ap(t) {
  if (t.propertyName === "value" && lo(Lr)) {
    var a = [];
    tp(a, Lr, t, Ac(t)), jd(xm, a);
  }
}
function ym(t, a, s) {
  t === "focusin"
    ? (Bh(), (pr = a), (Lr = s), pr.attachEvent("onpropertychange", ap))
    : t === "focusout" && Bh();
}
function bm(t) {
  if (t === "selectionchange" || t === "keyup" || t === "keydown")
    return lo(Lr);
}
function wm(t, a) {
  if (t === "click") return lo(a);
}
function km(t, a) {
  if (t === "input" || t === "change") return lo(a);
}
function Sm(t, a) {
  return (t === a && (t !== 0 || 1 / t === 1 / a)) || (t !== t && a !== a);
}
var Ti = typeof Object.is == "function" ? Object.is : Sm;
function Er(t, a) {
  if (Ti(t, a)) return !0;
  if (typeof t != "object" || t === null || typeof a != "object" || a === null)
    return !1;
  var s = Object.keys(t),
    c = Object.keys(a);
  if (s.length !== c.length) return !1;
  for (c = 0; c < s.length; c++) {
    var u = s[c];
    if (!ul.call(a, u) || !Ti(t[u], a[u])) return !1;
  }
  return !0;
}
function Hh(t) {
  for (; t && t.firstChild; ) t = t.firstChild;
  return t;
}
function Xh(t, a) {
  var s = Hh(t);
  t = 0;
  for (var c; s; ) {
    if (s.nodeType === 3) {
      if (((c = t + s.textContent.length), t <= a && c >= a))
        return { node: s, offset: a - t };
      t = c;
    }
    e: {
      for (; s; ) {
        if (s.nextSibling) {
          s = s.nextSibling;
          break e;
        }
        s = s.parentNode;
      }
      s = void 0;
    }
    s = Hh(s);
  }
}
function np(t, a) {
  return t && a
    ? t === a
      ? !0
      : t && t.nodeType === 3
      ? !1
      : a && a.nodeType === 3
      ? np(t, a.parentNode)
      : "contains" in t
      ? t.contains(a)
      : t.compareDocumentPosition
      ? !!(t.compareDocumentPosition(a) & 16)
      : !1
    : !1;
}
function rp() {
  for (var t = window, a = _s(); a instanceof t.HTMLIFrameElement; ) {
    try {
      var s = typeof a.contentWindow.location.href == "string";
    } catch {
      s = !1;
    }
    if (s) t = a.contentWindow;
    else break;
    a = _s(t.document);
  }
  return a;
}
function Rc(t) {
  var a = t && t.nodeName && t.nodeName.toLowerCase();
  return (
    a &&
    ((a === "input" &&
      (t.type === "text" ||
        t.type === "search" ||
        t.type === "tel" ||
        t.type === "url" ||
        t.type === "password")) ||
      a === "textarea" ||
      t.contentEditable === "true")
  );
}
function Cm(t) {
  var a = rp(),
    s = t.focusedElem,
    c = t.selectionRange;
  if (
    a !== s &&
    s &&
    s.ownerDocument &&
    np(s.ownerDocument.documentElement, s)
  ) {
    if (c !== null && Rc(s)) {
      if (
        ((a = c.start),
        (t = c.end),
        t === void 0 && (t = a),
        "selectionStart" in s)
      )
        (s.selectionStart = a), (s.selectionEnd = Math.min(t, s.value.length));
      else if (
        ((t = ((a = s.ownerDocument || document) && a.defaultView) || window),
        t.getSelection)
      ) {
        t = t.getSelection();
        var u = s.textContent.length,
          p = Math.min(c.start, u);
        (c = c.end === void 0 ? p : Math.min(c.end, u)),
          !t.extend && p > c && ((u = c), (c = p), (p = u)),
          (u = Xh(s, p));
        var b = Xh(s, c);
        u &&
          b &&
          (t.rangeCount !== 1 ||
            t.anchorNode !== u.node ||
            t.anchorOffset !== u.offset ||
            t.focusNode !== b.node ||
            t.focusOffset !== b.offset) &&
          ((a = a.createRange()),
          a.setStart(u.node, u.offset),
          t.removeAllRanges(),
          p > c
            ? (t.addRange(a), t.extend(b.node, b.offset))
            : (a.setEnd(b.node, b.offset), t.addRange(a)));
      }
    }
    for (a = [], t = s; (t = t.parentNode); )
      t.nodeType === 1 &&
        a.push({ element: t, left: t.scrollLeft, top: t.scrollTop });
    for (typeof s.focus == "function" && s.focus(), s = 0; s < a.length; s++)
      (t = a[s]),
        (t.element.scrollLeft = t.left),
        (t.element.scrollTop = t.top);
  }
}
var Am = Zi && "documentMode" in document && 11 >= document.documentMode,
  on = null,
  Nl = null,
  fr = null,
  Tl = !1;
function Yh(t, a, s) {
  var c = s.window === s ? s.document : s.nodeType === 9 ? s : s.ownerDocument;
  Tl ||
    on == null ||
    on !== _s(c) ||
    ((c = on),
    "selectionStart" in c && Rc(c)
      ? (c = { start: c.selectionStart, end: c.selectionEnd })
      : ((c = (
          (c.ownerDocument && c.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (c = {
          anchorNode: c.anchorNode,
          anchorOffset: c.anchorOffset,
          focusNode: c.focusNode,
          focusOffset: c.focusOffset,
        })),
    (fr && Er(fr, c)) ||
      ((fr = c),
      (c = Fs(Nl, "onSelect")),
      0 < c.length &&
        ((a = new Tc("onSelect", "select", null, a, s)),
        t.push({ event: a, listeners: c }),
        (a.target = on))));
}
function ts(t, a) {
  var s = {};
  return (
    (s[t.toLowerCase()] = a.toLowerCase()),
    (s["Webkit" + t] = "webkit" + a),
    (s["Moz" + t] = "moz" + a),
    s
  );
}
var ln = {
    animationend: ts("Animation", "AnimationEnd"),
    animationiteration: ts("Animation", "AnimationIteration"),
    animationstart: ts("Animation", "AnimationStart"),
    transitionend: ts("Transition", "TransitionEnd"),
  },
  Bo = {},
  sp = {};
Zi &&
  ((sp = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete ln.animationend.animation,
    delete ln.animationiteration.animation,
    delete ln.animationstart.animation),
  "TransitionEvent" in window || delete ln.transitionend.transition);
function co(t) {
  if (Bo[t]) return Bo[t];
  if (!ln[t]) return t;
  var a = ln[t],
    s;
  for (s in a) if (a.hasOwnProperty(s) && s in sp) return (Bo[t] = a[s]);
  return t;
}
var op = co("animationend"),
  lp = co("animationiteration"),
  cp = co("animationstart"),
  hp = co("transitionend"),
  up = new Map(),
  Wh =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function Sa(t, a) {
  up.set(t, a), Ja(a, [t]);
}
for (var Ho = 0; Ho < Wh.length; Ho++) {
  var Xo = Wh[Ho],
    Pm = Xo.toLowerCase(),
    Lm = Xo[0].toUpperCase() + Xo.slice(1);
  Sa(Pm, "on" + Lm);
}
Sa(op, "onAnimationEnd");
Sa(lp, "onAnimationIteration");
Sa(cp, "onAnimationStart");
Sa("dblclick", "onDoubleClick");
Sa("focusin", "onFocus");
Sa("focusout", "onBlur");
Sa(hp, "onTransitionEnd");
Ln("onMouseEnter", ["mouseout", "mouseover"]);
Ln("onMouseLeave", ["mouseout", "mouseover"]);
Ln("onPointerEnter", ["pointerout", "pointerover"]);
Ln("onPointerLeave", ["pointerout", "pointerover"]);
Ja(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
Ja(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
Ja("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Ja(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
Ja(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
Ja(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var lr =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  Em = new Set("cancel close invalid load scroll toggle".split(" ").concat(lr));
function Gh(t, a, s) {
  var c = t.type || "unknown-event";
  (t.currentTarget = s), Pg(c, a, void 0, t), (t.currentTarget = null);
}
function dp(t, a) {
  a = (a & 4) !== 0;
  for (var s = 0; s < t.length; s++) {
    var c = t[s],
      u = c.event;
    c = c.listeners;
    e: {
      var p = void 0;
      if (a)
        for (var b = c.length - 1; 0 <= b; b--) {
          var S = c[b],
            E = S.instance,
            N = S.currentTarget;
          if (((S = S.listener), E !== p && u.isPropagationStopped())) break e;
          Gh(u, S, N), (p = E);
        }
      else
        for (b = 0; b < c.length; b++) {
          if (
            ((S = c[b]),
            (E = S.instance),
            (N = S.currentTarget),
            (S = S.listener),
            E !== p && u.isPropagationStopped())
          )
            break e;
          Gh(u, S, N), (p = E);
        }
    }
  }
  if (Rs) throw ((t = Pl), (Rs = !1), (Pl = null), t);
}
function et(t, a) {
  var s = a[jl];
  s === void 0 && (s = a[jl] = new Set());
  var c = t + "__bubble";
  s.has(c) || (pp(a, t, 2, !1), s.add(c));
}
function Yo(t, a, s) {
  var c = 0;
  a && (c |= 4), pp(s, t, c, a);
}
var is = "_reactListening" + Math.random().toString(36).slice(2);
function Mr(t) {
  if (!t[is]) {
    (t[is] = !0),
      bd.forEach(function (s) {
        s !== "selectionchange" && (Em.has(s) || Yo(s, !1, t), Yo(s, !0, t));
      });
    var a = t.nodeType === 9 ? t : t.ownerDocument;
    a === null || a[is] || ((a[is] = !0), Yo("selectionchange", !1, a));
  }
}
function pp(t, a, s, c) {
  switch (Zd(a)) {
    case 1:
      var u = Xg;
      break;
    case 4:
      u = Yg;
      break;
    default:
      u = Mc;
  }
  (s = u.bind(null, a, s, t)),
    (u = void 0),
    !Al ||
      (a !== "touchstart" && a !== "touchmove" && a !== "wheel") ||
      (u = !0),
    c
      ? u !== void 0
        ? t.addEventListener(a, s, { capture: !0, passive: u })
        : t.addEventListener(a, s, !0)
      : u !== void 0
      ? t.addEventListener(a, s, { passive: u })
      : t.addEventListener(a, s, !1);
}
function Wo(t, a, s, c, u) {
  var p = c;
  if (!(a & 1) && !(a & 2) && c !== null)
    e: for (;;) {
      if (c === null) return;
      var b = c.tag;
      if (b === 3 || b === 4) {
        var S = c.stateNode.containerInfo;
        if (S === u || (S.nodeType === 8 && S.parentNode === u)) break;
        if (b === 4)
          for (b = c.return; b !== null; ) {
            var E = b.tag;
            if (
              (E === 3 || E === 4) &&
              ((E = b.stateNode.containerInfo),
              E === u || (E.nodeType === 8 && E.parentNode === u))
            )
              return;
            b = b.return;
          }
        for (; S !== null; ) {
          if (((b = Oa(S)), b === null)) return;
          if (((E = b.tag), E === 5 || E === 6)) {
            c = p = b;
            continue e;
          }
          S = S.parentNode;
        }
      }
      c = c.return;
    }
  jd(function () {
    var N = p,
      F = Ac(s),
      H = [];
    e: {
      var j = up.get(t);
      if (j !== void 0) {
        var V = Tc,
          q = t;
        switch (t) {
          case "keypress":
            if (bs(s) === 0) break e;
          case "keydown":
          case "keyup":
            V = nm;
            break;
          case "focusin":
            (q = "focus"), (V = zo);
            break;
          case "focusout":
            (q = "blur"), (V = zo);
            break;
          case "beforeblur":
          case "afterblur":
            V = zo;
            break;
          case "click":
            if (s.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            V = Ih;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            V = Vg;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            V = om;
            break;
          case op:
          case lp:
          case cp:
            V = Kg;
            break;
          case hp:
            V = cm;
            break;
          case "scroll":
            V = Wg;
            break;
          case "wheel":
            V = um;
            break;
          case "copy":
          case "cut":
          case "paste":
            V = qg;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            V = Dh;
        }
        var K = (a & 4) !== 0,
          ae = !K && t === "scroll",
          G = K ? (j !== null ? j + "Capture" : null) : j;
        K = [];
        for (var L = N, R; L !== null; ) {
          R = L;
          var O = R.stateNode;
          if (
            (R.tag === 5 &&
              O !== null &&
              ((R = O),
              G !== null && ((O = Sr(L, G)), O != null && K.push(Nr(L, O, R)))),
            ae)
          )
            break;
          L = L.return;
        }
        0 < K.length &&
          ((j = new V(j, q, null, s, F)), H.push({ event: j, listeners: K }));
      }
    }
    if (!(a & 7)) {
      e: {
        if (
          ((j = t === "mouseover" || t === "pointerover"),
          (V = t === "mouseout" || t === "pointerout"),
          j &&
            s !== Sl &&
            (q = s.relatedTarget || s.fromElement) &&
            (Oa(q) || q[qi]))
        )
          break e;
        if (
          (V || j) &&
          ((j =
            F.window === F
              ? F
              : (j = F.ownerDocument)
              ? j.defaultView || j.parentWindow
              : window),
          V
            ? ((q = s.relatedTarget || s.toElement),
              (V = N),
              (q = q ? Oa(q) : null),
              q !== null &&
                ((ae = Qa(q)), q !== ae || (q.tag !== 5 && q.tag !== 6)) &&
                (q = null))
            : ((V = null), (q = N)),
          V !== q)
        ) {
          if (
            ((K = Ih),
            (O = "onMouseLeave"),
            (G = "onMouseEnter"),
            (L = "mouse"),
            (t === "pointerout" || t === "pointerover") &&
              ((K = Dh),
              (O = "onPointerLeave"),
              (G = "onPointerEnter"),
              (L = "pointer")),
            (ae = V == null ? j : cn(V)),
            (R = q == null ? j : cn(q)),
            (j = new K(O, L + "leave", V, s, F)),
            (j.target = ae),
            (j.relatedTarget = R),
            (O = null),
            Oa(F) === N &&
              ((K = new K(G, L + "enter", q, s, F)),
              (K.target = R),
              (K.relatedTarget = ae),
              (O = K)),
            (ae = O),
            V && q)
          )
            t: {
              for (K = V, G = q, L = 0, R = K; R; R = an(R)) L++;
              for (R = 0, O = G; O; O = an(O)) R++;
              for (; 0 < L - R; ) (K = an(K)), L--;
              for (; 0 < R - L; ) (G = an(G)), R--;
              for (; L--; ) {
                if (K === G || (G !== null && K === G.alternate)) break t;
                (K = an(K)), (G = an(G));
              }
              K = null;
            }
          else K = null;
          V !== null && Vh(H, j, V, K, !1),
            q !== null && ae !== null && Vh(H, ae, q, K, !0);
        }
      }
      e: {
        if (
          ((j = N ? cn(N) : window),
          (V = j.nodeName && j.nodeName.toLowerCase()),
          V === "select" || (V === "input" && j.type === "file"))
        )
          var X = vm;
        else if (Oh(j))
          if (ip) X = km;
          else {
            X = bm;
            var W = ym;
          }
        else
          (V = j.nodeName) &&
            V.toLowerCase() === "input" &&
            (j.type === "checkbox" || j.type === "radio") &&
            (X = wm);
        if (X && (X = X(t, N))) {
          tp(H, X, s, F);
          break e;
        }
        W && W(t, j, N),
          t === "focusout" &&
            (W = j._wrapperState) &&
            W.controlled &&
            j.type === "number" &&
            vl(j, "number", j.value);
      }
      switch (((W = N ? cn(N) : window), t)) {
        case "focusin":
          (Oh(W) || W.contentEditable === "true") &&
            ((on = W), (Nl = N), (fr = null));
          break;
        case "focusout":
          fr = Nl = on = null;
          break;
        case "mousedown":
          Tl = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (Tl = !1), Yh(H, s, F);
          break;
        case "selectionchange":
          if (Am) break;
        case "keydown":
        case "keyup":
          Yh(H, s, F);
      }
      var U;
      if (Ic)
        e: {
          switch (t) {
            case "compositionstart":
              var te = "onCompositionStart";
              break e;
            case "compositionend":
              te = "onCompositionEnd";
              break e;
            case "compositionupdate":
              te = "onCompositionUpdate";
              break e;
          }
          te = void 0;
        }
      else
        sn
          ? Qd(t, s) && (te = "onCompositionEnd")
          : t === "keydown" && s.keyCode === 229 && (te = "onCompositionStart");
      te &&
        (Jd &&
          s.locale !== "ko" &&
          (sn || te !== "onCompositionStart"
            ? te === "onCompositionEnd" && sn && (U = qd())
            : ((ha = F),
              (Nc = "value" in ha ? ha.value : ha.textContent),
              (sn = !0))),
        (W = Fs(N, te)),
        0 < W.length &&
          ((te = new Rh(te, t, null, s, F)),
          H.push({ event: te, listeners: W }),
          U ? (te.data = U) : ((U = ep(s)), U !== null && (te.data = U)))),
        (U = pm ? fm(t, s) : gm(t, s)) &&
          ((N = Fs(N, "onBeforeInput")),
          0 < N.length &&
            ((F = new Rh("onBeforeInput", "beforeinput", null, s, F)),
            H.push({ event: F, listeners: N }),
            (F.data = U)));
    }
    dp(H, a);
  });
}
function Nr(t, a, s) {
  return { instance: t, listener: a, currentTarget: s };
}
function Fs(t, a) {
  for (var s = a + "Capture", c = []; t !== null; ) {
    var u = t,
      p = u.stateNode;
    u.tag === 5 &&
      p !== null &&
      ((u = p),
      (p = Sr(t, s)),
      p != null && c.unshift(Nr(t, p, u)),
      (p = Sr(t, a)),
      p != null && c.push(Nr(t, p, u))),
      (t = t.return);
  }
  return c;
}
function an(t) {
  if (t === null) return null;
  do t = t.return;
  while (t && t.tag !== 5);
  return t || null;
}
function Vh(t, a, s, c, u) {
  for (var p = a._reactName, b = []; s !== null && s !== c; ) {
    var S = s,
      E = S.alternate,
      N = S.stateNode;
    if (E !== null && E === c) break;
    S.tag === 5 &&
      N !== null &&
      ((S = N),
      u
        ? ((E = Sr(s, p)), E != null && b.unshift(Nr(s, E, S)))
        : u || ((E = Sr(s, p)), E != null && b.push(Nr(s, E, S)))),
      (s = s.return);
  }
  b.length !== 0 && t.push({ event: a, listeners: b });
}
var Mm = /\r\n?/g,
  Nm = /\u0000|\uFFFD/g;
function Uh(t) {
  return (typeof t == "string" ? t : "" + t)
    .replace(
      Mm,
      `
`
    )
    .replace(Nm, "");
}
function as(t, a, s) {
  if (((a = Uh(a)), Uh(t) !== a && s)) throw Error(pe(425));
}
function Bs() {}
var _l = null,
  Il = null;
function Rl(t, a) {
  return (
    t === "textarea" ||
    t === "noscript" ||
    typeof a.children == "string" ||
    typeof a.children == "number" ||
    (typeof a.dangerouslySetInnerHTML == "object" &&
      a.dangerouslySetInnerHTML !== null &&
      a.dangerouslySetInnerHTML.__html != null)
  );
}
var Dl = typeof setTimeout == "function" ? setTimeout : void 0,
  Tm = typeof clearTimeout == "function" ? clearTimeout : void 0,
  $h = typeof Promise == "function" ? Promise : void 0,
  _m =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof $h < "u"
      ? function (t) {
          return $h.resolve(null).then(t).catch(Im);
        }
      : Dl;
function Im(t) {
  setTimeout(function () {
    throw t;
  });
}
function Go(t, a) {
  var s = a,
    c = 0;
  do {
    var u = s.nextSibling;
    if ((t.removeChild(s), u && u.nodeType === 8))
      if (((s = u.data), s === "/$")) {
        if (c === 0) {
          t.removeChild(u), Pr(a);
          return;
        }
        c--;
      } else (s !== "$" && s !== "$?" && s !== "$!") || c++;
    s = u;
  } while (s);
  Pr(a);
}
function ma(t) {
  for (; t != null; t = t.nextSibling) {
    var a = t.nodeType;
    if (a === 1 || a === 3) break;
    if (a === 8) {
      if (((a = t.data), a === "$" || a === "$!" || a === "$?")) break;
      if (a === "/$") return null;
    }
  }
  return t;
}
function Kh(t) {
  t = t.previousSibling;
  for (var a = 0; t; ) {
    if (t.nodeType === 8) {
      var s = t.data;
      if (s === "$" || s === "$!" || s === "$?") {
        if (a === 0) return t;
        a--;
      } else s === "/$" && a++;
    }
    t = t.previousSibling;
  }
  return null;
}
var zn = Math.random().toString(36).slice(2),
  Ri = "__reactFiber$" + zn,
  Tr = "__reactProps$" + zn,
  qi = "__reactContainer$" + zn,
  jl = "__reactEvents$" + zn,
  Rm = "__reactListeners$" + zn,
  Dm = "__reactHandles$" + zn;
function Oa(t) {
  var a = t[Ri];
  if (a) return a;
  for (var s = t.parentNode; s; ) {
    if ((a = s[qi] || s[Ri])) {
      if (
        ((s = a.alternate),
        a.child !== null || (s !== null && s.child !== null))
      )
        for (t = Kh(t); t !== null; ) {
          if ((s = t[Ri])) return s;
          t = Kh(t);
        }
      return a;
    }
    (t = s), (s = t.parentNode);
  }
  return null;
}
function Yr(t) {
  return (
    (t = t[Ri] || t[qi]),
    !t || (t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3) ? null : t
  );
}
function cn(t) {
  if (t.tag === 5 || t.tag === 6) return t.stateNode;
  throw Error(pe(33));
}
function ho(t) {
  return t[Tr] || null;
}
var zl = [],
  hn = -1;
function Ca(t) {
  return { current: t };
}
function tt(t) {
  0 > hn || ((t.current = zl[hn]), (zl[hn] = null), hn--);
}
function Je(t, a) {
  hn++, (zl[hn] = t.current), (t.current = a);
}
var ka = {},
  zt = Ca(ka),
  Zt = Ca(!1),
  Ga = ka;
function En(t, a) {
  var s = t.type.contextTypes;
  if (!s) return ka;
  var c = t.stateNode;
  if (c && c.__reactInternalMemoizedUnmaskedChildContext === a)
    return c.__reactInternalMemoizedMaskedChildContext;
  var u = {},
    p;
  for (p in s) u[p] = a[p];
  return (
    c &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = a),
      (t.__reactInternalMemoizedMaskedChildContext = u)),
    u
  );
}
function qt(t) {
  return (t = t.childContextTypes), t != null;
}
function Hs() {
  tt(Zt), tt(zt);
}
function Zh(t, a, s) {
  if (zt.current !== ka) throw Error(pe(168));
  Je(zt, a), Je(Zt, s);
}
function fp(t, a, s) {
  var c = t.stateNode;
  if (((a = a.childContextTypes), typeof c.getChildContext != "function"))
    return s;
  c = c.getChildContext();
  for (var u in c) if (!(u in a)) throw Error(pe(108, yg(t) || "Unknown", u));
  return lt({}, s, c);
}
function Xs(t) {
  return (
    (t =
      ((t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext) || ka),
    (Ga = zt.current),
    Je(zt, t),
    Je(Zt, Zt.current),
    !0
  );
}
function qh(t, a, s) {
  var c = t.stateNode;
  if (!c) throw Error(pe(169));
  s
    ? ((t = fp(t, a, Ga)),
      (c.__reactInternalMemoizedMergedChildContext = t),
      tt(Zt),
      tt(zt),
      Je(zt, t))
    : tt(Zt),
    Je(Zt, s);
}
var Gi = null,
  uo = !1,
  Vo = !1;
function gp(t) {
  Gi === null ? (Gi = [t]) : Gi.push(t);
}
function jm(t) {
  (uo = !0), gp(t);
}
function Aa() {
  if (!Vo && Gi !== null) {
    Vo = !0;
    var t = 0,
      a = $e;
    try {
      var s = Gi;
      for ($e = 1; t < s.length; t++) {
        var c = s[t];
        do c = c(!0);
        while (c !== null);
      }
      (Gi = null), (uo = !1);
    } catch (u) {
      throw (Gi !== null && (Gi = Gi.slice(t + 1)), Bd(Pc, Aa), u);
    } finally {
      ($e = a), (Vo = !1);
    }
  }
  return null;
}
var un = [],
  dn = 0,
  Ys = null,
  Ws = 0,
  pi = [],
  fi = 0,
  Va = null,
  Vi = 1,
  Ui = "";
function Da(t, a) {
  (un[dn++] = Ws), (un[dn++] = Ys), (Ys = t), (Ws = a);
}
function mp(t, a, s) {
  (pi[fi++] = Vi), (pi[fi++] = Ui), (pi[fi++] = Va), (Va = t);
  var c = Vi;
  t = Ui;
  var u = 32 - Mi(c) - 1;
  (c &= ~(1 << u)), (s += 1);
  var p = 32 - Mi(a) + u;
  if (30 < p) {
    var b = u - (u % 5);
    (p = (c & ((1 << b) - 1)).toString(32)),
      (c >>= b),
      (u -= b),
      (Vi = (1 << (32 - Mi(a) + u)) | (s << u) | c),
      (Ui = p + t);
  } else (Vi = (1 << p) | (s << u) | c), (Ui = t);
}
function Dc(t) {
  t.return !== null && (Da(t, 1), mp(t, 1, 0));
}
function jc(t) {
  for (; t === Ys; )
    (Ys = un[--dn]), (un[dn] = null), (Ws = un[--dn]), (un[dn] = null);
  for (; t === Va; )
    (Va = pi[--fi]),
      (pi[fi] = null),
      (Ui = pi[--fi]),
      (pi[fi] = null),
      (Vi = pi[--fi]),
      (pi[fi] = null);
}
var ai = null,
  ii = null,
  rt = !1,
  Ei = null;
function xp(t, a) {
  var s = gi(5, null, null, 0);
  (s.elementType = "DELETED"),
    (s.stateNode = a),
    (s.return = t),
    (a = t.deletions),
    a === null ? ((t.deletions = [s]), (t.flags |= 16)) : a.push(s);
}
function Jh(t, a) {
  switch (t.tag) {
    case 5:
      var s = t.type;
      return (
        (a =
          a.nodeType !== 1 || s.toLowerCase() !== a.nodeName.toLowerCase()
            ? null
            : a),
        a !== null
          ? ((t.stateNode = a), (ai = t), (ii = ma(a.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (a = t.pendingProps === "" || a.nodeType !== 3 ? null : a),
        a !== null ? ((t.stateNode = a), (ai = t), (ii = null), !0) : !1
      );
    case 13:
      return (
        (a = a.nodeType !== 8 ? null : a),
        a !== null
          ? ((s = Va !== null ? { id: Vi, overflow: Ui } : null),
            (t.memoizedState = {
              dehydrated: a,
              treeContext: s,
              retryLane: 1073741824,
            }),
            (s = gi(18, null, null, 0)),
            (s.stateNode = a),
            (s.return = t),
            (t.child = s),
            (ai = t),
            (ii = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Ol(t) {
  return (t.mode & 1) !== 0 && (t.flags & 128) === 0;
}
function Fl(t) {
  if (rt) {
    var a = ii;
    if (a) {
      var s = a;
      if (!Jh(t, a)) {
        if (Ol(t)) throw Error(pe(418));
        a = ma(s.nextSibling);
        var c = ai;
        a && Jh(t, a)
          ? xp(c, s)
          : ((t.flags = (t.flags & -4097) | 2), (rt = !1), (ai = t));
      }
    } else {
      if (Ol(t)) throw Error(pe(418));
      (t.flags = (t.flags & -4097) | 2), (rt = !1), (ai = t);
    }
  }
}
function Qh(t) {
  for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13; )
    t = t.return;
  ai = t;
}
function ns(t) {
  if (t !== ai) return !1;
  if (!rt) return Qh(t), (rt = !0), !1;
  var a;
  if (
    ((a = t.tag !== 3) &&
      !(a = t.tag !== 5) &&
      ((a = t.type),
      (a = a !== "head" && a !== "body" && !Rl(t.type, t.memoizedProps))),
    a && (a = ii))
  ) {
    if (Ol(t)) throw (vp(), Error(pe(418)));
    for (; a; ) xp(t, a), (a = ma(a.nextSibling));
  }
  if ((Qh(t), t.tag === 13)) {
    if (((t = t.memoizedState), (t = t !== null ? t.dehydrated : null), !t))
      throw Error(pe(317));
    e: {
      for (t = t.nextSibling, a = 0; t; ) {
        if (t.nodeType === 8) {
          var s = t.data;
          if (s === "/$") {
            if (a === 0) {
              ii = ma(t.nextSibling);
              break e;
            }
            a--;
          } else (s !== "$" && s !== "$!" && s !== "$?") || a++;
        }
        t = t.nextSibling;
      }
      ii = null;
    }
  } else ii = ai ? ma(t.stateNode.nextSibling) : null;
  return !0;
}
function vp() {
  for (var t = ii; t; ) t = ma(t.nextSibling);
}
function Mn() {
  (ii = ai = null), (rt = !1);
}
function zc(t) {
  Ei === null ? (Ei = [t]) : Ei.push(t);
}
var zm = ea.ReactCurrentBatchConfig;
function Ai(t, a) {
  if (t && t.defaultProps) {
    (a = lt({}, a)), (t = t.defaultProps);
    for (var s in t) a[s] === void 0 && (a[s] = t[s]);
    return a;
  }
  return a;
}
var Gs = Ca(null),
  Vs = null,
  pn = null,
  Oc = null;
function Fc() {
  Oc = pn = Vs = null;
}
function Bc(t) {
  var a = Gs.current;
  tt(Gs), (t._currentValue = a);
}
function Bl(t, a, s) {
  for (; t !== null; ) {
    var c = t.alternate;
    if (
      ((t.childLanes & a) !== a
        ? ((t.childLanes |= a), c !== null && (c.childLanes |= a))
        : c !== null && (c.childLanes & a) !== a && (c.childLanes |= a),
      t === s)
    )
      break;
    t = t.return;
  }
}
function Sn(t, a) {
  (Vs = t),
    (Oc = pn = null),
    (t = t.dependencies),
    t !== null &&
      t.firstContext !== null &&
      (t.lanes & a && (Kt = !0), (t.firstContext = null));
}
function xi(t) {
  var a = t._currentValue;
  if (Oc !== t)
    if (((t = { context: t, memoizedValue: a, next: null }), pn === null)) {
      if (Vs === null) throw Error(pe(308));
      (pn = t), (Vs.dependencies = { lanes: 0, firstContext: t });
    } else pn = pn.next = t;
  return a;
}
var Fa = null;
function Hc(t) {
  Fa === null ? (Fa = [t]) : Fa.push(t);
}
function yp(t, a, s, c) {
  var u = a.interleaved;
  return (
    u === null ? ((s.next = s), Hc(a)) : ((s.next = u.next), (u.next = s)),
    (a.interleaved = s),
    Ji(t, c)
  );
}
function Ji(t, a) {
  t.lanes |= a;
  var s = t.alternate;
  for (s !== null && (s.lanes |= a), s = t, t = t.return; t !== null; )
    (t.childLanes |= a),
      (s = t.alternate),
      s !== null && (s.childLanes |= a),
      (s = t),
      (t = t.return);
  return s.tag === 3 ? s.stateNode : null;
}
var sa = !1;
function Xc(t) {
  t.updateQueue = {
    baseState: t.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function bp(t, a) {
  (t = t.updateQueue),
    a.updateQueue === t &&
      (a.updateQueue = {
        baseState: t.baseState,
        firstBaseUpdate: t.firstBaseUpdate,
        lastBaseUpdate: t.lastBaseUpdate,
        shared: t.shared,
        effects: t.effects,
      });
}
function $i(t, a) {
  return {
    eventTime: t,
    lane: a,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function xa(t, a, s) {
  var c = t.updateQueue;
  if (c === null) return null;
  if (((c = c.shared), We & 2)) {
    var u = c.pending;
    return (
      u === null ? (a.next = a) : ((a.next = u.next), (u.next = a)),
      (c.pending = a),
      Ji(t, s)
    );
  }
  return (
    (u = c.interleaved),
    u === null ? ((a.next = a), Hc(c)) : ((a.next = u.next), (u.next = a)),
    (c.interleaved = a),
    Ji(t, s)
  );
}
function ws(t, a, s) {
  if (
    ((a = a.updateQueue), a !== null && ((a = a.shared), (s & 4194240) !== 0))
  ) {
    var c = a.lanes;
    (c &= t.pendingLanes), (s |= c), (a.lanes = s), Lc(t, s);
  }
}
function eu(t, a) {
  var s = t.updateQueue,
    c = t.alternate;
  if (c !== null && ((c = c.updateQueue), s === c)) {
    var u = null,
      p = null;
    if (((s = s.firstBaseUpdate), s !== null)) {
      do {
        var b = {
          eventTime: s.eventTime,
          lane: s.lane,
          tag: s.tag,
          payload: s.payload,
          callback: s.callback,
          next: null,
        };
        p === null ? (u = p = b) : (p = p.next = b), (s = s.next);
      } while (s !== null);
      p === null ? (u = p = a) : (p = p.next = a);
    } else u = p = a;
    (s = {
      baseState: c.baseState,
      firstBaseUpdate: u,
      lastBaseUpdate: p,
      shared: c.shared,
      effects: c.effects,
    }),
      (t.updateQueue = s);
    return;
  }
  (t = s.lastBaseUpdate),
    t === null ? (s.firstBaseUpdate = a) : (t.next = a),
    (s.lastBaseUpdate = a);
}
function Us(t, a, s, c) {
  var u = t.updateQueue;
  sa = !1;
  var p = u.firstBaseUpdate,
    b = u.lastBaseUpdate,
    S = u.shared.pending;
  if (S !== null) {
    u.shared.pending = null;
    var E = S,
      N = E.next;
    (E.next = null), b === null ? (p = N) : (b.next = N), (b = E);
    var F = t.alternate;
    F !== null &&
      ((F = F.updateQueue),
      (S = F.lastBaseUpdate),
      S !== b &&
        (S === null ? (F.firstBaseUpdate = N) : (S.next = N),
        (F.lastBaseUpdate = E)));
  }
  if (p !== null) {
    var H = u.baseState;
    (b = 0), (F = N = E = null), (S = p);
    do {
      var j = S.lane,
        V = S.eventTime;
      if ((c & j) === j) {
        F !== null &&
          (F = F.next =
            {
              eventTime: V,
              lane: 0,
              tag: S.tag,
              payload: S.payload,
              callback: S.callback,
              next: null,
            });
        e: {
          var q = t,
            K = S;
          switch (((j = a), (V = s), K.tag)) {
            case 1:
              if (((q = K.payload), typeof q == "function")) {
                H = q.call(V, H, j);
                break e;
              }
              H = q;
              break e;
            case 3:
              q.flags = (q.flags & -65537) | 128;
            case 0:
              if (
                ((q = K.payload),
                (j = typeof q == "function" ? q.call(V, H, j) : q),
                j == null)
              )
                break e;
              H = lt({}, H, j);
              break e;
            case 2:
              sa = !0;
          }
        }
        S.callback !== null &&
          S.lane !== 0 &&
          ((t.flags |= 64),
          (j = u.effects),
          j === null ? (u.effects = [S]) : j.push(S));
      } else
        (V = {
          eventTime: V,
          lane: j,
          tag: S.tag,
          payload: S.payload,
          callback: S.callback,
          next: null,
        }),
          F === null ? ((N = F = V), (E = H)) : (F = F.next = V),
          (b |= j);
      if (((S = S.next), S === null)) {
        if (((S = u.shared.pending), S === null)) break;
        (j = S),
          (S = j.next),
          (j.next = null),
          (u.lastBaseUpdate = j),
          (u.shared.pending = null);
      }
    } while (1);
    if (
      (F === null && (E = H),
      (u.baseState = E),
      (u.firstBaseUpdate = N),
      (u.lastBaseUpdate = F),
      (a = u.shared.interleaved),
      a !== null)
    ) {
      u = a;
      do (b |= u.lane), (u = u.next);
      while (u !== a);
    } else p === null && (u.shared.lanes = 0);
    ($a |= b), (t.lanes = b), (t.memoizedState = H);
  }
}
function tu(t, a, s) {
  if (((t = a.effects), (a.effects = null), t !== null))
    for (a = 0; a < t.length; a++) {
      var c = t[a],
        u = c.callback;
      if (u !== null) {
        if (((c.callback = null), (c = s), typeof u != "function"))
          throw Error(pe(191, u));
        u.call(c);
      }
    }
}
var wp = new yd.Component().refs;
function Hl(t, a, s, c) {
  (a = t.memoizedState),
    (s = s(c, a)),
    (s = s == null ? a : lt({}, a, s)),
    (t.memoizedState = s),
    t.lanes === 0 && (t.updateQueue.baseState = s);
}
var po = {
  isMounted: function (t) {
    return (t = t._reactInternals) ? Qa(t) === t : !1;
  },
  enqueueSetState: function (t, a, s) {
    t = t._reactInternals;
    var c = Ht(),
      u = ya(t),
      p = $i(c, u);
    (p.payload = a),
      s != null && (p.callback = s),
      (a = xa(t, p, u)),
      a !== null && (Ni(a, t, u, c), ws(a, t, u));
  },
  enqueueReplaceState: function (t, a, s) {
    t = t._reactInternals;
    var c = Ht(),
      u = ya(t),
      p = $i(c, u);
    (p.tag = 1),
      (p.payload = a),
      s != null && (p.callback = s),
      (a = xa(t, p, u)),
      a !== null && (Ni(a, t, u, c), ws(a, t, u));
  },
  enqueueForceUpdate: function (t, a) {
    t = t._reactInternals;
    var s = Ht(),
      c = ya(t),
      u = $i(s, c);
    (u.tag = 2),
      a != null && (u.callback = a),
      (a = xa(t, u, c)),
      a !== null && (Ni(a, t, c, s), ws(a, t, c));
  },
};
function iu(t, a, s, c, u, p, b) {
  return (
    (t = t.stateNode),
    typeof t.shouldComponentUpdate == "function"
      ? t.shouldComponentUpdate(c, p, b)
      : a.prototype && a.prototype.isPureReactComponent
      ? !Er(s, c) || !Er(u, p)
      : !0
  );
}
function kp(t, a, s) {
  var c = !1,
    u = ka,
    p = a.contextType;
  return (
    typeof p == "object" && p !== null
      ? (p = xi(p))
      : ((u = qt(a) ? Ga : zt.current),
        (c = a.contextTypes),
        (p = (c = c != null) ? En(t, u) : ka)),
    (a = new a(s, p)),
    (t.memoizedState = a.state !== null && a.state !== void 0 ? a.state : null),
    (a.updater = po),
    (t.stateNode = a),
    (a._reactInternals = t),
    c &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = u),
      (t.__reactInternalMemoizedMaskedChildContext = p)),
    a
  );
}
function au(t, a, s, c) {
  (t = a.state),
    typeof a.componentWillReceiveProps == "function" &&
      a.componentWillReceiveProps(s, c),
    typeof a.UNSAFE_componentWillReceiveProps == "function" &&
      a.UNSAFE_componentWillReceiveProps(s, c),
    a.state !== t && po.enqueueReplaceState(a, a.state, null);
}
function Xl(t, a, s, c) {
  var u = t.stateNode;
  (u.props = s), (u.state = t.memoizedState), (u.refs = wp), Xc(t);
  var p = a.contextType;
  typeof p == "object" && p !== null
    ? (u.context = xi(p))
    : ((p = qt(a) ? Ga : zt.current), (u.context = En(t, p))),
    (u.state = t.memoizedState),
    (p = a.getDerivedStateFromProps),
    typeof p == "function" && (Hl(t, a, p, s), (u.state = t.memoizedState)),
    typeof a.getDerivedStateFromProps == "function" ||
      typeof u.getSnapshotBeforeUpdate == "function" ||
      (typeof u.UNSAFE_componentWillMount != "function" &&
        typeof u.componentWillMount != "function") ||
      ((a = u.state),
      typeof u.componentWillMount == "function" && u.componentWillMount(),
      typeof u.UNSAFE_componentWillMount == "function" &&
        u.UNSAFE_componentWillMount(),
      a !== u.state && po.enqueueReplaceState(u, u.state, null),
      Us(t, s, u, c),
      (u.state = t.memoizedState)),
    typeof u.componentDidMount == "function" && (t.flags |= 4194308);
}
function $n(t, a, s) {
  if (
    ((t = s.ref), t !== null && typeof t != "function" && typeof t != "object")
  ) {
    if (s._owner) {
      if (((s = s._owner), s)) {
        if (s.tag !== 1) throw Error(pe(309));
        var c = s.stateNode;
      }
      if (!c) throw Error(pe(147, t));
      var u = c,
        p = "" + t;
      return a !== null &&
        a.ref !== null &&
        typeof a.ref == "function" &&
        a.ref._stringRef === p
        ? a.ref
        : ((a = function (b) {
            var S = u.refs;
            S === wp && (S = u.refs = {}),
              b === null ? delete S[p] : (S[p] = b);
          }),
          (a._stringRef = p),
          a);
    }
    if (typeof t != "string") throw Error(pe(284));
    if (!s._owner) throw Error(pe(290, t));
  }
  return t;
}
function rs(t, a) {
  throw (
    ((t = Object.prototype.toString.call(a)),
    Error(
      pe(
        31,
        t === "[object Object]"
          ? "object with keys {" + Object.keys(a).join(", ") + "}"
          : t
      )
    ))
  );
}
function nu(t) {
  var a = t._init;
  return a(t._payload);
}
function Sp(t) {
  function a(G, L) {
    if (t) {
      var R = G.deletions;
      R === null ? ((G.deletions = [L]), (G.flags |= 16)) : R.push(L);
    }
  }
  function s(G, L) {
    if (!t) return null;
    for (; L !== null; ) a(G, L), (L = L.sibling);
    return null;
  }
  function c(G, L) {
    for (G = new Map(); L !== null; )
      L.key !== null ? G.set(L.key, L) : G.set(L.index, L), (L = L.sibling);
    return G;
  }
  function u(G, L) {
    return (G = ba(G, L)), (G.index = 0), (G.sibling = null), G;
  }
  function p(G, L, R) {
    return (
      (G.index = R),
      t
        ? ((R = G.alternate),
          R !== null
            ? ((R = R.index), R < L ? ((G.flags |= 2), L) : R)
            : ((G.flags |= 2), L))
        : ((G.flags |= 1048576), L)
    );
  }
  function b(G) {
    return t && G.alternate === null && (G.flags |= 2), G;
  }
  function S(G, L, R, O) {
    return L === null || L.tag !== 6
      ? ((L = Qo(R, G.mode, O)), (L.return = G), L)
      : ((L = u(L, R)), (L.return = G), L);
  }
  function E(G, L, R, O) {
    var X = R.type;
    return X === rn
      ? F(G, L, R.props.children, O, R.key)
      : L !== null &&
        (L.elementType === X ||
          (typeof X == "object" &&
            X !== null &&
            X.$$typeof === ra &&
            nu(X) === L.type))
      ? ((O = u(L, R.props)), (O.ref = $n(G, L, R)), (O.return = G), O)
      : ((O = Ls(R.type, R.key, R.props, null, G.mode, O)),
        (O.ref = $n(G, L, R)),
        (O.return = G),
        O);
  }
  function N(G, L, R, O) {
    return L === null ||
      L.tag !== 4 ||
      L.stateNode.containerInfo !== R.containerInfo ||
      L.stateNode.implementation !== R.implementation
      ? ((L = el(R, G.mode, O)), (L.return = G), L)
      : ((L = u(L, R.children || [])), (L.return = G), L);
  }
  function F(G, L, R, O, X) {
    return L === null || L.tag !== 7
      ? ((L = Wa(R, G.mode, O, X)), (L.return = G), L)
      : ((L = u(L, R)), (L.return = G), L);
  }
  function H(G, L, R) {
    if ((typeof L == "string" && L !== "") || typeof L == "number")
      return (L = Qo("" + L, G.mode, R)), (L.return = G), L;
    if (typeof L == "object" && L !== null) {
      switch (L.$$typeof) {
        case $r:
          return (
            (R = Ls(L.type, L.key, L.props, null, G.mode, R)),
            (R.ref = $n(G, null, L)),
            (R.return = G),
            R
          );
        case nn:
          return (L = el(L, G.mode, R)), (L.return = G), L;
        case ra:
          var O = L._init;
          return H(G, O(L._payload), R);
      }
      if (sr(L) || Yn(L))
        return (L = Wa(L, G.mode, R, null)), (L.return = G), L;
      rs(G, L);
    }
    return null;
  }
  function j(G, L, R, O) {
    var X = L !== null ? L.key : null;
    if ((typeof R == "string" && R !== "") || typeof R == "number")
      return X !== null ? null : S(G, L, "" + R, O);
    if (typeof R == "object" && R !== null) {
      switch (R.$$typeof) {
        case $r:
          return R.key === X ? E(G, L, R, O) : null;
        case nn:
          return R.key === X ? N(G, L, R, O) : null;
        case ra:
          return (X = R._init), j(G, L, X(R._payload), O);
      }
      if (sr(R) || Yn(R)) return X !== null ? null : F(G, L, R, O, null);
      rs(G, R);
    }
    return null;
  }
  function V(G, L, R, O, X) {
    if ((typeof O == "string" && O !== "") || typeof O == "number")
      return (G = G.get(R) || null), S(L, G, "" + O, X);
    if (typeof O == "object" && O !== null) {
      switch (O.$$typeof) {
        case $r:
          return (G = G.get(O.key === null ? R : O.key) || null), E(L, G, O, X);
        case nn:
          return (G = G.get(O.key === null ? R : O.key) || null), N(L, G, O, X);
        case ra:
          var W = O._init;
          return V(G, L, R, W(O._payload), X);
      }
      if (sr(O) || Yn(O)) return (G = G.get(R) || null), F(L, G, O, X, null);
      rs(L, O);
    }
    return null;
  }
  function q(G, L, R, O) {
    for (
      var X = null, W = null, U = L, te = (L = 0), he = null;
      U !== null && te < R.length;
      te++
    ) {
      U.index > te ? ((he = U), (U = null)) : (he = U.sibling);
      var J = j(G, U, R[te], O);
      if (J === null) {
        U === null && (U = he);
        break;
      }
      t && U && J.alternate === null && a(G, U),
        (L = p(J, L, te)),
        W === null ? (X = J) : (W.sibling = J),
        (W = J),
        (U = he);
    }
    if (te === R.length) return s(G, U), rt && Da(G, te), X;
    if (U === null) {
      for (; te < R.length; te++)
        (U = H(G, R[te], O)),
          U !== null &&
            ((L = p(U, L, te)),
            W === null ? (X = U) : (W.sibling = U),
            (W = U));
      return rt && Da(G, te), X;
    }
    for (U = c(G, U); te < R.length; te++)
      (he = V(U, G, te, R[te], O)),
        he !== null &&
          (t &&
            he.alternate !== null &&
            U.delete(he.key === null ? te : he.key),
          (L = p(he, L, te)),
          W === null ? (X = he) : (W.sibling = he),
          (W = he));
    return (
      t &&
        U.forEach(function (Y) {
          return a(G, Y);
        }),
      rt && Da(G, te),
      X
    );
  }
  function K(G, L, R, O) {
    var X = Yn(R);
    if (typeof X != "function") throw Error(pe(150));
    if (((R = X.call(R)), R == null)) throw Error(pe(151));
    for (
      var W = (X = null), U = L, te = (L = 0), he = null, J = R.next();
      U !== null && !J.done;
      te++, J = R.next()
    ) {
      U.index > te ? ((he = U), (U = null)) : (he = U.sibling);
      var Y = j(G, U, J.value, O);
      if (Y === null) {
        U === null && (U = he);
        break;
      }
      t && U && Y.alternate === null && a(G, U),
        (L = p(Y, L, te)),
        W === null ? (X = Y) : (W.sibling = Y),
        (W = Y),
        (U = he);
    }
    if (J.done) return s(G, U), rt && Da(G, te), X;
    if (U === null) {
      for (; !J.done; te++, J = R.next())
        (J = H(G, J.value, O)),
          J !== null &&
            ((L = p(J, L, te)),
            W === null ? (X = J) : (W.sibling = J),
            (W = J));
      return rt && Da(G, te), X;
    }
    for (U = c(G, U); !J.done; te++, J = R.next())
      (J = V(U, G, te, J.value, O)),
        J !== null &&
          (t && J.alternate !== null && U.delete(J.key === null ? te : J.key),
          (L = p(J, L, te)),
          W === null ? (X = J) : (W.sibling = J),
          (W = J));
    return (
      t &&
        U.forEach(function (se) {
          return a(G, se);
        }),
      rt && Da(G, te),
      X
    );
  }
  function ae(G, L, R, O) {
    if (
      (typeof R == "object" &&
        R !== null &&
        R.type === rn &&
        R.key === null &&
        (R = R.props.children),
      typeof R == "object" && R !== null)
    ) {
      switch (R.$$typeof) {
        case $r:
          e: {
            for (var X = R.key, W = L; W !== null; ) {
              if (W.key === X) {
                if (((X = R.type), X === rn)) {
                  if (W.tag === 7) {
                    s(G, W.sibling),
                      (L = u(W, R.props.children)),
                      (L.return = G),
                      (G = L);
                    break e;
                  }
                } else if (
                  W.elementType === X ||
                  (typeof X == "object" &&
                    X !== null &&
                    X.$$typeof === ra &&
                    nu(X) === W.type)
                ) {
                  s(G, W.sibling),
                    (L = u(W, R.props)),
                    (L.ref = $n(G, W, R)),
                    (L.return = G),
                    (G = L);
                  break e;
                }
                s(G, W);
                break;
              } else a(G, W);
              W = W.sibling;
            }
            R.type === rn
              ? ((L = Wa(R.props.children, G.mode, O, R.key)),
                (L.return = G),
                (G = L))
              : ((O = Ls(R.type, R.key, R.props, null, G.mode, O)),
                (O.ref = $n(G, L, R)),
                (O.return = G),
                (G = O));
          }
          return b(G);
        case nn:
          e: {
            for (W = R.key; L !== null; ) {
              if (L.key === W)
                if (
                  L.tag === 4 &&
                  L.stateNode.containerInfo === R.containerInfo &&
                  L.stateNode.implementation === R.implementation
                ) {
                  s(G, L.sibling),
                    (L = u(L, R.children || [])),
                    (L.return = G),
                    (G = L);
                  break e;
                } else {
                  s(G, L);
                  break;
                }
              else a(G, L);
              L = L.sibling;
            }
            (L = el(R, G.mode, O)), (L.return = G), (G = L);
          }
          return b(G);
        case ra:
          return (W = R._init), ae(G, L, W(R._payload), O);
      }
      if (sr(R)) return q(G, L, R, O);
      if (Yn(R)) return K(G, L, R, O);
      rs(G, R);
    }
    return (typeof R == "string" && R !== "") || typeof R == "number"
      ? ((R = "" + R),
        L !== null && L.tag === 6
          ? (s(G, L.sibling), (L = u(L, R)), (L.return = G), (G = L))
          : (s(G, L), (L = Qo(R, G.mode, O)), (L.return = G), (G = L)),
        b(G))
      : s(G, L);
  }
  return ae;
}
var Nn = Sp(!0),
  Cp = Sp(!1),
  Wr = {},
  ji = Ca(Wr),
  _r = Ca(Wr),
  Ir = Ca(Wr);
function Ba(t) {
  if (t === Wr) throw Error(pe(174));
  return t;
}
function Yc(t, a) {
  switch ((Je(Ir, a), Je(_r, t), Je(ji, Wr), (t = a.nodeType), t)) {
    case 9:
    case 11:
      a = (a = a.documentElement) ? a.namespaceURI : bl(null, "");
      break;
    default:
      (t = t === 8 ? a.parentNode : a),
        (a = t.namespaceURI || null),
        (t = t.tagName),
        (a = bl(a, t));
  }
  tt(ji), Je(ji, a);
}
function Tn() {
  tt(ji), tt(_r), tt(Ir);
}
function Ap(t) {
  Ba(Ir.current);
  var a = Ba(ji.current),
    s = bl(a, t.type);
  a !== s && (Je(_r, t), Je(ji, s));
}
function Wc(t) {
  _r.current === t && (tt(ji), tt(_r));
}
var st = Ca(0);
function $s(t) {
  for (var a = t; a !== null; ) {
    if (a.tag === 13) {
      var s = a.memoizedState;
      if (
        s !== null &&
        ((s = s.dehydrated), s === null || s.data === "$?" || s.data === "$!")
      )
        return a;
    } else if (a.tag === 19 && a.memoizedProps.revealOrder !== void 0) {
      if (a.flags & 128) return a;
    } else if (a.child !== null) {
      (a.child.return = a), (a = a.child);
      continue;
    }
    if (a === t) break;
    for (; a.sibling === null; ) {
      if (a.return === null || a.return === t) return null;
      a = a.return;
    }
    (a.sibling.return = a.return), (a = a.sibling);
  }
  return null;
}
var Uo = [];
function Gc() {
  for (var t = 0; t < Uo.length; t++)
    Uo[t]._workInProgressVersionPrimary = null;
  Uo.length = 0;
}
var ks = ea.ReactCurrentDispatcher,
  $o = ea.ReactCurrentBatchConfig,
  Ua = 0,
  ot = null,
  vt = null,
  St = null,
  Ks = !1,
  gr = !1,
  Rr = 0,
  Om = 0;
function Rt() {
  throw Error(pe(321));
}
function Vc(t, a) {
  if (a === null) return !1;
  for (var s = 0; s < a.length && s < t.length; s++)
    if (!Ti(t[s], a[s])) return !1;
  return !0;
}
function Uc(t, a, s, c, u, p) {
  if (
    ((Ua = p),
    (ot = a),
    (a.memoizedState = null),
    (a.updateQueue = null),
    (a.lanes = 0),
    (ks.current = t === null || t.memoizedState === null ? Xm : Ym),
    (t = s(c, u)),
    gr)
  ) {
    p = 0;
    do {
      if (((gr = !1), (Rr = 0), 25 <= p)) throw Error(pe(301));
      (p += 1),
        (St = vt = null),
        (a.updateQueue = null),
        (ks.current = Wm),
        (t = s(c, u));
    } while (gr);
  }
  if (
    ((ks.current = Zs),
    (a = vt !== null && vt.next !== null),
    (Ua = 0),
    (St = vt = ot = null),
    (Ks = !1),
    a)
  )
    throw Error(pe(300));
  return t;
}
function $c() {
  var t = Rr !== 0;
  return (Rr = 0), t;
}
function Ii() {
  var t = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return St === null ? (ot.memoizedState = St = t) : (St = St.next = t), St;
}
function vi() {
  if (vt === null) {
    var t = ot.alternate;
    t = t !== null ? t.memoizedState : null;
  } else t = vt.next;
  var a = St === null ? ot.memoizedState : St.next;
  if (a !== null) (St = a), (vt = t);
  else {
    if (t === null) throw Error(pe(310));
    (vt = t),
      (t = {
        memoizedState: vt.memoizedState,
        baseState: vt.baseState,
        baseQueue: vt.baseQueue,
        queue: vt.queue,
        next: null,
      }),
      St === null ? (ot.memoizedState = St = t) : (St = St.next = t);
  }
  return St;
}
function Dr(t, a) {
  return typeof a == "function" ? a(t) : a;
}
function Ko(t) {
  var a = vi(),
    s = a.queue;
  if (s === null) throw Error(pe(311));
  s.lastRenderedReducer = t;
  var c = vt,
    u = c.baseQueue,
    p = s.pending;
  if (p !== null) {
    if (u !== null) {
      var b = u.next;
      (u.next = p.next), (p.next = b);
    }
    (c.baseQueue = u = p), (s.pending = null);
  }
  if (u !== null) {
    (p = u.next), (c = c.baseState);
    var S = (b = null),
      E = null,
      N = p;
    do {
      var F = N.lane;
      if ((Ua & F) === F)
        E !== null &&
          (E = E.next =
            {
              lane: 0,
              action: N.action,
              hasEagerState: N.hasEagerState,
              eagerState: N.eagerState,
              next: null,
            }),
          (c = N.hasEagerState ? N.eagerState : t(c, N.action));
      else {
        var H = {
          lane: F,
          action: N.action,
          hasEagerState: N.hasEagerState,
          eagerState: N.eagerState,
          next: null,
        };
        E === null ? ((S = E = H), (b = c)) : (E = E.next = H),
          (ot.lanes |= F),
          ($a |= F);
      }
      N = N.next;
    } while (N !== null && N !== p);
    E === null ? (b = c) : (E.next = S),
      Ti(c, a.memoizedState) || (Kt = !0),
      (a.memoizedState = c),
      (a.baseState = b),
      (a.baseQueue = E),
      (s.lastRenderedState = c);
  }
  if (((t = s.interleaved), t !== null)) {
    u = t;
    do (p = u.lane), (ot.lanes |= p), ($a |= p), (u = u.next);
    while (u !== t);
  } else u === null && (s.lanes = 0);
  return [a.memoizedState, s.dispatch];
}
function Zo(t) {
  var a = vi(),
    s = a.queue;
  if (s === null) throw Error(pe(311));
  s.lastRenderedReducer = t;
  var c = s.dispatch,
    u = s.pending,
    p = a.memoizedState;
  if (u !== null) {
    s.pending = null;
    var b = (u = u.next);
    do (p = t(p, b.action)), (b = b.next);
    while (b !== u);
    Ti(p, a.memoizedState) || (Kt = !0),
      (a.memoizedState = p),
      a.baseQueue === null && (a.baseState = p),
      (s.lastRenderedState = p);
  }
  return [p, c];
}
function Pp() {}
function Lp(t, a) {
  var s = ot,
    c = vi(),
    u = a(),
    p = !Ti(c.memoizedState, u);
  if (
    (p && ((c.memoizedState = u), (Kt = !0)),
    (c = c.queue),
    Kc(Np.bind(null, s, c, t), [t]),
    c.getSnapshot !== a || p || (St !== null && St.memoizedState.tag & 1))
  ) {
    if (
      ((s.flags |= 2048),
      jr(9, Mp.bind(null, s, c, u, a), void 0, null),
      Ct === null)
    )
      throw Error(pe(349));
    Ua & 30 || Ep(s, a, u);
  }
  return u;
}
function Ep(t, a, s) {
  (t.flags |= 16384),
    (t = { getSnapshot: a, value: s }),
    (a = ot.updateQueue),
    a === null
      ? ((a = { lastEffect: null, stores: null }),
        (ot.updateQueue = a),
        (a.stores = [t]))
      : ((s = a.stores), s === null ? (a.stores = [t]) : s.push(t));
}
function Mp(t, a, s, c) {
  (a.value = s), (a.getSnapshot = c), Tp(a) && _p(t);
}
function Np(t, a, s) {
  return s(function () {
    Tp(a) && _p(t);
  });
}
function Tp(t) {
  var a = t.getSnapshot;
  t = t.value;
  try {
    var s = a();
    return !Ti(t, s);
  } catch {
    return !0;
  }
}
function _p(t) {
  var a = Ji(t, 1);
  a !== null && Ni(a, t, 1, -1);
}
function ru(t) {
  var a = Ii();
  return (
    typeof t == "function" && (t = t()),
    (a.memoizedState = a.baseState = t),
    (t = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: Dr,
      lastRenderedState: t,
    }),
    (a.queue = t),
    (t = t.dispatch = Hm.bind(null, ot, t)),
    [a.memoizedState, t]
  );
}
function jr(t, a, s, c) {
  return (
    (t = { tag: t, create: a, destroy: s, deps: c, next: null }),
    (a = ot.updateQueue),
    a === null
      ? ((a = { lastEffect: null, stores: null }),
        (ot.updateQueue = a),
        (a.lastEffect = t.next = t))
      : ((s = a.lastEffect),
        s === null
          ? (a.lastEffect = t.next = t)
          : ((c = s.next), (s.next = t), (t.next = c), (a.lastEffect = t))),
    t
  );
}
function Ip() {
  return vi().memoizedState;
}
function Ss(t, a, s, c) {
  var u = Ii();
  (ot.flags |= t),
    (u.memoizedState = jr(1 | a, s, void 0, c === void 0 ? null : c));
}
function fo(t, a, s, c) {
  var u = vi();
  c = c === void 0 ? null : c;
  var p = void 0;
  if (vt !== null) {
    var b = vt.memoizedState;
    if (((p = b.destroy), c !== null && Vc(c, b.deps))) {
      u.memoizedState = jr(a, s, p, c);
      return;
    }
  }
  (ot.flags |= t), (u.memoizedState = jr(1 | a, s, p, c));
}
function su(t, a) {
  return Ss(8390656, 8, t, a);
}
function Kc(t, a) {
  return fo(2048, 8, t, a);
}
function Rp(t, a) {
  return fo(4, 2, t, a);
}
function Dp(t, a) {
  return fo(4, 4, t, a);
}
function jp(t, a) {
  if (typeof a == "function")
    return (
      (t = t()),
      a(t),
      function () {
        a(null);
      }
    );
  if (a != null)
    return (
      (t = t()),
      (a.current = t),
      function () {
        a.current = null;
      }
    );
}
function zp(t, a, s) {
  return (
    (s = s != null ? s.concat([t]) : null), fo(4, 4, jp.bind(null, a, t), s)
  );
}
function Zc() {}
function Op(t, a) {
  var s = vi();
  a = a === void 0 ? null : a;
  var c = s.memoizedState;
  return c !== null && a !== null && Vc(a, c[1])
    ? c[0]
    : ((s.memoizedState = [t, a]), t);
}
function Fp(t, a) {
  var s = vi();
  a = a === void 0 ? null : a;
  var c = s.memoizedState;
  return c !== null && a !== null && Vc(a, c[1])
    ? c[0]
    : ((t = t()), (s.memoizedState = [t, a]), t);
}
function Bp(t, a, s) {
  return Ua & 21
    ? (Ti(s, a) || ((s = Yd()), (ot.lanes |= s), ($a |= s), (t.baseState = !0)),
      a)
    : (t.baseState && ((t.baseState = !1), (Kt = !0)), (t.memoizedState = s));
}
function Fm(t, a) {
  var s = $e;
  ($e = s !== 0 && 4 > s ? s : 4), t(!0);
  var c = $o.transition;
  $o.transition = {};
  try {
    t(!1), a();
  } finally {
    ($e = s), ($o.transition = c);
  }
}
function Hp() {
  return vi().memoizedState;
}
function Bm(t, a, s) {
  var c = ya(t);
  if (
    ((s = {
      lane: c,
      action: s,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    Xp(t))
  )
    Yp(a, s);
  else if (((s = yp(t, a, s, c)), s !== null)) {
    var u = Ht();
    Ni(s, t, c, u), Wp(s, a, c);
  }
}
function Hm(t, a, s) {
  var c = ya(t),
    u = { lane: c, action: s, hasEagerState: !1, eagerState: null, next: null };
  if (Xp(t)) Yp(a, u);
  else {
    var p = t.alternate;
    if (
      t.lanes === 0 &&
      (p === null || p.lanes === 0) &&
      ((p = a.lastRenderedReducer), p !== null)
    )
      try {
        var b = a.lastRenderedState,
          S = p(b, s);
        if (((u.hasEagerState = !0), (u.eagerState = S), Ti(S, b))) {
          var E = a.interleaved;
          E === null
            ? ((u.next = u), Hc(a))
            : ((u.next = E.next), (E.next = u)),
            (a.interleaved = u);
          return;
        }
      } catch {
      } finally {
      }
    (s = yp(t, a, u, c)),
      s !== null && ((u = Ht()), Ni(s, t, c, u), Wp(s, a, c));
  }
}
function Xp(t) {
  var a = t.alternate;
  return t === ot || (a !== null && a === ot);
}
function Yp(t, a) {
  gr = Ks = !0;
  var s = t.pending;
  s === null ? (a.next = a) : ((a.next = s.next), (s.next = a)),
    (t.pending = a);
}
function Wp(t, a, s) {
  if (s & 4194240) {
    var c = a.lanes;
    (c &= t.pendingLanes), (s |= c), (a.lanes = s), Lc(t, s);
  }
}
var Zs = {
    readContext: xi,
    useCallback: Rt,
    useContext: Rt,
    useEffect: Rt,
    useImperativeHandle: Rt,
    useInsertionEffect: Rt,
    useLayoutEffect: Rt,
    useMemo: Rt,
    useReducer: Rt,
    useRef: Rt,
    useState: Rt,
    useDebugValue: Rt,
    useDeferredValue: Rt,
    useTransition: Rt,
    useMutableSource: Rt,
    useSyncExternalStore: Rt,
    useId: Rt,
    unstable_isNewReconciler: !1,
  },
  Xm = {
    readContext: xi,
    useCallback: function (t, a) {
      return (Ii().memoizedState = [t, a === void 0 ? null : a]), t;
    },
    useContext: xi,
    useEffect: su,
    useImperativeHandle: function (t, a, s) {
      return (
        (s = s != null ? s.concat([t]) : null),
        Ss(4194308, 4, jp.bind(null, a, t), s)
      );
    },
    useLayoutEffect: function (t, a) {
      return Ss(4194308, 4, t, a);
    },
    useInsertionEffect: function (t, a) {
      return Ss(4, 2, t, a);
    },
    useMemo: function (t, a) {
      var s = Ii();
      return (
        (a = a === void 0 ? null : a), (t = t()), (s.memoizedState = [t, a]), t
      );
    },
    useReducer: function (t, a, s) {
      var c = Ii();
      return (
        (a = s !== void 0 ? s(a) : a),
        (c.memoizedState = c.baseState = a),
        (t = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: t,
          lastRenderedState: a,
        }),
        (c.queue = t),
        (t = t.dispatch = Bm.bind(null, ot, t)),
        [c.memoizedState, t]
      );
    },
    useRef: function (t) {
      var a = Ii();
      return (t = { current: t }), (a.memoizedState = t);
    },
    useState: ru,
    useDebugValue: Zc,
    useDeferredValue: function (t) {
      return (Ii().memoizedState = t);
    },
    useTransition: function () {
      var t = ru(!1),
        a = t[0];
      return (t = Fm.bind(null, t[1])), (Ii().memoizedState = t), [a, t];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (t, a, s) {
      var c = ot,
        u = Ii();
      if (rt) {
        if (s === void 0) throw Error(pe(407));
        s = s();
      } else {
        if (((s = a()), Ct === null)) throw Error(pe(349));
        Ua & 30 || Ep(c, a, s);
      }
      u.memoizedState = s;
      var p = { value: s, getSnapshot: a };
      return (
        (u.queue = p),
        su(Np.bind(null, c, p, t), [t]),
        (c.flags |= 2048),
        jr(9, Mp.bind(null, c, p, s, a), void 0, null),
        s
      );
    },
    useId: function () {
      var t = Ii(),
        a = Ct.identifierPrefix;
      if (rt) {
        var s = Ui,
          c = Vi;
        (s = (c & ~(1 << (32 - Mi(c) - 1))).toString(32) + s),
          (a = ":" + a + "R" + s),
          (s = Rr++),
          0 < s && (a += "H" + s.toString(32)),
          (a += ":");
      } else (s = Om++), (a = ":" + a + "r" + s.toString(32) + ":");
      return (t.memoizedState = a);
    },
    unstable_isNewReconciler: !1,
  },
  Ym = {
    readContext: xi,
    useCallback: Op,
    useContext: xi,
    useEffect: Kc,
    useImperativeHandle: zp,
    useInsertionEffect: Rp,
    useLayoutEffect: Dp,
    useMemo: Fp,
    useReducer: Ko,
    useRef: Ip,
    useState: function () {
      return Ko(Dr);
    },
    useDebugValue: Zc,
    useDeferredValue: function (t) {
      var a = vi();
      return Bp(a, vt.memoizedState, t);
    },
    useTransition: function () {
      var t = Ko(Dr)[0],
        a = vi().memoizedState;
      return [t, a];
    },
    useMutableSource: Pp,
    useSyncExternalStore: Lp,
    useId: Hp,
    unstable_isNewReconciler: !1,
  },
  Wm = {
    readContext: xi,
    useCallback: Op,
    useContext: xi,
    useEffect: Kc,
    useImperativeHandle: zp,
    useInsertionEffect: Rp,
    useLayoutEffect: Dp,
    useMemo: Fp,
    useReducer: Zo,
    useRef: Ip,
    useState: function () {
      return Zo(Dr);
    },
    useDebugValue: Zc,
    useDeferredValue: function (t) {
      var a = vi();
      return vt === null ? (a.memoizedState = t) : Bp(a, vt.memoizedState, t);
    },
    useTransition: function () {
      var t = Zo(Dr)[0],
        a = vi().memoizedState;
      return [t, a];
    },
    useMutableSource: Pp,
    useSyncExternalStore: Lp,
    useId: Hp,
    unstable_isNewReconciler: !1,
  };
function _n(t, a) {
  try {
    var s = "",
      c = a;
    do (s += vg(c)), (c = c.return);
    while (c);
    var u = s;
  } catch (p) {
    u =
      `
Error generating stack: ` +
      p.message +
      `
` +
      p.stack;
  }
  return { value: t, source: a, stack: u, digest: null };
}
function qo(t, a, s) {
  return { value: t, source: null, stack: s ?? null, digest: a ?? null };
}
function Yl(t, a) {
  try {
    console.error(a.value);
  } catch (s) {
    setTimeout(function () {
      throw s;
    });
  }
}
var Gm = typeof WeakMap == "function" ? WeakMap : Map;
function Gp(t, a, s) {
  (s = $i(-1, s)), (s.tag = 3), (s.payload = { element: null });
  var c = a.value;
  return (
    (s.callback = function () {
      Js || ((Js = !0), (Ql = c)), Yl(t, a);
    }),
    s
  );
}
function Vp(t, a, s) {
  (s = $i(-1, s)), (s.tag = 3);
  var c = t.type.getDerivedStateFromError;
  if (typeof c == "function") {
    var u = a.value;
    (s.payload = function () {
      return c(u);
    }),
      (s.callback = function () {
        Yl(t, a);
      });
  }
  var p = t.stateNode;
  return (
    p !== null &&
      typeof p.componentDidCatch == "function" &&
      (s.callback = function () {
        Yl(t, a),
          typeof c != "function" &&
            (va === null ? (va = new Set([this])) : va.add(this));
        var b = a.stack;
        this.componentDidCatch(a.value, {
          componentStack: b !== null ? b : "",
        });
      }),
    s
  );
}
function ou(t, a, s) {
  var c = t.pingCache;
  if (c === null) {
    c = t.pingCache = new Gm();
    var u = new Set();
    c.set(a, u);
  } else (u = c.get(a)), u === void 0 && ((u = new Set()), c.set(a, u));
  u.has(s) || (u.add(s), (t = rx.bind(null, t, a, s)), a.then(t, t));
}
function lu(t) {
  do {
    var a;
    if (
      ((a = t.tag === 13) &&
        ((a = t.memoizedState), (a = a !== null ? a.dehydrated !== null : !0)),
      a)
    )
      return t;
    t = t.return;
  } while (t !== null);
  return null;
}
function cu(t, a, s, c, u) {
  return t.mode & 1
    ? ((t.flags |= 65536), (t.lanes = u), t)
    : (t === a
        ? (t.flags |= 65536)
        : ((t.flags |= 128),
          (s.flags |= 131072),
          (s.flags &= -52805),
          s.tag === 1 &&
            (s.alternate === null
              ? (s.tag = 17)
              : ((a = $i(-1, 1)), (a.tag = 2), xa(s, a, 1))),
          (s.lanes |= 1)),
      t);
}
var Vm = ea.ReactCurrentOwner,
  Kt = !1;
function Bt(t, a, s, c) {
  a.child = t === null ? Cp(a, null, s, c) : Nn(a, t.child, s, c);
}
function hu(t, a, s, c, u) {
  s = s.render;
  var p = a.ref;
  return (
    Sn(a, u),
    (c = Uc(t, a, s, c, p, u)),
    (s = $c()),
    t !== null && !Kt
      ? ((a.updateQueue = t.updateQueue),
        (a.flags &= -2053),
        (t.lanes &= ~u),
        Qi(t, a, u))
      : (rt && s && Dc(a), (a.flags |= 1), Bt(t, a, c, u), a.child)
  );
}
function uu(t, a, s, c, u) {
  if (t === null) {
    var p = s.type;
    return typeof p == "function" &&
      !nh(p) &&
      p.defaultProps === void 0 &&
      s.compare === null &&
      s.defaultProps === void 0
      ? ((a.tag = 15), (a.type = p), Up(t, a, p, c, u))
      : ((t = Ls(s.type, null, c, a, a.mode, u)),
        (t.ref = a.ref),
        (t.return = a),
        (a.child = t));
  }
  if (((p = t.child), !(t.lanes & u))) {
    var b = p.memoizedProps;
    if (
      ((s = s.compare), (s = s !== null ? s : Er), s(b, c) && t.ref === a.ref)
    )
      return Qi(t, a, u);
  }
  return (
    (a.flags |= 1),
    (t = ba(p, c)),
    (t.ref = a.ref),
    (t.return = a),
    (a.child = t)
  );
}
function Up(t, a, s, c, u) {
  if (t !== null) {
    var p = t.memoizedProps;
    if (Er(p, c) && t.ref === a.ref)
      if (((Kt = !1), (a.pendingProps = c = p), (t.lanes & u) !== 0))
        t.flags & 131072 && (Kt = !0);
      else return (a.lanes = t.lanes), Qi(t, a, u);
  }
  return Wl(t, a, s, c, u);
}
function $p(t, a, s) {
  var c = a.pendingProps,
    u = c.children,
    p = t !== null ? t.memoizedState : null;
  if (c.mode === "hidden")
    if (!(a.mode & 1))
      (a.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        Je(gn, ti),
        (ti |= s);
    else {
      if (!(s & 1073741824))
        return (
          (t = p !== null ? p.baseLanes | s : s),
          (a.lanes = a.childLanes = 1073741824),
          (a.memoizedState = {
            baseLanes: t,
            cachePool: null,
            transitions: null,
          }),
          (a.updateQueue = null),
          Je(gn, ti),
          (ti |= t),
          null
        );
      (a.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (c = p !== null ? p.baseLanes : s),
        Je(gn, ti),
        (ti |= c);
    }
  else
    p !== null ? ((c = p.baseLanes | s), (a.memoizedState = null)) : (c = s),
      Je(gn, ti),
      (ti |= c);
  return Bt(t, a, u, s), a.child;
}
function Kp(t, a) {
  var s = a.ref;
  ((t === null && s !== null) || (t !== null && t.ref !== s)) &&
    ((a.flags |= 512), (a.flags |= 2097152));
}
function Wl(t, a, s, c, u) {
  var p = qt(s) ? Ga : zt.current;
  return (
    (p = En(a, p)),
    Sn(a, u),
    (s = Uc(t, a, s, c, p, u)),
    (c = $c()),
    t !== null && !Kt
      ? ((a.updateQueue = t.updateQueue),
        (a.flags &= -2053),
        (t.lanes &= ~u),
        Qi(t, a, u))
      : (rt && c && Dc(a), (a.flags |= 1), Bt(t, a, s, u), a.child)
  );
}
function du(t, a, s, c, u) {
  if (qt(s)) {
    var p = !0;
    Xs(a);
  } else p = !1;
  if ((Sn(a, u), a.stateNode === null))
    Cs(t, a), kp(a, s, c), Xl(a, s, c, u), (c = !0);
  else if (t === null) {
    var b = a.stateNode,
      S = a.memoizedProps;
    b.props = S;
    var E = b.context,
      N = s.contextType;
    typeof N == "object" && N !== null
      ? (N = xi(N))
      : ((N = qt(s) ? Ga : zt.current), (N = En(a, N)));
    var F = s.getDerivedStateFromProps,
      H =
        typeof F == "function" ||
        typeof b.getSnapshotBeforeUpdate == "function";
    H ||
      (typeof b.UNSAFE_componentWillReceiveProps != "function" &&
        typeof b.componentWillReceiveProps != "function") ||
      ((S !== c || E !== N) && au(a, b, c, N)),
      (sa = !1);
    var j = a.memoizedState;
    (b.state = j),
      Us(a, c, b, u),
      (E = a.memoizedState),
      S !== c || j !== E || Zt.current || sa
        ? (typeof F == "function" && (Hl(a, s, F, c), (E = a.memoizedState)),
          (S = sa || iu(a, s, S, c, j, E, N))
            ? (H ||
                (typeof b.UNSAFE_componentWillMount != "function" &&
                  typeof b.componentWillMount != "function") ||
                (typeof b.componentWillMount == "function" &&
                  b.componentWillMount(),
                typeof b.UNSAFE_componentWillMount == "function" &&
                  b.UNSAFE_componentWillMount()),
              typeof b.componentDidMount == "function" && (a.flags |= 4194308))
            : (typeof b.componentDidMount == "function" && (a.flags |= 4194308),
              (a.memoizedProps = c),
              (a.memoizedState = E)),
          (b.props = c),
          (b.state = E),
          (b.context = N),
          (c = S))
        : (typeof b.componentDidMount == "function" && (a.flags |= 4194308),
          (c = !1));
  } else {
    (b = a.stateNode),
      bp(t, a),
      (S = a.memoizedProps),
      (N = a.type === a.elementType ? S : Ai(a.type, S)),
      (b.props = N),
      (H = a.pendingProps),
      (j = b.context),
      (E = s.contextType),
      typeof E == "object" && E !== null
        ? (E = xi(E))
        : ((E = qt(s) ? Ga : zt.current), (E = En(a, E)));
    var V = s.getDerivedStateFromProps;
    (F =
      typeof V == "function" ||
      typeof b.getSnapshotBeforeUpdate == "function") ||
      (typeof b.UNSAFE_componentWillReceiveProps != "function" &&
        typeof b.componentWillReceiveProps != "function") ||
      ((S !== H || j !== E) && au(a, b, c, E)),
      (sa = !1),
      (j = a.memoizedState),
      (b.state = j),
      Us(a, c, b, u);
    var q = a.memoizedState;
    S !== H || j !== q || Zt.current || sa
      ? (typeof V == "function" && (Hl(a, s, V, c), (q = a.memoizedState)),
        (N = sa || iu(a, s, N, c, j, q, E) || !1)
          ? (F ||
              (typeof b.UNSAFE_componentWillUpdate != "function" &&
                typeof b.componentWillUpdate != "function") ||
              (typeof b.componentWillUpdate == "function" &&
                b.componentWillUpdate(c, q, E),
              typeof b.UNSAFE_componentWillUpdate == "function" &&
                b.UNSAFE_componentWillUpdate(c, q, E)),
            typeof b.componentDidUpdate == "function" && (a.flags |= 4),
            typeof b.getSnapshotBeforeUpdate == "function" && (a.flags |= 1024))
          : (typeof b.componentDidUpdate != "function" ||
              (S === t.memoizedProps && j === t.memoizedState) ||
              (a.flags |= 4),
            typeof b.getSnapshotBeforeUpdate != "function" ||
              (S === t.memoizedProps && j === t.memoizedState) ||
              (a.flags |= 1024),
            (a.memoizedProps = c),
            (a.memoizedState = q)),
        (b.props = c),
        (b.state = q),
        (b.context = E),
        (c = N))
      : (typeof b.componentDidUpdate != "function" ||
          (S === t.memoizedProps && j === t.memoizedState) ||
          (a.flags |= 4),
        typeof b.getSnapshotBeforeUpdate != "function" ||
          (S === t.memoizedProps && j === t.memoizedState) ||
          (a.flags |= 1024),
        (c = !1));
  }
  return Gl(t, a, s, c, p, u);
}
function Gl(t, a, s, c, u, p) {
  Kp(t, a);
  var b = (a.flags & 128) !== 0;
  if (!c && !b) return u && qh(a, s, !1), Qi(t, a, p);
  (c = a.stateNode), (Vm.current = a);
  var S =
    b && typeof s.getDerivedStateFromError != "function" ? null : c.render();
  return (
    (a.flags |= 1),
    t !== null && b
      ? ((a.child = Nn(a, t.child, null, p)), (a.child = Nn(a, null, S, p)))
      : Bt(t, a, S, p),
    (a.memoizedState = c.state),
    u && qh(a, s, !0),
    a.child
  );
}
function Zp(t) {
  var a = t.stateNode;
  a.pendingContext
    ? Zh(t, a.pendingContext, a.pendingContext !== a.context)
    : a.context && Zh(t, a.context, !1),
    Yc(t, a.containerInfo);
}
function pu(t, a, s, c, u) {
  return Mn(), zc(u), (a.flags |= 256), Bt(t, a, s, c), a.child;
}
var Vl = { dehydrated: null, treeContext: null, retryLane: 0 };
function Ul(t) {
  return { baseLanes: t, cachePool: null, transitions: null };
}
function qp(t, a, s) {
  var c = a.pendingProps,
    u = st.current,
    p = !1,
    b = (a.flags & 128) !== 0,
    S;
  if (
    ((S = b) ||
      (S = t !== null && t.memoizedState === null ? !1 : (u & 2) !== 0),
    S
      ? ((p = !0), (a.flags &= -129))
      : (t === null || t.memoizedState !== null) && (u |= 1),
    Je(st, u & 1),
    t === null)
  )
    return (
      Fl(a),
      (t = a.memoizedState),
      t !== null && ((t = t.dehydrated), t !== null)
        ? (a.mode & 1
            ? t.data === "$!"
              ? (a.lanes = 8)
              : (a.lanes = 1073741824)
            : (a.lanes = 1),
          null)
        : ((b = c.children),
          (t = c.fallback),
          p
            ? ((c = a.mode),
              (p = a.child),
              (b = { mode: "hidden", children: b }),
              !(c & 1) && p !== null
                ? ((p.childLanes = 0), (p.pendingProps = b))
                : (p = xo(b, c, 0, null)),
              (t = Wa(t, c, s, null)),
              (p.return = a),
              (t.return = a),
              (p.sibling = t),
              (a.child = p),
              (a.child.memoizedState = Ul(s)),
              (a.memoizedState = Vl),
              t)
            : qc(a, b))
    );
  if (((u = t.memoizedState), u !== null && ((S = u.dehydrated), S !== null)))
    return Um(t, a, b, c, S, u, s);
  if (p) {
    (p = c.fallback), (b = a.mode), (u = t.child), (S = u.sibling);
    var E = { mode: "hidden", children: c.children };
    return (
      !(b & 1) && a.child !== u
        ? ((c = a.child),
          (c.childLanes = 0),
          (c.pendingProps = E),
          (a.deletions = null))
        : ((c = ba(u, E)), (c.subtreeFlags = u.subtreeFlags & 14680064)),
      S !== null ? (p = ba(S, p)) : ((p = Wa(p, b, s, null)), (p.flags |= 2)),
      (p.return = a),
      (c.return = a),
      (c.sibling = p),
      (a.child = c),
      (c = p),
      (p = a.child),
      (b = t.child.memoizedState),
      (b =
        b === null
          ? Ul(s)
          : {
              baseLanes: b.baseLanes | s,
              cachePool: null,
              transitions: b.transitions,
            }),
      (p.memoizedState = b),
      (p.childLanes = t.childLanes & ~s),
      (a.memoizedState = Vl),
      c
    );
  }
  return (
    (p = t.child),
    (t = p.sibling),
    (c = ba(p, { mode: "visible", children: c.children })),
    !(a.mode & 1) && (c.lanes = s),
    (c.return = a),
    (c.sibling = null),
    t !== null &&
      ((s = a.deletions),
      s === null ? ((a.deletions = [t]), (a.flags |= 16)) : s.push(t)),
    (a.child = c),
    (a.memoizedState = null),
    c
  );
}
function qc(t, a) {
  return (
    (a = xo({ mode: "visible", children: a }, t.mode, 0, null)),
    (a.return = t),
    (t.child = a)
  );
}
function ss(t, a, s, c) {
  return (
    c !== null && zc(c),
    Nn(a, t.child, null, s),
    (t = qc(a, a.pendingProps.children)),
    (t.flags |= 2),
    (a.memoizedState = null),
    t
  );
}
function Um(t, a, s, c, u, p, b) {
  if (s)
    return a.flags & 256
      ? ((a.flags &= -257), (c = qo(Error(pe(422)))), ss(t, a, b, c))
      : a.memoizedState !== null
      ? ((a.child = t.child), (a.flags |= 128), null)
      : ((p = c.fallback),
        (u = a.mode),
        (c = xo({ mode: "visible", children: c.children }, u, 0, null)),
        (p = Wa(p, u, b, null)),
        (p.flags |= 2),
        (c.return = a),
        (p.return = a),
        (c.sibling = p),
        (a.child = c),
        a.mode & 1 && Nn(a, t.child, null, b),
        (a.child.memoizedState = Ul(b)),
        (a.memoizedState = Vl),
        p);
  if (!(a.mode & 1)) return ss(t, a, b, null);
  if (u.data === "$!") {
    if (((c = u.nextSibling && u.nextSibling.dataset), c)) var S = c.dgst;
    return (
      (c = S), (p = Error(pe(419))), (c = qo(p, c, void 0)), ss(t, a, b, c)
    );
  }
  if (((S = (b & t.childLanes) !== 0), Kt || S)) {
    if (((c = Ct), c !== null)) {
      switch (b & -b) {
        case 4:
          u = 2;
          break;
        case 16:
          u = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          u = 32;
          break;
        case 536870912:
          u = 268435456;
          break;
        default:
          u = 0;
      }
      (u = u & (c.suspendedLanes | b) ? 0 : u),
        u !== 0 &&
          u !== p.retryLane &&
          ((p.retryLane = u), Ji(t, u), Ni(c, t, u, -1));
    }
    return ah(), (c = qo(Error(pe(421)))), ss(t, a, b, c);
  }
  return u.data === "$?"
    ? ((a.flags |= 128),
      (a.child = t.child),
      (a = sx.bind(null, t)),
      (u._reactRetry = a),
      null)
    : ((t = p.treeContext),
      (ii = ma(u.nextSibling)),
      (ai = a),
      (rt = !0),
      (Ei = null),
      t !== null &&
        ((pi[fi++] = Vi),
        (pi[fi++] = Ui),
        (pi[fi++] = Va),
        (Vi = t.id),
        (Ui = t.overflow),
        (Va = a)),
      (a = qc(a, c.children)),
      (a.flags |= 4096),
      a);
}
function fu(t, a, s) {
  t.lanes |= a;
  var c = t.alternate;
  c !== null && (c.lanes |= a), Bl(t.return, a, s);
}
function Jo(t, a, s, c, u) {
  var p = t.memoizedState;
  p === null
    ? (t.memoizedState = {
        isBackwards: a,
        rendering: null,
        renderingStartTime: 0,
        last: c,
        tail: s,
        tailMode: u,
      })
    : ((p.isBackwards = a),
      (p.rendering = null),
      (p.renderingStartTime = 0),
      (p.last = c),
      (p.tail = s),
      (p.tailMode = u));
}
function Jp(t, a, s) {
  var c = a.pendingProps,
    u = c.revealOrder,
    p = c.tail;
  if ((Bt(t, a, c.children, s), (c = st.current), c & 2))
    (c = (c & 1) | 2), (a.flags |= 128);
  else {
    if (t !== null && t.flags & 128)
      e: for (t = a.child; t !== null; ) {
        if (t.tag === 13) t.memoizedState !== null && fu(t, s, a);
        else if (t.tag === 19) fu(t, s, a);
        else if (t.child !== null) {
          (t.child.return = t), (t = t.child);
          continue;
        }
        if (t === a) break e;
        for (; t.sibling === null; ) {
          if (t.return === null || t.return === a) break e;
          t = t.return;
        }
        (t.sibling.return = t.return), (t = t.sibling);
      }
    c &= 1;
  }
  if ((Je(st, c), !(a.mode & 1))) a.memoizedState = null;
  else
    switch (u) {
      case "forwards":
        for (s = a.child, u = null; s !== null; )
          (t = s.alternate),
            t !== null && $s(t) === null && (u = s),
            (s = s.sibling);
        (s = u),
          s === null
            ? ((u = a.child), (a.child = null))
            : ((u = s.sibling), (s.sibling = null)),
          Jo(a, !1, u, s, p);
        break;
      case "backwards":
        for (s = null, u = a.child, a.child = null; u !== null; ) {
          if (((t = u.alternate), t !== null && $s(t) === null)) {
            a.child = u;
            break;
          }
          (t = u.sibling), (u.sibling = s), (s = u), (u = t);
        }
        Jo(a, !0, s, null, p);
        break;
      case "together":
        Jo(a, !1, null, null, void 0);
        break;
      default:
        a.memoizedState = null;
    }
  return a.child;
}
function Cs(t, a) {
  !(a.mode & 1) &&
    t !== null &&
    ((t.alternate = null), (a.alternate = null), (a.flags |= 2));
}
function Qi(t, a, s) {
  if (
    (t !== null && (a.dependencies = t.dependencies),
    ($a |= a.lanes),
    !(s & a.childLanes))
  )
    return null;
  if (t !== null && a.child !== t.child) throw Error(pe(153));
  if (a.child !== null) {
    for (
      t = a.child, s = ba(t, t.pendingProps), a.child = s, s.return = a;
      t.sibling !== null;

    )
      (t = t.sibling), (s = s.sibling = ba(t, t.pendingProps)), (s.return = a);
    s.sibling = null;
  }
  return a.child;
}
function $m(t, a, s) {
  switch (a.tag) {
    case 3:
      Zp(a), Mn();
      break;
    case 5:
      Ap(a);
      break;
    case 1:
      qt(a.type) && Xs(a);
      break;
    case 4:
      Yc(a, a.stateNode.containerInfo);
      break;
    case 10:
      var c = a.type._context,
        u = a.memoizedProps.value;
      Je(Gs, c._currentValue), (c._currentValue = u);
      break;
    case 13:
      if (((c = a.memoizedState), c !== null))
        return c.dehydrated !== null
          ? (Je(st, st.current & 1), (a.flags |= 128), null)
          : s & a.child.childLanes
          ? qp(t, a, s)
          : (Je(st, st.current & 1),
            (t = Qi(t, a, s)),
            t !== null ? t.sibling : null);
      Je(st, st.current & 1);
      break;
    case 19:
      if (((c = (s & a.childLanes) !== 0), t.flags & 128)) {
        if (c) return Jp(t, a, s);
        a.flags |= 128;
      }
      if (
        ((u = a.memoizedState),
        u !== null &&
          ((u.rendering = null), (u.tail = null), (u.lastEffect = null)),
        Je(st, st.current),
        c)
      )
        break;
      return null;
    case 22:
    case 23:
      return (a.lanes = 0), $p(t, a, s);
  }
  return Qi(t, a, s);
}
var Qp, $l, ef, tf;
Qp = function (t, a) {
  for (var s = a.child; s !== null; ) {
    if (s.tag === 5 || s.tag === 6) t.appendChild(s.stateNode);
    else if (s.tag !== 4 && s.child !== null) {
      (s.child.return = s), (s = s.child);
      continue;
    }
    if (s === a) break;
    for (; s.sibling === null; ) {
      if (s.return === null || s.return === a) return;
      s = s.return;
    }
    (s.sibling.return = s.return), (s = s.sibling);
  }
};
$l = function () {};
ef = function (t, a, s, c) {
  var u = t.memoizedProps;
  if (u !== c) {
    (t = a.stateNode), Ba(ji.current);
    var p = null;
    switch (s) {
      case "input":
        (u = ml(t, u)), (c = ml(t, c)), (p = []);
        break;
      case "select":
        (u = lt({}, u, { value: void 0 })),
          (c = lt({}, c, { value: void 0 })),
          (p = []);
        break;
      case "textarea":
        (u = yl(t, u)), (c = yl(t, c)), (p = []);
        break;
      default:
        typeof u.onClick != "function" &&
          typeof c.onClick == "function" &&
          (t.onclick = Bs);
    }
    wl(s, c);
    var b;
    s = null;
    for (N in u)
      if (!c.hasOwnProperty(N) && u.hasOwnProperty(N) && u[N] != null)
        if (N === "style") {
          var S = u[N];
          for (b in S) S.hasOwnProperty(b) && (s || (s = {}), (s[b] = ""));
        } else
          N !== "dangerouslySetInnerHTML" &&
            N !== "children" &&
            N !== "suppressContentEditableWarning" &&
            N !== "suppressHydrationWarning" &&
            N !== "autoFocus" &&
            (wr.hasOwnProperty(N)
              ? p || (p = [])
              : (p = p || []).push(N, null));
    for (N in c) {
      var E = c[N];
      if (
        ((S = u != null ? u[N] : void 0),
        c.hasOwnProperty(N) && E !== S && (E != null || S != null))
      )
        if (N === "style")
          if (S) {
            for (b in S)
              !S.hasOwnProperty(b) ||
                (E && E.hasOwnProperty(b)) ||
                (s || (s = {}), (s[b] = ""));
            for (b in E)
              E.hasOwnProperty(b) &&
                S[b] !== E[b] &&
                (s || (s = {}), (s[b] = E[b]));
          } else s || (p || (p = []), p.push(N, s)), (s = E);
        else
          N === "dangerouslySetInnerHTML"
            ? ((E = E ? E.__html : void 0),
              (S = S ? S.__html : void 0),
              E != null && S !== E && (p = p || []).push(N, E))
            : N === "children"
            ? (typeof E != "string" && typeof E != "number") ||
              (p = p || []).push(N, "" + E)
            : N !== "suppressContentEditableWarning" &&
              N !== "suppressHydrationWarning" &&
              (wr.hasOwnProperty(N)
                ? (E != null && N === "onScroll" && et("scroll", t),
                  p || S === E || (p = []))
                : (p = p || []).push(N, E));
    }
    s && (p = p || []).push("style", s);
    var N = p;
    (a.updateQueue = N) && (a.flags |= 4);
  }
};
tf = function (t, a, s, c) {
  s !== c && (a.flags |= 4);
};
function Kn(t, a) {
  if (!rt)
    switch (t.tailMode) {
      case "hidden":
        a = t.tail;
        for (var s = null; a !== null; )
          a.alternate !== null && (s = a), (a = a.sibling);
        s === null ? (t.tail = null) : (s.sibling = null);
        break;
      case "collapsed":
        s = t.tail;
        for (var c = null; s !== null; )
          s.alternate !== null && (c = s), (s = s.sibling);
        c === null
          ? a || t.tail === null
            ? (t.tail = null)
            : (t.tail.sibling = null)
          : (c.sibling = null);
    }
}
function Dt(t) {
  var a = t.alternate !== null && t.alternate.child === t.child,
    s = 0,
    c = 0;
  if (a)
    for (var u = t.child; u !== null; )
      (s |= u.lanes | u.childLanes),
        (c |= u.subtreeFlags & 14680064),
        (c |= u.flags & 14680064),
        (u.return = t),
        (u = u.sibling);
  else
    for (u = t.child; u !== null; )
      (s |= u.lanes | u.childLanes),
        (c |= u.subtreeFlags),
        (c |= u.flags),
        (u.return = t),
        (u = u.sibling);
  return (t.subtreeFlags |= c), (t.childLanes = s), a;
}
function Km(t, a, s) {
  var c = a.pendingProps;
  switch ((jc(a), a.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return Dt(a), null;
    case 1:
      return qt(a.type) && Hs(), Dt(a), null;
    case 3:
      return (
        (c = a.stateNode),
        Tn(),
        tt(Zt),
        tt(zt),
        Gc(),
        c.pendingContext &&
          ((c.context = c.pendingContext), (c.pendingContext = null)),
        (t === null || t.child === null) &&
          (ns(a)
            ? (a.flags |= 4)
            : t === null ||
              (t.memoizedState.isDehydrated && !(a.flags & 256)) ||
              ((a.flags |= 1024), Ei !== null && (ic(Ei), (Ei = null)))),
        $l(t, a),
        Dt(a),
        null
      );
    case 5:
      Wc(a);
      var u = Ba(Ir.current);
      if (((s = a.type), t !== null && a.stateNode != null))
        ef(t, a, s, c, u),
          t.ref !== a.ref && ((a.flags |= 512), (a.flags |= 2097152));
      else {
        if (!c) {
          if (a.stateNode === null) throw Error(pe(166));
          return Dt(a), null;
        }
        if (((t = Ba(ji.current)), ns(a))) {
          (c = a.stateNode), (s = a.type);
          var p = a.memoizedProps;
          switch (((c[Ri] = a), (c[Tr] = p), (t = (a.mode & 1) !== 0), s)) {
            case "dialog":
              et("cancel", c), et("close", c);
              break;
            case "iframe":
            case "object":
            case "embed":
              et("load", c);
              break;
            case "video":
            case "audio":
              for (u = 0; u < lr.length; u++) et(lr[u], c);
              break;
            case "source":
              et("error", c);
              break;
            case "img":
            case "image":
            case "link":
              et("error", c), et("load", c);
              break;
            case "details":
              et("toggle", c);
              break;
            case "input":
              Sh(c, p), et("invalid", c);
              break;
            case "select":
              (c._wrapperState = { wasMultiple: !!p.multiple }),
                et("invalid", c);
              break;
            case "textarea":
              Ah(c, p), et("invalid", c);
          }
          wl(s, p), (u = null);
          for (var b in p)
            if (p.hasOwnProperty(b)) {
              var S = p[b];
              b === "children"
                ? typeof S == "string"
                  ? c.textContent !== S &&
                    (p.suppressHydrationWarning !== !0 &&
                      as(c.textContent, S, t),
                    (u = ["children", S]))
                  : typeof S == "number" &&
                    c.textContent !== "" + S &&
                    (p.suppressHydrationWarning !== !0 &&
                      as(c.textContent, S, t),
                    (u = ["children", "" + S]))
                : wr.hasOwnProperty(b) &&
                  S != null &&
                  b === "onScroll" &&
                  et("scroll", c);
            }
          switch (s) {
            case "input":
              Kr(c), Ch(c, p, !0);
              break;
            case "textarea":
              Kr(c), Ph(c);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof p.onClick == "function" && (c.onclick = Bs);
          }
          (c = u), (a.updateQueue = c), c !== null && (a.flags |= 4);
        } else {
          (b = u.nodeType === 9 ? u : u.ownerDocument),
            t === "http://www.w3.org/1999/xhtml" && (t = Ed(s)),
            t === "http://www.w3.org/1999/xhtml"
              ? s === "script"
                ? ((t = b.createElement("div")),
                  (t.innerHTML = "<script></script>"),
                  (t = t.removeChild(t.firstChild)))
                : typeof c.is == "string"
                ? (t = b.createElement(s, { is: c.is }))
                : ((t = b.createElement(s)),
                  s === "select" &&
                    ((b = t),
                    c.multiple
                      ? (b.multiple = !0)
                      : c.size && (b.size = c.size)))
              : (t = b.createElementNS(t, s)),
            (t[Ri] = a),
            (t[Tr] = c),
            Qp(t, a, !1, !1),
            (a.stateNode = t);
          e: {
            switch (((b = kl(s, c)), s)) {
              case "dialog":
                et("cancel", t), et("close", t), (u = c);
                break;
              case "iframe":
              case "object":
              case "embed":
                et("load", t), (u = c);
                break;
              case "video":
              case "audio":
                for (u = 0; u < lr.length; u++) et(lr[u], t);
                u = c;
                break;
              case "source":
                et("error", t), (u = c);
                break;
              case "img":
              case "image":
              case "link":
                et("error", t), et("load", t), (u = c);
                break;
              case "details":
                et("toggle", t), (u = c);
                break;
              case "input":
                Sh(t, c), (u = ml(t, c)), et("invalid", t);
                break;
              case "option":
                u = c;
                break;
              case "select":
                (t._wrapperState = { wasMultiple: !!c.multiple }),
                  (u = lt({}, c, { value: void 0 })),
                  et("invalid", t);
                break;
              case "textarea":
                Ah(t, c), (u = yl(t, c)), et("invalid", t);
                break;
              default:
                u = c;
            }
            wl(s, u), (S = u);
            for (p in S)
              if (S.hasOwnProperty(p)) {
                var E = S[p];
                p === "style"
                  ? Td(t, E)
                  : p === "dangerouslySetInnerHTML"
                  ? ((E = E ? E.__html : void 0), E != null && Md(t, E))
                  : p === "children"
                  ? typeof E == "string"
                    ? (s !== "textarea" || E !== "") && kr(t, E)
                    : typeof E == "number" && kr(t, "" + E)
                  : p !== "suppressContentEditableWarning" &&
                    p !== "suppressHydrationWarning" &&
                    p !== "autoFocus" &&
                    (wr.hasOwnProperty(p)
                      ? E != null && p === "onScroll" && et("scroll", t)
                      : E != null && wc(t, p, E, b));
              }
            switch (s) {
              case "input":
                Kr(t), Ch(t, c, !1);
                break;
              case "textarea":
                Kr(t), Ph(t);
                break;
              case "option":
                c.value != null && t.setAttribute("value", "" + wa(c.value));
                break;
              case "select":
                (t.multiple = !!c.multiple),
                  (p = c.value),
                  p != null
                    ? yn(t, !!c.multiple, p, !1)
                    : c.defaultValue != null &&
                      yn(t, !!c.multiple, c.defaultValue, !0);
                break;
              default:
                typeof u.onClick == "function" && (t.onclick = Bs);
            }
            switch (s) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                c = !!c.autoFocus;
                break e;
              case "img":
                c = !0;
                break e;
              default:
                c = !1;
            }
          }
          c && (a.flags |= 4);
        }
        a.ref !== null && ((a.flags |= 512), (a.flags |= 2097152));
      }
      return Dt(a), null;
    case 6:
      if (t && a.stateNode != null) tf(t, a, t.memoizedProps, c);
      else {
        if (typeof c != "string" && a.stateNode === null) throw Error(pe(166));
        if (((s = Ba(Ir.current)), Ba(ji.current), ns(a))) {
          if (
            ((c = a.stateNode),
            (s = a.memoizedProps),
            (c[Ri] = a),
            (p = c.nodeValue !== s) && ((t = ai), t !== null))
          )
            switch (t.tag) {
              case 3:
                as(c.nodeValue, s, (t.mode & 1) !== 0);
                break;
              case 5:
                t.memoizedProps.suppressHydrationWarning !== !0 &&
                  as(c.nodeValue, s, (t.mode & 1) !== 0);
            }
          p && (a.flags |= 4);
        } else
          (c = (s.nodeType === 9 ? s : s.ownerDocument).createTextNode(c)),
            (c[Ri] = a),
            (a.stateNode = c);
      }
      return Dt(a), null;
    case 13:
      if (
        (tt(st),
        (c = a.memoizedState),
        t === null ||
          (t.memoizedState !== null && t.memoizedState.dehydrated !== null))
      ) {
        if (rt && ii !== null && a.mode & 1 && !(a.flags & 128))
          vp(), Mn(), (a.flags |= 98560), (p = !1);
        else if (((p = ns(a)), c !== null && c.dehydrated !== null)) {
          if (t === null) {
            if (!p) throw Error(pe(318));
            if (
              ((p = a.memoizedState),
              (p = p !== null ? p.dehydrated : null),
              !p)
            )
              throw Error(pe(317));
            p[Ri] = a;
          } else
            Mn(), !(a.flags & 128) && (a.memoizedState = null), (a.flags |= 4);
          Dt(a), (p = !1);
        } else Ei !== null && (ic(Ei), (Ei = null)), (p = !0);
        if (!p) return a.flags & 65536 ? a : null;
      }
      return a.flags & 128
        ? ((a.lanes = s), a)
        : ((c = c !== null),
          c !== (t !== null && t.memoizedState !== null) &&
            c &&
            ((a.child.flags |= 8192),
            a.mode & 1 &&
              (t === null || st.current & 1 ? bt === 0 && (bt = 3) : ah())),
          a.updateQueue !== null && (a.flags |= 4),
          Dt(a),
          null);
    case 4:
      return (
        Tn(), $l(t, a), t === null && Mr(a.stateNode.containerInfo), Dt(a), null
      );
    case 10:
      return Bc(a.type._context), Dt(a), null;
    case 17:
      return qt(a.type) && Hs(), Dt(a), null;
    case 19:
      if ((tt(st), (p = a.memoizedState), p === null)) return Dt(a), null;
      if (((c = (a.flags & 128) !== 0), (b = p.rendering), b === null))
        if (c) Kn(p, !1);
        else {
          if (bt !== 0 || (t !== null && t.flags & 128))
            for (t = a.child; t !== null; ) {
              if (((b = $s(t)), b !== null)) {
                for (
                  a.flags |= 128,
                    Kn(p, !1),
                    c = b.updateQueue,
                    c !== null && ((a.updateQueue = c), (a.flags |= 4)),
                    a.subtreeFlags = 0,
                    c = s,
                    s = a.child;
                  s !== null;

                )
                  (p = s),
                    (t = c),
                    (p.flags &= 14680066),
                    (b = p.alternate),
                    b === null
                      ? ((p.childLanes = 0),
                        (p.lanes = t),
                        (p.child = null),
                        (p.subtreeFlags = 0),
                        (p.memoizedProps = null),
                        (p.memoizedState = null),
                        (p.updateQueue = null),
                        (p.dependencies = null),
                        (p.stateNode = null))
                      : ((p.childLanes = b.childLanes),
                        (p.lanes = b.lanes),
                        (p.child = b.child),
                        (p.subtreeFlags = 0),
                        (p.deletions = null),
                        (p.memoizedProps = b.memoizedProps),
                        (p.memoizedState = b.memoizedState),
                        (p.updateQueue = b.updateQueue),
                        (p.type = b.type),
                        (t = b.dependencies),
                        (p.dependencies =
                          t === null
                            ? null
                            : {
                                lanes: t.lanes,
                                firstContext: t.firstContext,
                              })),
                    (s = s.sibling);
                return Je(st, (st.current & 1) | 2), a.child;
              }
              t = t.sibling;
            }
          p.tail !== null &&
            dt() > In &&
            ((a.flags |= 128), (c = !0), Kn(p, !1), (a.lanes = 4194304));
        }
      else {
        if (!c)
          if (((t = $s(b)), t !== null)) {
            if (
              ((a.flags |= 128),
              (c = !0),
              (s = t.updateQueue),
              s !== null && ((a.updateQueue = s), (a.flags |= 4)),
              Kn(p, !0),
              p.tail === null && p.tailMode === "hidden" && !b.alternate && !rt)
            )
              return Dt(a), null;
          } else
            2 * dt() - p.renderingStartTime > In &&
              s !== 1073741824 &&
              ((a.flags |= 128), (c = !0), Kn(p, !1), (a.lanes = 4194304));
        p.isBackwards
          ? ((b.sibling = a.child), (a.child = b))
          : ((s = p.last),
            s !== null ? (s.sibling = b) : (a.child = b),
            (p.last = b));
      }
      return p.tail !== null
        ? ((a = p.tail),
          (p.rendering = a),
          (p.tail = a.sibling),
          (p.renderingStartTime = dt()),
          (a.sibling = null),
          (s = st.current),
          Je(st, c ? (s & 1) | 2 : s & 1),
          a)
        : (Dt(a), null);
    case 22:
    case 23:
      return (
        ih(),
        (c = a.memoizedState !== null),
        t !== null && (t.memoizedState !== null) !== c && (a.flags |= 8192),
        c && a.mode & 1
          ? ti & 1073741824 && (Dt(a), a.subtreeFlags & 6 && (a.flags |= 8192))
          : Dt(a),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(pe(156, a.tag));
}
function Zm(t, a) {
  switch ((jc(a), a.tag)) {
    case 1:
      return (
        qt(a.type) && Hs(),
        (t = a.flags),
        t & 65536 ? ((a.flags = (t & -65537) | 128), a) : null
      );
    case 3:
      return (
        Tn(),
        tt(Zt),
        tt(zt),
        Gc(),
        (t = a.flags),
        t & 65536 && !(t & 128) ? ((a.flags = (t & -65537) | 128), a) : null
      );
    case 5:
      return Wc(a), null;
    case 13:
      if (
        (tt(st), (t = a.memoizedState), t !== null && t.dehydrated !== null)
      ) {
        if (a.alternate === null) throw Error(pe(340));
        Mn();
      }
      return (
        (t = a.flags), t & 65536 ? ((a.flags = (t & -65537) | 128), a) : null
      );
    case 19:
      return tt(st), null;
    case 4:
      return Tn(), null;
    case 10:
      return Bc(a.type._context), null;
    case 22:
    case 23:
      return ih(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var os = !1,
  jt = !1,
  qm = typeof WeakSet == "function" ? WeakSet : Set,
  ye = null;
function fn(t, a) {
  var s = t.ref;
  if (s !== null)
    if (typeof s == "function")
      try {
        s(null);
      } catch (c) {
        ct(t, a, c);
      }
    else s.current = null;
}
function Kl(t, a, s) {
  try {
    s();
  } catch (c) {
    ct(t, a, c);
  }
}
var gu = !1;
function Jm(t, a) {
  if (((_l = zs), (t = rp()), Rc(t))) {
    if ("selectionStart" in t)
      var s = { start: t.selectionStart, end: t.selectionEnd };
    else
      e: {
        s = ((s = t.ownerDocument) && s.defaultView) || window;
        var c = s.getSelection && s.getSelection();
        if (c && c.rangeCount !== 0) {
          s = c.anchorNode;
          var u = c.anchorOffset,
            p = c.focusNode;
          c = c.focusOffset;
          try {
            s.nodeType, p.nodeType;
          } catch {
            s = null;
            break e;
          }
          var b = 0,
            S = -1,
            E = -1,
            N = 0,
            F = 0,
            H = t,
            j = null;
          t: for (;;) {
            for (
              var V;
              H !== s || (u !== 0 && H.nodeType !== 3) || (S = b + u),
                H !== p || (c !== 0 && H.nodeType !== 3) || (E = b + c),
                H.nodeType === 3 && (b += H.nodeValue.length),
                (V = H.firstChild) !== null;

            )
              (j = H), (H = V);
            for (;;) {
              if (H === t) break t;
              if (
                (j === s && ++N === u && (S = b),
                j === p && ++F === c && (E = b),
                (V = H.nextSibling) !== null)
              )
                break;
              (H = j), (j = H.parentNode);
            }
            H = V;
          }
          s = S === -1 || E === -1 ? null : { start: S, end: E };
        } else s = null;
      }
    s = s || { start: 0, end: 0 };
  } else s = null;
  for (
    Il = { focusedElem: t, selectionRange: s }, zs = !1, ye = a;
    ye !== null;

  )
    if (((a = ye), (t = a.child), (a.subtreeFlags & 1028) !== 0 && t !== null))
      (t.return = a), (ye = t);
    else
      for (; ye !== null; ) {
        a = ye;
        try {
          var q = a.alternate;
          if (a.flags & 1024)
            switch (a.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (q !== null) {
                  var K = q.memoizedProps,
                    ae = q.memoizedState,
                    G = a.stateNode,
                    L = G.getSnapshotBeforeUpdate(
                      a.elementType === a.type ? K : Ai(a.type, K),
                      ae
                    );
                  G.__reactInternalSnapshotBeforeUpdate = L;
                }
                break;
              case 3:
                var R = a.stateNode.containerInfo;
                R.nodeType === 1
                  ? (R.textContent = "")
                  : R.nodeType === 9 &&
                    R.documentElement &&
                    R.removeChild(R.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(pe(163));
            }
        } catch (O) {
          ct(a, a.return, O);
        }
        if (((t = a.sibling), t !== null)) {
          (t.return = a.return), (ye = t);
          break;
        }
        ye = a.return;
      }
  return (q = gu), (gu = !1), q;
}
function mr(t, a, s) {
  var c = a.updateQueue;
  if (((c = c !== null ? c.lastEffect : null), c !== null)) {
    var u = (c = c.next);
    do {
      if ((u.tag & t) === t) {
        var p = u.destroy;
        (u.destroy = void 0), p !== void 0 && Kl(a, s, p);
      }
      u = u.next;
    } while (u !== c);
  }
}
function go(t, a) {
  if (
    ((a = a.updateQueue), (a = a !== null ? a.lastEffect : null), a !== null)
  ) {
    var s = (a = a.next);
    do {
      if ((s.tag & t) === t) {
        var c = s.create;
        s.destroy = c();
      }
      s = s.next;
    } while (s !== a);
  }
}
function Zl(t) {
  var a = t.ref;
  if (a !== null) {
    var s = t.stateNode;
    switch (t.tag) {
      case 5:
        t = s;
        break;
      default:
        t = s;
    }
    typeof a == "function" ? a(t) : (a.current = t);
  }
}
function af(t) {
  var a = t.alternate;
  a !== null && ((t.alternate = null), af(a)),
    (t.child = null),
    (t.deletions = null),
    (t.sibling = null),
    t.tag === 5 &&
      ((a = t.stateNode),
      a !== null &&
        (delete a[Ri], delete a[Tr], delete a[jl], delete a[Rm], delete a[Dm])),
    (t.stateNode = null),
    (t.return = null),
    (t.dependencies = null),
    (t.memoizedProps = null),
    (t.memoizedState = null),
    (t.pendingProps = null),
    (t.stateNode = null),
    (t.updateQueue = null);
}
function nf(t) {
  return t.tag === 5 || t.tag === 3 || t.tag === 4;
}
function mu(t) {
  e: for (;;) {
    for (; t.sibling === null; ) {
      if (t.return === null || nf(t.return)) return null;
      t = t.return;
    }
    for (
      t.sibling.return = t.return, t = t.sibling;
      t.tag !== 5 && t.tag !== 6 && t.tag !== 18;

    ) {
      if (t.flags & 2 || t.child === null || t.tag === 4) continue e;
      (t.child.return = t), (t = t.child);
    }
    if (!(t.flags & 2)) return t.stateNode;
  }
}
function ql(t, a, s) {
  var c = t.tag;
  if (c === 5 || c === 6)
    (t = t.stateNode),
      a
        ? s.nodeType === 8
          ? s.parentNode.insertBefore(t, a)
          : s.insertBefore(t, a)
        : (s.nodeType === 8
            ? ((a = s.parentNode), a.insertBefore(t, s))
            : ((a = s), a.appendChild(t)),
          (s = s._reactRootContainer),
          s != null || a.onclick !== null || (a.onclick = Bs));
  else if (c !== 4 && ((t = t.child), t !== null))
    for (ql(t, a, s), t = t.sibling; t !== null; ) ql(t, a, s), (t = t.sibling);
}
function Jl(t, a, s) {
  var c = t.tag;
  if (c === 5 || c === 6)
    (t = t.stateNode), a ? s.insertBefore(t, a) : s.appendChild(t);
  else if (c !== 4 && ((t = t.child), t !== null))
    for (Jl(t, a, s), t = t.sibling; t !== null; ) Jl(t, a, s), (t = t.sibling);
}
var Et = null,
  Pi = !1;
function na(t, a, s) {
  for (s = s.child; s !== null; ) rf(t, a, s), (s = s.sibling);
}
function rf(t, a, s) {
  if (Di && typeof Di.onCommitFiberUnmount == "function")
    try {
      Di.onCommitFiberUnmount(so, s);
    } catch {}
  switch (s.tag) {
    case 5:
      jt || fn(s, a);
    case 6:
      var c = Et,
        u = Pi;
      (Et = null),
        na(t, a, s),
        (Et = c),
        (Pi = u),
        Et !== null &&
          (Pi
            ? ((t = Et),
              (s = s.stateNode),
              t.nodeType === 8 ? t.parentNode.removeChild(s) : t.removeChild(s))
            : Et.removeChild(s.stateNode));
      break;
    case 18:
      Et !== null &&
        (Pi
          ? ((t = Et),
            (s = s.stateNode),
            t.nodeType === 8
              ? Go(t.parentNode, s)
              : t.nodeType === 1 && Go(t, s),
            Pr(t))
          : Go(Et, s.stateNode));
      break;
    case 4:
      (c = Et),
        (u = Pi),
        (Et = s.stateNode.containerInfo),
        (Pi = !0),
        na(t, a, s),
        (Et = c),
        (Pi = u);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !jt &&
        ((c = s.updateQueue), c !== null && ((c = c.lastEffect), c !== null))
      ) {
        u = c = c.next;
        do {
          var p = u,
            b = p.destroy;
          (p = p.tag),
            b !== void 0 && (p & 2 || p & 4) && Kl(s, a, b),
            (u = u.next);
        } while (u !== c);
      }
      na(t, a, s);
      break;
    case 1:
      if (
        !jt &&
        (fn(s, a),
        (c = s.stateNode),
        typeof c.componentWillUnmount == "function")
      )
        try {
          (c.props = s.memoizedProps),
            (c.state = s.memoizedState),
            c.componentWillUnmount();
        } catch (S) {
          ct(s, a, S);
        }
      na(t, a, s);
      break;
    case 21:
      na(t, a, s);
      break;
    case 22:
      s.mode & 1
        ? ((jt = (c = jt) || s.memoizedState !== null), na(t, a, s), (jt = c))
        : na(t, a, s);
      break;
    default:
      na(t, a, s);
  }
}
function xu(t) {
  var a = t.updateQueue;
  if (a !== null) {
    t.updateQueue = null;
    var s = t.stateNode;
    s === null && (s = t.stateNode = new qm()),
      a.forEach(function (c) {
        var u = ox.bind(null, t, c);
        s.has(c) || (s.add(c), c.then(u, u));
      });
  }
}
function Ci(t, a) {
  var s = a.deletions;
  if (s !== null)
    for (var c = 0; c < s.length; c++) {
      var u = s[c];
      try {
        var p = t,
          b = a,
          S = b;
        e: for (; S !== null; ) {
          switch (S.tag) {
            case 5:
              (Et = S.stateNode), (Pi = !1);
              break e;
            case 3:
              (Et = S.stateNode.containerInfo), (Pi = !0);
              break e;
            case 4:
              (Et = S.stateNode.containerInfo), (Pi = !0);
              break e;
          }
          S = S.return;
        }
        if (Et === null) throw Error(pe(160));
        rf(p, b, u), (Et = null), (Pi = !1);
        var E = u.alternate;
        E !== null && (E.return = null), (u.return = null);
      } catch (N) {
        ct(u, a, N);
      }
    }
  if (a.subtreeFlags & 12854)
    for (a = a.child; a !== null; ) sf(a, t), (a = a.sibling);
}
function sf(t, a) {
  var s = t.alternate,
    c = t.flags;
  switch (t.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((Ci(a, t), _i(t), c & 4)) {
        try {
          mr(3, t, t.return), go(3, t);
        } catch (K) {
          ct(t, t.return, K);
        }
        try {
          mr(5, t, t.return);
        } catch (K) {
          ct(t, t.return, K);
        }
      }
      break;
    case 1:
      Ci(a, t), _i(t), c & 512 && s !== null && fn(s, s.return);
      break;
    case 5:
      if (
        (Ci(a, t),
        _i(t),
        c & 512 && s !== null && fn(s, s.return),
        t.flags & 32)
      ) {
        var u = t.stateNode;
        try {
          kr(u, "");
        } catch (K) {
          ct(t, t.return, K);
        }
      }
      if (c & 4 && ((u = t.stateNode), u != null)) {
        var p = t.memoizedProps,
          b = s !== null ? s.memoizedProps : p,
          S = t.type,
          E = t.updateQueue;
        if (((t.updateQueue = null), E !== null))
          try {
            S === "input" && p.type === "radio" && p.name != null && Pd(u, p),
              kl(S, b);
            var N = kl(S, p);
            for (b = 0; b < E.length; b += 2) {
              var F = E[b],
                H = E[b + 1];
              F === "style"
                ? Td(u, H)
                : F === "dangerouslySetInnerHTML"
                ? Md(u, H)
                : F === "children"
                ? kr(u, H)
                : wc(u, F, H, N);
            }
            switch (S) {
              case "input":
                xl(u, p);
                break;
              case "textarea":
                Ld(u, p);
                break;
              case "select":
                var j = u._wrapperState.wasMultiple;
                u._wrapperState.wasMultiple = !!p.multiple;
                var V = p.value;
                V != null
                  ? yn(u, !!p.multiple, V, !1)
                  : j !== !!p.multiple &&
                    (p.defaultValue != null
                      ? yn(u, !!p.multiple, p.defaultValue, !0)
                      : yn(u, !!p.multiple, p.multiple ? [] : "", !1));
            }
            u[Tr] = p;
          } catch (K) {
            ct(t, t.return, K);
          }
      }
      break;
    case 6:
      if ((Ci(a, t), _i(t), c & 4)) {
        if (t.stateNode === null) throw Error(pe(162));
        (u = t.stateNode), (p = t.memoizedProps);
        try {
          u.nodeValue = p;
        } catch (K) {
          ct(t, t.return, K);
        }
      }
      break;
    case 3:
      if (
        (Ci(a, t), _i(t), c & 4 && s !== null && s.memoizedState.isDehydrated)
      )
        try {
          Pr(a.containerInfo);
        } catch (K) {
          ct(t, t.return, K);
        }
      break;
    case 4:
      Ci(a, t), _i(t);
      break;
    case 13:
      Ci(a, t),
        _i(t),
        (u = t.child),
        u.flags & 8192 &&
          ((p = u.memoizedState !== null),
          (u.stateNode.isHidden = p),
          !p ||
            (u.alternate !== null && u.alternate.memoizedState !== null) ||
            (eh = dt())),
        c & 4 && xu(t);
      break;
    case 22:
      if (
        ((F = s !== null && s.memoizedState !== null),
        t.mode & 1 ? ((jt = (N = jt) || F), Ci(a, t), (jt = N)) : Ci(a, t),
        _i(t),
        c & 8192)
      ) {
        if (
          ((N = t.memoizedState !== null),
          (t.stateNode.isHidden = N) && !F && t.mode & 1)
        )
          for (ye = t, F = t.child; F !== null; ) {
            for (H = ye = F; ye !== null; ) {
              switch (((j = ye), (V = j.child), j.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  mr(4, j, j.return);
                  break;
                case 1:
                  fn(j, j.return);
                  var q = j.stateNode;
                  if (typeof q.componentWillUnmount == "function") {
                    (c = j), (s = j.return);
                    try {
                      (a = c),
                        (q.props = a.memoizedProps),
                        (q.state = a.memoizedState),
                        q.componentWillUnmount();
                    } catch (K) {
                      ct(c, s, K);
                    }
                  }
                  break;
                case 5:
                  fn(j, j.return);
                  break;
                case 22:
                  if (j.memoizedState !== null) {
                    yu(H);
                    continue;
                  }
              }
              V !== null ? ((V.return = j), (ye = V)) : yu(H);
            }
            F = F.sibling;
          }
        e: for (F = null, H = t; ; ) {
          if (H.tag === 5) {
            if (F === null) {
              F = H;
              try {
                (u = H.stateNode),
                  N
                    ? ((p = u.style),
                      typeof p.setProperty == "function"
                        ? p.setProperty("display", "none", "important")
                        : (p.display = "none"))
                    : ((S = H.stateNode),
                      (E = H.memoizedProps.style),
                      (b =
                        E != null && E.hasOwnProperty("display")
                          ? E.display
                          : null),
                      (S.style.display = Nd("display", b)));
              } catch (K) {
                ct(t, t.return, K);
              }
            }
          } else if (H.tag === 6) {
            if (F === null)
              try {
                H.stateNode.nodeValue = N ? "" : H.memoizedProps;
              } catch (K) {
                ct(t, t.return, K);
              }
          } else if (
            ((H.tag !== 22 && H.tag !== 23) ||
              H.memoizedState === null ||
              H === t) &&
            H.child !== null
          ) {
            (H.child.return = H), (H = H.child);
            continue;
          }
          if (H === t) break e;
          for (; H.sibling === null; ) {
            if (H.return === null || H.return === t) break e;
            F === H && (F = null), (H = H.return);
          }
          F === H && (F = null), (H.sibling.return = H.return), (H = H.sibling);
        }
      }
      break;
    case 19:
      Ci(a, t), _i(t), c & 4 && xu(t);
      break;
    case 21:
      break;
    default:
      Ci(a, t), _i(t);
  }
}
function _i(t) {
  var a = t.flags;
  if (a & 2) {
    try {
      e: {
        for (var s = t.return; s !== null; ) {
          if (nf(s)) {
            var c = s;
            break e;
          }
          s = s.return;
        }
        throw Error(pe(160));
      }
      switch (c.tag) {
        case 5:
          var u = c.stateNode;
          c.flags & 32 && (kr(u, ""), (c.flags &= -33));
          var p = mu(t);
          Jl(t, p, u);
          break;
        case 3:
        case 4:
          var b = c.stateNode.containerInfo,
            S = mu(t);
          ql(t, S, b);
          break;
        default:
          throw Error(pe(161));
      }
    } catch (E) {
      ct(t, t.return, E);
    }
    t.flags &= -3;
  }
  a & 4096 && (t.flags &= -4097);
}
function Qm(t, a, s) {
  (ye = t), of(t);
}
function of(t, a, s) {
  for (var c = (t.mode & 1) !== 0; ye !== null; ) {
    var u = ye,
      p = u.child;
    if (u.tag === 22 && c) {
      var b = u.memoizedState !== null || os;
      if (!b) {
        var S = u.alternate,
          E = (S !== null && S.memoizedState !== null) || jt;
        S = os;
        var N = jt;
        if (((os = b), (jt = E) && !N))
          for (ye = u; ye !== null; )
            (b = ye),
              (E = b.child),
              b.tag === 22 && b.memoizedState !== null
                ? bu(u)
                : E !== null
                ? ((E.return = b), (ye = E))
                : bu(u);
        for (; p !== null; ) (ye = p), of(p), (p = p.sibling);
        (ye = u), (os = S), (jt = N);
      }
      vu(t);
    } else
      u.subtreeFlags & 8772 && p !== null ? ((p.return = u), (ye = p)) : vu(t);
  }
}
function vu(t) {
  for (; ye !== null; ) {
    var a = ye;
    if (a.flags & 8772) {
      var s = a.alternate;
      try {
        if (a.flags & 8772)
          switch (a.tag) {
            case 0:
            case 11:
            case 15:
              jt || go(5, a);
              break;
            case 1:
              var c = a.stateNode;
              if (a.flags & 4 && !jt)
                if (s === null) c.componentDidMount();
                else {
                  var u =
                    a.elementType === a.type
                      ? s.memoizedProps
                      : Ai(a.type, s.memoizedProps);
                  c.componentDidUpdate(
                    u,
                    s.memoizedState,
                    c.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var p = a.updateQueue;
              p !== null && tu(a, p, c);
              break;
            case 3:
              var b = a.updateQueue;
              if (b !== null) {
                if (((s = null), a.child !== null))
                  switch (a.child.tag) {
                    case 5:
                      s = a.child.stateNode;
                      break;
                    case 1:
                      s = a.child.stateNode;
                  }
                tu(a, b, s);
              }
              break;
            case 5:
              var S = a.stateNode;
              if (s === null && a.flags & 4) {
                s = S;
                var E = a.memoizedProps;
                switch (a.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    E.autoFocus && s.focus();
                    break;
                  case "img":
                    E.src && (s.src = E.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (a.memoizedState === null) {
                var N = a.alternate;
                if (N !== null) {
                  var F = N.memoizedState;
                  if (F !== null) {
                    var H = F.dehydrated;
                    H !== null && Pr(H);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(pe(163));
          }
        jt || (a.flags & 512 && Zl(a));
      } catch (j) {
        ct(a, a.return, j);
      }
    }
    if (a === t) {
      ye = null;
      break;
    }
    if (((s = a.sibling), s !== null)) {
      (s.return = a.return), (ye = s);
      break;
    }
    ye = a.return;
  }
}
function yu(t) {
  for (; ye !== null; ) {
    var a = ye;
    if (a === t) {
      ye = null;
      break;
    }
    var s = a.sibling;
    if (s !== null) {
      (s.return = a.return), (ye = s);
      break;
    }
    ye = a.return;
  }
}
function bu(t) {
  for (; ye !== null; ) {
    var a = ye;
    try {
      switch (a.tag) {
        case 0:
        case 11:
        case 15:
          var s = a.return;
          try {
            go(4, a);
          } catch (E) {
            ct(a, s, E);
          }
          break;
        case 1:
          var c = a.stateNode;
          if (typeof c.componentDidMount == "function") {
            var u = a.return;
            try {
              c.componentDidMount();
            } catch (E) {
              ct(a, u, E);
            }
          }
          var p = a.return;
          try {
            Zl(a);
          } catch (E) {
            ct(a, p, E);
          }
          break;
        case 5:
          var b = a.return;
          try {
            Zl(a);
          } catch (E) {
            ct(a, b, E);
          }
      }
    } catch (E) {
      ct(a, a.return, E);
    }
    if (a === t) {
      ye = null;
      break;
    }
    var S = a.sibling;
    if (S !== null) {
      (S.return = a.return), (ye = S);
      break;
    }
    ye = a.return;
  }
}
var ex = Math.ceil,
  qs = ea.ReactCurrentDispatcher,
  Jc = ea.ReactCurrentOwner,
  mi = ea.ReactCurrentBatchConfig,
  We = 0,
  Ct = null,
  gt = null,
  Mt = 0,
  ti = 0,
  gn = Ca(0),
  bt = 0,
  zr = null,
  $a = 0,
  mo = 0,
  Qc = 0,
  xr = null,
  $t = null,
  eh = 0,
  In = 1 / 0,
  Wi = null,
  Js = !1,
  Ql = null,
  va = null,
  ls = !1,
  ua = null,
  Qs = 0,
  vr = 0,
  ec = null,
  As = -1,
  Ps = 0;
function Ht() {
  return We & 6 ? dt() : As !== -1 ? As : (As = dt());
}
function ya(t) {
  return t.mode & 1
    ? We & 2 && Mt !== 0
      ? Mt & -Mt
      : zm.transition !== null
      ? (Ps === 0 && (Ps = Yd()), Ps)
      : ((t = $e),
        t !== 0 || ((t = window.event), (t = t === void 0 ? 16 : Zd(t.type))),
        t)
    : 1;
}
function Ni(t, a, s, c) {
  if (50 < vr) throw ((vr = 0), (ec = null), Error(pe(185)));
  Hr(t, s, c),
    (!(We & 2) || t !== Ct) &&
      (t === Ct && (!(We & 2) && (mo |= s), bt === 4 && la(t, Mt)),
      Jt(t, c),
      s === 1 && We === 0 && !(a.mode & 1) && ((In = dt() + 500), uo && Aa()));
}
function Jt(t, a) {
  var s = t.callbackNode;
  zg(t, a);
  var c = js(t, t === Ct ? Mt : 0);
  if (c === 0)
    s !== null && Mh(s), (t.callbackNode = null), (t.callbackPriority = 0);
  else if (((a = c & -c), t.callbackPriority !== a)) {
    if ((s != null && Mh(s), a === 1))
      t.tag === 0 ? jm(wu.bind(null, t)) : gp(wu.bind(null, t)),
        _m(function () {
          !(We & 6) && Aa();
        }),
        (s = null);
    else {
      switch (Wd(c)) {
        case 1:
          s = Pc;
          break;
        case 4:
          s = Hd;
          break;
        case 16:
          s = Ds;
          break;
        case 536870912:
          s = Xd;
          break;
        default:
          s = Ds;
      }
      s = gf(s, lf.bind(null, t));
    }
    (t.callbackPriority = a), (t.callbackNode = s);
  }
}
function lf(t, a) {
  if (((As = -1), (Ps = 0), We & 6)) throw Error(pe(327));
  var s = t.callbackNode;
  if (Cn() && t.callbackNode !== s) return null;
  var c = js(t, t === Ct ? Mt : 0);
  if (c === 0) return null;
  if (c & 30 || c & t.expiredLanes || a) a = eo(t, c);
  else {
    a = c;
    var u = We;
    We |= 2;
    var p = hf();
    (Ct !== t || Mt !== a) && ((Wi = null), (In = dt() + 500), Ya(t, a));
    do
      try {
        ax();
        break;
      } catch (S) {
        cf(t, S);
      }
    while (1);
    Fc(),
      (qs.current = p),
      (We = u),
      gt !== null ? (a = 0) : ((Ct = null), (Mt = 0), (a = bt));
  }
  if (a !== 0) {
    if (
      (a === 2 && ((u = Ll(t)), u !== 0 && ((c = u), (a = tc(t, u)))), a === 1)
    )
      throw ((s = zr), Ya(t, 0), la(t, c), Jt(t, dt()), s);
    if (a === 6) la(t, c);
    else {
      if (
        ((u = t.current.alternate),
        !(c & 30) &&
          !tx(u) &&
          ((a = eo(t, c)),
          a === 2 && ((p = Ll(t)), p !== 0 && ((c = p), (a = tc(t, p)))),
          a === 1))
      )
        throw ((s = zr), Ya(t, 0), la(t, c), Jt(t, dt()), s);
      switch (((t.finishedWork = u), (t.finishedLanes = c), a)) {
        case 0:
        case 1:
          throw Error(pe(345));
        case 2:
          ja(t, $t, Wi);
          break;
        case 3:
          if (
            (la(t, c), (c & 130023424) === c && ((a = eh + 500 - dt()), 10 < a))
          ) {
            if (js(t, 0) !== 0) break;
            if (((u = t.suspendedLanes), (u & c) !== c)) {
              Ht(), (t.pingedLanes |= t.suspendedLanes & u);
              break;
            }
            t.timeoutHandle = Dl(ja.bind(null, t, $t, Wi), a);
            break;
          }
          ja(t, $t, Wi);
          break;
        case 4:
          if ((la(t, c), (c & 4194240) === c)) break;
          for (a = t.eventTimes, u = -1; 0 < c; ) {
            var b = 31 - Mi(c);
            (p = 1 << b), (b = a[b]), b > u && (u = b), (c &= ~p);
          }
          if (
            ((c = u),
            (c = dt() - c),
            (c =
              (120 > c
                ? 120
                : 480 > c
                ? 480
                : 1080 > c
                ? 1080
                : 1920 > c
                ? 1920
                : 3e3 > c
                ? 3e3
                : 4320 > c
                ? 4320
                : 1960 * ex(c / 1960)) - c),
            10 < c)
          ) {
            t.timeoutHandle = Dl(ja.bind(null, t, $t, Wi), c);
            break;
          }
          ja(t, $t, Wi);
          break;
        case 5:
          ja(t, $t, Wi);
          break;
        default:
          throw Error(pe(329));
      }
    }
  }
  return Jt(t, dt()), t.callbackNode === s ? lf.bind(null, t) : null;
}
function tc(t, a) {
  var s = xr;
  return (
    t.current.memoizedState.isDehydrated && (Ya(t, a).flags |= 256),
    (t = eo(t, a)),
    t !== 2 && ((a = $t), ($t = s), a !== null && ic(a)),
    t
  );
}
function ic(t) {
  $t === null ? ($t = t) : $t.push.apply($t, t);
}
function tx(t) {
  for (var a = t; ; ) {
    if (a.flags & 16384) {
      var s = a.updateQueue;
      if (s !== null && ((s = s.stores), s !== null))
        for (var c = 0; c < s.length; c++) {
          var u = s[c],
            p = u.getSnapshot;
          u = u.value;
          try {
            if (!Ti(p(), u)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((s = a.child), a.subtreeFlags & 16384 && s !== null))
      (s.return = a), (a = s);
    else {
      if (a === t) break;
      for (; a.sibling === null; ) {
        if (a.return === null || a.return === t) return !0;
        a = a.return;
      }
      (a.sibling.return = a.return), (a = a.sibling);
    }
  }
  return !0;
}
function la(t, a) {
  for (
    a &= ~Qc,
      a &= ~mo,
      t.suspendedLanes |= a,
      t.pingedLanes &= ~a,
      t = t.expirationTimes;
    0 < a;

  ) {
    var s = 31 - Mi(a),
      c = 1 << s;
    (t[s] = -1), (a &= ~c);
  }
}
function wu(t) {
  if (We & 6) throw Error(pe(327));
  Cn();
  var a = js(t, 0);
  if (!(a & 1)) return Jt(t, dt()), null;
  var s = eo(t, a);
  if (t.tag !== 0 && s === 2) {
    var c = Ll(t);
    c !== 0 && ((a = c), (s = tc(t, c)));
  }
  if (s === 1) throw ((s = zr), Ya(t, 0), la(t, a), Jt(t, dt()), s);
  if (s === 6) throw Error(pe(345));
  return (
    (t.finishedWork = t.current.alternate),
    (t.finishedLanes = a),
    ja(t, $t, Wi),
    Jt(t, dt()),
    null
  );
}
function th(t, a) {
  var s = We;
  We |= 1;
  try {
    return t(a);
  } finally {
    (We = s), We === 0 && ((In = dt() + 500), uo && Aa());
  }
}
function Ka(t) {
  ua !== null && ua.tag === 0 && !(We & 6) && Cn();
  var a = We;
  We |= 1;
  var s = mi.transition,
    c = $e;
  try {
    if (((mi.transition = null), ($e = 1), t)) return t();
  } finally {
    ($e = c), (mi.transition = s), (We = a), !(We & 6) && Aa();
  }
}
function ih() {
  (ti = gn.current), tt(gn);
}
function Ya(t, a) {
  (t.finishedWork = null), (t.finishedLanes = 0);
  var s = t.timeoutHandle;
  if ((s !== -1 && ((t.timeoutHandle = -1), Tm(s)), gt !== null))
    for (s = gt.return; s !== null; ) {
      var c = s;
      switch ((jc(c), c.tag)) {
        case 1:
          (c = c.type.childContextTypes), c != null && Hs();
          break;
        case 3:
          Tn(), tt(Zt), tt(zt), Gc();
          break;
        case 5:
          Wc(c);
          break;
        case 4:
          Tn();
          break;
        case 13:
          tt(st);
          break;
        case 19:
          tt(st);
          break;
        case 10:
          Bc(c.type._context);
          break;
        case 22:
        case 23:
          ih();
      }
      s = s.return;
    }
  if (
    ((Ct = t),
    (gt = t = ba(t.current, null)),
    (Mt = ti = a),
    (bt = 0),
    (zr = null),
    (Qc = mo = $a = 0),
    ($t = xr = null),
    Fa !== null)
  ) {
    for (a = 0; a < Fa.length; a++)
      if (((s = Fa[a]), (c = s.interleaved), c !== null)) {
        s.interleaved = null;
        var u = c.next,
          p = s.pending;
        if (p !== null) {
          var b = p.next;
          (p.next = u), (c.next = b);
        }
        s.pending = c;
      }
    Fa = null;
  }
  return t;
}
function cf(t, a) {
  do {
    var s = gt;
    try {
      if ((Fc(), (ks.current = Zs), Ks)) {
        for (var c = ot.memoizedState; c !== null; ) {
          var u = c.queue;
          u !== null && (u.pending = null), (c = c.next);
        }
        Ks = !1;
      }
      if (
        ((Ua = 0),
        (St = vt = ot = null),
        (gr = !1),
        (Rr = 0),
        (Jc.current = null),
        s === null || s.return === null)
      ) {
        (bt = 1), (zr = a), (gt = null);
        break;
      }
      e: {
        var p = t,
          b = s.return,
          S = s,
          E = a;
        if (
          ((a = Mt),
          (S.flags |= 32768),
          E !== null && typeof E == "object" && typeof E.then == "function")
        ) {
          var N = E,
            F = S,
            H = F.tag;
          if (!(F.mode & 1) && (H === 0 || H === 11 || H === 15)) {
            var j = F.alternate;
            j
              ? ((F.updateQueue = j.updateQueue),
                (F.memoizedState = j.memoizedState),
                (F.lanes = j.lanes))
              : ((F.updateQueue = null), (F.memoizedState = null));
          }
          var V = lu(b);
          if (V !== null) {
            (V.flags &= -257),
              cu(V, b, S, p, a),
              V.mode & 1 && ou(p, N, a),
              (a = V),
              (E = N);
            var q = a.updateQueue;
            if (q === null) {
              var K = new Set();
              K.add(E), (a.updateQueue = K);
            } else q.add(E);
            break e;
          } else {
            if (!(a & 1)) {
              ou(p, N, a), ah();
              break e;
            }
            E = Error(pe(426));
          }
        } else if (rt && S.mode & 1) {
          var ae = lu(b);
          if (ae !== null) {
            !(ae.flags & 65536) && (ae.flags |= 256),
              cu(ae, b, S, p, a),
              zc(_n(E, S));
            break e;
          }
        }
        (p = E = _n(E, S)),
          bt !== 4 && (bt = 2),
          xr === null ? (xr = [p]) : xr.push(p),
          (p = b);
        do {
          switch (p.tag) {
            case 3:
              (p.flags |= 65536), (a &= -a), (p.lanes |= a);
              var G = Gp(p, E, a);
              eu(p, G);
              break e;
            case 1:
              S = E;
              var L = p.type,
                R = p.stateNode;
              if (
                !(p.flags & 128) &&
                (typeof L.getDerivedStateFromError == "function" ||
                  (R !== null &&
                    typeof R.componentDidCatch == "function" &&
                    (va === null || !va.has(R))))
              ) {
                (p.flags |= 65536), (a &= -a), (p.lanes |= a);
                var O = Vp(p, S, a);
                eu(p, O);
                break e;
              }
          }
          p = p.return;
        } while (p !== null);
      }
      df(s);
    } catch (X) {
      (a = X), gt === s && s !== null && (gt = s = s.return);
      continue;
    }
    break;
  } while (1);
}
function hf() {
  var t = qs.current;
  return (qs.current = Zs), t === null ? Zs : t;
}
function ah() {
  (bt === 0 || bt === 3 || bt === 2) && (bt = 4),
    Ct === null || (!($a & 268435455) && !(mo & 268435455)) || la(Ct, Mt);
}
function eo(t, a) {
  var s = We;
  We |= 2;
  var c = hf();
  (Ct !== t || Mt !== a) && ((Wi = null), Ya(t, a));
  do
    try {
      ix();
      break;
    } catch (u) {
      cf(t, u);
    }
  while (1);
  if ((Fc(), (We = s), (qs.current = c), gt !== null)) throw Error(pe(261));
  return (Ct = null), (Mt = 0), bt;
}
function ix() {
  for (; gt !== null; ) uf(gt);
}
function ax() {
  for (; gt !== null && !Eg(); ) uf(gt);
}
function uf(t) {
  var a = ff(t.alternate, t, ti);
  (t.memoizedProps = t.pendingProps),
    a === null ? df(t) : (gt = a),
    (Jc.current = null);
}
function df(t) {
  var a = t;
  do {
    var s = a.alternate;
    if (((t = a.return), a.flags & 32768)) {
      if (((s = Zm(s, a)), s !== null)) {
        (s.flags &= 32767), (gt = s);
        return;
      }
      if (t !== null)
        (t.flags |= 32768), (t.subtreeFlags = 0), (t.deletions = null);
      else {
        (bt = 6), (gt = null);
        return;
      }
    } else if (((s = Km(s, a, ti)), s !== null)) {
      gt = s;
      return;
    }
    if (((a = a.sibling), a !== null)) {
      gt = a;
      return;
    }
    gt = a = t;
  } while (a !== null);
  bt === 0 && (bt = 5);
}
function ja(t, a, s) {
  var c = $e,
    u = mi.transition;
  try {
    (mi.transition = null), ($e = 1), nx(t, a, s, c);
  } finally {
    (mi.transition = u), ($e = c);
  }
  return null;
}
function nx(t, a, s, c) {
  do Cn();
  while (ua !== null);
  if (We & 6) throw Error(pe(327));
  s = t.finishedWork;
  var u = t.finishedLanes;
  if (s === null) return null;
  if (((t.finishedWork = null), (t.finishedLanes = 0), s === t.current))
    throw Error(pe(177));
  (t.callbackNode = null), (t.callbackPriority = 0);
  var p = s.lanes | s.childLanes;
  if (
    (Og(t, p),
    t === Ct && ((gt = Ct = null), (Mt = 0)),
    (!(s.subtreeFlags & 2064) && !(s.flags & 2064)) ||
      ls ||
      ((ls = !0),
      gf(Ds, function () {
        return Cn(), null;
      })),
    (p = (s.flags & 15990) !== 0),
    s.subtreeFlags & 15990 || p)
  ) {
    (p = mi.transition), (mi.transition = null);
    var b = $e;
    $e = 1;
    var S = We;
    (We |= 4),
      (Jc.current = null),
      Jm(t, s),
      sf(s, t),
      Cm(Il),
      (zs = !!_l),
      (Il = _l = null),
      (t.current = s),
      Qm(s),
      Mg(),
      (We = S),
      ($e = b),
      (mi.transition = p);
  } else t.current = s;
  if (
    (ls && ((ls = !1), (ua = t), (Qs = u)),
    (p = t.pendingLanes),
    p === 0 && (va = null),
    _g(s.stateNode),
    Jt(t, dt()),
    a !== null)
  )
    for (c = t.onRecoverableError, s = 0; s < a.length; s++)
      (u = a[s]), c(u.value, { componentStack: u.stack, digest: u.digest });
  if (Js) throw ((Js = !1), (t = Ql), (Ql = null), t);
  return (
    Qs & 1 && t.tag !== 0 && Cn(),
    (p = t.pendingLanes),
    p & 1 ? (t === ec ? vr++ : ((vr = 0), (ec = t))) : (vr = 0),
    Aa(),
    null
  );
}
function Cn() {
  if (ua !== null) {
    var t = Wd(Qs),
      a = mi.transition,
      s = $e;
    try {
      if (((mi.transition = null), ($e = 16 > t ? 16 : t), ua === null))
        var c = !1;
      else {
        if (((t = ua), (ua = null), (Qs = 0), We & 6)) throw Error(pe(331));
        var u = We;
        for (We |= 4, ye = t.current; ye !== null; ) {
          var p = ye,
            b = p.child;
          if (ye.flags & 16) {
            var S = p.deletions;
            if (S !== null) {
              for (var E = 0; E < S.length; E++) {
                var N = S[E];
                for (ye = N; ye !== null; ) {
                  var F = ye;
                  switch (F.tag) {
                    case 0:
                    case 11:
                    case 15:
                      mr(8, F, p);
                  }
                  var H = F.child;
                  if (H !== null) (H.return = F), (ye = H);
                  else
                    for (; ye !== null; ) {
                      F = ye;
                      var j = F.sibling,
                        V = F.return;
                      if ((af(F), F === N)) {
                        ye = null;
                        break;
                      }
                      if (j !== null) {
                        (j.return = V), (ye = j);
                        break;
                      }
                      ye = V;
                    }
                }
              }
              var q = p.alternate;
              if (q !== null) {
                var K = q.child;
                if (K !== null) {
                  q.child = null;
                  do {
                    var ae = K.sibling;
                    (K.sibling = null), (K = ae);
                  } while (K !== null);
                }
              }
              ye = p;
            }
          }
          if (p.subtreeFlags & 2064 && b !== null) (b.return = p), (ye = b);
          else
            e: for (; ye !== null; ) {
              if (((p = ye), p.flags & 2048))
                switch (p.tag) {
                  case 0:
                  case 11:
                  case 15:
                    mr(9, p, p.return);
                }
              var G = p.sibling;
              if (G !== null) {
                (G.return = p.return), (ye = G);
                break e;
              }
              ye = p.return;
            }
        }
        var L = t.current;
        for (ye = L; ye !== null; ) {
          b = ye;
          var R = b.child;
          if (b.subtreeFlags & 2064 && R !== null) (R.return = b), (ye = R);
          else
            e: for (b = L; ye !== null; ) {
              if (((S = ye), S.flags & 2048))
                try {
                  switch (S.tag) {
                    case 0:
                    case 11:
                    case 15:
                      go(9, S);
                  }
                } catch (X) {
                  ct(S, S.return, X);
                }
              if (S === b) {
                ye = null;
                break e;
              }
              var O = S.sibling;
              if (O !== null) {
                (O.return = S.return), (ye = O);
                break e;
              }
              ye = S.return;
            }
        }
        if (
          ((We = u), Aa(), Di && typeof Di.onPostCommitFiberRoot == "function")
        )
          try {
            Di.onPostCommitFiberRoot(so, t);
          } catch {}
        c = !0;
      }
      return c;
    } finally {
      ($e = s), (mi.transition = a);
    }
  }
  return !1;
}
function ku(t, a, s) {
  (a = _n(s, a)),
    (a = Gp(t, a, 1)),
    (t = xa(t, a, 1)),
    (a = Ht()),
    t !== null && (Hr(t, 1, a), Jt(t, a));
}
function ct(t, a, s) {
  if (t.tag === 3) ku(t, t, s);
  else
    for (; a !== null; ) {
      if (a.tag === 3) {
        ku(a, t, s);
        break;
      } else if (a.tag === 1) {
        var c = a.stateNode;
        if (
          typeof a.type.getDerivedStateFromError == "function" ||
          (typeof c.componentDidCatch == "function" &&
            (va === null || !va.has(c)))
        ) {
          (t = _n(s, t)),
            (t = Vp(a, t, 1)),
            (a = xa(a, t, 1)),
            (t = Ht()),
            a !== null && (Hr(a, 1, t), Jt(a, t));
          break;
        }
      }
      a = a.return;
    }
}
function rx(t, a, s) {
  var c = t.pingCache;
  c !== null && c.delete(a),
    (a = Ht()),
    (t.pingedLanes |= t.suspendedLanes & s),
    Ct === t &&
      (Mt & s) === s &&
      (bt === 4 || (bt === 3 && (Mt & 130023424) === Mt && 500 > dt() - eh)
        ? Ya(t, 0)
        : (Qc |= s)),
    Jt(t, a);
}
function pf(t, a) {
  a === 0 &&
    (t.mode & 1
      ? ((a = Jr), (Jr <<= 1), !(Jr & 130023424) && (Jr = 4194304))
      : (a = 1));
  var s = Ht();
  (t = Ji(t, a)), t !== null && (Hr(t, a, s), Jt(t, s));
}
function sx(t) {
  var a = t.memoizedState,
    s = 0;
  a !== null && (s = a.retryLane), pf(t, s);
}
function ox(t, a) {
  var s = 0;
  switch (t.tag) {
    case 13:
      var c = t.stateNode,
        u = t.memoizedState;
      u !== null && (s = u.retryLane);
      break;
    case 19:
      c = t.stateNode;
      break;
    default:
      throw Error(pe(314));
  }
  c !== null && c.delete(a), pf(t, s);
}
var ff;
ff = function (t, a, s) {
  if (t !== null)
    if (t.memoizedProps !== a.pendingProps || Zt.current) Kt = !0;
    else {
      if (!(t.lanes & s) && !(a.flags & 128)) return (Kt = !1), $m(t, a, s);
      Kt = !!(t.flags & 131072);
    }
  else (Kt = !1), rt && a.flags & 1048576 && mp(a, Ws, a.index);
  switch (((a.lanes = 0), a.tag)) {
    case 2:
      var c = a.type;
      Cs(t, a), (t = a.pendingProps);
      var u = En(a, zt.current);
      Sn(a, s), (u = Uc(null, a, c, t, u, s));
      var p = $c();
      return (
        (a.flags |= 1),
        typeof u == "object" &&
        u !== null &&
        typeof u.render == "function" &&
        u.$$typeof === void 0
          ? ((a.tag = 1),
            (a.memoizedState = null),
            (a.updateQueue = null),
            qt(c) ? ((p = !0), Xs(a)) : (p = !1),
            (a.memoizedState =
              u.state !== null && u.state !== void 0 ? u.state : null),
            Xc(a),
            (u.updater = po),
            (a.stateNode = u),
            (u._reactInternals = a),
            Xl(a, c, t, s),
            (a = Gl(null, a, c, !0, p, s)))
          : ((a.tag = 0), rt && p && Dc(a), Bt(null, a, u, s), (a = a.child)),
        a
      );
    case 16:
      c = a.elementType;
      e: {
        switch (
          (Cs(t, a),
          (t = a.pendingProps),
          (u = c._init),
          (c = u(c._payload)),
          (a.type = c),
          (u = a.tag = cx(c)),
          (t = Ai(c, t)),
          u)
        ) {
          case 0:
            a = Wl(null, a, c, t, s);
            break e;
          case 1:
            a = du(null, a, c, t, s);
            break e;
          case 11:
            a = hu(null, a, c, t, s);
            break e;
          case 14:
            a = uu(null, a, c, Ai(c.type, t), s);
            break e;
        }
        throw Error(pe(306, c, ""));
      }
      return a;
    case 0:
      return (
        (c = a.type),
        (u = a.pendingProps),
        (u = a.elementType === c ? u : Ai(c, u)),
        Wl(t, a, c, u, s)
      );
    case 1:
      return (
        (c = a.type),
        (u = a.pendingProps),
        (u = a.elementType === c ? u : Ai(c, u)),
        du(t, a, c, u, s)
      );
    case 3:
      e: {
        if ((Zp(a), t === null)) throw Error(pe(387));
        (c = a.pendingProps),
          (p = a.memoizedState),
          (u = p.element),
          bp(t, a),
          Us(a, c, null, s);
        var b = a.memoizedState;
        if (((c = b.element), p.isDehydrated))
          if (
            ((p = {
              element: c,
              isDehydrated: !1,
              cache: b.cache,
              pendingSuspenseBoundaries: b.pendingSuspenseBoundaries,
              transitions: b.transitions,
            }),
            (a.updateQueue.baseState = p),
            (a.memoizedState = p),
            a.flags & 256)
          ) {
            (u = _n(Error(pe(423)), a)), (a = pu(t, a, c, s, u));
            break e;
          } else if (c !== u) {
            (u = _n(Error(pe(424)), a)), (a = pu(t, a, c, s, u));
            break e;
          } else
            for (
              ii = ma(a.stateNode.containerInfo.firstChild),
                ai = a,
                rt = !0,
                Ei = null,
                s = Cp(a, null, c, s),
                a.child = s;
              s;

            )
              (s.flags = (s.flags & -3) | 4096), (s = s.sibling);
        else {
          if ((Mn(), c === u)) {
            a = Qi(t, a, s);
            break e;
          }
          Bt(t, a, c, s);
        }
        a = a.child;
      }
      return a;
    case 5:
      return (
        Ap(a),
        t === null && Fl(a),
        (c = a.type),
        (u = a.pendingProps),
        (p = t !== null ? t.memoizedProps : null),
        (b = u.children),
        Rl(c, u) ? (b = null) : p !== null && Rl(c, p) && (a.flags |= 32),
        Kp(t, a),
        Bt(t, a, b, s),
        a.child
      );
    case 6:
      return t === null && Fl(a), null;
    case 13:
      return qp(t, a, s);
    case 4:
      return (
        Yc(a, a.stateNode.containerInfo),
        (c = a.pendingProps),
        t === null ? (a.child = Nn(a, null, c, s)) : Bt(t, a, c, s),
        a.child
      );
    case 11:
      return (
        (c = a.type),
        (u = a.pendingProps),
        (u = a.elementType === c ? u : Ai(c, u)),
        hu(t, a, c, u, s)
      );
    case 7:
      return Bt(t, a, a.pendingProps, s), a.child;
    case 8:
      return Bt(t, a, a.pendingProps.children, s), a.child;
    case 12:
      return Bt(t, a, a.pendingProps.children, s), a.child;
    case 10:
      e: {
        if (
          ((c = a.type._context),
          (u = a.pendingProps),
          (p = a.memoizedProps),
          (b = u.value),
          Je(Gs, c._currentValue),
          (c._currentValue = b),
          p !== null)
        )
          if (Ti(p.value, b)) {
            if (p.children === u.children && !Zt.current) {
              a = Qi(t, a, s);
              break e;
            }
          } else
            for (p = a.child, p !== null && (p.return = a); p !== null; ) {
              var S = p.dependencies;
              if (S !== null) {
                b = p.child;
                for (var E = S.firstContext; E !== null; ) {
                  if (E.context === c) {
                    if (p.tag === 1) {
                      (E = $i(-1, s & -s)), (E.tag = 2);
                      var N = p.updateQueue;
                      if (N !== null) {
                        N = N.shared;
                        var F = N.pending;
                        F === null
                          ? (E.next = E)
                          : ((E.next = F.next), (F.next = E)),
                          (N.pending = E);
                      }
                    }
                    (p.lanes |= s),
                      (E = p.alternate),
                      E !== null && (E.lanes |= s),
                      Bl(p.return, s, a),
                      (S.lanes |= s);
                    break;
                  }
                  E = E.next;
                }
              } else if (p.tag === 10) b = p.type === a.type ? null : p.child;
              else if (p.tag === 18) {
                if (((b = p.return), b === null)) throw Error(pe(341));
                (b.lanes |= s),
                  (S = b.alternate),
                  S !== null && (S.lanes |= s),
                  Bl(b, s, a),
                  (b = p.sibling);
              } else b = p.child;
              if (b !== null) b.return = p;
              else
                for (b = p; b !== null; ) {
                  if (b === a) {
                    b = null;
                    break;
                  }
                  if (((p = b.sibling), p !== null)) {
                    (p.return = b.return), (b = p);
                    break;
                  }
                  b = b.return;
                }
              p = b;
            }
        Bt(t, a, u.children, s), (a = a.child);
      }
      return a;
    case 9:
      return (
        (u = a.type),
        (c = a.pendingProps.children),
        Sn(a, s),
        (u = xi(u)),
        (c = c(u)),
        (a.flags |= 1),
        Bt(t, a, c, s),
        a.child
      );
    case 14:
      return (
        (c = a.type),
        (u = Ai(c, a.pendingProps)),
        (u = Ai(c.type, u)),
        uu(t, a, c, u, s)
      );
    case 15:
      return Up(t, a, a.type, a.pendingProps, s);
    case 17:
      return (
        (c = a.type),
        (u = a.pendingProps),
        (u = a.elementType === c ? u : Ai(c, u)),
        Cs(t, a),
        (a.tag = 1),
        qt(c) ? ((t = !0), Xs(a)) : (t = !1),
        Sn(a, s),
        kp(a, c, u),
        Xl(a, c, u, s),
        Gl(null, a, c, !0, t, s)
      );
    case 19:
      return Jp(t, a, s);
    case 22:
      return $p(t, a, s);
  }
  throw Error(pe(156, a.tag));
};
function gf(t, a) {
  return Bd(t, a);
}
function lx(t, a, s, c) {
  (this.tag = t),
    (this.key = s),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = a),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = c),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function gi(t, a, s, c) {
  return new lx(t, a, s, c);
}
function nh(t) {
  return (t = t.prototype), !(!t || !t.isReactComponent);
}
function cx(t) {
  if (typeof t == "function") return nh(t) ? 1 : 0;
  if (t != null) {
    if (((t = t.$$typeof), t === Sc)) return 11;
    if (t === Cc) return 14;
  }
  return 2;
}
function ba(t, a) {
  var s = t.alternate;
  return (
    s === null
      ? ((s = gi(t.tag, a, t.key, t.mode)),
        (s.elementType = t.elementType),
        (s.type = t.type),
        (s.stateNode = t.stateNode),
        (s.alternate = t),
        (t.alternate = s))
      : ((s.pendingProps = a),
        (s.type = t.type),
        (s.flags = 0),
        (s.subtreeFlags = 0),
        (s.deletions = null)),
    (s.flags = t.flags & 14680064),
    (s.childLanes = t.childLanes),
    (s.lanes = t.lanes),
    (s.child = t.child),
    (s.memoizedProps = t.memoizedProps),
    (s.memoizedState = t.memoizedState),
    (s.updateQueue = t.updateQueue),
    (a = t.dependencies),
    (s.dependencies =
      a === null ? null : { lanes: a.lanes, firstContext: a.firstContext }),
    (s.sibling = t.sibling),
    (s.index = t.index),
    (s.ref = t.ref),
    s
  );
}
function Ls(t, a, s, c, u, p) {
  var b = 2;
  if (((c = t), typeof t == "function")) nh(t) && (b = 1);
  else if (typeof t == "string") b = 5;
  else
    e: switch (t) {
      case rn:
        return Wa(s.children, u, p, a);
      case kc:
        (b = 8), (u |= 8);
        break;
      case dl:
        return (
          (t = gi(12, s, a, u | 2)), (t.elementType = dl), (t.lanes = p), t
        );
      case pl:
        return (t = gi(13, s, a, u)), (t.elementType = pl), (t.lanes = p), t;
      case fl:
        return (t = gi(19, s, a, u)), (t.elementType = fl), (t.lanes = p), t;
      case Sd:
        return xo(s, u, p, a);
      default:
        if (typeof t == "object" && t !== null)
          switch (t.$$typeof) {
            case wd:
              b = 10;
              break e;
            case kd:
              b = 9;
              break e;
            case Sc:
              b = 11;
              break e;
            case Cc:
              b = 14;
              break e;
            case ra:
              (b = 16), (c = null);
              break e;
          }
        throw Error(pe(130, t == null ? t : typeof t, ""));
    }
  return (
    (a = gi(b, s, a, u)), (a.elementType = t), (a.type = c), (a.lanes = p), a
  );
}
function Wa(t, a, s, c) {
  return (t = gi(7, t, c, a)), (t.lanes = s), t;
}
function xo(t, a, s, c) {
  return (
    (t = gi(22, t, c, a)),
    (t.elementType = Sd),
    (t.lanes = s),
    (t.stateNode = { isHidden: !1 }),
    t
  );
}
function Qo(t, a, s) {
  return (t = gi(6, t, null, a)), (t.lanes = s), t;
}
function el(t, a, s) {
  return (
    (a = gi(4, t.children !== null ? t.children : [], t.key, a)),
    (a.lanes = s),
    (a.stateNode = {
      containerInfo: t.containerInfo,
      pendingChildren: null,
      implementation: t.implementation,
    }),
    a
  );
}
function hx(t, a, s, c, u) {
  (this.tag = a),
    (this.containerInfo = t),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = Ro(0)),
    (this.expirationTimes = Ro(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = Ro(0)),
    (this.identifierPrefix = c),
    (this.onRecoverableError = u),
    (this.mutableSourceEagerHydrationData = null);
}
function rh(t, a, s, c, u, p, b, S, E) {
  return (
    (t = new hx(t, a, s, S, E)),
    a === 1 ? ((a = 1), p === !0 && (a |= 8)) : (a = 0),
    (p = gi(3, null, null, a)),
    (t.current = p),
    (p.stateNode = t),
    (p.memoizedState = {
      element: c,
      isDehydrated: s,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    Xc(p),
    t
  );
}
function ux(t, a, s) {
  var c = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: nn,
    key: c == null ? null : "" + c,
    children: t,
    containerInfo: a,
    implementation: s,
  };
}
function mf(t) {
  if (!t) return ka;
  t = t._reactInternals;
  e: {
    if (Qa(t) !== t || t.tag !== 1) throw Error(pe(170));
    var a = t;
    do {
      switch (a.tag) {
        case 3:
          a = a.stateNode.context;
          break e;
        case 1:
          if (qt(a.type)) {
            a = a.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      a = a.return;
    } while (a !== null);
    throw Error(pe(171));
  }
  if (t.tag === 1) {
    var s = t.type;
    if (qt(s)) return fp(t, s, a);
  }
  return a;
}
function xf(t, a, s, c, u, p, b, S, E) {
  return (
    (t = rh(s, c, !0, t, u, p, b, S, E)),
    (t.context = mf(null)),
    (s = t.current),
    (c = Ht()),
    (u = ya(s)),
    (p = $i(c, u)),
    (p.callback = a ?? null),
    xa(s, p, u),
    (t.current.lanes = u),
    Hr(t, u, c),
    Jt(t, c),
    t
  );
}
function vo(t, a, s, c) {
  var u = a.current,
    p = Ht(),
    b = ya(u);
  return (
    (s = mf(s)),
    a.context === null ? (a.context = s) : (a.pendingContext = s),
    (a = $i(p, b)),
    (a.payload = { element: t }),
    (c = c === void 0 ? null : c),
    c !== null && (a.callback = c),
    (t = xa(u, a, b)),
    t !== null && (Ni(t, u, b, p), ws(t, u, b)),
    b
  );
}
function to(t) {
  if (((t = t.current), !t.child)) return null;
  switch (t.child.tag) {
    case 5:
      return t.child.stateNode;
    default:
      return t.child.stateNode;
  }
}
function Su(t, a) {
  if (((t = t.memoizedState), t !== null && t.dehydrated !== null)) {
    var s = t.retryLane;
    t.retryLane = s !== 0 && s < a ? s : a;
  }
}
function sh(t, a) {
  Su(t, a), (t = t.alternate) && Su(t, a);
}
function dx() {
  return null;
}
var vf =
  typeof reportError == "function"
    ? reportError
    : function (t) {
        console.error(t);
      };
function oh(t) {
  this._internalRoot = t;
}
yo.prototype.render = oh.prototype.render = function (t) {
  var a = this._internalRoot;
  if (a === null) throw Error(pe(409));
  vo(t, a, null, null);
};
yo.prototype.unmount = oh.prototype.unmount = function () {
  var t = this._internalRoot;
  if (t !== null) {
    this._internalRoot = null;
    var a = t.containerInfo;
    Ka(function () {
      vo(null, t, null, null);
    }),
      (a[qi] = null);
  }
};
function yo(t) {
  this._internalRoot = t;
}
yo.prototype.unstable_scheduleHydration = function (t) {
  if (t) {
    var a = Ud();
    t = { blockedOn: null, target: t, priority: a };
    for (var s = 0; s < oa.length && a !== 0 && a < oa[s].priority; s++);
    oa.splice(s, 0, t), s === 0 && Kd(t);
  }
};
function lh(t) {
  return !(!t || (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11));
}
function bo(t) {
  return !(
    !t ||
    (t.nodeType !== 1 &&
      t.nodeType !== 9 &&
      t.nodeType !== 11 &&
      (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
  );
}
function Cu() {}
function px(t, a, s, c, u) {
  if (u) {
    if (typeof c == "function") {
      var p = c;
      c = function () {
        var N = to(b);
        p.call(N);
      };
    }
    var b = xf(a, c, t, 0, null, !1, !1, "", Cu);
    return (
      (t._reactRootContainer = b),
      (t[qi] = b.current),
      Mr(t.nodeType === 8 ? t.parentNode : t),
      Ka(),
      b
    );
  }
  for (; (u = t.lastChild); ) t.removeChild(u);
  if (typeof c == "function") {
    var S = c;
    c = function () {
      var N = to(E);
      S.call(N);
    };
  }
  var E = rh(t, 0, !1, null, null, !1, !1, "", Cu);
  return (
    (t._reactRootContainer = E),
    (t[qi] = E.current),
    Mr(t.nodeType === 8 ? t.parentNode : t),
    Ka(function () {
      vo(a, E, s, c);
    }),
    E
  );
}
function wo(t, a, s, c, u) {
  var p = s._reactRootContainer;
  if (p) {
    var b = p;
    if (typeof u == "function") {
      var S = u;
      u = function () {
        var E = to(b);
        S.call(E);
      };
    }
    vo(a, b, t, u);
  } else b = px(s, a, t, u, c);
  return to(b);
}
Gd = function (t) {
  switch (t.tag) {
    case 3:
      var a = t.stateNode;
      if (a.current.memoizedState.isDehydrated) {
        var s = or(a.pendingLanes);
        s !== 0 &&
          (Lc(a, s | 1), Jt(a, dt()), !(We & 6) && ((In = dt() + 500), Aa()));
      }
      break;
    case 13:
      Ka(function () {
        var c = Ji(t, 1);
        if (c !== null) {
          var u = Ht();
          Ni(c, t, 1, u);
        }
      }),
        sh(t, 1);
  }
};
Ec = function (t) {
  if (t.tag === 13) {
    var a = Ji(t, 134217728);
    if (a !== null) {
      var s = Ht();
      Ni(a, t, 134217728, s);
    }
    sh(t, 134217728);
  }
};
Vd = function (t) {
  if (t.tag === 13) {
    var a = ya(t),
      s = Ji(t, a);
    if (s !== null) {
      var c = Ht();
      Ni(s, t, a, c);
    }
    sh(t, a);
  }
};
Ud = function () {
  return $e;
};
$d = function (t, a) {
  var s = $e;
  try {
    return ($e = t), a();
  } finally {
    $e = s;
  }
};
Cl = function (t, a, s) {
  switch (a) {
    case "input":
      if ((xl(t, s), (a = s.name), s.type === "radio" && a != null)) {
        for (s = t; s.parentNode; ) s = s.parentNode;
        for (
          s = s.querySelectorAll(
            "input[name=" + JSON.stringify("" + a) + '][type="radio"]'
          ),
            a = 0;
          a < s.length;
          a++
        ) {
          var c = s[a];
          if (c !== t && c.form === t.form) {
            var u = ho(c);
            if (!u) throw Error(pe(90));
            Ad(c), xl(c, u);
          }
        }
      }
      break;
    case "textarea":
      Ld(t, s);
      break;
    case "select":
      (a = s.value), a != null && yn(t, !!s.multiple, a, !1);
  }
};
Rd = th;
Dd = Ka;
var fx = { usingClientEntryPoint: !1, Events: [Yr, cn, ho, _d, Id, th] },
  Zn = {
    findFiberByHostInstance: Oa,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  gx = {
    bundleType: Zn.bundleType,
    version: Zn.version,
    rendererPackageName: Zn.rendererPackageName,
    rendererConfig: Zn.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ea.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (t) {
      return (t = Od(t)), t === null ? null : t.stateNode;
    },
    findFiberByHostInstance: Zn.findFiberByHostInstance || dx,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var cs = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!cs.isDisabled && cs.supportsFiber)
    try {
      (so = cs.inject(gx)), (Di = cs);
    } catch {}
}
ri.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = fx;
ri.createPortal = function (t, a) {
  var s = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!lh(a)) throw Error(pe(200));
  return ux(t, a, null, s);
};
ri.createRoot = function (t, a) {
  if (!lh(t)) throw Error(pe(299));
  var s = !1,
    c = "",
    u = vf;
  return (
    a != null &&
      (a.unstable_strictMode === !0 && (s = !0),
      a.identifierPrefix !== void 0 && (c = a.identifierPrefix),
      a.onRecoverableError !== void 0 && (u = a.onRecoverableError)),
    (a = rh(t, 1, !1, null, null, s, !1, c, u)),
    (t[qi] = a.current),
    Mr(t.nodeType === 8 ? t.parentNode : t),
    new oh(a)
  );
};
ri.findDOMNode = function (t) {
  if (t == null) return null;
  if (t.nodeType === 1) return t;
  var a = t._reactInternals;
  if (a === void 0)
    throw typeof t.render == "function"
      ? Error(pe(188))
      : ((t = Object.keys(t).join(",")), Error(pe(268, t)));
  return (t = Od(a)), (t = t === null ? null : t.stateNode), t;
};
ri.flushSync = function (t) {
  return Ka(t);
};
ri.hydrate = function (t, a, s) {
  if (!bo(a)) throw Error(pe(200));
  return wo(null, t, a, !0, s);
};
ri.hydrateRoot = function (t, a, s) {
  if (!lh(t)) throw Error(pe(405));
  var c = (s != null && s.hydratedSources) || null,
    u = !1,
    p = "",
    b = vf;
  if (
    (s != null &&
      (s.unstable_strictMode === !0 && (u = !0),
      s.identifierPrefix !== void 0 && (p = s.identifierPrefix),
      s.onRecoverableError !== void 0 && (b = s.onRecoverableError)),
    (a = xf(a, null, t, 1, s ?? null, u, !1, p, b)),
    (t[qi] = a.current),
    Mr(t),
    c)
  )
    for (t = 0; t < c.length; t++)
      (s = c[t]),
        (u = s._getVersion),
        (u = u(s._source)),
        a.mutableSourceEagerHydrationData == null
          ? (a.mutableSourceEagerHydrationData = [s, u])
          : a.mutableSourceEagerHydrationData.push(s, u);
  return new yo(a);
};
ri.render = function (t, a, s) {
  if (!bo(a)) throw Error(pe(200));
  return wo(null, t, a, !1, s);
};
ri.unmountComponentAtNode = function (t) {
  if (!bo(t)) throw Error(pe(40));
  return t._reactRootContainer
    ? (Ka(function () {
        wo(null, null, t, !1, function () {
          (t._reactRootContainer = null), (t[qi] = null);
        });
      }),
      !0)
    : !1;
};
ri.unstable_batchedUpdates = th;
ri.unstable_renderSubtreeIntoContainer = function (t, a, s, c) {
  if (!bo(s)) throw Error(pe(200));
  if (t == null || t._reactInternals === void 0) throw Error(pe(38));
  return wo(t, a, s, !1, c);
};
ri.version = "18.2.0-next-9e3b772b8-20220608";
(function (t) {
  function a() {
    if (
      !(
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
      )
    )
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(a);
      } catch (s) {
        console.error(s);
      }
  }
  a(), (t.exports = ri);
})(dg);
const ca = cd(Ts);
var Au = Ts;
(cl.createRoot = Au.createRoot), (cl.hydrateRoot = Au.hydrateRoot);
/**
 * @remix-run/router v1.7.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function nt() {
  return (
    (nt = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var a = 1; a < arguments.length; a++) {
            var s = arguments[a];
            for (var c in s)
              Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
          }
          return t;
        }),
    nt.apply(this, arguments)
  );
}
var ft;
(function (t) {
  (t.Pop = "POP"), (t.Push = "PUSH"), (t.Replace = "REPLACE");
})(ft || (ft = {}));
const Pu = "popstate";
function mx(t) {
  t === void 0 && (t = {});
  function a(u, p) {
    let {
      pathname: b = "/",
      search: S = "",
      hash: E = "",
    } = zi(u.location.hash.substr(1));
    return Or(
      "",
      { pathname: b, search: S, hash: E },
      (p.state && p.state.usr) || null,
      (p.state && p.state.key) || "default"
    );
  }
  function s(u, p) {
    let b = u.document.querySelector("base"),
      S = "";
    if (b && b.getAttribute("href")) {
      let E = u.location.href,
        N = E.indexOf("#");
      S = N === -1 ? E : E.slice(0, N);
    }
    return S + "#" + (typeof p == "string" ? p : qa(p));
  }
  function c(u, p) {
    Za(
      u.pathname.charAt(0) === "/",
      "relative pathnames are not supported in hash history.push(" +
        JSON.stringify(p) +
        ")"
    );
  }
  return vx(a, s, c, t);
}
function Fe(t, a) {
  if (t === !1 || t === null || typeof t > "u") throw new Error(a);
}
function Za(t, a) {
  if (!t) {
    typeof console < "u" && console.warn(a);
    try {
      throw new Error(a);
    } catch {}
  }
}
function xx() {
  return Math.random().toString(36).substr(2, 8);
}
function Lu(t, a) {
  return { usr: t.state, key: t.key, idx: a };
}
function Or(t, a, s, c) {
  return (
    s === void 0 && (s = null),
    nt(
      { pathname: typeof t == "string" ? t : t.pathname, search: "", hash: "" },
      typeof a == "string" ? zi(a) : a,
      { state: s, key: (a && a.key) || c || xx() }
    )
  );
}
function qa(t) {
  let { pathname: a = "/", search: s = "", hash: c = "" } = t;
  return (
    s && s !== "?" && (a += s.charAt(0) === "?" ? s : "?" + s),
    c && c !== "#" && (a += c.charAt(0) === "#" ? c : "#" + c),
    a
  );
}
function zi(t) {
  let a = {};
  if (t) {
    let s = t.indexOf("#");
    s >= 0 && ((a.hash = t.substr(s)), (t = t.substr(0, s)));
    let c = t.indexOf("?");
    c >= 0 && ((a.search = t.substr(c)), (t = t.substr(0, c))),
      t && (a.pathname = t);
  }
  return a;
}
function vx(t, a, s, c) {
  c === void 0 && (c = {});
  let { window: u = document.defaultView, v5Compat: p = !1 } = c,
    b = u.history,
    S = ft.Pop,
    E = null,
    N = F();
  N == null && ((N = 0), b.replaceState(nt({}, b.state, { idx: N }), ""));
  function F() {
    return (b.state || { idx: null }).idx;
  }
  function H() {
    S = ft.Pop;
    let ae = F(),
      G = ae == null ? null : ae - N;
    (N = ae), E && E({ action: S, location: K.location, delta: G });
  }
  function j(ae, G) {
    S = ft.Push;
    let L = Or(K.location, ae, G);
    s && s(L, ae), (N = F() + 1);
    let R = Lu(L, N),
      O = K.createHref(L);
    try {
      b.pushState(R, "", O);
    } catch (X) {
      if (X instanceof DOMException && X.name === "DataCloneError") throw X;
      u.location.assign(O);
    }
    p && E && E({ action: S, location: K.location, delta: 1 });
  }
  function V(ae, G) {
    S = ft.Replace;
    let L = Or(K.location, ae, G);
    s && s(L, ae), (N = F());
    let R = Lu(L, N),
      O = K.createHref(L);
    b.replaceState(R, "", O),
      p && E && E({ action: S, location: K.location, delta: 0 });
  }
  function q(ae) {
    let G = u.location.origin !== "null" ? u.location.origin : u.location.href,
      L = typeof ae == "string" ? ae : qa(ae);
    return (
      Fe(
        G,
        "No window.location.(origin|href) available to create URL for href: " +
          L
      ),
      new URL(L, G)
    );
  }
  let K = {
    get action() {
      return S;
    },
    get location() {
      return t(u, b);
    },
    listen(ae) {
      if (E) throw new Error("A history only accepts one active listener");
      return (
        u.addEventListener(Pu, H),
        (E = ae),
        () => {
          u.removeEventListener(Pu, H), (E = null);
        }
      );
    },
    createHref(ae) {
      return a(u, ae);
    },
    createURL: q,
    encodeLocation(ae) {
      let G = q(ae);
      return { pathname: G.pathname, search: G.search, hash: G.hash };
    },
    push: j,
    replace: V,
    go(ae) {
      return b.go(ae);
    },
  };
  return K;
}
var xt;
(function (t) {
  (t.data = "data"),
    (t.deferred = "deferred"),
    (t.redirect = "redirect"),
    (t.error = "error");
})(xt || (xt = {}));
const yx = new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "children",
]);
function bx(t) {
  return t.index === !0;
}
function ac(t, a, s, c) {
  return (
    s === void 0 && (s = []),
    c === void 0 && (c = {}),
    t.map((u, p) => {
      let b = [...s, p],
        S = typeof u.id == "string" ? u.id : b.join("-");
      if (
        (Fe(
          u.index !== !0 || !u.children,
          "Cannot specify children on an index route"
        ),
        Fe(
          !c[S],
          'Found a route id collision on id "' +
            S +
            `".  Route id's must be globally unique within Data Router usages`
        ),
        bx(u))
      ) {
        let E = nt({}, u, a(u), { id: S });
        return (c[S] = E), E;
      } else {
        let E = nt({}, u, a(u), { id: S, children: void 0 });
        return (
          (c[S] = E), u.children && (E.children = ac(u.children, a, b, c)), E
        );
      }
    })
  );
}
function mn(t, a, s) {
  s === void 0 && (s = "/");
  let c = typeof a == "string" ? zi(a) : a,
    u = On(c.pathname || "/", s);
  if (u == null) return null;
  let p = yf(t);
  wx(p);
  let b = null;
  for (let S = 0; b == null && S < p.length; ++S) b = Nx(p[S], Ix(u));
  return b;
}
function yf(t, a, s, c) {
  a === void 0 && (a = []), s === void 0 && (s = []), c === void 0 && (c = "");
  let u = (p, b, S) => {
    let E = {
      relativePath: S === void 0 ? p.path || "" : S,
      caseSensitive: p.caseSensitive === !0,
      childrenIndex: b,
      route: p,
    };
    E.relativePath.startsWith("/") &&
      (Fe(
        E.relativePath.startsWith(c),
        'Absolute route path "' +
          E.relativePath +
          '" nested under path ' +
          ('"' + c + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes."
      ),
      (E.relativePath = E.relativePath.slice(c.length)));
    let N = Ki([c, E.relativePath]),
      F = s.concat(E);
    p.children &&
      p.children.length > 0 &&
      (Fe(
        p.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + N + '".')
      ),
      yf(p.children, a, F, N)),
      !(p.path == null && !p.index) &&
        a.push({ path: N, score: Ex(N, p.index), routesMeta: F });
  };
  return (
    t.forEach((p, b) => {
      var S;
      if (p.path === "" || !((S = p.path) != null && S.includes("?"))) u(p, b);
      else for (let E of bf(p.path)) u(p, b, E);
    }),
    a
  );
}
function bf(t) {
  let a = t.split("/");
  if (a.length === 0) return [];
  let [s, ...c] = a,
    u = s.endsWith("?"),
    p = s.replace(/\?$/, "");
  if (c.length === 0) return u ? [p, ""] : [p];
  let b = bf(c.join("/")),
    S = [];
  return (
    S.push(...b.map((E) => (E === "" ? p : [p, E].join("/")))),
    u && S.push(...b),
    S.map((E) => (t.startsWith("/") && E === "" ? "/" : E))
  );
}
function wx(t) {
  t.sort((a, s) =>
    a.score !== s.score
      ? s.score - a.score
      : Mx(
          a.routesMeta.map((c) => c.childrenIndex),
          s.routesMeta.map((c) => c.childrenIndex)
        )
  );
}
const kx = /^:\w+$/,
  Sx = 3,
  Cx = 2,
  Ax = 1,
  Px = 10,
  Lx = -2,
  Eu = (t) => t === "*";
function Ex(t, a) {
  let s = t.split("/"),
    c = s.length;
  return (
    s.some(Eu) && (c += Lx),
    a && (c += Cx),
    s
      .filter((u) => !Eu(u))
      .reduce((u, p) => u + (kx.test(p) ? Sx : p === "" ? Ax : Px), c)
  );
}
function Mx(t, a) {
  return t.length === a.length && t.slice(0, -1).every((c, u) => c === a[u])
    ? t[t.length - 1] - a[a.length - 1]
    : 0;
}
function Nx(t, a) {
  let { routesMeta: s } = t,
    c = {},
    u = "/",
    p = [];
  for (let b = 0; b < s.length; ++b) {
    let S = s[b],
      E = b === s.length - 1,
      N = u === "/" ? a : a.slice(u.length) || "/",
      F = Tx(
        { path: S.relativePath, caseSensitive: S.caseSensitive, end: E },
        N
      );
    if (!F) return null;
    Object.assign(c, F.params);
    let H = S.route;
    p.push({
      params: c,
      pathname: Ki([u, F.pathname]),
      pathnameBase: zx(Ki([u, F.pathnameBase])),
      route: H,
    }),
      F.pathnameBase !== "/" && (u = Ki([u, F.pathnameBase]));
  }
  return p;
}
function Tx(t, a) {
  typeof t == "string" && (t = { path: t, caseSensitive: !1, end: !0 });
  let [s, c] = _x(t.path, t.caseSensitive, t.end),
    u = a.match(s);
  if (!u) return null;
  let p = u[0],
    b = p.replace(/(.)\/+$/, "$1"),
    S = u.slice(1);
  return {
    params: c.reduce((N, F, H) => {
      if (F === "*") {
        let j = S[H] || "";
        b = p.slice(0, p.length - j.length).replace(/(.)\/+$/, "$1");
      }
      return (N[F] = Rx(S[H] || "", F)), N;
    }, {}),
    pathname: p,
    pathnameBase: b,
    pattern: t,
  };
}
function _x(t, a, s) {
  a === void 0 && (a = !1),
    s === void 0 && (s = !0),
    Za(
      t === "*" || !t.endsWith("*") || t.endsWith("/*"),
      'Route path "' +
        t +
        '" will be treated as if it were ' +
        ('"' + t.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + t.replace(/\*$/, "/*") + '".')
    );
  let c = [],
    u =
      "^" +
      t
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&")
        .replace(/\/:(\w+)/g, (b, S) => (c.push(S), "/([^\\/]+)"));
  return (
    t.endsWith("*")
      ? (c.push("*"),
        (u += t === "*" || t === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : s
      ? (u += "\\/*$")
      : t !== "" && t !== "/" && (u += "(?:(?=\\/|$))"),
    [new RegExp(u, a ? void 0 : "i"), c]
  );
}
function Ix(t) {
  try {
    return decodeURI(t);
  } catch (a) {
    return (
      Za(
        !1,
        'The URL path "' +
          t +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + a + ").")
      ),
      t
    );
  }
}
function Rx(t, a) {
  try {
    return decodeURIComponent(t);
  } catch (s) {
    return (
      Za(
        !1,
        'The value for the URL param "' +
          a +
          '" will not be decoded because' +
          (' the string "' +
            t +
            '" is a malformed URL segment. This is probably') +
          (" due to a bad percent encoding (" + s + ").")
      ),
      t
    );
  }
}
function On(t, a) {
  if (a === "/") return t;
  if (!t.toLowerCase().startsWith(a.toLowerCase())) return null;
  let s = a.endsWith("/") ? a.length - 1 : a.length,
    c = t.charAt(s);
  return c && c !== "/" ? null : t.slice(s) || "/";
}
function Dx(t, a) {
  a === void 0 && (a = "/");
  let {
    pathname: s,
    search: c = "",
    hash: u = "",
  } = typeof t == "string" ? zi(t) : t;
  return {
    pathname: s ? (s.startsWith("/") ? s : jx(s, a)) : a,
    search: Ox(c),
    hash: Fx(u),
  };
}
function jx(t, a) {
  let s = a.replace(/\/+$/, "").split("/");
  return (
    t.split("/").forEach((u) => {
      u === ".." ? s.length > 1 && s.pop() : u !== "." && s.push(u);
    }),
    s.length > 1 ? s.join("/") : "/"
  );
}
function tl(t, a, s, c) {
  return (
    "Cannot include a '" +
    t +
    "' character in a manually specified " +
    ("`to." +
      a +
      "` field [" +
      JSON.stringify(c) +
      "].  Please separate it out to the ") +
    ("`to." + s + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function ko(t) {
  return t.filter(
    (a, s) => s === 0 || (a.route.path && a.route.path.length > 0)
  );
}
function ch(t, a, s, c) {
  c === void 0 && (c = !1);
  let u;
  typeof t == "string"
    ? (u = zi(t))
    : ((u = nt({}, t)),
      Fe(
        !u.pathname || !u.pathname.includes("?"),
        tl("?", "pathname", "search", u)
      ),
      Fe(
        !u.pathname || !u.pathname.includes("#"),
        tl("#", "pathname", "hash", u)
      ),
      Fe(!u.search || !u.search.includes("#"), tl("#", "search", "hash", u)));
  let p = t === "" || u.pathname === "",
    b = p ? "/" : u.pathname,
    S;
  if (c || b == null) S = s;
  else {
    let H = a.length - 1;
    if (b.startsWith("..")) {
      let j = b.split("/");
      for (; j[0] === ".."; ) j.shift(), (H -= 1);
      u.pathname = j.join("/");
    }
    S = H >= 0 ? a[H] : "/";
  }
  let E = Dx(u, S),
    N = b && b !== "/" && b.endsWith("/"),
    F = (p || b === ".") && s.endsWith("/");
  return !E.pathname.endsWith("/") && (N || F) && (E.pathname += "/"), E;
}
const Ki = (t) => t.join("/").replace(/\/\/+/g, "/"),
  zx = (t) => t.replace(/\/+$/, "").replace(/^\/*/, "/"),
  Ox = (t) => (!t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t),
  Fx = (t) => (!t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t);
class hh {
  constructor(a, s, c, u) {
    u === void 0 && (u = !1),
      (this.status = a),
      (this.statusText = s || ""),
      (this.internal = u),
      c instanceof Error
        ? ((this.data = c.toString()), (this.error = c))
        : (this.data = c);
  }
}
function wf(t) {
  return (
    t != null &&
    typeof t.status == "number" &&
    typeof t.statusText == "string" &&
    typeof t.internal == "boolean" &&
    "data" in t
  );
}
const kf = ["post", "put", "patch", "delete"],
  Bx = new Set(kf),
  Hx = ["get", ...kf],
  Xx = new Set(Hx),
  Yx = new Set([301, 302, 303, 307, 308]),
  Wx = new Set([307, 308]),
  il = {
    state: "idle",
    location: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  Gx = {
    state: "idle",
    data: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  hs = { state: "unblocked", proceed: void 0, reset: void 0, location: void 0 },
  Sf = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  Vx = (t) => ({ hasErrorBoundary: !!t.hasErrorBoundary });
function Ux(t) {
  const a = t.window ? t.window : typeof window < "u" ? window : void 0,
    s =
      typeof a < "u" &&
      typeof a.document < "u" &&
      typeof a.document.createElement < "u",
    c = !s;
  Fe(
    t.routes.length > 0,
    "You must provide a non-empty routes array to createRouter"
  );
  let u;
  if (t.mapRouteProperties) u = t.mapRouteProperties;
  else if (t.detectErrorBoundary) {
    let ne = t.detectErrorBoundary;
    u = (Q) => ({ hasErrorBoundary: ne(Q) });
  } else u = Vx;
  let p = {},
    b = ac(t.routes, u, void 0, p),
    S,
    E = t.basename || "/",
    N = nt({ v7_normalizeFormMethod: !1, v7_prependBasename: !1 }, t.future),
    F = null,
    H = new Set(),
    j = null,
    V = null,
    q = null,
    K = t.hydrationData != null,
    ae = mn(b, t.history.location, E),
    G = null;
  if (ae == null) {
    let ne = ui(404, { pathname: t.history.location.pathname }),
      { matches: Q, route: le } = ju(b);
    (ae = Q), (G = { [le.id]: ne });
  }
  let L =
      !ae.some((ne) => ne.route.lazy) &&
      (!ae.some((ne) => ne.route.loader) || t.hydrationData != null),
    R,
    O = {
      historyAction: t.history.action,
      location: t.history.location,
      matches: ae,
      initialized: L,
      navigation: il,
      restoreScrollPosition: t.hydrationData != null ? !1 : null,
      preventScrollReset: !1,
      revalidation: "idle",
      loaderData: (t.hydrationData && t.hydrationData.loaderData) || {},
      actionData: (t.hydrationData && t.hydrationData.actionData) || null,
      errors: (t.hydrationData && t.hydrationData.errors) || G,
      fetchers: new Map(),
      blockers: new Map(),
    },
    X = ft.Pop,
    W = !1,
    U,
    te = !1,
    he = !1,
    J = [],
    Y = [],
    se = new Map(),
    fe = 0,
    ie = -1,
    ke = new Map(),
    _e = new Set(),
    Le = new Map(),
    ue = new Map(),
    xe = new Map(),
    be = !1;
  function Me() {
    return (
      (F = t.history.listen((ne) => {
        let { action: Q, location: le, delta: ge } = ne;
        if (be) {
          be = !1;
          return;
        }
        Za(
          xe.size === 0 || ge != null,
          "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL."
        );
        let me = Ea({
          currentLocation: O.location,
          nextLocation: le,
          historyAction: Q,
        });
        if (me && ge != null) {
          (be = !0),
            t.history.go(ge * -1),
            Gt(me, {
              state: "blocked",
              location: le,
              proceed() {
                Gt(me, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location: le,
                }),
                  t.history.go(ge);
              },
              reset() {
                let Ee = new Map(O.blockers);
                Ee.set(me, hs), De({ blockers: Ee });
              },
            });
          return;
        }
        return Ze(Q, le);
      })),
      O.initialized || Ze(ft.Pop, O.location),
      R
    );
  }
  function Te() {
    F && F(),
      H.clear(),
      U && U.abort(),
      O.fetchers.forEach((ne, Q) => ze(Q)),
      O.blockers.forEach((ne, Q) => Oi(Q));
  }
  function He(ne) {
    return H.add(ne), () => H.delete(ne);
  }
  function De(ne) {
    (O = nt({}, O, ne)), H.forEach((Q) => Q(O));
  }
  function Ke(ne, Q) {
    var le, ge;
    let me =
        O.actionData != null &&
        O.navigation.formMethod != null &&
        Li(O.navigation.formMethod) &&
        O.navigation.state === "loading" &&
        ((le = ne.state) == null ? void 0 : le._isRedirect) !== !0,
      Ee;
    Q.actionData
      ? Object.keys(Q.actionData).length > 0
        ? (Ee = Q.actionData)
        : (Ee = null)
      : me
      ? (Ee = O.actionData)
      : (Ee = null);
    let ve = Q.loaderData
        ? Du(O.loaderData, Q.loaderData, Q.matches || [], Q.errors)
        : O.loaderData,
      Ne = new Map();
    xe.clear();
    let we =
      W === !0 ||
      (O.navigation.formMethod != null &&
        Li(O.navigation.formMethod) &&
        ((ge = ne.state) == null ? void 0 : ge._isRedirect) !== !0);
    S && ((b = S), (S = void 0)),
      te ||
        X === ft.Pop ||
        (X === ft.Push
          ? t.history.push(ne, ne.state)
          : X === ft.Replace && t.history.replace(ne, ne.state)),
      De(
        nt({}, Q, {
          actionData: Ee,
          loaderData: ve,
          historyAction: X,
          location: ne,
          initialized: !0,
          navigation: il,
          revalidation: "idle",
          restoreScrollPosition: Pt(ne, Q.matches || O.matches),
          preventScrollReset: we,
          blockers: Ne,
        })
      ),
      (X = ft.Pop),
      (W = !1),
      (te = !1),
      (he = !1),
      (J = []),
      (Y = []);
  }
  async function je(ne, Q) {
    if (typeof ne == "number") {
      t.history.go(ne);
      return;
    }
    let le = nc(
        O.location,
        O.matches,
        E,
        N.v7_prependBasename,
        ne,
        Q == null ? void 0 : Q.fromRouteId,
        Q == null ? void 0 : Q.relative
      ),
      {
        path: ge,
        submission: me,
        error: Ee,
      } = Mu(N.v7_normalizeFormMethod, !1, le, Q),
      ve = O.location,
      Ne = Or(O.location, ge, Q && Q.state);
    Ne = nt({}, Ne, t.history.encodeLocation(Ne));
    let we = Q && Q.replace != null ? Q.replace : void 0,
      Ge = ft.Push;
    we === !0
      ? (Ge = ft.Replace)
      : we === !1 ||
        (me != null &&
          Li(me.formMethod) &&
          me.formAction === O.location.pathname + O.location.search &&
          (Ge = ft.Replace));
    let Ye =
        Q && "preventScrollReset" in Q ? Q.preventScrollReset === !0 : void 0,
      Lt = Ea({ currentLocation: ve, nextLocation: Ne, historyAction: Ge });
    if (Lt) {
      Gt(Lt, {
        state: "blocked",
        location: Ne,
        proceed() {
          Gt(Lt, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: Ne,
          }),
            je(ne, Q);
        },
        reset() {
          let it = new Map(O.blockers);
          it.set(Lt, hs), De({ blockers: it });
        },
      });
      return;
    }
    return await Ze(Ge, Ne, {
      submission: me,
      pendingError: Ee,
      preventScrollReset: Ye,
      replace: Q && Q.replace,
    });
  }
  function pt() {
    if (
      (Se(),
      De({ revalidation: "loading" }),
      O.navigation.state !== "submitting")
    ) {
      if (O.navigation.state === "idle") {
        Ze(O.historyAction, O.location, { startUninterruptedRevalidation: !0 });
        return;
      }
      Ze(X || O.historyAction, O.navigation.location, {
        overrideNavigation: O.navigation,
      });
    }
  }
  async function Ze(ne, Q, le) {
    U && U.abort(),
      (U = null),
      (X = ne),
      (te = (le && le.startUninterruptedRevalidation) === !0),
      ei(O.location, O.matches),
      (W = (le && le.preventScrollReset) === !0);
    let ge = S || b,
      me = le && le.overrideNavigation,
      Ee = mn(ge, Q, E);
    if (!Ee) {
      let it = ui(404, { pathname: Q.pathname }),
        { matches: wt, route: Vt } = ju(ge);
      Si(), Ke(Q, { matches: wt, loaderData: {}, errors: { [Vt.id]: it } });
      return;
    }
    if (
      O.initialized &&
      !he &&
      Jx(O.location, Q) &&
      !(le && le.submission && Li(le.submission.formMethod))
    ) {
      Ke(Q, { matches: Ee });
      return;
    }
    U = new AbortController();
    let ve = Jn(t.history, Q, U.signal, le && le.submission),
      Ne,
      we;
    if (le && le.pendingError) we = { [xn(Ee).route.id]: le.pendingError };
    else if (le && le.submission && Li(le.submission.formMethod)) {
      let it = await Ot(ve, Q, le.submission, Ee, { replace: le.replace });
      if (it.shortCircuited) return;
      (Ne = it.pendingActionData),
        (we = it.pendingActionError),
        (me = us(Q, le.submission)),
        (ve = new Request(ve.url, { signal: ve.signal }));
    }
    let {
      shortCircuited: Ge,
      loaderData: Ye,
      errors: Lt,
    } = await Tt(
      ve,
      Q,
      Ee,
      me,
      le && le.submission,
      le && le.fetcherSubmission,
      le && le.replace,
      Ne,
      we
    );
    Ge ||
      ((U = null),
      Ke(
        Q,
        nt({ matches: Ee }, Ne ? { actionData: Ne } : {}, {
          loaderData: Ye,
          errors: Lt,
        })
      ));
  }
  async function Ot(ne, Q, le, ge, me) {
    me === void 0 && (me = {}), Se();
    let Ee = av(Q, le);
    De({ navigation: Ee });
    let ve,
      Ne = sc(ge, Q);
    if (!Ne.route.action && !Ne.route.lazy)
      ve = {
        type: xt.error,
        error: ui(405, {
          method: ne.method,
          pathname: Q.pathname,
          routeId: Ne.route.id,
        }),
      };
    else if (
      ((ve = await qn("action", ne, Ne, ge, p, u, E)), ne.signal.aborted)
    )
      return { shortCircuited: !0 };
    if (An(ve)) {
      let we;
      return (
        me && me.replace != null
          ? (we = me.replace)
          : (we = ve.location === O.location.pathname + O.location.search),
        await Wt(O, ve, { submission: le, replace: we }),
        { shortCircuited: !0 }
      );
    }
    if (yr(ve)) {
      let we = xn(ge, Ne.route.id);
      return (
        (me && me.replace) !== !0 && (X = ft.Push),
        {
          pendingActionData: {},
          pendingActionError: { [we.route.id]: ve.error },
        }
      );
    }
    if (Ha(ve)) throw ui(400, { type: "defer-action" });
    return { pendingActionData: { [Ne.route.id]: ve.data } };
  }
  async function Tt(ne, Q, le, ge, me, Ee, ve, Ne, we) {
    let Ge = ge || us(Q, me),
      Ye = me || Ee || Fu(Ge),
      Lt = S || b,
      [it, wt] = Nu(t.history, O, le, Ye, Q, he, J, Y, Le, _e, Lt, E, Ne, we);
    if (
      (Si(
        (qe) =>
          !(le && le.some((Ft) => Ft.route.id === qe)) ||
          (it && it.some((Ft) => Ft.route.id === qe))
      ),
      it.length === 0 && wt.length === 0)
    ) {
      let qe = wi();
      return (
        Ke(
          Q,
          nt(
            { matches: le, loaderData: {}, errors: we || null },
            Ne ? { actionData: Ne } : {},
            qe ? { fetchers: new Map(O.fetchers) } : {}
          )
        ),
        { shortCircuited: !0 }
      );
    }
    if (!te) {
      wt.forEach((Ft) => {
        let Hi = O.fetchers.get(Ft.key),
          ht = Qn(void 0, Hi ? Hi.data : void 0);
        O.fetchers.set(Ft.key, ht);
      });
      let qe = Ne || O.actionData;
      De(
        nt(
          { navigation: Ge },
          qe
            ? Object.keys(qe).length === 0
              ? { actionData: null }
              : { actionData: qe }
            : {},
          wt.length > 0 ? { fetchers: new Map(O.fetchers) } : {}
        )
      );
    }
    (ie = ++fe),
      wt.forEach((qe) => {
        se.has(qe.key) && Ie(qe.key),
          qe.controller && se.set(qe.key, qe.controller);
      });
    let Vt = () => wt.forEach((qe) => Ie(qe.key));
    U && U.signal.addEventListener("abort", Vt);
    let {
      results: Fi,
      loaderResults: Ma,
      fetcherResults: Ue,
    } = await ci(O.matches, le, it, wt, ne);
    if (ne.signal.aborted) return { shortCircuited: !0 };
    U && U.signal.removeEventListener("abort", Vt),
      wt.forEach((qe) => se.delete(qe.key));
    let Qe = zu(Fi);
    if (Qe) return await Wt(O, Qe, { replace: ve }), { shortCircuited: !0 };
    let { loaderData: Bi, errors: Bn } = Ru(O, le, it, Ma, we, wt, Ue, ue);
    ue.forEach((qe, Ft) => {
      qe.subscribe((Hi) => {
        (Hi || qe.done) && ue.delete(Ft);
      });
    });
    let Hn = wi(),
      Xn = La(ie),
      tn = Hn || Xn || wt.length > 0;
    return nt(
      { loaderData: Bi, errors: Bn },
      tn ? { fetchers: new Map(O.fetchers) } : {}
    );
  }
  function oi(ne) {
    return O.fetchers.get(ne) || Gx;
  }
  function _t(ne, Q, le, ge) {
    if (c)
      throw new Error(
        "router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback."
      );
    se.has(ne) && Ie(ne);
    let me = S || b,
      Ee = nc(
        O.location,
        O.matches,
        E,
        N.v7_prependBasename,
        le,
        Q,
        ge == null ? void 0 : ge.relative
      ),
      ve = mn(me, Ee, E);
    if (!ve) {
      Ce(ne, Q, ui(404, { pathname: Ee }));
      return;
    }
    let {
      path: Ne,
      submission: we,
      error: Ge,
    } = Mu(N.v7_normalizeFormMethod, !0, Ee, ge);
    if (Ge) {
      Ce(ne, Q, Ge);
      return;
    }
    let Ye = sc(ve, Ne);
    if (((W = (ge && ge.preventScrollReset) === !0), we && Li(we.formMethod))) {
      li(ne, Q, Ne, Ye, ve, we);
      return;
    }
    Le.set(ne, { routeId: Q, path: Ne }), Qt(ne, Q, Ne, Ye, ve, we);
  }
  async function li(ne, Q, le, ge, me, Ee) {
    if ((Se(), Le.delete(ne), !ge.route.action && !ge.route.lazy)) {
      let ht = ui(405, { method: Ee.formMethod, pathname: le, routeId: Q });
      Ce(ne, Q, ht);
      return;
    }
    let ve = O.fetchers.get(ne),
      Ne = nv(Ee, ve);
    O.fetchers.set(ne, Ne), De({ fetchers: new Map(O.fetchers) });
    let we = new AbortController(),
      Ge = Jn(t.history, le, we.signal, Ee);
    se.set(ne, we);
    let Ye = await qn("action", Ge, ge, me, p, u, E);
    if (Ge.signal.aborted) {
      se.get(ne) === we && se.delete(ne);
      return;
    }
    if (An(Ye)) {
      se.delete(ne), _e.add(ne);
      let ht = Qn(Ee);
      return (
        O.fetchers.set(ne, ht),
        De({ fetchers: new Map(O.fetchers) }),
        Wt(O, Ye, { submission: Ee, isFetchActionRedirect: !0 })
      );
    }
    if (yr(Ye)) {
      Ce(ne, Q, Ye.error);
      return;
    }
    if (Ha(Ye)) throw ui(400, { type: "defer-action" });
    let Lt = O.navigation.location || O.location,
      it = Jn(t.history, Lt, we.signal),
      wt = S || b,
      Vt =
        O.navigation.state !== "idle"
          ? mn(wt, O.navigation.location, E)
          : O.matches;
    Fe(Vt, "Didn't find any matches after fetcher action");
    let Fi = ++fe;
    ke.set(ne, Fi);
    let Ma = Qn(Ee, Ye.data);
    O.fetchers.set(ne, Ma);
    let [Ue, Qe] = Nu(
      t.history,
      O,
      Vt,
      Ee,
      Lt,
      he,
      J,
      Y,
      Le,
      _e,
      wt,
      E,
      { [ge.route.id]: Ye.data },
      void 0
    );
    Qe.filter((ht) => ht.key !== ne).forEach((ht) => {
      let Na = ht.key,
        T = O.fetchers.get(Na),
        e = Qn(void 0, T ? T.data : void 0);
      O.fetchers.set(Na, e),
        se.has(Na) && Ie(Na),
        ht.controller && se.set(Na, ht.controller);
    }),
      De({ fetchers: new Map(O.fetchers) });
    let Bi = () => Qe.forEach((ht) => Ie(ht.key));
    we.signal.addEventListener("abort", Bi);
    let {
      results: Bn,
      loaderResults: Hn,
      fetcherResults: Xn,
    } = await ci(O.matches, Vt, Ue, Qe, it);
    if (we.signal.aborted) return;
    we.signal.removeEventListener("abort", Bi),
      ke.delete(ne),
      se.delete(ne),
      Qe.forEach((ht) => se.delete(ht.key));
    let tn = zu(Bn);
    if (tn) return Wt(O, tn);
    let { loaderData: qe, errors: Ft } = Ru(
      O,
      O.matches,
      Ue,
      Hn,
      void 0,
      Qe,
      Xn,
      ue
    );
    if (O.fetchers.has(ne)) {
      let ht = Es(Ye.data);
      O.fetchers.set(ne, ht);
    }
    let Hi = La(Fi);
    O.navigation.state === "loading" && Fi > ie
      ? (Fe(X, "Expected pending action"),
        U && U.abort(),
        Ke(O.navigation.location, {
          matches: Vt,
          loaderData: qe,
          errors: Ft,
          fetchers: new Map(O.fetchers),
        }))
      : (De(
          nt(
            { errors: Ft, loaderData: Du(O.loaderData, qe, Vt, Ft) },
            Hi || Qe.length > 0 ? { fetchers: new Map(O.fetchers) } : {}
          )
        ),
        (he = !1));
  }
  async function Qt(ne, Q, le, ge, me, Ee) {
    let ve = O.fetchers.get(ne),
      Ne = Qn(Ee, ve ? ve.data : void 0);
    O.fetchers.set(ne, Ne), De({ fetchers: new Map(O.fetchers) });
    let we = new AbortController(),
      Ge = Jn(t.history, le, we.signal);
    se.set(ne, we);
    let Ye = await qn("loader", Ge, ge, me, p, u, E);
    if (
      (Ha(Ye) && (Ye = (await Pf(Ye, Ge.signal, !0)) || Ye),
      se.get(ne) === we && se.delete(ne),
      Ge.signal.aborted)
    )
      return;
    if (An(Ye)) {
      _e.add(ne), await Wt(O, Ye);
      return;
    }
    if (yr(Ye)) {
      let it = xn(O.matches, Q);
      O.fetchers.delete(ne),
        De({
          fetchers: new Map(O.fetchers),
          errors: { [it.route.id]: Ye.error },
        });
      return;
    }
    Fe(!Ha(Ye), "Unhandled fetcher deferred data");
    let Lt = Es(Ye.data);
    O.fetchers.set(ne, Lt), De({ fetchers: new Map(O.fetchers) });
  }
  async function Wt(ne, Q, le) {
    let {
      submission: ge,
      replace: me,
      isFetchActionRedirect: Ee,
    } = le === void 0 ? {} : le;
    Q.revalidate && (he = !0);
    let ve = Or(
      ne.location,
      Q.location,
      nt({ _isRedirect: !0 }, Ee ? { _isFetchActionRedirect: !0 } : {})
    );
    if (
      (Fe(ve, "Expected a location on the redirect navigation"),
      Sf.test(Q.location) && s)
    ) {
      let Ge = t.history.createURL(Q.location),
        Ye = On(Ge.pathname, E) == null;
      if (a.location.origin !== Ge.origin || Ye) {
        me ? a.location.replace(Q.location) : a.location.assign(Q.location);
        return;
      }
    }
    U = null;
    let Ne = me === !0 ? ft.Replace : ft.Push,
      we = ge || Fu(ne.navigation);
    if (Wx.has(Q.status) && we && Li(we.formMethod))
      await Ze(Ne, ve, {
        submission: nt({}, we, { formAction: Q.location }),
        preventScrollReset: W,
      });
    else if (Ee)
      await Ze(Ne, ve, {
        overrideNavigation: us(ve),
        fetcherSubmission: we,
        preventScrollReset: W,
      });
    else {
      let Ge = us(ve, we);
      await Ze(Ne, ve, { overrideNavigation: Ge, preventScrollReset: W });
    }
  }
  async function ci(ne, Q, le, ge, me) {
    let Ee = await Promise.all([
        ...le.map((we) => qn("loader", me, we, Q, p, u, E)),
        ...ge.map((we) =>
          we.matches && we.match && we.controller
            ? qn(
                "loader",
                Jn(t.history, we.path, we.controller.signal),
                we.match,
                we.matches,
                p,
                u,
                E
              )
            : { type: xt.error, error: ui(404, { pathname: we.path }) }
        ),
      ]),
      ve = Ee.slice(0, le.length),
      Ne = Ee.slice(le.length);
    return (
      await Promise.all([
        Ou(
          ne,
          le,
          ve,
          ve.map(() => me.signal),
          !1,
          O.loaderData
        ),
        Ou(
          ne,
          ge.map((we) => we.match),
          Ne,
          ge.map((we) => (we.controller ? we.controller.signal : null)),
          !0
        ),
      ]),
      { results: Ee, loaderResults: ve, fetcherResults: Ne }
    );
  }
  function Se() {
    (he = !0),
      J.push(...Si()),
      Le.forEach((ne, Q) => {
        se.has(Q) && (Y.push(Q), Ie(Q));
      });
  }
  function Ce(ne, Q, le) {
    let ge = xn(O.matches, Q);
    ze(ne),
      De({ errors: { [ge.route.id]: le }, fetchers: new Map(O.fetchers) });
  }
  function ze(ne) {
    let Q = O.fetchers.get(ne);
    se.has(ne) && !(Q && Q.state === "loading" && ke.has(ne)) && Ie(ne),
      Le.delete(ne),
      ke.delete(ne),
      _e.delete(ne),
      O.fetchers.delete(ne);
  }
  function Ie(ne) {
    let Q = se.get(ne);
    Fe(Q, "Expected fetch controller: " + ne), Q.abort(), se.delete(ne);
  }
  function bi(ne) {
    for (let Q of ne) {
      let le = oi(Q),
        ge = Es(le.data);
      O.fetchers.set(Q, ge);
    }
  }
  function wi() {
    let ne = [],
      Q = !1;
    for (let le of _e) {
      let ge = O.fetchers.get(le);
      Fe(ge, "Expected fetcher: " + le),
        ge.state === "loading" && (_e.delete(le), ne.push(le), (Q = !0));
    }
    return bi(ne), Q;
  }
  function La(ne) {
    let Q = [];
    for (let [le, ge] of ke)
      if (ge < ne) {
        let me = O.fetchers.get(le);
        Fe(me, "Expected fetcher: " + le),
          me.state === "loading" && (Ie(le), ke.delete(le), Q.push(le));
      }
    return bi(Q), Q.length > 0;
  }
  function ki(ne, Q) {
    let le = O.blockers.get(ne) || hs;
    return xe.get(ne) !== Q && xe.set(ne, Q), le;
  }
  function Oi(ne) {
    O.blockers.delete(ne), xe.delete(ne);
  }
  function Gt(ne, Q) {
    let le = O.blockers.get(ne) || hs;
    Fe(
      (le.state === "unblocked" && Q.state === "blocked") ||
        (le.state === "blocked" && Q.state === "blocked") ||
        (le.state === "blocked" && Q.state === "proceeding") ||
        (le.state === "blocked" && Q.state === "unblocked") ||
        (le.state === "proceeding" && Q.state === "unblocked"),
      "Invalid blocker state transition: " + le.state + " -> " + Q.state
    );
    let ge = new Map(O.blockers);
    ge.set(ne, Q), De({ blockers: ge });
  }
  function Ea(ne) {
    let { currentLocation: Q, nextLocation: le, historyAction: ge } = ne;
    if (xe.size === 0) return;
    xe.size > 1 && Za(!1, "A router only supports one blocker at a time");
    let me = Array.from(xe.entries()),
      [Ee, ve] = me[me.length - 1],
      Ne = O.blockers.get(Ee);
    if (
      !(Ne && Ne.state === "proceeding") &&
      ve({ currentLocation: Q, nextLocation: le, historyAction: ge })
    )
      return Ee;
  }
  function Si(ne) {
    let Q = [];
    return (
      ue.forEach((le, ge) => {
        (!ne || ne(ge)) && (le.cancel(), Q.push(ge), ue.delete(ge));
      }),
      Q
    );
  }
  function ia(ne, Q, le) {
    if (((j = ne), (q = Q), (V = le || null), !K && O.navigation === il)) {
      K = !0;
      let ge = Pt(O.location, O.matches);
      ge != null && De({ restoreScrollPosition: ge });
    }
    return () => {
      (j = null), (q = null), (V = null);
    };
  }
  function At(ne, Q) {
    return (
      (V &&
        V(
          ne,
          Q.map((ge) => iv(ge, O.loaderData))
        )) ||
      ne.key
    );
  }
  function ei(ne, Q) {
    if (j && q) {
      let le = At(ne, Q);
      j[le] = q();
    }
  }
  function Pt(ne, Q) {
    if (j) {
      let le = At(ne, Q),
        ge = j[le];
      if (typeof ge == "number") return ge;
    }
    return null;
  }
  function Ve(ne) {
    (p = {}), (S = ac(ne, u, void 0, p));
  }
  return (
    (R = {
      get basename() {
        return E;
      },
      get state() {
        return O;
      },
      get routes() {
        return b;
      },
      initialize: Me,
      subscribe: He,
      enableScrollRestoration: ia,
      navigate: je,
      fetch: _t,
      revalidate: pt,
      createHref: (ne) => t.history.createHref(ne),
      encodeLocation: (ne) => t.history.encodeLocation(ne),
      getFetcher: oi,
      deleteFetcher: ze,
      dispose: Te,
      getBlocker: ki,
      deleteBlocker: Oi,
      _internalFetchControllers: se,
      _internalActiveDeferreds: ue,
      _internalSetRoutes: Ve,
    }),
    R
  );
}
function $x(t) {
  return (
    t != null &&
    (("formData" in t && t.formData != null) ||
      ("body" in t && t.body !== void 0))
  );
}
function nc(t, a, s, c, u, p, b) {
  let S, E;
  if (p != null && b !== "path") {
    S = [];
    for (let F of a)
      if ((S.push(F), F.route.id === p)) {
        E = F;
        break;
      }
  } else (S = a), (E = a[a.length - 1]);
  let N = ch(
    u || ".",
    ko(S).map((F) => F.pathnameBase),
    On(t.pathname, s) || t.pathname,
    b === "path"
  );
  return (
    u == null && ((N.search = t.search), (N.hash = t.hash)),
    (u == null || u === "" || u === ".") &&
      E &&
      E.route.index &&
      !uh(N.search) &&
      (N.search = N.search ? N.search.replace(/^\?/, "?index&") : "?index"),
    c &&
      s !== "/" &&
      (N.pathname = N.pathname === "/" ? s : Ki([s, N.pathname])),
    qa(N)
  );
}
function Mu(t, a, s, c) {
  if (!c || !$x(c)) return { path: s };
  if (c.formMethod && !tv(c.formMethod))
    return { path: s, error: ui(405, { method: c.formMethod }) };
  let u = () => ({ path: s, error: ui(400, { type: "invalid-body" }) }),
    p = c.formMethod || "get",
    b = t ? p.toUpperCase() : p.toLowerCase(),
    S = Af(s);
  if (c.body !== void 0) {
    if (c.formEncType === "text/plain") {
      if (!Li(b)) return u();
      let j =
        typeof c.body == "string"
          ? c.body
          : c.body instanceof FormData || c.body instanceof URLSearchParams
          ? Array.from(c.body.entries()).reduce((V, q) => {
              let [K, ae] = q;
              return (
                "" +
                V +
                K +
                "=" +
                ae +
                `
`
              );
            }, "")
          : String(c.body);
      return {
        path: s,
        submission: {
          formMethod: b,
          formAction: S,
          formEncType: c.formEncType,
          formData: void 0,
          json: void 0,
          text: j,
        },
      };
    } else if (c.formEncType === "application/json") {
      if (!Li(b)) return u();
      try {
        let j = typeof c.body == "string" ? JSON.parse(c.body) : c.body;
        return {
          path: s,
          submission: {
            formMethod: b,
            formAction: S,
            formEncType: c.formEncType,
            formData: void 0,
            json: j,
            text: void 0,
          },
        };
      } catch {
        return u();
      }
    }
  }
  Fe(
    typeof FormData == "function",
    "FormData is not available in this environment"
  );
  let E, N;
  if (c.formData) (E = rc(c.formData)), (N = c.formData);
  else if (c.body instanceof FormData) (E = rc(c.body)), (N = c.body);
  else if (c.body instanceof URLSearchParams) (E = c.body), (N = Iu(E));
  else if (c.body == null) (E = new URLSearchParams()), (N = new FormData());
  else
    try {
      (E = new URLSearchParams(c.body)), (N = Iu(E));
    } catch {
      return u();
    }
  let F = {
    formMethod: b,
    formAction: S,
    formEncType: (c && c.formEncType) || "application/x-www-form-urlencoded",
    formData: N,
    json: void 0,
    text: void 0,
  };
  if (Li(F.formMethod)) return { path: s, submission: F };
  let H = zi(s);
  return (
    a && H.search && uh(H.search) && E.append("index", ""),
    (H.search = "?" + E),
    { path: qa(H), submission: F }
  );
}
function Kx(t, a) {
  let s = t;
  if (a) {
    let c = t.findIndex((u) => u.route.id === a);
    c >= 0 && (s = t.slice(0, c));
  }
  return s;
}
function Nu(t, a, s, c, u, p, b, S, E, N, F, H, j, V) {
  let q = V ? Object.values(V)[0] : j ? Object.values(j)[0] : void 0,
    K = t.createURL(a.location),
    ae = t.createURL(u),
    G = V ? Object.keys(V)[0] : void 0,
    R = Kx(s, G).filter((X, W) => {
      if (X.route.lazy) return !0;
      if (X.route.loader == null) return !1;
      if (
        Zx(a.loaderData, a.matches[W], X) ||
        b.some((he) => he === X.route.id)
      )
        return !0;
      let U = a.matches[W],
        te = X;
      return Tu(
        X,
        nt(
          {
            currentUrl: K,
            currentParams: U.params,
            nextUrl: ae,
            nextParams: te.params,
          },
          c,
          {
            actionResult: q,
            defaultShouldRevalidate:
              p ||
              K.pathname + K.search === ae.pathname + ae.search ||
              K.search !== ae.search ||
              Cf(U, te),
          }
        )
      );
    }),
    O = [];
  return (
    E.forEach((X, W) => {
      if (!s.some((se) => se.route.id === X.routeId)) return;
      let U = mn(F, X.path, H);
      if (!U) {
        O.push({
          key: W,
          routeId: X.routeId,
          path: X.path,
          matches: null,
          match: null,
          controller: null,
        });
        return;
      }
      let te = a.fetchers.get(W),
        he = te && te.state !== "idle" && te.data === void 0 && !N.has(W),
        J = sc(U, X.path);
      (S.includes(W) ||
        he ||
        Tu(
          J,
          nt(
            {
              currentUrl: K,
              currentParams: a.matches[a.matches.length - 1].params,
              nextUrl: ae,
              nextParams: s[s.length - 1].params,
            },
            c,
            { actionResult: q, defaultShouldRevalidate: p }
          )
        )) &&
        O.push({
          key: W,
          routeId: X.routeId,
          path: X.path,
          matches: U,
          match: J,
          controller: new AbortController(),
        });
    }),
    [R, O]
  );
}
function Zx(t, a, s) {
  let c = !a || s.route.id !== a.route.id,
    u = t[s.route.id] === void 0;
  return c || u;
}
function Cf(t, a) {
  let s = t.route.path;
  return (
    t.pathname !== a.pathname ||
    (s != null && s.endsWith("*") && t.params["*"] !== a.params["*"])
  );
}
function Tu(t, a) {
  if (t.route.shouldRevalidate) {
    let s = t.route.shouldRevalidate(a);
    if (typeof s == "boolean") return s;
  }
  return a.defaultShouldRevalidate;
}
async function _u(t, a, s) {
  if (!t.lazy) return;
  let c = await t.lazy();
  if (!t.lazy) return;
  let u = s[t.id];
  Fe(u, "No route found in manifest");
  let p = {};
  for (let b in c) {
    let E = u[b] !== void 0 && b !== "hasErrorBoundary";
    Za(
      !E,
      'Route "' +
        u.id +
        '" has a static property "' +
        b +
        '" defined but its lazy function is also returning a value for this property. ' +
        ('The lazy route property "' + b + '" will be ignored.')
    ),
      !E && !yx.has(b) && (p[b] = c[b]);
  }
  Object.assign(u, p), Object.assign(u, nt({}, a(u), { lazy: void 0 }));
}
async function qn(t, a, s, c, u, p, b, S) {
  S === void 0 && (S = {});
  let E,
    N,
    F,
    H = (q) => {
      let K,
        ae = new Promise((G, L) => (K = L));
      return (
        (F = () => K()),
        a.signal.addEventListener("abort", F),
        Promise.race([
          q({ request: a, params: s.params, context: S.requestContext }),
          ae,
        ])
      );
    };
  try {
    let q = s.route[t];
    if (s.route.lazy)
      if (q) N = (await Promise.all([H(q), _u(s.route, p, u)]))[0];
      else if ((await _u(s.route, p, u), (q = s.route[t]), q)) N = await H(q);
      else if (t === "action") {
        let K = new URL(a.url),
          ae = K.pathname + K.search;
        throw ui(405, { method: a.method, pathname: ae, routeId: s.route.id });
      } else return { type: xt.data, data: void 0 };
    else if (q) N = await H(q);
    else {
      let K = new URL(a.url),
        ae = K.pathname + K.search;
      throw ui(404, { pathname: ae });
    }
    Fe(
      N !== void 0,
      "You defined " +
        (t === "action" ? "an action" : "a loader") +
        " for route " +
        ('"' +
          s.route.id +
          "\" but didn't return anything from your `" +
          t +
          "` ") +
        "function. Please return a value or `null`."
    );
  } catch (q) {
    (E = xt.error), (N = q);
  } finally {
    F && a.signal.removeEventListener("abort", F);
  }
  if (ev(N)) {
    let q = N.status;
    if (Yx.has(q)) {
      let G = N.headers.get("Location");
      if (
        (Fe(
          G,
          "Redirects returned/thrown from loaders/actions must have a Location header"
        ),
        !Sf.test(G))
      )
        G = nc(new URL(a.url), c.slice(0, c.indexOf(s) + 1), b, !0, G);
      else if (!S.isStaticRequest) {
        let L = new URL(a.url),
          R = G.startsWith("//") ? new URL(L.protocol + G) : new URL(G),
          O = On(R.pathname, b) != null;
        R.origin === L.origin && O && (G = R.pathname + R.search + R.hash);
      }
      if (S.isStaticRequest) throw (N.headers.set("Location", G), N);
      return {
        type: xt.redirect,
        status: q,
        location: G,
        revalidate: N.headers.get("X-Remix-Revalidate") !== null,
      };
    }
    if (S.isRouteRequest) throw { type: E || xt.data, response: N };
    let K,
      ae = N.headers.get("Content-Type");
    return (
      ae && /\bapplication\/json\b/.test(ae)
        ? (K = await N.json())
        : (K = await N.text()),
      E === xt.error
        ? { type: E, error: new hh(q, N.statusText, K), headers: N.headers }
        : { type: xt.data, data: K, statusCode: N.status, headers: N.headers }
    );
  }
  if (E === xt.error) return { type: E, error: N };
  if (Qx(N)) {
    var j, V;
    return {
      type: xt.deferred,
      deferredData: N,
      statusCode: (j = N.init) == null ? void 0 : j.status,
      headers:
        ((V = N.init) == null ? void 0 : V.headers) &&
        new Headers(N.init.headers),
    };
  }
  return { type: xt.data, data: N };
}
function Jn(t, a, s, c) {
  let u = t.createURL(Af(a)).toString(),
    p = { signal: s };
  if (c && Li(c.formMethod)) {
    let { formMethod: b, formEncType: S } = c;
    (p.method = b.toUpperCase()),
      S === "application/json"
        ? ((p.headers = new Headers({ "Content-Type": S })),
          (p.body = JSON.stringify(c.json)))
        : S === "text/plain"
        ? (p.body = c.text)
        : S === "application/x-www-form-urlencoded" && c.formData
        ? (p.body = rc(c.formData))
        : (p.body = c.formData);
  }
  return new Request(u, p);
}
function rc(t) {
  let a = new URLSearchParams();
  for (let [s, c] of t.entries())
    a.append(s, typeof c == "string" ? c : c.name);
  return a;
}
function Iu(t) {
  let a = new FormData();
  for (let [s, c] of t.entries()) a.append(s, c);
  return a;
}
function qx(t, a, s, c, u) {
  let p = {},
    b = null,
    S,
    E = !1,
    N = {};
  return (
    s.forEach((F, H) => {
      let j = a[H].route.id;
      if (
        (Fe(!An(F), "Cannot handle redirect results in processLoaderData"),
        yr(F))
      ) {
        let V = xn(t, j),
          q = F.error;
        c && ((q = Object.values(c)[0]), (c = void 0)),
          (b = b || {}),
          b[V.route.id] == null && (b[V.route.id] = q),
          (p[j] = void 0),
          E || ((E = !0), (S = wf(F.error) ? F.error.status : 500)),
          F.headers && (N[j] = F.headers);
      } else
        Ha(F)
          ? (u.set(j, F.deferredData), (p[j] = F.deferredData.data))
          : (p[j] = F.data),
          F.statusCode != null &&
            F.statusCode !== 200 &&
            !E &&
            (S = F.statusCode),
          F.headers && (N[j] = F.headers);
    }),
    c && ((b = c), (p[Object.keys(c)[0]] = void 0)),
    { loaderData: p, errors: b, statusCode: S || 200, loaderHeaders: N }
  );
}
function Ru(t, a, s, c, u, p, b, S) {
  let { loaderData: E, errors: N } = qx(a, s, c, u, S);
  for (let F = 0; F < p.length; F++) {
    let { key: H, match: j, controller: V } = p[F];
    Fe(
      b !== void 0 && b[F] !== void 0,
      "Did not find corresponding fetcher result"
    );
    let q = b[F];
    if (!(V && V.signal.aborted))
      if (yr(q)) {
        let K = xn(t.matches, j == null ? void 0 : j.route.id);
        (N && N[K.route.id]) || (N = nt({}, N, { [K.route.id]: q.error })),
          t.fetchers.delete(H);
      } else if (An(q)) Fe(!1, "Unhandled fetcher revalidation redirect");
      else if (Ha(q)) Fe(!1, "Unhandled fetcher deferred data");
      else {
        let K = Es(q.data);
        t.fetchers.set(H, K);
      }
  }
  return { loaderData: E, errors: N };
}
function Du(t, a, s, c) {
  let u = nt({}, a);
  for (let p of s) {
    let b = p.route.id;
    if (
      (a.hasOwnProperty(b)
        ? a[b] !== void 0 && (u[b] = a[b])
        : t[b] !== void 0 && p.route.loader && (u[b] = t[b]),
      c && c.hasOwnProperty(b))
    )
      break;
  }
  return u;
}
function xn(t, a) {
  return (
    (a ? t.slice(0, t.findIndex((c) => c.route.id === a) + 1) : [...t])
      .reverse()
      .find((c) => c.route.hasErrorBoundary === !0) || t[0]
  );
}
function ju(t) {
  let a = t.find((s) => s.index || !s.path || s.path === "/") || {
    id: "__shim-error-route__",
  };
  return {
    matches: [{ params: {}, pathname: "", pathnameBase: "", route: a }],
    route: a,
  };
}
function ui(t, a) {
  let { pathname: s, routeId: c, method: u, type: p } = a === void 0 ? {} : a,
    b = "Unknown Server Error",
    S = "Unknown @remix-run/router error";
  return (
    t === 400
      ? ((b = "Bad Request"),
        u && s && c
          ? (S =
              "You made a " +
              u +
              ' request to "' +
              s +
              '" but ' +
              ('did not provide a `loader` for route "' + c + '", ') +
              "so there is no way to handle the request.")
          : p === "defer-action"
          ? (S = "defer() is not supported in actions")
          : p === "invalid-body" && (S = "Unable to encode submission body"))
      : t === 403
      ? ((b = "Forbidden"),
        (S = 'Route "' + c + '" does not match URL "' + s + '"'))
      : t === 404
      ? ((b = "Not Found"), (S = 'No route matches URL "' + s + '"'))
      : t === 405 &&
        ((b = "Method Not Allowed"),
        u && s && c
          ? (S =
              "You made a " +
              u.toUpperCase() +
              ' request to "' +
              s +
              '" but ' +
              ('did not provide an `action` for route "' + c + '", ') +
              "so there is no way to handle the request.")
          : u && (S = 'Invalid request method "' + u.toUpperCase() + '"')),
    new hh(t || 500, b, new Error(S), !0)
  );
}
function zu(t) {
  for (let a = t.length - 1; a >= 0; a--) {
    let s = t[a];
    if (An(s)) return s;
  }
}
function Af(t) {
  let a = typeof t == "string" ? zi(t) : t;
  return qa(nt({}, a, { hash: "" }));
}
function Jx(t, a) {
  return t.pathname !== a.pathname || t.search !== a.search
    ? !1
    : t.hash === ""
    ? a.hash !== ""
    : t.hash === a.hash
    ? !0
    : a.hash !== "";
}
function Ha(t) {
  return t.type === xt.deferred;
}
function yr(t) {
  return t.type === xt.error;
}
function An(t) {
  return (t && t.type) === xt.redirect;
}
function Qx(t) {
  let a = t;
  return (
    a &&
    typeof a == "object" &&
    typeof a.data == "object" &&
    typeof a.subscribe == "function" &&
    typeof a.cancel == "function" &&
    typeof a.resolveData == "function"
  );
}
function ev(t) {
  return (
    t != null &&
    typeof t.status == "number" &&
    typeof t.statusText == "string" &&
    typeof t.headers == "object" &&
    typeof t.body < "u"
  );
}
function tv(t) {
  return Xx.has(t.toLowerCase());
}
function Li(t) {
  return Bx.has(t.toLowerCase());
}
async function Ou(t, a, s, c, u, p) {
  for (let b = 0; b < s.length; b++) {
    let S = s[b],
      E = a[b];
    if (!E) continue;
    let N = t.find((H) => H.route.id === E.route.id),
      F = N != null && !Cf(N, E) && (p && p[E.route.id]) !== void 0;
    if (Ha(S) && (u || F)) {
      let H = c[b];
      Fe(H, "Expected an AbortSignal for revalidating fetcher deferred result"),
        await Pf(S, H, u).then((j) => {
          j && (s[b] = j || s[b]);
        });
    }
  }
}
async function Pf(t, a, s) {
  if ((s === void 0 && (s = !1), !(await t.deferredData.resolveData(a)))) {
    if (s)
      try {
        return { type: xt.data, data: t.deferredData.unwrappedData };
      } catch (u) {
        return { type: xt.error, error: u };
      }
    return { type: xt.data, data: t.deferredData.data };
  }
}
function uh(t) {
  return new URLSearchParams(t).getAll("index").some((a) => a === "");
}
function iv(t, a) {
  let { route: s, pathname: c, params: u } = t;
  return { id: s.id, pathname: c, params: u, data: a[s.id], handle: s.handle };
}
function sc(t, a) {
  let s = typeof a == "string" ? zi(a).search : a.search;
  if (t[t.length - 1].route.index && uh(s || "")) return t[t.length - 1];
  let c = ko(t);
  return c[c.length - 1];
}
function Fu(t) {
  let {
    formMethod: a,
    formAction: s,
    formEncType: c,
    text: u,
    formData: p,
    json: b,
  } = t;
  if (!(!a || !s || !c)) {
    if (u != null)
      return {
        formMethod: a,
        formAction: s,
        formEncType: c,
        formData: void 0,
        json: void 0,
        text: u,
      };
    if (p != null)
      return {
        formMethod: a,
        formAction: s,
        formEncType: c,
        formData: p,
        json: void 0,
        text: void 0,
      };
    if (b !== void 0)
      return {
        formMethod: a,
        formAction: s,
        formEncType: c,
        formData: void 0,
        json: b,
        text: void 0,
      };
  }
}
function us(t, a) {
  return a
    ? {
        state: "loading",
        location: t,
        formMethod: a.formMethod,
        formAction: a.formAction,
        formEncType: a.formEncType,
        formData: a.formData,
        json: a.json,
        text: a.text,
      }
    : {
        state: "loading",
        location: t,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
      };
}
function av(t, a) {
  return {
    state: "submitting",
    location: t,
    formMethod: a.formMethod,
    formAction: a.formAction,
    formEncType: a.formEncType,
    formData: a.formData,
    json: a.json,
    text: a.text,
  };
}
function Qn(t, a) {
  return t
    ? {
        state: "loading",
        formMethod: t.formMethod,
        formAction: t.formAction,
        formEncType: t.formEncType,
        formData: t.formData,
        json: t.json,
        text: t.text,
        data: a,
        " _hasFetcherDoneAnything ": !0,
      }
    : {
        state: "loading",
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
        data: a,
        " _hasFetcherDoneAnything ": !0,
      };
}
function nv(t, a) {
  return {
    state: "submitting",
    formMethod: t.formMethod,
    formAction: t.formAction,
    formEncType: t.formEncType,
    formData: t.formData,
    json: t.json,
    text: t.text,
    data: a ? a.data : void 0,
    " _hasFetcherDoneAnything ": !0,
  };
}
function Es(t) {
  return {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: t,
    " _hasFetcherDoneAnything ": !0,
  };
}
/**
 * React Router v6.14.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function io() {
  return (
    (io = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var a = 1; a < arguments.length; a++) {
            var s = arguments[a];
            for (var c in s)
              Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
          }
          return t;
        }),
    io.apply(this, arguments)
  );
}
const So = ee.createContext(null),
  dh = ee.createContext(null),
  en = ee.createContext(null),
  Co = ee.createContext(null),
  Pa = ee.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  Lf = ee.createContext(null);
function rv(t, a) {
  let { relative: s } = a === void 0 ? {} : a;
  Gr() || Fe(!1);
  let { basename: c, navigator: u } = ee.useContext(en),
    { hash: p, pathname: b, search: S } = ph(t, { relative: s }),
    E = b;
  return (
    c !== "/" && (E = b === "/" ? c : Ki([c, b])),
    u.createHref({ pathname: E, search: S, hash: p })
  );
}
function Gr() {
  return ee.useContext(Co) != null;
}
function Fn() {
  return Gr() || Fe(!1), ee.useContext(Co).location;
}
function Ef(t) {
  ee.useContext(en).static || ee.useLayoutEffect(t);
}
function ta() {
  let { isDataRoute: t } = ee.useContext(Pa);
  return t ? yv() : sv();
}
function sv() {
  Gr() || Fe(!1);
  let t = ee.useContext(So),
    { basename: a, navigator: s } = ee.useContext(en),
    { matches: c } = ee.useContext(Pa),
    { pathname: u } = Fn(),
    p = JSON.stringify(ko(c).map((E) => E.pathnameBase)),
    b = ee.useRef(!1);
  return (
    Ef(() => {
      b.current = !0;
    }),
    ee.useCallback(
      function (E, N) {
        if ((N === void 0 && (N = {}), !b.current)) return;
        if (typeof E == "number") {
          s.go(E);
          return;
        }
        let F = ch(E, JSON.parse(p), u, N.relative === "path");
        t == null &&
          a !== "/" &&
          (F.pathname = F.pathname === "/" ? a : Ki([a, F.pathname])),
          (N.replace ? s.replace : s.push)(F, N.state, N);
      },
      [a, s, p, u, t]
    )
  );
}
const ov = ee.createContext(null);
function lv(t) {
  let a = ee.useContext(Pa).outlet;
  return a && ee.createElement(ov.Provider, { value: t }, a);
}
function ph(t, a) {
  let { relative: s } = a === void 0 ? {} : a,
    { matches: c } = ee.useContext(Pa),
    { pathname: u } = Fn(),
    p = JSON.stringify(ko(c).map((b) => b.pathnameBase));
  return ee.useMemo(() => ch(t, JSON.parse(p), u, s === "path"), [t, p, u, s]);
}
function cv(t, a, s) {
  Gr() || Fe(!1);
  let { navigator: c } = ee.useContext(en),
    { matches: u } = ee.useContext(Pa),
    p = u[u.length - 1],
    b = p ? p.params : {};
  p && p.pathname;
  let S = p ? p.pathnameBase : "/";
  p && p.route;
  let E = Fn(),
    N;
  if (a) {
    var F;
    let K = typeof a == "string" ? zi(a) : a;
    S === "/" || ((F = K.pathname) != null && F.startsWith(S)) || Fe(!1),
      (N = K);
  } else N = E;
  let H = N.pathname || "/",
    j = S === "/" ? H : H.slice(S.length) || "/",
    V = mn(t, { pathname: j }),
    q = fv(
      V &&
        V.map((K) =>
          Object.assign({}, K, {
            params: Object.assign({}, b, K.params),
            pathname: Ki([
              S,
              c.encodeLocation
                ? c.encodeLocation(K.pathname).pathname
                : K.pathname,
            ]),
            pathnameBase:
              K.pathnameBase === "/"
                ? S
                : Ki([
                    S,
                    c.encodeLocation
                      ? c.encodeLocation(K.pathnameBase).pathname
                      : K.pathnameBase,
                  ]),
          })
        ),
      u,
      s
    );
  return a && q
    ? ee.createElement(
        Co.Provider,
        {
          value: {
            location: io(
              {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
              },
              N
            ),
            navigationType: ft.Pop,
          },
        },
        q
      )
    : q;
}
function hv() {
  let t = vv(),
    a = wf(t)
      ? t.status + " " + t.statusText
      : t instanceof Error
      ? t.message
      : JSON.stringify(t),
    s = t instanceof Error ? t.stack : null,
    u = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" },
    p = null;
  return ee.createElement(
    ee.Fragment,
    null,
    ee.createElement("h2", null, "Unexpected Application Error!"),
    ee.createElement("h3", { style: { fontStyle: "italic" } }, a),
    s ? ee.createElement("pre", { style: u }, s) : null,
    p
  );
}
const uv = ee.createElement(hv, null);
class dv extends ee.Component {
  constructor(a) {
    super(a),
      (this.state = {
        location: a.location,
        revalidation: a.revalidation,
        error: a.error,
      });
  }
  static getDerivedStateFromError(a) {
    return { error: a };
  }
  static getDerivedStateFromProps(a, s) {
    return s.location !== a.location ||
      (s.revalidation !== "idle" && a.revalidation === "idle")
      ? { error: a.error, location: a.location, revalidation: a.revalidation }
      : {
          error: a.error || s.error,
          location: s.location,
          revalidation: a.revalidation || s.revalidation,
        };
  }
  componentDidCatch(a, s) {
    console.error(
      "React Router caught the following error during render",
      a,
      s
    );
  }
  render() {
    return this.state.error
      ? ee.createElement(
          Pa.Provider,
          { value: this.props.routeContext },
          ee.createElement(Lf.Provider, {
            value: this.state.error,
            children: this.props.component,
          })
        )
      : this.props.children;
  }
}
function pv(t) {
  let { routeContext: a, match: s, children: c } = t,
    u = ee.useContext(So);
  return (
    u &&
      u.static &&
      u.staticContext &&
      (s.route.errorElement || s.route.ErrorBoundary) &&
      (u.staticContext._deepestRenderedBoundaryId = s.route.id),
    ee.createElement(Pa.Provider, { value: a }, c)
  );
}
function fv(t, a, s) {
  var c;
  if ((a === void 0 && (a = []), s === void 0 && (s = null), t == null)) {
    var u;
    if ((u = s) != null && u.errors) t = s.matches;
    else return null;
  }
  let p = t,
    b = (c = s) == null ? void 0 : c.errors;
  if (b != null) {
    let S = p.findIndex(
      (E) => E.route.id && (b == null ? void 0 : b[E.route.id])
    );
    S >= 0 || Fe(!1), (p = p.slice(0, Math.min(p.length, S + 1)));
  }
  return p.reduceRight((S, E, N) => {
    let F = E.route.id ? (b == null ? void 0 : b[E.route.id]) : null,
      H = null;
    s && (H = E.route.errorElement || uv);
    let j = a.concat(p.slice(0, N + 1)),
      V = () => {
        let q;
        return (
          F
            ? (q = H)
            : E.route.Component
            ? (q = ee.createElement(E.route.Component, null))
            : E.route.element
            ? (q = E.route.element)
            : (q = S),
          ee.createElement(pv, {
            match: E,
            routeContext: { outlet: S, matches: j, isDataRoute: s != null },
            children: q,
          })
        );
      };
    return s && (E.route.ErrorBoundary || E.route.errorElement || N === 0)
      ? ee.createElement(dv, {
          location: s.location,
          revalidation: s.revalidation,
          component: H,
          error: F,
          children: V(),
          routeContext: { outlet: null, matches: j, isDataRoute: !0 },
        })
      : V();
  }, null);
}
var oc;
(function (t) {
  (t.UseBlocker = "useBlocker"),
    (t.UseRevalidator = "useRevalidator"),
    (t.UseNavigateStable = "useNavigate");
})(oc || (oc = {}));
var Fr;
(function (t) {
  (t.UseBlocker = "useBlocker"),
    (t.UseLoaderData = "useLoaderData"),
    (t.UseActionData = "useActionData"),
    (t.UseRouteError = "useRouteError"),
    (t.UseNavigation = "useNavigation"),
    (t.UseRouteLoaderData = "useRouteLoaderData"),
    (t.UseMatches = "useMatches"),
    (t.UseRevalidator = "useRevalidator"),
    (t.UseNavigateStable = "useNavigate"),
    (t.UseRouteId = "useRouteId");
})(Fr || (Fr = {}));
function gv(t) {
  let a = ee.useContext(So);
  return a || Fe(!1), a;
}
function mv(t) {
  let a = ee.useContext(dh);
  return a || Fe(!1), a;
}
function xv(t) {
  let a = ee.useContext(Pa);
  return a || Fe(!1), a;
}
function Mf(t) {
  let a = xv(),
    s = a.matches[a.matches.length - 1];
  return s.route.id || Fe(!1), s.route.id;
}
function vv() {
  var t;
  let a = ee.useContext(Lf),
    s = mv(Fr.UseRouteError),
    c = Mf(Fr.UseRouteError);
  return a || ((t = s.errors) == null ? void 0 : t[c]);
}
function yv() {
  let { router: t } = gv(oc.UseNavigateStable),
    a = Mf(Fr.UseNavigateStable),
    s = ee.useRef(!1);
  return (
    Ef(() => {
      s.current = !0;
    }),
    ee.useCallback(
      function (u, p) {
        p === void 0 && (p = {}),
          s.current &&
            (typeof u == "number"
              ? t.navigate(u)
              : t.navigate(u, io({ fromRouteId: a }, p)));
      },
      [t, a]
    )
  );
}
const bv = "startTransition",
  Bu = rg[bv];
function wv(t) {
  let { fallbackElement: a, router: s, future: c } = t,
    [u, p] = ee.useState(s.state),
    { v7_startTransition: b } = c || {},
    S = ee.useCallback(
      (H) => {
        b && Bu ? Bu(() => p(H)) : p(H);
      },
      [p, b]
    );
  ee.useLayoutEffect(() => s.subscribe(S), [s, S]);
  let E = ee.useMemo(
      () => ({
        createHref: s.createHref,
        encodeLocation: s.encodeLocation,
        go: (H) => s.navigate(H),
        push: (H, j, V) =>
          s.navigate(H, {
            state: j,
            preventScrollReset: V == null ? void 0 : V.preventScrollReset,
          }),
        replace: (H, j, V) =>
          s.navigate(H, {
            replace: !0,
            state: j,
            preventScrollReset: V == null ? void 0 : V.preventScrollReset,
          }),
      }),
      [s]
    ),
    N = s.basename || "/",
    F = ee.useMemo(
      () => ({ router: s, navigator: E, static: !1, basename: N }),
      [s, E, N]
    );
  return ee.createElement(
    ee.Fragment,
    null,
    ee.createElement(
      So.Provider,
      { value: F },
      ee.createElement(
        dh.Provider,
        { value: u },
        ee.createElement(
          Cv,
          {
            basename: N,
            location: u.location,
            navigationType: u.historyAction,
            navigator: E,
          },
          u.initialized
            ? ee.createElement(kv, { routes: s.routes, state: u })
            : a
        )
      )
    ),
    null
  );
}
function kv(t) {
  let { routes: a, state: s } = t;
  return cv(a, void 0, s);
}
function Sv(t) {
  return lv(t.context);
}
function Cv(t) {
  let {
    basename: a = "/",
    children: s = null,
    location: c,
    navigationType: u = ft.Pop,
    navigator: p,
    static: b = !1,
  } = t;
  Gr() && Fe(!1);
  let S = a.replace(/^\/*/, "/"),
    E = ee.useMemo(() => ({ basename: S, navigator: p, static: b }), [S, p, b]);
  typeof c == "string" && (c = zi(c));
  let {
      pathname: N = "/",
      search: F = "",
      hash: H = "",
      state: j = null,
      key: V = "default",
    } = c,
    q = ee.useMemo(() => {
      let K = On(N, S);
      return K == null
        ? null
        : {
            location: { pathname: K, search: F, hash: H, state: j, key: V },
            navigationType: u,
          };
    }, [S, N, F, H, j, V, u]);
  return q == null
    ? null
    : ee.createElement(
        en.Provider,
        { value: E },
        ee.createElement(Co.Provider, { children: s, value: q })
      );
}
var Hu;
(function (t) {
  (t[(t.pending = 0)] = "pending"),
    (t[(t.success = 1)] = "success"),
    (t[(t.error = 2)] = "error");
})(Hu || (Hu = {}));
new Promise(() => {});
function Av(t) {
  let a = {
    hasErrorBoundary: t.ErrorBoundary != null || t.errorElement != null,
  };
  return (
    t.Component &&
      Object.assign(a, {
        element: ee.createElement(t.Component),
        Component: void 0,
      }),
    t.ErrorBoundary &&
      Object.assign(a, {
        errorElement: ee.createElement(t.ErrorBoundary),
        ErrorBoundary: void 0,
      }),
    a
  );
}
/**
 * React Router DOM v6.14.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Rn() {
  return (
    (Rn = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var a = 1; a < arguments.length; a++) {
            var s = arguments[a];
            for (var c in s)
              Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
          }
          return t;
        }),
    Rn.apply(this, arguments)
  );
}
function Nf(t, a) {
  if (t == null) return {};
  var s = {},
    c = Object.keys(t),
    u,
    p;
  for (p = 0; p < c.length; p++)
    (u = c[p]), !(a.indexOf(u) >= 0) && (s[u] = t[u]);
  return s;
}
function Pv(t) {
  return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
}
function Lv(t, a) {
  return t.button === 0 && (!a || a === "_self") && !Pv(t);
}
const Ev = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
  ],
  Mv = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "children",
  ];
function Nv(t, a) {
  return Ux({
    basename: a == null ? void 0 : a.basename,
    future: Rn({}, a == null ? void 0 : a.future, { v7_prependBasename: !0 }),
    history: mx({ window: a == null ? void 0 : a.window }),
    hydrationData: (a == null ? void 0 : a.hydrationData) || Tv(),
    routes: t,
    mapRouteProperties: Av,
  }).initialize();
}
function Tv() {
  var t;
  let a = (t = window) == null ? void 0 : t.__staticRouterHydrationData;
  return a && a.errors && (a = Rn({}, a, { errors: _v(a.errors) })), a;
}
function _v(t) {
  if (!t) return null;
  let a = Object.entries(t),
    s = {};
  for (let [c, u] of a)
    if (u && u.__type === "RouteErrorResponse")
      s[c] = new hh(u.status, u.statusText, u.data, u.internal === !0);
    else if (u && u.__type === "Error") {
      let p = new Error(u.message);
      (p.stack = ""), (s[c] = p);
    } else s[c] = u;
  return s;
}
const Iv =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  Rv = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  Ao = ee.forwardRef(function (a, s) {
    let {
        onClick: c,
        relative: u,
        reloadDocument: p,
        replace: b,
        state: S,
        target: E,
        to: N,
        preventScrollReset: F,
      } = a,
      H = Nf(a, Ev),
      { basename: j } = ee.useContext(en),
      V,
      q = !1;
    if (typeof N == "string" && Rv.test(N) && ((V = N), Iv))
      try {
        let L = new URL(window.location.href),
          R = N.startsWith("//") ? new URL(L.protocol + N) : new URL(N),
          O = On(R.pathname, j);
        R.origin === L.origin && O != null
          ? (N = O + R.search + R.hash)
          : (q = !0);
      } catch {}
    let K = rv(N, { relative: u }),
      ae = Dv(N, {
        replace: b,
        state: S,
        target: E,
        preventScrollReset: F,
        relative: u,
      });
    function G(L) {
      c && c(L), L.defaultPrevented || ae(L);
    }
    return ee.createElement(
      "a",
      Rn({}, H, { href: V || K, onClick: q || p ? c : G, ref: s, target: E })
    );
  }),
  hi = ee.forwardRef(function (a, s) {
    let {
        "aria-current": c = "page",
        caseSensitive: u = !1,
        className: p = "",
        end: b = !1,
        style: S,
        to: E,
        children: N,
      } = a,
      F = Nf(a, Mv),
      H = ph(E, { relative: F.relative }),
      j = Fn(),
      V = ee.useContext(dh),
      { navigator: q } = ee.useContext(en),
      K = q.encodeLocation ? q.encodeLocation(H).pathname : H.pathname,
      ae = j.pathname,
      G =
        V && V.navigation && V.navigation.location
          ? V.navigation.location.pathname
          : null;
    u ||
      ((ae = ae.toLowerCase()),
      (G = G ? G.toLowerCase() : null),
      (K = K.toLowerCase()));
    let L = ae === K || (!b && ae.startsWith(K) && ae.charAt(K.length) === "/"),
      R =
        G != null &&
        (G === K || (!b && G.startsWith(K) && G.charAt(K.length) === "/")),
      O = L ? c : void 0,
      X;
    typeof p == "function"
      ? (X = p({ isActive: L, isPending: R }))
      : (X = [p, L ? "active" : null, R ? "pending" : null]
          .filter(Boolean)
          .join(" "));
    let W = typeof S == "function" ? S({ isActive: L, isPending: R }) : S;
    return ee.createElement(
      Ao,
      Rn({}, F, { "aria-current": O, className: X, ref: s, style: W, to: E }),
      typeof N == "function" ? N({ isActive: L, isPending: R }) : N
    );
  });
var Xu;
(function (t) {
  (t.UseScrollRestoration = "useScrollRestoration"),
    (t.UseSubmit = "useSubmit"),
    (t.UseSubmitFetcher = "useSubmitFetcher"),
    (t.UseFetcher = "useFetcher");
})(Xu || (Xu = {}));
var Yu;
(function (t) {
  (t.UseFetchers = "useFetchers"),
    (t.UseScrollRestoration = "useScrollRestoration");
})(Yu || (Yu = {}));
function Dv(t, a) {
  let {
      target: s,
      replace: c,
      state: u,
      preventScrollReset: p,
      relative: b,
    } = a === void 0 ? {} : a,
    S = ta(),
    E = Fn(),
    N = ph(t, { relative: b });
  return ee.useCallback(
    (F) => {
      if (Lv(F, s)) {
        F.preventDefault();
        let H = c !== void 0 ? c : qa(E) === qa(N);
        S(t, { replace: H, state: u, preventScrollReset: p, relative: b });
      }
    },
    [E, S, N, c, u, s, t, p, b]
  );
}
const fh = "./public/dist/assets/logo_nearMed-bcbef4ad.svg",
  yi = ee.createContext({});
function jv() {
  const [t, a] = ee.useState("Login To Your Account"),
    s = ta(),
    c = ee.useContext(yi),
    u = ee.useRef(""),
    p = ee.useRef("");
  return k.jsxs("div", {
    className: "main",
    children: [
      k.jsxs("div", {
        className: "form-container",
        children: [
          k.jsx("div", {
            className: "topbar",
            children: k.jsx("img", { src: fh, alt: "", className: "logo" }),
          }),
          k.jsxs("div", {
            className: "form-content",
            children: [
              k.jsx("span", { className: "message", children: t }),
              k.jsxs("form", {
                onSubmit: (b) => {
                  b.preventDefault();
                  const S = u.current.value,
                    E = p.current.value;
                  fetch(`${c.api}/medilogin`, {
                    method: "post",
                    headers: { "content-type": "application/json" },
                    body: JSON.stringify({ username: S, password: E }),
                  })
                    .then((N) => N.json())
                    .then((N) => {
                      if (!N.owner.cal) {
                        a("Wrong ID or Password");
                        return;
                      }
                      c.updateStore(N),
                        localStorage.setItem("rscr", JSON.stringify(N)),
                        sessionStorage.setItem("username", S),
                        localStorage.setItem("username", S),
                        localStorage.setItem("password", E),
                        s("/dashboard");
                    });
                },
                action: "#",
                className: "form",
                children: [
                  k.jsxs("div", {
                    className: "input-container",
                    children: [
                      k.jsx("svg", {
                        className: "icon",
                        fill: "currentColor",
                        viewBox: "0 0 20 20",
                        xmlns: "http://www.w3.org/2000/svg",
                        "aria-hidden": "true",
                        children: k.jsx("path", {
                          clipRule: "evenodd",
                          fillRule: "evenodd",
                          d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z",
                        }),
                      }),
                      k.jsx("input", {
                        ref: u,
                        type: "text",
                        placeholder: "Username",
                        required: !0,
                      }),
                    ],
                  }),
                  k.jsxs("div", {
                    className: "input-container",
                    children: [
                      k.jsx("svg", {
                        className: "icon",
                        fill: "currentColor",
                        viewBox: "0 0 20 20",
                        xmlns: "http://www.w3.org/2000/svg",
                        "aria-hidden": "true",
                        children: k.jsx("path", {
                          clipRule: "evenodd",
                          fillRule: "evenodd",
                          d: "M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z",
                        }),
                      }),
                      k.jsx("input", {
                        ref: p,
                        type: "password",
                        placeholder: "Password",
                        required: !0,
                      }),
                    ],
                  }),
                  k.jsx("button", {
                    onClick: () => {},
                    className: "btn btn-primary",
                    children: "SIGN IN",
                  }),
                ],
              }),
            ],
          }),
        ],
      }),
      k.jsx("div", {
        className: "sidebar",
        children: k.jsxs("div", {
          className: "sidebar__container",
          children: [
            k.jsx("span", { className: "ques", children: "New Here?" }),
            k.jsx("span", {
              className: "msg",
              children:
                "Sign up and discover a great amount of new opportunities!",
            }),
            k.jsx(Ao, {
              to: "/signup",
              className: "btn btn-secondary",
              children: "SIGN UP",
            }),
          ],
        }),
      }),
    ],
  });
}
var Ae = {},
  zv = {
    get exports() {
      return Ae;
    },
    set exports(t) {
      Ae = t;
    },
  },
  Ov = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  Fv = Ov,
  Bv = Fv;
function Tf() {}
function _f() {}
_f.resetWarningCache = Tf;
var Hv = function () {
  function t(c, u, p, b, S, E) {
    if (E !== Bv) {
      var N = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
      );
      throw ((N.name = "Invariant Violation"), N);
    }
  }
  t.isRequired = t;
  function a() {
    return t;
  }
  var s = {
    array: t,
    bigint: t,
    bool: t,
    func: t,
    number: t,
    object: t,
    string: t,
    symbol: t,
    any: t,
    arrayOf: a,
    element: t,
    elementType: t,
    instanceOf: a,
    node: t,
    objectOf: a,
    oneOf: a,
    oneOfType: a,
    shape: a,
    exact: a,
    checkPropTypes: _f,
    resetWarningCache: Tf,
  };
  return (s.PropTypes = s), s;
};
zv.exports = Hv();
var lc = {},
  Xv = {
    get exports() {
      return lc;
    },
    set exports(t) {
      lc = t;
    },
  };
(function (t) {
  var a = Object.prototype.hasOwnProperty,
    s = "~";
  function c() {}
  Object.create &&
    ((c.prototype = Object.create(null)), new c().__proto__ || (s = !1));
  function u(E, N, F) {
    (this.fn = E), (this.context = N), (this.once = F || !1);
  }
  function p(E, N, F, H, j) {
    if (typeof F != "function")
      throw new TypeError("The listener must be a function");
    var V = new u(F, H || E, j),
      q = s ? s + N : N;
    return (
      E._events[q]
        ? E._events[q].fn
          ? (E._events[q] = [E._events[q], V])
          : E._events[q].push(V)
        : ((E._events[q] = V), E._eventsCount++),
      E
    );
  }
  function b(E, N) {
    --E._eventsCount === 0 ? (E._events = new c()) : delete E._events[N];
  }
  function S() {
    (this._events = new c()), (this._eventsCount = 0);
  }
  (S.prototype.eventNames = function () {
    var N = [],
      F,
      H;
    if (this._eventsCount === 0) return N;
    for (H in (F = this._events)) a.call(F, H) && N.push(s ? H.slice(1) : H);
    return Object.getOwnPropertySymbols
      ? N.concat(Object.getOwnPropertySymbols(F))
      : N;
  }),
    (S.prototype.listeners = function (N) {
      var F = s ? s + N : N,
        H = this._events[F];
      if (!H) return [];
      if (H.fn) return [H.fn];
      for (var j = 0, V = H.length, q = new Array(V); j < V; j++)
        q[j] = H[j].fn;
      return q;
    }),
    (S.prototype.listenerCount = function (N) {
      var F = s ? s + N : N,
        H = this._events[F];
      return H ? (H.fn ? 1 : H.length) : 0;
    }),
    (S.prototype.emit = function (N, F, H, j, V, q) {
      var K = s ? s + N : N;
      if (!this._events[K]) return !1;
      var ae = this._events[K],
        G = arguments.length,
        L,
        R;
      if (ae.fn) {
        switch ((ae.once && this.removeListener(N, ae.fn, void 0, !0), G)) {
          case 1:
            return ae.fn.call(ae.context), !0;
          case 2:
            return ae.fn.call(ae.context, F), !0;
          case 3:
            return ae.fn.call(ae.context, F, H), !0;
          case 4:
            return ae.fn.call(ae.context, F, H, j), !0;
          case 5:
            return ae.fn.call(ae.context, F, H, j, V), !0;
          case 6:
            return ae.fn.call(ae.context, F, H, j, V, q), !0;
        }
        for (R = 1, L = new Array(G - 1); R < G; R++) L[R - 1] = arguments[R];
        ae.fn.apply(ae.context, L);
      } else {
        var O = ae.length,
          X;
        for (R = 0; R < O; R++)
          switch (
            (ae[R].once && this.removeListener(N, ae[R].fn, void 0, !0), G)
          ) {
            case 1:
              ae[R].fn.call(ae[R].context);
              break;
            case 2:
              ae[R].fn.call(ae[R].context, F);
              break;
            case 3:
              ae[R].fn.call(ae[R].context, F, H);
              break;
            case 4:
              ae[R].fn.call(ae[R].context, F, H, j);
              break;
            default:
              if (!L)
                for (X = 1, L = new Array(G - 1); X < G; X++)
                  L[X - 1] = arguments[X];
              ae[R].fn.apply(ae[R].context, L);
          }
      }
      return !0;
    }),
    (S.prototype.on = function (N, F, H) {
      return p(this, N, F, H, !1);
    }),
    (S.prototype.once = function (N, F, H) {
      return p(this, N, F, H, !0);
    }),
    (S.prototype.removeListener = function (N, F, H, j) {
      var V = s ? s + N : N;
      if (!this._events[V]) return this;
      if (!F) return b(this, V), this;
      var q = this._events[V];
      if (q.fn)
        q.fn === F && (!j || q.once) && (!H || q.context === H) && b(this, V);
      else {
        for (var K = 0, ae = [], G = q.length; K < G; K++)
          (q[K].fn !== F || (j && !q[K].once) || (H && q[K].context !== H)) &&
            ae.push(q[K]);
        ae.length
          ? (this._events[V] = ae.length === 1 ? ae[0] : ae)
          : b(this, V);
      }
      return this;
    }),
    (S.prototype.removeAllListeners = function (N) {
      var F;
      return (
        N
          ? ((F = s ? s + N : N), this._events[F] && b(this, F))
          : ((this._events = new c()), (this._eventsCount = 0)),
        this
      );
    }),
    (S.prototype.off = S.prototype.removeListener),
    (S.prototype.addListener = S.prototype.on),
    (S.prefixed = s),
    (S.EventEmitter = S),
    (t.exports = S);
})(Xv);
const Yv = lc;
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function Wv(
  t,
  a,
  s,
  c
) {
  function u(p) {
    return p instanceof s
      ? p
      : new s(function (b) {
          b(p);
        });
  }
  return new (s || (s = Promise))(function (p, b) {
    function S(F) {
      try {
        N(c.next(F));
      } catch (H) {
        b(H);
      }
    }
    function E(F) {
      try {
        N(c.throw(F));
      } catch (H) {
        b(H);
      }
    }
    function N(F) {
      F.done ? p(F.value) : u(F.value).then(S, E);
    }
    N((c = c.apply(t, a || [])).next());
  });
}
var Gv = function t(a, s) {
  if (a === s) return !0;
  if (a && s && typeof a == "object" && typeof s == "object") {
    if (a.constructor !== s.constructor) return !1;
    var c, u, p;
    if (Array.isArray(a)) {
      if (((c = a.length), c != s.length)) return !1;
      for (u = c; u-- !== 0; ) if (!t(a[u], s[u])) return !1;
      return !0;
    }
    if (a.constructor === RegExp)
      return a.source === s.source && a.flags === s.flags;
    if (a.valueOf !== Object.prototype.valueOf)
      return a.valueOf() === s.valueOf();
    if (a.toString !== Object.prototype.toString)
      return a.toString() === s.toString();
    if (((p = Object.keys(a)), (c = p.length), c !== Object.keys(s).length))
      return !1;
    for (u = c; u-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(s, p[u])) return !1;
    for (u = c; u-- !== 0; ) {
      var b = p[u];
      if (!t(a[b], s[b])) return !1;
    }
    return !0;
  }
  return a !== a && s !== s;
};
const Wu = "__googleMapsScriptId";
var vn;
(function (t) {
  (t[(t.INITIALIZED = 0)] = "INITIALIZED"),
    (t[(t.LOADING = 1)] = "LOADING"),
    (t[(t.SUCCESS = 2)] = "SUCCESS"),
    (t[(t.FAILURE = 3)] = "FAILURE");
})(vn || (vn = {}));
class za {
  constructor({
    apiKey: a,
    authReferrerPolicy: s,
    channel: c,
    client: u,
    id: p = Wu,
    language: b,
    libraries: S = [],
    mapIds: E,
    nonce: N,
    region: F,
    retries: H = 3,
    url: j = "https://maps.googleapis.com/maps/api/js",
    version: V,
  }) {
    if (
      ((this.callbacks = []),
      (this.done = !1),
      (this.loading = !1),
      (this.errors = []),
      (this.apiKey = a),
      (this.authReferrerPolicy = s),
      (this.channel = c),
      (this.client = u),
      (this.id = p || Wu),
      (this.language = b),
      (this.libraries = S),
      (this.mapIds = E),
      (this.nonce = N),
      (this.region = F),
      (this.retries = H),
      (this.url = j),
      (this.version = V),
      za.instance)
    ) {
      if (!Gv(this.options, za.instance.options))
        throw new Error(
          `Loader must not be called again with different options. ${JSON.stringify(
            this.options
          )} !== ${JSON.stringify(za.instance.options)}`
        );
      return za.instance;
    }
    za.instance = this;
  }
  get options() {
    return {
      version: this.version,
      apiKey: this.apiKey,
      channel: this.channel,
      client: this.client,
      id: this.id,
      libraries: this.libraries,
      language: this.language,
      region: this.region,
      mapIds: this.mapIds,
      nonce: this.nonce,
      url: this.url,
      authReferrerPolicy: this.authReferrerPolicy,
    };
  }
  get status() {
    return this.errors.length
      ? vn.FAILURE
      : this.done
      ? vn.SUCCESS
      : this.loading
      ? vn.LOADING
      : vn.INITIALIZED;
  }
  get failed() {
    return this.done && !this.loading && this.errors.length >= this.retries + 1;
  }
  createUrl() {
    let a = this.url;
    return (
      (a += "?callback=__googleMapsCallback"),
      this.apiKey && (a += `&key=${this.apiKey}`),
      this.channel && (a += `&channel=${this.channel}`),
      this.client && (a += `&client=${this.client}`),
      this.libraries.length > 0 &&
        (a += `&libraries=${this.libraries.join(",")}`),
      this.language && (a += `&language=${this.language}`),
      this.region && (a += `&region=${this.region}`),
      this.version && (a += `&v=${this.version}`),
      this.mapIds && (a += `&map_ids=${this.mapIds.join(",")}`),
      this.authReferrerPolicy &&
        (a += `&auth_referrer_policy=${this.authReferrerPolicy}`),
      a
    );
  }
  deleteScript() {
    const a = document.getElementById(this.id);
    a && a.remove();
  }
  load() {
    return this.loadPromise();
  }
  loadPromise() {
    return new Promise((a, s) => {
      this.loadCallback((c) => {
        c ? s(c.error) : a(window.google);
      });
    });
  }
  importLibrary(a) {
    return this.execute(), google.maps.importLibrary(a);
  }
  loadCallback(a) {
    this.callbacks.push(a), this.execute();
  }
  setScript() {
    var a, s;
    if (document.getElementById(this.id)) {
      this.callback();
      return;
    }
    const c = {
      key: this.apiKey,
      channel: this.channel,
      client: this.client,
      libraries: this.libraries.length && this.libraries,
      v: this.version,
      mapIds: this.mapIds,
      language: this.language,
      region: this.region,
      authReferrerPolicy: this.authReferrerPolicy,
    };
    Object.keys(c).forEach((p) => !c[p] && delete c[p]),
      (!(
        (s =
          (a = window == null ? void 0 : window.google) === null || a === void 0
            ? void 0
            : a.maps) === null || s === void 0
      ) &&
        s.importLibrary) ||
        ((p) => {
          let b,
            S,
            E,
            N = "The Google Maps JavaScript API",
            F = "google",
            H = "importLibrary",
            j = "__ib__",
            V = document,
            q = window;
          q = q[F] || (q[F] = {});
          const K = q.maps || (q.maps = {}),
            ae = new Set(),
            G = new URLSearchParams(),
            L = () =>
              b ||
              (b = new Promise((R, O) =>
                Wv(this, void 0, void 0, function* () {
                  var X;
                  yield (S = V.createElement("script")),
                    (S.id = this.id),
                    G.set("libraries", [...ae] + "");
                  for (E in p)
                    G.set(
                      E.replace(/[A-Z]/g, (W) => "_" + W[0].toLowerCase()),
                      p[E]
                    );
                  G.set("callback", F + ".maps." + j),
                    (S.src = this.url + "?" + G),
                    (K[j] = R),
                    (S.onerror = () => (b = O(Error(N + " could not load.")))),
                    (S.nonce =
                      this.nonce ||
                      ((X = V.querySelector("script[nonce]")) === null ||
                      X === void 0
                        ? void 0
                        : X.nonce) ||
                      ""),
                    V.head.append(S);
                })
              ));
          K[H]
            ? console.warn(N + " only loads once. Ignoring:", p)
            : (K[H] = (R, ...O) => ae.add(R) && L().then(() => K[H](R, ...O)));
        })(c);
    const u = this.libraries.map((p) => this.importLibrary(p));
    u.length || u.push(this.importLibrary("core")),
      Promise.all(u).then(
        () => this.callback(),
        (p) => {
          const b = new ErrorEvent("error", { error: p });
          this.loadErrorCallback(b);
        }
      );
  }
  reset() {
    this.deleteScript(),
      (this.done = !1),
      (this.loading = !1),
      (this.errors = []),
      (this.onerrorEvent = null);
  }
  resetIfRetryingFailed() {
    this.failed && this.reset();
  }
  loadErrorCallback(a) {
    if ((this.errors.push(a), this.errors.length <= this.retries)) {
      const s = this.errors.length * Math.pow(2, this.errors.length);
      console.error(`Failed to load Google Maps script, retrying in ${s} ms.`),
        setTimeout(() => {
          this.deleteScript(), this.setScript();
        }, s);
    } else (this.onerrorEvent = a), this.callback();
  }
  callback() {
    (this.done = !0),
      (this.loading = !1),
      this.callbacks.forEach((a) => {
        a(this.onerrorEvent);
      }),
      (this.callbacks = []);
  }
  execute() {
    if ((this.resetIfRetryingFailed(), this.done)) this.callback();
    else {
      if (window.google && window.google.maps && window.google.maps.version) {
        console.warn(
          "Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."
        ),
          this.callback();
        return;
      }
      this.loading || ((this.loading = !0), this.setScript());
    }
  }
}
var Xa = Pn;
function Pn(t, a) {
  (this.x = t), (this.y = a);
}
Pn.prototype = {
  clone: function () {
    return new Pn(this.x, this.y);
  },
  add: function (t) {
    return this.clone()._add(t);
  },
  sub: function (t) {
    return this.clone()._sub(t);
  },
  multByPoint: function (t) {
    return this.clone()._multByPoint(t);
  },
  divByPoint: function (t) {
    return this.clone()._divByPoint(t);
  },
  mult: function (t) {
    return this.clone()._mult(t);
  },
  div: function (t) {
    return this.clone()._div(t);
  },
  rotate: function (t) {
    return this.clone()._rotate(t);
  },
  rotateAround: function (t, a) {
    return this.clone()._rotateAround(t, a);
  },
  matMult: function (t) {
    return this.clone()._matMult(t);
  },
  unit: function () {
    return this.clone()._unit();
  },
  perp: function () {
    return this.clone()._perp();
  },
  round: function () {
    return this.clone()._round();
  },
  mag: function () {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  },
  equals: function (t) {
    return this.x === t.x && this.y === t.y;
  },
  dist: function (t) {
    return Math.sqrt(this.distSqr(t));
  },
  distSqr: function (t) {
    var a = t.x - this.x,
      s = t.y - this.y;
    return a * a + s * s;
  },
  angle: function () {
    return Math.atan2(this.y, this.x);
  },
  angleTo: function (t) {
    return Math.atan2(this.y - t.y, this.x - t.x);
  },
  angleWith: function (t) {
    return this.angleWithSep(t.x, t.y);
  },
  angleWithSep: function (t, a) {
    return Math.atan2(this.x * a - this.y * t, this.x * t + this.y * a);
  },
  _matMult: function (t) {
    var a = t[0] * this.x + t[1] * this.y,
      s = t[2] * this.x + t[3] * this.y;
    return (this.x = a), (this.y = s), this;
  },
  _add: function (t) {
    return (this.x += t.x), (this.y += t.y), this;
  },
  _sub: function (t) {
    return (this.x -= t.x), (this.y -= t.y), this;
  },
  _mult: function (t) {
    return (this.x *= t), (this.y *= t), this;
  },
  _div: function (t) {
    return (this.x /= t), (this.y /= t), this;
  },
  _multByPoint: function (t) {
    return (this.x *= t.x), (this.y *= t.y), this;
  },
  _divByPoint: function (t) {
    return (this.x /= t.x), (this.y /= t.y), this;
  },
  _unit: function () {
    return this._div(this.mag()), this;
  },
  _perp: function () {
    var t = this.y;
    return (this.y = this.x), (this.x = -t), this;
  },
  _rotate: function (t) {
    var a = Math.cos(t),
      s = Math.sin(t),
      c = a * this.x - s * this.y,
      u = s * this.x + a * this.y;
    return (this.x = c), (this.y = u), this;
  },
  _rotateAround: function (t, a) {
    var s = Math.cos(t),
      c = Math.sin(t),
      u = a.x + s * (this.x - a.x) - c * (this.y - a.y),
      p = a.y + c * (this.x - a.x) + s * (this.y - a.y);
    return (this.x = u), (this.y = p), this;
  },
  _round: function () {
    return (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this;
  },
};
Pn.convert = function (t) {
  return t instanceof Pn ? t : Array.isArray(t) ? new Pn(t[0], t[1]) : t;
};
function kt() {
  return (kt = Object.assign
    ? Object.assign.bind()
    : function (t) {
        for (var a = 1; a < arguments.length; a++) {
          var s = arguments[a];
          for (var c in s)
            Object.prototype.hasOwnProperty.call(s, c) && (t[c] = s[c]);
        }
        return t;
      }).apply(this, arguments);
}
function Po(t, a) {
  var s, c;
  (t.prototype = Object.create(a.prototype)),
    (t.prototype.constructor = t),
    (s = t),
    (c = a),
    (Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (u, p) {
          return (u.__proto__ = p), u;
        })(s, c);
}
function al(t) {
  if (t === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return t;
}
var Vv = {
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
    margin: 0,
    padding: 0,
    position: "absolute",
  },
  Uv = (function (t) {
    function a() {
      return t.apply(this, arguments) || this;
    }
    Po(a, t);
    var s = a.prototype;
    return (
      (s.shouldComponentUpdate = function () {
        return !1;
      }),
      (s.render = function () {
        return yt.createElement("div", {
          ref: this.props.registerChild,
          style: Vv,
        });
      }),
      a
    );
  })(ee.Component),
  Gu = (function (t) {
    function a(c) {
      var u;
      return ((u = t.call(this) || this).gmapInstance = c), u;
    }
    Po(a, t);
    var s = a.prototype;
    return (
      (s.getChildren = function () {
        return this.gmapInstance.props.children;
      }),
      (s.getMousePosition = function () {
        return this.gmapInstance.mouse_;
      }),
      (s.getUpdateCounter = function () {
        return this.gmapInstance.updateCounter_;
      }),
      (s.dispose = function () {
        (this.gmapInstance = null), this.removeAllListeners();
      }),
      a
    );
  })(Yv),
  br = function (t, a) {
    for (
      var s = kt(
          {},
          ((function (p) {
            if (p == null) throw new TypeError("Cannot destructure " + p);
          })(t),
          t)
        ),
        c = 0;
      c < a.length;
      c++
    ) {
      var u = a[c];
      u in s && delete s[u];
    }
    return s;
  },
  $v = Object.prototype.hasOwnProperty;
function Vu(t, a) {
  return t === a ? t !== 0 || a !== 0 || 1 / t == 1 / a : t != t && a != a;
}
function di(t, a) {
  if (Vu(t, a)) return !0;
  if (typeof t != "object" || t === null || typeof a != "object" || a === null)
    return !1;
  var s = Object.keys(t),
    c = Object.keys(a);
  if (s.length !== c.length) return !1;
  for (var u = 0; u < s.length; u++)
    if (!$v.call(a, s[u]) || !Vu(t[s[u]], a[s[u]])) return !1;
  return !0;
}
var Kv = {
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
    margin: 0,
    padding: 0,
    position: "absolute",
  },
  Zv = {
    width: 0,
    height: 0,
    left: 0,
    top: 0,
    backgroundColor: "transparent",
    position: "absolute",
  },
  ao = (function (t) {
    function a(c) {
      var u;
      return (
        ((u = t.call(this, c) || this)._getState = function () {
          return {
            children: u.props.dispatcher.getChildren(),
            updateCounter: u.props.dispatcher.getUpdateCounter(),
          };
        }),
        (u._onChangeHandler = function () {
          if (u.dimensionsCache_) {
            var p = (u.state.children || []).length,
              b = u._getState();
            u.setState(b, function () {
              return (
                (b.children || []).length !== p && u._onMouseChangeHandler()
              );
            });
          }
        }),
        (u._onChildClick = function () {
          u.props.onChildClick &&
            u.hoverChildProps_ &&
            u.props.onChildClick(u.hoverKey_, u.hoverChildProps_);
        }),
        (u._onChildMouseDown = function () {
          u.props.onChildMouseDown &&
            u.hoverChildProps_ &&
            u.props.onChildMouseDown(u.hoverKey_, u.hoverChildProps_);
        }),
        (u._onChildMouseEnter = function (p, b) {
          u.dimensionsCache_ &&
            (u.props.onChildMouseEnter && u.props.onChildMouseEnter(p, b),
            (u.hoverChildProps_ = b),
            (u.hoverKey_ = p),
            u.setState({ hoverKey: p }));
        }),
        (u._onChildMouseLeave = function () {
          if (u.dimensionsCache_) {
            var p = u.hoverKey_;
            p != null &&
              (u.props.onChildMouseLeave &&
                u.props.onChildMouseLeave(p, u.hoverChildProps_),
              (u.hoverKey_ = null),
              (u.hoverChildProps_ = null),
              u.setState({ hoverKey: null }));
          }
        }),
        (u._onMouseAllow = function (p) {
          p || u._onChildMouseLeave(), (u.allowMouse_ = p);
        }),
        (u._onMouseChangeHandler = function () {
          u.allowMouse_ && u._onMouseChangeHandlerRaf();
        }),
        (u._onMouseChangeHandlerRaf = function () {
          if (u.dimensionsCache_) {
            var p = u.props.dispatcher.getMousePosition();
            if (p) {
              var b = [],
                S = u.props.getHoverDistance();
              if (
                (yt.Children.forEach(u.state.children, function (F, H) {
                  if (
                    F &&
                    (F.props.latLng !== void 0 ||
                      F.props.lat !== void 0 ||
                      F.props.lng !== void 0)
                  ) {
                    var j = F.key != null ? F.key : H,
                      V = u.props.distanceToMouse(
                        u.dimensionsCache_[j],
                        p,
                        F.props
                      );
                    V < S && b.push({ key: j, dist: V, props: F.props });
                  }
                }),
                b.length)
              ) {
                b.sort(function (F, H) {
                  return F.dist - H.dist;
                });
                var E = b[0].key,
                  N = b[0].props;
                u.hoverKey_ !== E &&
                  (u._onChildMouseLeave(), u._onChildMouseEnter(E, N));
              } else u._onChildMouseLeave();
            } else u._onChildMouseLeave();
          }
        }),
        (u._getDimensions = function (p) {
          return u.dimensionsCache_[p];
        }),
        (u.dimensionsCache_ = {}),
        (u.hoverKey_ = null),
        (u.hoverChildProps_ = null),
        (u.allowMouse_ = !0),
        (u.state = kt({}, u._getState(), { hoverKey: null })),
        u
      );
    }
    Po(a, t);
    var s = a.prototype;
    return (
      (s.componentDidMount = function () {
        this.props.dispatcher.on("kON_CHANGE", this._onChangeHandler),
          this.props.dispatcher.on(
            "kON_MOUSE_POSITION_CHANGE",
            this._onMouseChangeHandler
          ),
          this.props.dispatcher.on("kON_CLICK", this._onChildClick),
          this.props.dispatcher.on("kON_MDOWN", this._onChildMouseDown);
      }),
      (s.shouldComponentUpdate = function (c, u) {
        return this.props.experimental === !0
          ? !di(this.props, c) ||
              !di(br(this.state, ["hoverKey"]), br(u, ["hoverKey"]))
          : !di(this.props, c) || !di(this.state, u);
      }),
      (s.componentWillUnmount = function () {
        this.props.dispatcher.removeListener(
          "kON_CHANGE",
          this._onChangeHandler
        ),
          this.props.dispatcher.removeListener(
            "kON_MOUSE_POSITION_CHANGE",
            this._onMouseChangeHandler
          ),
          this.props.dispatcher.removeListener("kON_CLICK", this._onChildClick),
          this.props.dispatcher.removeListener(
            "kON_MDOWN",
            this._onChildMouseDown
          ),
          (this.dimensionsCache_ = null);
      }),
      (s.render = function () {
        var c = this,
          u = this.props.style || Kv;
        this.dimensionsCache_ = {};
        var p = yt.Children.map(this.state.children, function (b, S) {
          if (b) {
            if (
              b.props.latLng === void 0 &&
              b.props.lat === void 0 &&
              b.props.lng === void 0
            )
              return yt.cloneElement(b, {
                $geoService: c.props.geoService,
                $onMouseAllow: c._onMouseAllow,
                $prerender: c.props.prerender,
              });
            var E =
                b.props.latLng !== void 0
                  ? b.props.latLng
                  : { lat: b.props.lat, lng: b.props.lng },
              N = c.props.insideMapPanes
                ? c.props.geoService.fromLatLngToDivPixel(E)
                : c.props.geoService.fromLatLngToCenterPixel(E),
              F = { left: N.x, top: N.y };
            if (
              b.props.seLatLng !== void 0 ||
              (b.props.seLat !== void 0 && b.props.seLng !== void 0)
            ) {
              var H =
                  b.props.seLatLng !== void 0
                    ? b.props.seLatLng
                    : { lat: b.props.seLat, lng: b.props.seLng },
                j = c.props.insideMapPanes
                  ? c.props.geoService.fromLatLngToDivPixel(H)
                  : c.props.geoService.fromLatLngToCenterPixel(H);
              (F.width = j.x - N.x), (F.height = j.y - N.y);
            }
            var V = c.props.geoService.fromLatLngToContainerPixel(E),
              q = b.key != null ? b.key : S;
            return (
              (c.dimensionsCache_[q] = kt({ x: V.x, y: V.y }, E)),
              yt.createElement(
                "div",
                {
                  key: q,
                  style: kt({}, Zv, F),
                  className: b.props.$markerHolderClassName,
                },
                yt.cloneElement(b, {
                  $hover: q === c.state.hoverKey,
                  $getDimensions: c._getDimensions,
                  $dimensionKey: q,
                  $geoService: c.props.geoService,
                  $onMouseAllow: c._onMouseAllow,
                  $prerender: c.props.prerender,
                })
              )
            );
          }
        });
        return yt.createElement("div", { style: u }, p);
      }),
      a
    );
  })(ee.Component);
(ao.propTypes = {
  geoService: Ae.any,
  style: Ae.any,
  distanceToMouse: Ae.func,
  dispatcher: Ae.any,
  onChildClick: Ae.func,
  onChildMouseDown: Ae.func,
  onChildMouseLeave: Ae.func,
  onChildMouseEnter: Ae.func,
  getHoverDistance: Ae.func,
  insideMapPanes: Ae.bool,
  prerender: Ae.bool,
}),
  (ao.defaultProps = { insideMapPanes: !1, prerender: !1 });
var qv = {
  width: "50%",
  height: "50%",
  left: "50%",
  top: "50%",
  margin: 0,
  padding: 0,
  position: "absolute",
};
function Jv(t) {
  return yt.createElement(
    "div",
    { style: qv },
    yt.createElement(ao, kt({}, t, { prerender: !0 }))
  );
}
var nl,
  er,
  cc,
  Qv = ["key"],
  ey = new Promise(function (t) {
    cc = t;
  }),
  Uu = function (t, a) {
    if (!t) return ey;
    if (er) return er;
    t.libraries || (t.libraries = []);
    var s = [].concat(t.libraries);
    if (
      (a &&
        ((s.length !== 0 && s.includes("visualization")) ||
          s.push("visualization"),
        console.warn(
          "heatmapLibrary will be deprecated in the future. Please use { libraries: ['visualization'] } in bootstrapURLKeys property instead"
        )),
      typeof window > "u")
    )
      throw new Error("google map cannot be loaded outside browser env");
    var c = t.key,
      u = (function (p, b) {
        if (p == null) return {};
        var S,
          E,
          N = {},
          F = Object.keys(p);
        for (E = 0; E < F.length; E++)
          b.indexOf((S = F[E])) >= 0 || (N[S] = p[S]);
        return N;
      })(t, Qv);
    return (
      nl || (nl = new za(kt({ apiKey: c || "" }, u, { libraries: s }))),
      (er = nl.load().then(function () {
        return cc(window.google.maps), window.google.maps;
      })),
      cc(er),
      er
    );
  };
function If(t, a, s) {
  var c = s - a;
  return t === s ? t : ((((t - a) % c) + c) % c) + a;
}
var da = (function () {
  function t(a, s) {
    if (isNaN(a) || isNaN(s))
      throw new Error("Invalid LatLng object: (" + a + ", " + s + ")");
    (this.lat = +a), (this.lng = +s);
  }
  return (
    (t.prototype.wrap = function () {
      return new t(this.lat, If(this.lng, -180, 180));
    }),
    t
  );
})();
da.convert = function (t) {
  return t instanceof da
    ? t
    : Array.isArray(t)
    ? new da(t[0], t[1])
    : "lng" in t && "lat" in t
    ? new da(t.lat, t.lng)
    : t;
};
var ty = (function () {
    function t(u, p, b) {
      (this.tileSize = u || 512),
        (this._minZoom = p || 0),
        (this._maxZoom = b || 52),
        (this.latRange = [-85.05113, 85.05113]),
        (this.width = 0),
        (this.height = 0),
        (this.zoom = 0),
        (this.center = new da(0, 0)),
        (this.angle = 0);
    }
    var a,
      s,
      c = t.prototype;
    return (
      (c.zoomScale = function (u) {
        return Math.pow(2, u);
      }),
      (c.scaleZoom = function (u) {
        return Math.log(u) / Math.LN2;
      }),
      (c.project = function (u, p) {
        return new Xa(this.lngX(u.lng, p), this.latY(u.lat, p));
      }),
      (c.unproject = function (u, p) {
        return new da(this.yLat(u.y, p), this.xLng(u.x, p));
      }),
      (c.lngX = function (u, p) {
        return ((180 + u) * (p || this.worldSize)) / 360;
      }),
      (c.latY = function (u, p) {
        return (
          ((180 -
            (180 / Math.PI) *
              Math.log(Math.tan(Math.PI / 4 + (u * Math.PI) / 360))) *
            (p || this.worldSize)) /
          360
        );
      }),
      (c.xLng = function (u, p) {
        return (360 * u) / (p || this.worldSize) - 180;
      }),
      (c.yLat = function (u, p) {
        return (
          (360 / Math.PI) *
            Math.atan(
              Math.exp(
                ((180 - (360 * u) / (p || this.worldSize)) * Math.PI) / 180
              )
            ) -
          90
        );
      }),
      (c.locationPoint = function (u) {
        var p = this.project(u);
        return this.centerPoint._sub(this.point._sub(p)._rotate(this.angle));
      }),
      (c.pointLocation = function (u) {
        var p = this.centerPoint._sub(u)._rotate(-this.angle);
        return this.unproject(this.point.sub(p));
      }),
      (a = t),
      (s = [
        {
          key: "minZoom",
          get: function () {
            return this._minZoom;
          },
          set: function (u) {
            (this._minZoom = u), (this.zoom = Math.max(this.zoom, u));
          },
        },
        {
          key: "maxZoom",
          get: function () {
            return this._maxZoom;
          },
          set: function (u) {
            (this._maxZoom = u), (this.zoom = Math.min(this.zoom, u));
          },
        },
        {
          key: "worldSize",
          get: function () {
            return this.tileSize * this.scale;
          },
        },
        {
          key: "centerPoint",
          get: function () {
            return new Xa(0, 0);
          },
        },
        {
          key: "size",
          get: function () {
            return new Xa(this.width, this.height);
          },
        },
        {
          key: "bearing",
          get: function () {
            return (-this.angle / Math.PI) * 180;
          },
          set: function (u) {
            this.angle = (-If(u, -180, 180) * Math.PI) / 180;
          },
        },
        {
          key: "zoom",
          get: function () {
            return this._zoom;
          },
          set: function (u) {
            var p = Math.min(Math.max(u, this.minZoom), this.maxZoom);
            (this._zoom = p),
              (this.scale = this.zoomScale(p)),
              (this.tileZoom = Math.floor(p)),
              (this.zoomFraction = p - this.tileZoom);
          },
        },
        {
          key: "x",
          get: function () {
            return this.lngX(this.center.lng);
          },
        },
        {
          key: "y",
          get: function () {
            return this.latY(this.center.lat);
          },
        },
        {
          key: "point",
          get: function () {
            return new Xa(this.x, this.y);
          },
        },
      ]) &&
        (function (u, p) {
          for (var b = 0; b < p.length; b++) {
            var S = p[b];
            (S.enumerable = S.enumerable || !1),
              (S.configurable = !0),
              "value" in S && (S.writable = !0),
              Object.defineProperty(
                u,
                typeof (E = (function (N, F) {
                  if (typeof N != "object" || N === null) return N;
                  var H = N[Symbol.toPrimitive];
                  if (H !== void 0) {
                    var j = H.call(N, "string");
                    if (typeof j != "object") return j;
                    throw new TypeError(
                      "@@toPrimitive must return a primitive value."
                    );
                  }
                  return String(N);
                })(S.key)) == "symbol"
                  ? E
                  : String(E),
                S
              );
          }
          var E;
        })(a.prototype, s),
      Object.defineProperty(a, "prototype", { writable: !1 }),
      t
    );
  })(),
  iy = (function () {
    function t(s) {
      (this.hasSize_ = !1),
        (this.hasView_ = !1),
        (this.transform_ = new ty(s || 512));
    }
    var a = t.prototype;
    return (
      (a.setView = function (s, c, u) {
        (this.transform_.center = da.convert(s)),
          (this.transform_.zoom = +c),
          (this.transform_.bearing = +u),
          (this.hasView_ = !0);
      }),
      (a.setViewSize = function (s, c) {
        (this.transform_.width = s),
          (this.transform_.height = c),
          (this.hasSize_ = !0);
      }),
      (a.setMapCanvasProjection = function (s, c) {
        (this.maps_ = s), (this.mapCanvasProjection_ = c);
      }),
      (a.canProject = function () {
        return this.hasSize_ && this.hasView_;
      }),
      (a.hasSize = function () {
        return this.hasSize_;
      }),
      (a.fromLatLngToCenterPixel = function (s) {
        return this.transform_.locationPoint(da.convert(s));
      }),
      (a.fromLatLngToDivPixel = function (s) {
        if (this.mapCanvasProjection_) {
          var c = new this.maps_.LatLng(s.lat, s.lng);
          return this.mapCanvasProjection_.fromLatLngToDivPixel(c);
        }
        return this.fromLatLngToCenterPixel(s);
      }),
      (a.fromLatLngToContainerPixel = function (s) {
        if (this.mapCanvasProjection_) {
          var c = new this.maps_.LatLng(s.lat, s.lng);
          return this.mapCanvasProjection_.fromLatLngToContainerPixel(c);
        }
        var u = this.fromLatLngToCenterPixel(s);
        return (
          (u.x -=
            this.transform_.worldSize *
            Math.round(u.x / this.transform_.worldSize)),
          (u.x += this.transform_.width / 2),
          (u.y += this.transform_.height / 2),
          u
        );
      }),
      (a.fromContainerPixelToLatLng = function (s) {
        if (this.mapCanvasProjection_) {
          var c = this.mapCanvasProjection_.fromContainerPixelToLatLng(s);
          return { lat: c.lat(), lng: c.lng() };
        }
        var u = kt({}, s);
        (u.x -= this.transform_.width / 2), (u.y -= this.transform_.height / 2);
        var p = this.transform_.pointLocation(Xa.convert(u));
        return (p.lng -= 360 * Math.round(p.lng / 360)), p;
      }),
      (a.getWidth = function () {
        return this.transform_.width;
      }),
      (a.getHeight = function () {
        return this.transform_.height;
      }),
      (a.getZoom = function () {
        return this.transform_.zoom;
      }),
      (a.getCenter = function () {
        return this.transform_.pointLocation({ x: 0, y: 0 });
      }),
      (a.getBounds = function (s, c) {
        var u = (s && s[0]) || 0,
          p = (s && s[1]) || 0,
          b = (s && s[2]) || 0,
          S = (s && s[3]) || 0;
        if (this.getWidth() - p - S > 0 && this.getHeight() - u - b > 0) {
          var E = this.transform_.pointLocation(
              Xa.convert({
                x: S - this.getWidth() / 2,
                y: u - this.getHeight() / 2,
              })
            ),
            N = this.transform_.pointLocation(
              Xa.convert({
                x: this.getWidth() / 2 - p,
                y: this.getHeight() / 2 - b,
              })
            ),
            F = [E.lat, E.lng, N.lat, N.lng, N.lat, E.lng, E.lat, N.lng];
          return (
            c &&
              (F = F.map(function (H) {
                return Math.round(H * c) / c;
              })),
            F
          );
        }
        return [0, 0, 0, 0];
      }),
      t
    );
  })();
function $u(t) {
  if (window.requestAnimationFrame) return window.requestAnimationFrame(t);
  var a = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
  return a ? a(t) : window.setTimeout(t, 1e3 / 60);
}
var ay = Math.log2
  ? Math.log2
  : function (t) {
      return Math.log(t) / Math.LN2;
    };
function Ku(t, a) {
  return Object.keys(t).reduce(function (s, c) {
    return a(t[c]) && (s[c] = t[c]), s;
  }, {});
}
var Ia = function (t) {
    if (t !== null && typeof t == "object") {
      if (Object.keys(t).length === 0) return !0;
    } else if (t == null || t === "") return !0;
    return !1;
  },
  ny = Object.prototype.toString;
function ds(t) {
  return (
    typeof t == "number" ||
    ((function (a) {
      return !!a && typeof a == "object";
    })(t) &&
      ny.call(t) === "[object Number]")
  );
}
var ps = null;
function Zu() {
  if (ps) return ps;
  if (typeof navigator < "u") {
    var t = navigator.userAgent.indexOf("MSIE") > -1,
      a = navigator.userAgent.indexOf("Firefox") > -1,
      s = navigator.userAgent.toLowerCase().indexOf("op") > -1,
      c = navigator.userAgent.indexOf("Chrome") > -1,
      u = navigator.userAgent.indexOf("Safari") > -1;
    return (
      c && u && (u = !1),
      c && s && (c = !1),
      (ps = {
        isExplorer: t,
        isFirefox: a,
        isOpera: s,
        isChrome: c,
        isSafari: u,
      })
    );
  }
  return (ps = {
    isChrome: !0,
    isExplorer: !1,
    isFirefox: !1,
    isOpera: !1,
    isSafari: !1,
  });
}
var qu = function (t) {
  return Function.prototype.toString.call(t);
};
function cr(t) {
  if (!t || typeof t != "object") return !1;
  var a =
    typeof t.constructor == "function"
      ? Object.getPrototypeOf(t)
      : Object.prototype;
  if (a === null) return !0;
  var s = a.constructor;
  return typeof s == "function" && s instanceof s && qu(s) === qu(Object);
}
function tr(t, a, s, c) {
  t.addEventListener(
    a,
    s,
    (function () {
      var u = !1;
      try {
        var p = Object.defineProperty({}, "passive", {
          get: function () {
            u = !0;
          },
        });
        window.addEventListener("test", p, p),
          window.removeEventListener("test", p, p);
      } catch {
        u = !1;
      }
      return u;
    })()
      ? { capture: c, passive: !0 }
      : c
  );
}
var Yi,
  hc = !(
    typeof window > "u" ||
    !window.document ||
    !window.document.createElement
  );
Yi = hc ? window : typeof self < "u" ? self : void 0;
var Ju,
  uc = typeof document < "u" && document.attachEvent,
  Qu = !1;
if (hc && !uc) {
  var ry = (function () {
      var t =
        Yi.requestAnimationFrame ||
        Yi.mozRequestAnimationFrame ||
        Yi.webkitRequestAnimationFrame ||
        function (a) {
          return Yi.setTimeout(a, 20);
        };
      return function (a) {
        return t(a);
      };
    })(),
    sy =
      ((Ju =
        Yi.cancelAnimationFrame ||
        Yi.mozCancelAnimationFrame ||
        Yi.webkitCancelAnimationFrame ||
        Yi.clearTimeout),
      function (t) {
        return Ju(t);
      }),
    dc = function (t) {
      var a = t.__resizeTriggers__,
        s = a.firstElementChild,
        c = a.lastElementChild,
        u = s.firstElementChild;
      (c.scrollLeft = c.scrollWidth),
        (c.scrollTop = c.scrollHeight),
        (u.style.width = s.offsetWidth + 1 + "px"),
        (u.style.height = s.offsetHeight + 1 + "px"),
        (s.scrollLeft = s.scrollWidth),
        (s.scrollTop = s.scrollHeight);
    },
    ed = function (t) {
      var a = this;
      dc(this),
        this.__resizeRAF__ && sy(this.__resizeRAF__),
        (this.__resizeRAF__ = ry(function () {
          (function (s) {
            return (
              s.offsetWidth != s.__resizeLast__.width ||
              s.offsetHeight != s.__resizeLast__.height
            );
          })(a) &&
            ((a.__resizeLast__.width = a.offsetWidth),
            (a.__resizeLast__.height = a.offsetHeight),
            a.__resizeListeners__.forEach(function (s) {
              s.call(a, t);
            }));
        }));
    },
    rl = !1,
    sl = "",
    pc = "animationstart",
    ol = "Webkit Moz O ms".split(" "),
    oy =
      "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(
        " "
      );
  if (hc) {
    var td = document.createElement("fakeelement");
    if ((td.style.animationName !== void 0 && (rl = !0), rl === !1)) {
      for (var ir = 0; ir < ol.length; ir++)
        if (td.style[ol[ir] + "AnimationName"] !== void 0) {
          (sl = "-" + ol[ir].toLowerCase() + "-"), (pc = oy[ir]), (rl = !0);
          break;
        }
    }
  }
  var fc = "resizeanim",
    ly =
      "@" +
      sl +
      "keyframes " +
      fc +
      " { from { opacity: 0; } to { opacity: 0; } } ",
    cy = sl + "animation: 1ms " + fc + "; ";
}
var Ms = ca.createPortal !== void 0,
  id = Ms ? ca.createPortal : ca.unstable_renderSubtreeIntoContainer,
  fs = function (t) {
    return cr(t) ? t : { lat: t[0], lng: t[1] };
  },
  ad = function (t, a) {
    return a < t ? t : a;
  },
  Ns = (function (t) {
    function a(c) {
      var u;
      if (
        (((u = t.call(this, c) || this)._getMinZoom = function () {
          if (u.geoService_.getWidth() > 0 || u.geoService_.getHeight() > 0) {
            var b = Math.ceil(u.geoService_.getWidth() / 256) + 2,
              S = Math.ceil(u.geoService_.getHeight() / 256) + 2,
              E = Math.max(b, S);
            return Math.ceil(ay(E));
          }
          return 3;
        }),
        (u._computeMinZoom = function (b) {
          return Ia(b) ? u._getMinZoom() : b;
        }),
        (u._mapDomResizeCallback = function () {
          if (((u.resetSizeOnIdle_ = !0), u.maps_)) {
            var b = u.props.center || u.props.defaultCenter,
              S = u.map_.getCenter();
            u.maps_.event.trigger(u.map_, "resize"),
              u.map_.setCenter(u.props.resetBoundsOnResize ? b : S);
          }
        }),
        (u._setLayers = function (b) {
          b.forEach(function (S) {
            (u.layers_[S] = new u.maps_[S]()), u.layers_[S].setMap(u.map_);
          });
        }),
        (u._renderPortal = function () {
          return yt.createElement(ao, {
            experimental: u.props.experimental,
            onChildClick: u._onChildClick,
            onChildMouseDown: u._onChildMouseDown,
            onChildMouseEnter: u._onChildMouseEnter,
            onChildMouseLeave: u._onChildMouseLeave,
            geoService: u.geoService_,
            insideMapPanes: !0,
            distanceToMouse: u.props.distanceToMouse,
            getHoverDistance: u._getHoverDistance,
            dispatcher: u.markersDispatcher_,
          });
        }),
        (u._initMap = function () {
          if (!u.initialized_) {
            u.initialized_ = !0;
            var b = fs(u.props.center || u.props.defaultCenter);
            u.geoService_.setView(b, u.props.zoom || u.props.defaultZoom, 0),
              u._onBoundsChanged();
            var S = kt(
              {},
              u.props.apiKey && { key: u.props.apiKey },
              u.props.bootstrapURLKeys
            );
            u.props
              .googleMapLoader(S, u.props.heatmapLibrary)
              .then(function (E) {
                if (u.mounted_) {
                  var N,
                    F,
                    H = u.geoService_.getCenter(),
                    j = {
                      zoom: u.props.zoom || u.props.defaultZoom,
                      center: new E.LatLng(H.lat, H.lng),
                    };
                  u.props.heatmap.positions &&
                    (Object.assign(al(u), {
                      heatmap:
                        ((N = E),
                        (F = u.props.heatmap),
                        new N.visualization.HeatmapLayer({
                          data: F.positions.reduce(function (te, he) {
                            var J = he.weight,
                              Y = J === void 0 ? 1 : J;
                            return (
                              te.push({
                                location: new N.LatLng(he.lat, he.lng),
                                weight: Y,
                              }),
                              te
                            );
                          }, []),
                        })),
                    }),
                    (function (te, he) {
                      var J = he.options,
                        Y = J === void 0 ? {} : J;
                      Object.keys(Y).map(function (se) {
                        return te.set(se, Y[se]);
                      });
                    })(u.heatmap, u.props.heatmap));
                  var V = Ku(E, cr),
                    q =
                      typeof u.props.options == "function"
                        ? u.props.options(V)
                        : u.props.options,
                    K = !Ia(u.props.draggable) && {
                      draggable: u.props.draggable,
                    },
                    ae = u._computeMinZoom(q.minZoom);
                  u.minZoom_ = ae;
                  var G = kt(
                    {},
                    {
                      overviewMapControl: !1,
                      streetViewControl: !1,
                      rotateControl: !0,
                      mapTypeControl: !1,
                      styles: [
                        {
                          featureType: "poi",
                          elementType: "labels",
                          stylers: [{ visibility: "off" }],
                        },
                      ],
                      minZoom: 3,
                    },
                    { minZoom: ae },
                    q,
                    j
                  );
                  u.defaultDraggableOption_ = Ia(G.draggable)
                    ? u.defaultDraggableOption_
                    : G.draggable;
                  var L = kt({}, G, K);
                  L.minZoom = ad(L.minZoom, ae);
                  var R = new E.Map(ca.findDOMNode(u.googleMapDom_), L);
                  (u.map_ = R), (u.maps_ = E), u._setLayers(u.props.layerTypes);
                  var O = E.version.match(/^3\.(\d+)\./),
                    X = O && Number(O[1]),
                    W = al(u),
                    U = Object.assign(new E.OverlayView(), {
                      onAdd: function () {
                        var te =
                            typeof screen < "u"
                              ? screen.width + "px"
                              : "2000px",
                          he =
                            typeof screen < "u"
                              ? screen.height + "px"
                              : "2000px",
                          J = document.createElement("div");
                        if (
                          ((J.style.backgroundColor = "transparent"),
                          (J.style.position = "absolute"),
                          (J.style.left = "0px"),
                          (J.style.top = "0px"),
                          (J.style.width = te),
                          (J.style.height = he),
                          W.props.overlayViewDivStyle)
                        ) {
                          var Y = W.props.overlayViewDivStyle;
                          typeof Y == "object" &&
                            Object.keys(Y).forEach(function (se) {
                              J.style[se] = Y[se];
                            });
                        }
                        this.getPanes().overlayMouseTarget.appendChild(J),
                          W.geoService_.setMapCanvasProjection(
                            E,
                            U.getProjection()
                          ),
                          Ms
                            ? W.setState({ overlay: J })
                            : id(W, W._renderPortal(), J, function () {
                                return W.setState({ overlay: J });
                              });
                      },
                      onRemove: function () {
                        var te = W.state.overlay;
                        te && !Ms && ca.unmountComponentAtNode(te),
                          W.setState({ overlay: null });
                      },
                      draw: function () {
                        if (
                          (W.updateCounter_++,
                          W._onBoundsChanged(R, E, !W.props.debounced),
                          W.googleApiLoadedCalled_ ||
                            (W._onGoogleApiLoaded({
                              map: R,
                              maps: E,
                              ref: W.googleMapDom_,
                            }),
                            (W.googleApiLoadedCalled_ = !0)),
                          W.mouse_)
                        ) {
                          var te = W.geoService_.fromContainerPixelToLatLng(
                            W.mouse_
                          );
                          (W.mouse_.lat = te.lat), (W.mouse_.lng = te.lng);
                        }
                        W._onChildMouseMove(),
                          W.markersDispatcher_ &&
                            (W.markersDispatcher_.emit("kON_CHANGE"),
                            W.fireMouseEventOnIdle_ &&
                              W.markersDispatcher_.emit(
                                "kON_MOUSE_POSITION_CHANGE"
                              ));
                      },
                    });
                  (u.overlay_ = U),
                    U.setMap(R),
                    u.props.heatmap.positions && u.heatmap.setMap(R),
                    u.props.onTilesLoaded &&
                      E.event.addListener(R, "tilesloaded", function () {
                        W._onTilesLoaded();
                      }),
                    E.event.addListener(R, "zoom_changed", function () {
                      W.geoService_.getZoom() !== R.getZoom() &&
                        (W.zoomAnimationInProgress_ ||
                          ((W.zoomAnimationInProgress_ = !0),
                          W._onZoomAnimationStart(R.zoom)),
                        X < 32) &&
                        (new Date().getTime() - u.zoomControlClickTime_ < 300
                          ? $u(function () {
                              return $u(function () {
                                W.updateCounter_++, W._onBoundsChanged(R, E);
                              });
                            })
                          : (W.updateCounter_++, W._onBoundsChanged(R, E)));
                    }),
                    E.event.addListener(R, "idle", function () {
                      if (u.resetSizeOnIdle_) {
                        u._setViewSize();
                        var te = u._computeMinZoom(q.minZoom);
                        te !== u.minZoom_ &&
                          ((u.minZoom_ = te), R.setOptions({ minZoom: te })),
                          (u.resetSizeOnIdle_ = !1);
                      }
                      W.zoomAnimationInProgress_ &&
                        ((W.zoomAnimationInProgress_ = !1),
                        W._onZoomAnimationEnd(R.zoom)),
                        W.updateCounter_++,
                        W._onBoundsChanged(R, E),
                        (W.dragTime_ = 0),
                        W.markersDispatcher_ &&
                          W.markersDispatcher_.emit("kON_CHANGE");
                    }),
                    E.event.addListener(R, "mouseover", function () {
                      W.mouseInMap_ = !0;
                    }),
                    E.event.addListener(R, "click", function () {
                      W.mouseInMap_ = !0;
                    }),
                    E.event.addListener(R, "mouseout", function () {
                      (W.mouseInMap_ = !1),
                        (W.mouse_ = null),
                        W.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE");
                    }),
                    E.event.addListener(R, "drag", function () {
                      (W.dragTime_ = new Date().getTime()), W._onDrag(R);
                    }),
                    E.event.addListener(R, "dragend", function () {
                      var te = E.event.addListener(R, "idle", function () {
                        E.event.removeListener(te), W._onDragEnd(R);
                      });
                    }),
                    E.event.addListener(R, "maptypeid_changed", function () {
                      W._onMapTypeIdChange(R.getMapTypeId());
                    });
                }
              })
              .catch(function (E) {
                throw (
                  (u._onGoogleApiLoaded({
                    map: null,
                    maps: null,
                    ref: u.googleMapDom_,
                  }),
                  console.error(E),
                  E)
                );
              });
          }
        }),
        (u._onGoogleApiLoaded = function () {
          var b;
          u.props.onGoogleApiLoaded &&
            (b = u.props).onGoogleApiLoaded.apply(b, arguments);
        }),
        (u._getHoverDistance = function () {
          return u.props.hoverDistance;
        }),
        (u._onDrag = function () {
          var b;
          return u.props.onDrag && (b = u.props).onDrag.apply(b, arguments);
        }),
        (u._onDragEnd = function () {
          var b;
          return (
            u.props.onDragEnd && (b = u.props).onDragEnd.apply(b, arguments)
          );
        }),
        (u._onMapTypeIdChange = function () {
          var b;
          return (
            u.props.onMapTypeIdChange &&
            (b = u.props).onMapTypeIdChange.apply(b, arguments)
          );
        }),
        (u._onZoomAnimationStart = function () {
          var b;
          return (
            u.props.onZoomAnimationStart &&
            (b = u.props).onZoomAnimationStart.apply(b, arguments)
          );
        }),
        (u._onZoomAnimationEnd = function () {
          var b;
          return (
            u.props.onZoomAnimationEnd &&
            (b = u.props).onZoomAnimationEnd.apply(b, arguments)
          );
        }),
        (u._onTilesLoaded = function () {
          return u.props.onTilesLoaded && u.props.onTilesLoaded();
        }),
        (u._onChildClick = function () {
          var b;
          if (u.props.onChildClick)
            return (b = u.props).onChildClick.apply(b, arguments);
        }),
        (u._onChildMouseDown = function (b, S) {
          (u.childMouseDownArgs_ = [b, S]),
            u.props.onChildMouseDown &&
              u.props.onChildMouseDown(b, S, kt({}, u.mouse_));
        }),
        (u._onChildMouseUp = function () {
          var b;
          u.childMouseDownArgs_ &&
            (u.props.onChildMouseUp &&
              (b = u.props).onChildMouseUp.apply(
                b,
                u.childMouseDownArgs_.concat([kt({}, u.mouse_)])
              ),
            (u.childMouseDownArgs_ = null),
            (u.childMouseUpTime_ = new Date().getTime()));
        }),
        (u._onChildMouseMove = function () {
          var b;
          u.childMouseDownArgs_ &&
            u.props.onChildMouseMove &&
            (b = u.props).onChildMouseMove.apply(
              b,
              u.childMouseDownArgs_.concat([kt({}, u.mouse_)])
            );
        }),
        (u._onChildMouseEnter = function () {
          var b;
          if (u.props.onChildMouseEnter)
            return (b = u.props).onChildMouseEnter.apply(b, arguments);
        }),
        (u._onChildMouseLeave = function () {
          var b;
          if (u.props.onChildMouseLeave)
            return (b = u.props).onChildMouseLeave.apply(b, arguments);
        }),
        (u._setViewSize = function () {
          if (u.mounted_) {
            if (
              document.fullscreen ||
              document.webkitIsFullScreen ||
              document.mozFullScreen ||
              document.msFullscreenElement
            )
              u.geoService_.setViewSize(window.innerWidth, window.innerHeight);
            else {
              var b = ca.findDOMNode(u.googleMapDom_);
              u.geoService_.setViewSize(b.clientWidth, b.clientHeight);
            }
            u._onBoundsChanged();
          }
        }),
        (u._onWindowResize = function () {
          u.resetSizeOnIdle_ = !0;
        }),
        (u._onMapMouseMove = function (b) {
          if (u.mouseInMap_) {
            var S = new Date().getTime();
            S - u.mouseMoveTime_ > 50 &&
              (u.boundingRect_ = b.currentTarget.getBoundingClientRect()),
              (u.mouseMoveTime_ = S);
            var E = b.clientX - u.boundingRect_.left,
              N = b.clientY - u.boundingRect_.top;
            u.mouse_ || (u.mouse_ = { x: 0, y: 0, lat: 0, lng: 0 }),
              (u.mouse_.x = E),
              (u.mouse_.y = N);
            var F = u.geoService_.fromContainerPixelToLatLng(u.mouse_);
            (u.mouse_.lat = F.lat),
              (u.mouse_.lng = F.lng),
              u._onChildMouseMove(),
              S - u.dragTime_ < 100
                ? (u.fireMouseEventOnIdle_ = !0)
                : (u.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE"),
                  (u.fireMouseEventOnIdle_ = !1));
          }
        }),
        (u._onClick = function () {
          var b;
          return (
            u.props.onClick &&
            !u.childMouseDownArgs_ &&
            new Date().getTime() - u.childMouseUpTime_ > 300 &&
            u.dragTime_ === 0 &&
            (b = u.props).onClick.apply(b, arguments)
          );
        }),
        (u._onMapClick = function (b) {
          u.markersDispatcher_ &&
            (u._onMapMouseMove(b),
            new Date().getTime() - u.dragTime_ > 100 &&
              (u.mouse_ && u._onClick(kt({}, u.mouse_, { event: b })),
              u.markersDispatcher_.emit("kON_CLICK", b)));
        }),
        (u._onMapMouseDownNative = function (b) {
          u.mouseInMap_ && u._onMapMouseDown(b);
        }),
        (u._onMapMouseDown = function (b) {
          u.markersDispatcher_ &&
            new Date().getTime() - u.dragTime_ > 100 &&
            (u._onMapMouseMove(b), u.markersDispatcher_.emit("kON_MDOWN", b));
        }),
        (u._onMapMouseDownCapture = function () {
          Zu().isChrome && (u.zoomControlClickTime_ = new Date().getTime());
        }),
        (u._onKeyDownCapture = function () {
          Zu().isChrome && (u.zoomControlClickTime_ = new Date().getTime());
        }),
        (u._isCenterDefined = function (b) {
          return (
            b &&
            ((cr(b) && ds(b.lat) && ds(b.lng)) ||
              (b.length === 2 && ds(b[0]) && ds(b[1])))
          );
        }),
        (u._onBoundsChanged = function (b, S, E) {
          if (b) {
            var N = b.getCenter();
            u.geoService_.setView([N.lat(), N.lng()], b.getZoom(), 0);
          }
          if (
            (u.props.onChange || u.props.onBoundsChange) &&
            u.geoService_.canProject()
          ) {
            var F = u.geoService_.getZoom(),
              H = u.geoService_.getBounds(),
              j = u.geoService_.getCenter();
            if (
              !(function (q, K, ae) {
                if (q && K) {
                  for (var G = 0; G !== q.length; ++G)
                    if (Math.abs(q[G] - K[G]) > 1e-5) return !1;
                  return !0;
                }
                return !1;
              })(H, u.prevBounds_) &&
              E !== !1
            ) {
              var V = u.geoService_.getBounds(u.props.margin);
              u.props.onBoundsChange &&
                u.props.onBoundsChange(
                  u.centerIsObject_ ? kt({}, j) : [j.lat, j.lng],
                  F,
                  H,
                  V
                ),
                u.props.onChange &&
                  u.props.onChange({
                    center: kt({}, j),
                    zoom: F,
                    bounds: {
                      nw: { lat: H[0], lng: H[1] },
                      se: { lat: H[2], lng: H[3] },
                      sw: { lat: H[4], lng: H[5] },
                      ne: { lat: H[6], lng: H[7] },
                    },
                    marginBounds: {
                      nw: { lat: V[0], lng: V[1] },
                      se: { lat: V[2], lng: V[3] },
                      sw: { lat: V[4], lng: V[5] },
                      ne: { lat: V[6], lng: V[7] },
                    },
                    size: u.geoService_.hasSize()
                      ? {
                          width: u.geoService_.getWidth(),
                          height: u.geoService_.getHeight(),
                        }
                      : { width: 0, height: 0 },
                  }),
                (u.prevBounds_ = H);
            }
          }
        }),
        (u._registerChild = function (b) {
          u.googleMapDom_ = b;
        }),
        (u.mounted_ = !1),
        (u.initialized_ = !1),
        (u.googleApiLoadedCalled_ = !1),
        (u.map_ = null),
        (u.maps_ = null),
        (u.prevBounds_ = null),
        (u.heatmap = null),
        (u.layers_ = {}),
        (u.mouse_ = null),
        (u.mouseMoveTime_ = 0),
        (u.boundingRect_ = null),
        (u.mouseInMap_ = !0),
        (u.dragTime_ = 0),
        (u.fireMouseEventOnIdle_ = !1),
        (u.updateCounter_ = 0),
        (u.markersDispatcher_ = new Gu(al(u))),
        (u.geoService_ = new iy(256)),
        (u.centerIsObject_ = cr(u.props.center)),
        (u.minZoom_ = 3),
        (u.defaultDraggableOption_ = !0),
        (u.zoomControlClickTime_ = 0),
        (u.childMouseDownArgs_ = null),
        (u.childMouseUpTime_ = 0),
        (u.googleMapDom_ = null),
        u._isCenterDefined(u.props.center || u.props.defaultCenter))
      ) {
        var p = fs(u.props.center || u.props.defaultCenter);
        u.geoService_.setView(p, u.props.zoom || u.props.defaultZoom, 0);
      }
      return (
        (u.zoomAnimationInProgress_ = !1), (u.state = { overlay: null }), u
      );
    }
    Po(a, t);
    var s = a.prototype;
    return (
      (s.componentDidMount = function () {
        var c = this;
        (this.mounted_ = !0),
          (this.markersDispatcher_ = new Gu(this)),
          tr(window, "resize", this._onWindowResize, !1),
          tr(window, "keydown", this._onKeyDownCapture, !0);
        var u = ca.findDOMNode(this.googleMapDom_);
        u && tr(u, "mousedown", this._onMapMouseDownNative, !0),
          tr(window, "mouseup", this._onChildMouseUp, !1);
        var p = kt(
          {},
          this.props.apiKey && { key: this.props.apiKey },
          this.props.bootstrapURLKeys
        );
        this.props.googleMapLoader(p, this.props.heatmapLibrary),
          setTimeout(
            function () {
              c._setViewSize(),
                c._isCenterDefined(c.props.center || c.props.defaultCenter) &&
                  c._initMap();
            },
            0,
            this
          ),
          this.props.resetBoundsOnResize &&
            (function (b, S) {
              if (b.parentNode === void 0) {
                var E = document.createElement("div");
                b.parentNode = E;
              }
              (b = b.parentNode),
                uc
                  ? b.attachEvent("onresize", S)
                  : (b.__resizeTriggers__ ||
                      (getComputedStyle(b).position == "static" &&
                        (b.style.position = "relative"),
                      (function () {
                        if (!Qu) {
                          var N =
                              (ly || "") +
                              ".resize-triggers { " +
                              (cy || "") +
                              'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                            F =
                              document.head ||
                              document.getElementsByTagName("head")[0],
                            H = document.createElement("style");
                          (H.type = "text/css"),
                            H.styleSheet
                              ? (H.styleSheet.cssText = N)
                              : H.appendChild(document.createTextNode(N)),
                            F.appendChild(H),
                            (Qu = !0);
                        }
                      })(),
                      (b.__resizeLast__ = {}),
                      (b.__resizeListeners__ = []),
                      ((b.__resizeTriggers__ =
                        document.createElement("div")).className =
                        "resize-triggers"),
                      (b.__resizeTriggers__.innerHTML =
                        '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>'),
                      b.appendChild(b.__resizeTriggers__),
                      dc(b),
                      tr(b, "scroll", ed, !0),
                      pc &&
                        b.__resizeTriggers__.addEventListener(pc, function (N) {
                          N.animationName == fc && dc(b);
                        })),
                    b.__resizeListeners__.push(S));
            })(u, this._mapDomResizeCallback);
      }),
      (s.shouldComponentUpdate = function (c, u) {
        return (
          !di(br(this.props, ["draggable"]), br(c, ["draggable"])) ||
          !di(this.state, u)
        );
      }),
      (s.componentDidUpdate = function (c) {
        var u = this;
        if (
          (!this._isCenterDefined(c.center) &&
            this._isCenterDefined(this.props.center) &&
            setTimeout(function () {
              return u._initMap();
            }, 0),
          this.map_)
        ) {
          var p = this.geoService_.getCenter();
          if (this._isCenterDefined(this.props.center)) {
            var b = fs(this.props.center),
              S = this._isCenterDefined(c.center) ? fs(c.center) : null;
            (!S || Math.abs(b.lat - S.lat) + Math.abs(b.lng - S.lng) > 1e-5) &&
              Math.abs(b.lat - p.lat) + Math.abs(b.lng - p.lng) > 1e-5 &&
              this.map_.panTo({ lat: b.lat, lng: b.lng });
          }
          if (
            (Ia(this.props.zoom) ||
              (Math.abs(this.props.zoom - c.zoom) > 0 &&
                this.map_.setZoom(this.props.zoom)),
            !Ia(c.draggable) && Ia(this.props.draggable)
              ? this.map_.setOptions({
                  draggable: this.defaultDraggableOption_,
                })
              : di(c.draggable, this.props.draggable) ||
                this.map_.setOptions({ draggable: this.props.draggable }),
            !Ia(this.props.options) && !di(c.options, this.props.options))
          ) {
            var E = Ku(this.maps_, cr),
              N =
                typeof this.props.options == "function"
                  ? this.props.options(E)
                  : this.props.options;
            if ("minZoom" in (N = br(N, ["zoom", "center", "draggable"]))) {
              var F = this._computeMinZoom(N.minZoom);
              N.minZoom = ad(N.minZoom, F);
            }
            this.map_.setOptions(N);
          }
          di(this.props.layerTypes, c.layerTypes) ||
            (Object.keys(this.layers_).forEach(function (H) {
              u.layers_[H].setMap(null), delete u.layers_[H];
            }),
            this._setLayers(this.props.layerTypes)),
            this.heatmap &&
              !di(this.props.heatmap.positions, c.heatmap.positions) &&
              this.heatmap.setData(
                this.props.heatmap.positions.map(function (H) {
                  return {
                    location: new u.maps_.LatLng(H.lat, H.lng),
                    weight: H.weight,
                  };
                })
              ),
            this.heatmap &&
              !di(this.props.heatmap.options, c.heatmap.options) &&
              Object.keys(this.props.heatmap.options).forEach(function (H) {
                u.heatmap.set(H, u.props.heatmap.options[H]);
              });
        }
        this.markersDispatcher_.emit("kON_CHANGE"),
          di(this.props.hoverDistance, c.hoverDistance) ||
            this.markersDispatcher_.emit("kON_MOUSE_POSITION_CHANGE");
      }),
      (s.componentWillUnmount = function () {
        this.mounted_ = !1;
        var c,
          u,
          p = ca.findDOMNode(this.googleMapDom_);
        p && p.removeEventListener("mousedown", this._onMapMouseDownNative, !0),
          window.removeEventListener("resize", this._onWindowResize),
          window.removeEventListener("keydown", this._onKeyDownCapture),
          window.removeEventListener("mouseup", this._onChildMouseUp, !1),
          this.props.resetBoundsOnResize &&
            ((u = this._mapDomResizeCallback),
            (c = (c = p).parentNode),
            uc
              ? c.detachEvent("onresize", u)
              : (c.__resizeListeners__.splice(
                  c.__resizeListeners__.indexOf(u),
                  1
                ),
                c.__resizeListeners__.length ||
                  (c.removeEventListener("scroll", ed),
                  (c.__resizeTriggers__ = !c.removeChild(
                    c.__resizeTriggers__
                  ))))),
          this.overlay_ && this.overlay_.setMap(null),
          this.maps_ &&
            this.map_ &&
            this.props.shouldUnregisterMapOnUnmount &&
            (this.map_.setOptions({ scrollwheel: !1 }),
            this.maps_.event.clearInstanceListeners(this.map_)),
          this.props.shouldUnregisterMapOnUnmount &&
            ((this.map_ = null), (this.maps_ = null)),
          this.markersDispatcher_.dispose(),
          (this.resetSizeOnIdle_ = !1),
          this.props.shouldUnregisterMapOnUnmount &&
            (delete this.map_, delete this.markersDispatcher_);
      }),
      (s.render = function () {
        var c = this.state.overlay,
          u = c
            ? null
            : yt.createElement(Jv, {
                experimental: this.props.experimental,
                onChildClick: this._onChildClick,
                onChildMouseDown: this._onChildMouseDown,
                onChildMouseEnter: this._onChildMouseEnter,
                onChildMouseLeave: this._onChildMouseLeave,
                geoService: this.geoService_,
                insideMapPanes: !1,
                distanceToMouse: this.props.distanceToMouse,
                getHoverDistance: this._getHoverDistance,
                dispatcher: this.markersDispatcher_,
              });
        return yt.createElement(
          "div",
          {
            style: this.props.style,
            onMouseMove: this._onMapMouseMove,
            onMouseDownCapture: this._onMapMouseDownCapture,
            onClick: this._onMapClick,
          },
          yt.createElement(Uv, { registerChild: this._registerChild }),
          Ms && c && id(this._renderPortal(), c),
          u
        );
      }),
      a
    );
  })(ee.Component);
(Ns.propTypes = {
  apiKey: Ae.string,
  bootstrapURLKeys: Ae.any,
  defaultCenter: Ae.oneOfType([
    Ae.array,
    Ae.shape({ lat: Ae.number, lng: Ae.number }),
  ]),
  center: Ae.oneOfType([
    Ae.array,
    Ae.shape({ lat: Ae.number, lng: Ae.number }),
  ]),
  defaultZoom: Ae.number,
  zoom: Ae.number,
  onBoundsChange: Ae.func,
  onChange: Ae.func,
  onClick: Ae.func,
  onChildClick: Ae.func,
  onChildMouseDown: Ae.func,
  onChildMouseUp: Ae.func,
  onChildMouseMove: Ae.func,
  onChildMouseEnter: Ae.func,
  onChildMouseLeave: Ae.func,
  onZoomAnimationStart: Ae.func,
  onZoomAnimationEnd: Ae.func,
  onDrag: Ae.func,
  onDragEnd: Ae.func,
  onMapTypeIdChange: Ae.func,
  onTilesLoaded: Ae.func,
  options: Ae.any,
  distanceToMouse: Ae.func,
  hoverDistance: Ae.number,
  debounced: Ae.bool,
  margin: Ae.array,
  googleMapLoader: Ae.any,
  onGoogleApiLoaded: Ae.func,
  yesIWantToUseGoogleMapApiInternals: Ae.bool,
  draggable: Ae.bool,
  style: Ae.any,
  resetBoundsOnResize: Ae.bool,
  layerTypes: Ae.arrayOf(Ae.string),
  shouldUnregisterMapOnUnmount: Ae.bool,
}),
  (Ns.defaultProps = {
    distanceToMouse: function (t, a) {
      return Math.sqrt((t.x - a.x) * (t.x - a.x) + (t.y - a.y) * (t.y - a.y));
    },
    hoverDistance: 30,
    debounced: !0,
    options: function () {
      return {
        overviewMapControl: !1,
        streetViewControl: !1,
        rotateControl: !0,
        mapTypeControl: !1,
        styles: [
          {
            featureType: "poi",
            elementType: "labels",
            stylers: [{ visibility: "off" }],
          },
        ],
        minZoom: 3,
      };
    },
    googleMapLoader: Uu,
    yesIWantToUseGoogleMapApiInternals: !1,
    style: {
      width: "100%",
      height: "100%",
      margin: 0,
      padding: 0,
      position: "relative",
    },
    layerTypes: [],
    heatmap: {},
    heatmapLibrary: !1,
    shouldUnregisterMapOnUnmount: !0,
  }),
  (Ns.googleMapLoader = Uu);
const nd = {
    "JAMMU AND KASHMIR": [
      "Anantnag",
      "Bandipore",
      "Baramulla",
      "Budgam",
      "Doda",
      "Ganderbal",
      "Jammu",
      "Kargil",
      "Kathua",
      "Kishtwar",
      "Kulgam",
      "Kupwara",
      "Leh",
      "Poonch",
      "Pulwama",
      "Rajouri",
      "Ramban",
      "Reasi",
      "Samba",
      "Shopian",
      "Srinagar",
      "Udhampur",
    ],
    "HIMACHAL PRADESH": [
      "Bilaspur",
      "Chamba",
      "Hamirpur",
      "Kangra",
      "Kinnaur",
      "Kullu",
      "Lahaul & Spiti",
      "Mandi",
      "Shimla",
      "Sirmaur (Sirmour)",
      "Solan",
      "Una",
    ],
    PUNJAB: [
      "Amritsar",
      "Barnala",
      "Bathinda",
      "Faridkot",
      "Fatehgarh Sahib",
      "Fazilka",
      "Ferozepur",
      "Gurdaspur",
      "Hoshiarpur",
      "Jalandhar",
      "Kapurthala",
      "Ludhiana",
      "Mansa",
      "Moga",
      "Muktsar",
      "Nawanshahr (Shahid Bhagat Singh Nagar)",
      "Pathankot",
      "Patiala",
      "Rupnagar",
      "Sahibzada Ajit Singh Nagar (Mohali)",
      "Sangrur",
      "Tarn Taran",
    ],
    CHANDIGARH: ["Chandigarh"],
    UTTARAKHAND: [
      "Almora",
      "Bageshwar",
      "Chamoli",
      "Champawat",
      "Dehradun",
      "Haridwar",
      "Nainital",
      "Pauri Garhwal",
      "Pithoragarh",
      "Rudraprayag",
      "Tehri Garhwal",
      "Udham Singh Nagar",
      "Uttarkashi",
    ],
    HARYANA: [
      "Ambala",
      "Bhiwani",
      "Charkhi Dadri",
      "Faridabad",
      "Fatehabad",
      "Gurgaon",
      "Hisar",
      "Jhajjar",
      "Jind",
      "Kaithal",
      "Karnal",
      "Kurukshetra",
      "Mahendragarh",
      "Mewat",
      "Palwal",
      "Panchkula",
      "Panipat",
      "Rewari",
      "Rohtak",
      "Sirsa",
      "Sonipat",
      "Yamunanagar",
    ],
    DELHI: [
      "Central Delhi",
      "East Delhi",
      "New Delhi",
      "North Delhi",
      "North East Delhi",
      "North West Delhi",
      "Shahdara",
      "South Delhi",
      "South East Delhi",
      "South West Delhi",
      "West Delhi",
    ],
    RAJASTHAN: [
      "Ajmer",
      "Alwar",
      "Banswara",
      "Baran",
      "Barmer",
      "Bharatpur",
      "Bhilwara",
      "Bikaner",
      "Bundi",
      "Chittorgarh",
      "Churu",
      "Dausa",
      "Dholpur",
      "Dungarpur",
      "Hanumangarh",
      "Jaipur",
      "Jaisalmer",
      "Jalore",
      "Jhalawar",
      "Jhunjhunu",
      "Jodhpur",
      "Karauli",
      "Kota",
      "Nagaur",
      "Pali",
      "Pratapgarh",
      "Rajsamand",
      "Sawai Madhopur",
      "Sikar",
      "Sirohi",
      "Sri Ganganagar",
      "Tonk",
      "Udaipur",
    ],
    "UTTAR PRADESH": [
      "Agra",
      "Aligarh",
      "Allahabad",
      "Ambedkar Nagar",
      "Amethi (Chatrapati Sahuji Mahraj Nagar)",
      "Amroha (J.P. Nagar)",
      "Auraiya",
      "Azamgarh",
      "Baghpat",
      "Bahraich",
      "Ballia",
      "Balrampur",
      "Banda",
      "Barabanki",
      "Bareilly",
      "Basti",
      "Bhadohi",
      "Bijnor",
      "Budaun",
      "Bulandshahr",
      "Chandauli",
      "Chitrakoot",
      "Deoria",
      "Etah",
      "Etawah",
      "Faizabad",
      "Farrukhabad",
      "Fatehpur",
      "Firozabad",
      "Gautam Buddha Nagar",
      "Ghaziabad",
      "Ghazipur",
      "Gonda",
      "Gorakhpur",
      "Hamirpur",
      "Hapur (Panchsheel Nagar)",
      "Hardoi",
      "Hathras",
      "Jalaun",
      "Jaunpur",
      "Jhansi",
      "Kannauj",
      "Kanpur Dehat",
      "Kanpur Nagar",
      "Kanshiram Nagar (Kasganj)",
      "Kaushambi",
      "Kushinagar (Padrauna)",
      "Lakhimpur - Kheri",
      "Lalitpur",
      "Lucknow",
      "Maharajganj",
      "Mahoba",
      "Mainpuri",
      "Mathura",
      "Mau",
      "Meerut",
      "Mirzapur",
      "Moradabad",
      "Muzaffarnagar",
      "Pilibhit",
      "Pratapgarh",
      "RaeBareli",
      "Rampur",
      "Saharanpur",
      "Sambhal (Bhim Nagar)",
      "Sant Kabir Nagar",
      "Shahjahanpur",
      "Shamali (Prabuddh Nagar)",
      "Shravasti",
      "Siddharth Nagar",
      "Sitapur",
      "Sonbhadra",
      "Sultanpur",
      "Unnao",
      "Varanasi",
    ],
    BIHAR: [
      "Araria",
      "Arwal",
      "Aurangabad",
      "Banka",
      "Begusarai",
      "Bhagalpur",
      "Bhojpur",
      "Buxar",
      "Darbhanga",
      "East Champaran (Motihari)",
      "Gaya",
      "Gopalganj",
      "Jamui",
      "Jehanabad",
      "Kaimur (Bhabua)",
      "Katihar",
      "Khagaria",
      "Kishanganj",
      "Lakhisarai",
      "Madhepura",
      "Madhubani",
      "Munger (Monghyr)",
      "Muzaffarpur",
      "Nalanda",
      "Nawada",
      "Patna",
      "Purnia (Purnea)",
      "Rohtas",
      "Saharsa",
      "Samastipur",
      "Saran",
      "Sheikhpura",
      "Sheohar",
      "Sitamarhi",
      "Siwan",
      "Supaul",
      "Vaishali",
      "West Champaran",
    ],
    SIKKIM: ["East Sikkim", "North Sikkim", "South Sikkim", "West Sikkim"],
    "ARUNACHAL PRADESH": [
      "Anjaw",
      "Changlang",
      "Dibang Valley",
      "East Kameng",
      "East Siang",
      "Kra Daadi",
      "Kurung Kumey",
      "Lohit",
      "Longding",
      "Lower Dibang Valley",
      "Lower Siang",
      "Lower Subansiri",
      "Namsai",
      "Papum Pare",
      "Siang",
      "Tawang",
      "Tirap",
      "Upper Siang",
      "Upper Subansiri",
      "West Kameng",
      "West Siang",
    ],
    NAGALAND: [
      "Dimapur",
      "Kiphire",
      "Kohima",
      "Longleng",
      "Mokokchung",
      "Mon",
      "Peren",
      "Phek",
      "Tuensang",
      "Wokha",
      "Zunheboto",
    ],
    MANIPUR: [
      "Bishnupur",
      "Chandel",
      "Churachandpur",
      "Imphal East",
      "Imphal West",
      "Jiribam",
      "Kakching",
      "Kamjong",
      "Kangpokpi",
      "Noney",
      "Pherzawl",
      "Senapati",
      "Tamenglong",
      "Tengnoupal",
      "Thoubal",
      "Ukhrul",
    ],
    MIZORAM: [
      "Aizawl",
      "Champhai",
      "Kolasib",
      "Lawngtlai",
      "Lunglei",
      "Mamit",
      "Saiha",
      "Serchhip",
    ],
    TRIPURA: [
      "Dhalai",
      "Gomati",
      "Khowai",
      "North Tripura",
      "Sepahijala",
      "South Tripura",
      "Unakoti",
      "West Tripura",
    ],
    MEGHALAYA: [
      "East Garo Hills",
      "East Jaintia Hills",
      "East Khasi Hills",
      "North Garo Hills",
      "Ri Bhoi",
      "South Garo Hills",
      "South West Garo Hills",
      "South West Khasi Hills",
      "West Garo Hills",
      "West Jaintia Hills",
      "West Khasi Hills",
    ],
    ASSAM: [
      "Baksa",
      "Barpeta",
      "Biswanath",
      "Bongaigaon",
      "Cachar",
      "Charaideo",
      "Chirang",
      "Darrang",
      "Dhemaji",
      "Dhubri",
      "Dibrugarh",
      "Dima Hasao (North Cachar Hills)",
      "Goalpara",
      "Golaghat",
      "Hailakandi",
      "Hojai",
      "Jorhat",
      "Kamrup",
      "Kamrup Metropolitan",
      "Karbi Anglong",
      "Karimganj",
      "Kokrajhar",
      "Lakhimpur",
      "Majuli",
      "Morigaon",
      "Nagaon",
      "Nalbari",
      "Sivasagar",
      "Sonitpur",
      "South Salamara-Mankachar",
      "Tinsukia",
      "Udalguri",
      "West Karbi Anglong",
    ],
    "WEST BENGAL": [
      "Alipurduar",
      "Bankura",
      "Birbhum",
      "Cooch Behar",
      "Dakshin Dinajpur (South Dinajpur)",
      "Darjeeling",
      "Hooghly",
      "Howrah",
      "Jalpaiguri",
      "Jhargram",
      "Kalimpong",
      "Kolkata",
      "Malda",
      "Murshidabad",
      "Nadia",
      "North 24 Parganas",
      "Paschim Medinipur (West Medinipur)",
      "Paschim (West) Burdwan (Bardhaman)",
      "Purba Burdwan (Bardhaman)",
      "Purba Medinipur (East Medinipur)",
      "Purulia",
      "South 24 Parganas",
      "Uttar Dinajpur (North Dinajpur)",
    ],
    JHARKHAND: [
      "Bokaro",
      "Chatra",
      "Deoghar",
      "Dhanbad",
      "Dumka",
      "East Singhbhum",
      "Garhwa",
      "Giridih",
      "Godda",
      "Gumla",
      "Hazaribag",
      "Jamtara",
      "Khunti",
      "Koderma",
      "Latehar",
      "Lohardaga",
      "Pakur",
      "Palamu",
      "Ramgarh",
      "Ranchi",
      "Sahibganj",
      "Seraikela-Kharsawan",
      "Simdega",
      "West Singhbhum",
    ],
    ODISHA: [
      "Angul",
      "Balangir",
      "Balasore",
      "Bargarh",
      "Bhadrak",
      "Boudh",
      "Cuttack",
      "Deogarh",
      "Dhenkanal",
      "Gajapati",
      "Ganjam",
      "Jagatsinghapur",
      "Jajpur",
      "Jharsuguda",
      "Kalahandi",
      "Kandhamal",
      "Kendrapara",
      "Kendujhar (Keonjhar)",
      "Khordha",
      "Koraput",
      "Malkangiri",
      "Mayurbhanj",
      "Nabarangpur",
      "Nayagarh",
      "Nuapada",
      "Puri",
      "Rayagada",
      "Sambalpur",
      "Sonepur",
      "Sundargarh",
    ],
    CHATTISGARH: [
      "Balod",
      "Baloda Bazar",
      "Balrampur",
      "Bastar",
      "Bemetara",
      "Bijapur",
      "Bilaspur",
      "Dantewada (South Bastar)",
      "Dhamtari",
      "Durg",
      "Gariyaband",
      "Janjgir-Champa",
      "Jashpur",
      "Kabirdham (Kawardha)",
      "Kanker (North Bastar)",
      "Kondagaon",
      "Korba",
      "Korea (Koriya)",
      "Mahasamund",
      "Mungeli",
      "Narayanpur",
      "Raigarh",
      "Raipur",
      "Rajnandgaon",
      "Sukma",
      "Surajpur",
      "Surguja",
    ],
    "MADHYA PRADESH": [
      "Agar Malwa",
      "Alirajpur",
      "Anuppur",
      "Ashoknagar",
      "Balaghat",
      "Barwani",
      "Betul",
      "Bhind",
      "Bhopal",
      "Burhanpur",
      "Chhatarpur",
      "Chhindwara",
      "Damoh",
      "Datia",
      "Dewas",
      "Dhar",
      "Dindori",
      "Guna",
      "Gwalior",
      "Harda",
      "Hoshangabad",
      "Indore",
      "Jabalpur",
      "Jhabua",
      "Katni",
      "Khandwa",
      "Khargone",
      "Mandla",
      "Mandsaur",
      "Morena",
      "Narsinghpur",
      "Neemuch",
      "Panna",
      "Raisen",
      "Rajgarh",
      "Ratlam",
      "Rewa",
      "Sagar",
      "Satna",
      "Sehore",
      "Seoni",
      "Shahdol",
      "Shajapur",
      "Sheopur",
      "Shivpuri",
      "Sidhi",
      "Singrauli",
      "Tikamgarh",
      "Ujjain",
      "Umaria",
      "Vidisha",
    ],
    GUJARAT: [
      "Ahmedabad",
      "Amreli",
      "Anand",
      "Aravalli",
      "Banaskantha (Palanpur)",
      "Bharuch",
      "Bhavnagar",
      "Botad",
      "Chhota Udepur",
      "Dahod",
      "Dangs (Ahwa)",
      "Devbhoomi Dwarka",
      "Gandhinagar",
      "Gir Somnath",
      "Jamnagar",
      "Junagadh",
      "Kachchh",
      "Kheda (Nadiad)",
      "Mahisagar",
      "Mehsana",
      "Morbi",
      "Narmada (Rajpipla)",
      "Navsari",
      "Panchmahal (Godhra)",
      "Patan",
      "Porbandar",
      "Rajkot",
      "Sabarkantha (Himmatnagar)",
      "Surat",
      "Surendranagar",
      "Tapi (Vyara)",
      "Vadodara",
      "Valsad",
    ],
    "DADRA AND NAGAR HAVELI AND DAMAN AND DIU": [
      "Dadra & Nagar Haveli",
      "Daman",
      "Diu",
    ],
    MAHARASHTRA: [
      "Ahmednagar",
      "Akola",
      "Amravati",
      "Aurangabad",
      "Beed",
      "Bhandara",
      "Buldhana",
      "Chandrapur",
      "Dhule",
      "Gadchiroli",
      "Gondia",
      "Hingoli",
      "Jalgaon",
      "Jalna",
      "Kolhapur",
      "Latur",
      "Mumbai City",
      "Mumbai Suburban",
      "Nagpur",
      "Nanded",
      "Nandurbar",
      "Nashik",
      "Osmanabad",
      "Palghar",
      "Parbhani",
      "Pune",
      "Raigad",
      "Ratnagiri",
      "Sangli",
      "Satara",
      "Sindhudurg",
      "Solapur",
      "Thane",
      "Wardha",
      "Washim",
      "Yavatmal",
    ],
    KARNATAKA: [
      "Bagalkot",
      "Ballari (Bellary)",
      "Belagavi (Belgaum)",
      "Bengaluru (Bangalore) Rural",
      "Bengaluru (Bangalore) Urban",
      "Bidar",
      "Chamarajanagar",
      "Chikballapur",
      "Chikkamagaluru (Chikmagalur)",
      "Chitradurga",
      "Dakshina Kannada",
      "Davangere",
      "Dharwad",
      "Gadag",
      "Hassan",
      "Haveri",
      "Kalaburagi (Gulbarga)",
      "Kodagu",
      "Kolar",
      "Koppal",
      "Mandya",
      "Mysuru (Mysore)",
      "Raichur",
      "Ramanagara",
      "Shivamogga (Shimoga)",
      "Tumakuru (Tumkur)",
      "Udupi",
      "Uttara Kannada (Karwar)",
      "Vijayapura (Bijapur)",
      "Yadgir",
    ],
    GOA: ["North Goa", "South Goa"],
    LAKSHADWEEP: ["Lakshadweep"],
    KERALA: [
      "Alappuzha",
      "Ernakulam",
      "Idukki",
      "Kannur",
      "Kasaragod",
      "Kollam",
      "Kottayam",
      "Kozhikode",
      "Malappuram",
      "Palakkad",
      "Pathanamthitta",
      "Thiruvananthapuram",
      "Thrissur",
      "Wayanad",
    ],
    "TAMIL NADU": [
      "Ariyalur",
      "Chennai",
      "Coimbatore",
      "Cuddalore",
      "Dharmapuri",
      "Dindigul",
      "Erode",
      "Kanchipuram",
      "Kanyakumari",
      "Karur",
      "Krishnagiri",
      "Madurai",
      "Nagapattinam",
      "Namakkal",
      "Nilgiris",
      "Perambalur",
      "Pudukkottai",
      "Ramanathapuram",
      "Salem",
      "Sivaganga",
      "Thanjavur",
      "Theni",
      "Thoothukudi (Tuticorin)",
      "Tiruchirappalli",
      "Tirunelveli",
      "Tiruppur",
      "Tiruvallur",
      "Tiruvannamalai",
      "Tiruvarur",
      "Vellore",
      "Viluppuram",
      "Virudhunagar",
    ],
    PUDUCHERRY: ["Karaikal", "Mahe", "Pondicherry", "Yanam"],
    "ANDAMAN AND NICOBAR ISLANDS": [
      "Nicobar",
      "North and Middle Andaman",
      "South Andaman",
    ],
    "ANDHRA PRADESH": [
      "Anantapur",
      "Chittoor",
      "East Godavari",
      "Guntur",
      "Krishna",
      "Kurnool",
      "Prakasam",
      "Srikakulam",
      "Visakhapatnam",
      "Vizianagaram",
      "West Godavari",
      "YSR District,Kadapa (Cuddapah)",
    ],
    TELANGANA: [
      "Adilabad",
      "Bhadradri Kothagudem",
      "Hyderabad",
      "Jagtial",
      "Jangaon",
      "Jayashankar Bhoopalpally",
      "Jogulamba Gadwal",
      "Kamareddy",
      "Karimnagar",
      "Khammam",
      "Komaram Bheem Asifabad",
      "Mahabubabad",
      "Mahabubnagar",
      "Mancherial",
      "Medak",
      "Medchal",
      "Nagarkurnool",
      "Nalgonda",
      "Nirmal",
      "Nizamabad",
      "Peddapalli",
      "Rajanna Sircilla",
      "Rangareddy",
      "Sangareddy",
      "Siddipet",
      "Suryapet",
      "Vikarabad",
      "Wanaparthy",
      "Warangal (Rural)",
      "Warangal (Urban)",
      "Yadadri Bhuvanagiri",
    ],
  },
  hy = (t) => {
    const a = {
      "01": "Jammu And Kashmir",
      "02": "Himachal Pradesh",
      "03": "Punjab",
      "04": "Chandigarh",
      "05": "Uttarakhand",
      "06": "Haryana",
      "07": "Delhi",
      "08": "Rajasthan",
      "09": "Uttar Pradesh",
      10: "Bihar",
      11: "Sikkim",
      12: "Arunachal Pradesh",
      13: "Nagaland",
      14: "Manipur",
      15: "Mizoram",
      16: "Tripura",
      17: "Meghalaya",
      18: "Assam",
      19: "West Bengal",
      20: "Jharkhand",
      21: "Odisa",
      22: "Chattisgarh",
      23: "Madhya Pradesh",
      24: "Gujarat",
      25: "Daman and Diu",
      26: "Dadar and Nagar Haveli",
      27: "Maharashtra",
      28: "Andra Pradesh",
      29: "Karanataka",
      30: "Goa",
      31: "Lakshwadeep",
      32: "Kerala",
      33: "Tamil Nadu",
      34: "Punducherry",
      35: "Andaman and Nicobar Island",
      36: "Telangana",
      37: "Andra Pradesh(New)",
      15: !0,
      C: "COMPANY",
      P: "PERSON",
      H: "HUF",
      F: "FIRM",
      A: "(AOP)",
      T: "AOP(TRUST)",
      B: "(BOI)",
      L: "LOCAL AUTHORITY",
      J: "JURIDICAL PERSON",
      G: "GOVERNMENT",
      true: ["Writing..", "blue"],
      false: ["Wrong Input", "red"],
    };
    let s = t.toUpperCase(),
      c = "",
      u = "",
      p = "No Errors",
      b = s.substring(0, 2),
      S = s.substring(5, 6),
      E = /^[0-9]{2}$/,
      N = s.substring(2, 7),
      F = /^[A-Z]{5}$/,
      H = s.substring(7, 11),
      j = /^[0-9]{4}$/,
      V = s.substring(11, 12),
      q = /^[A-Z]{1}$/,
      K = s.substring(12, 13),
      ae = /^[1-9A-Z]{1}$/,
      G = s.substring(13, 14),
      L = /^Z$/,
      R = s.substring(14, 15),
      O = /^[0-9A-Z]{1}$/;
    return (
      isNaN(b)
        ? ((c = "[WRONG - First Two Characters Must be numbers 01 to 37]"),
          (p = "[ Wrong ]"))
        : (c = a[b] || "N.A"),
      S !== "" && (u = a[S] || "[ Wrong ]"),
      s.length !== 15
        ? (p = "...")
        : E.test(b)
        ? F.test(N)
          ? j.test(H)
            ? q.test(V)
              ? ae.test(K) && L.test(G)
                ? O.test(R) ||
                  (p =
                    "fifteen characters of GSTIN can be either alphabet or numeric")
                : (p = "[ Wrong ]")
              : isNaN(V)
              ? (p = " [ 12th characters should be alphabet ] ")
              : (p = "")
            : isNaN(H)
            ? (p = "[ 8 to 11 characters Must be Numbers Only ]")
            : (p = "")
          : (p = "[ Third to seventh characters of GSTIN should be alphabets ]")
        : (p = "[ WRONG ]"),
      H !== "" &&
        (isNaN(H)
          ? (p = "[ 8 to 11 characters Must be Numbers Only ]")
          : (p = "")),
      V !== "" && (isNaN(V) ? (p = "") : (p = "[ Wrong ]")),
      `${c} - ${u} - ${p}`
    );
  };
function uy() {
  const t = ta(),
    [a, s] = ee.useState({
      coords: { lattitude: 28.640552786049202, longitude: 77.22074051949213 },
    }),
    c = ee.useContext(yi),
    [u, p] = ee.useState(""),
    [b, S] = ee.useState(""),
    [E, N] = ee.useState(""),
    [F, H] = ee.useState(""),
    [j, V] = ee.useState(""),
    [q, K] = ee.useState(""),
    [ae, G] = ee.useState(""),
    [L, R] = ee.useState(""),
    [O, X] = ee.useState(""),
    [W, U] = ee.useState(""),
    [te, he] = ee.useState(""),
    [J, Y] = ee.useState(null),
    [se, fe] = ee.useState(""),
    [ie, ke] = ee.useState(""),
    [_e, Le] = ee.useState([]),
    [ue, xe] = ee.useState({ lat: null, lng: null }),
    [be, Me] = ee.useState("Enter your details"),
    [Te, He] = ee.useState(!1),
    [De, Ke] = ee.useState(!1),
    [je, pt] = ee.useState(!1);
  ee.useEffect(() => {
    navigator.geolocation.getCurrentPosition((Se) => {
      s({
        coords: {
          lattitude: Se.coords.latitude,
          longitude: Se.coords.longitude,
        },
      }),
        console.log(Se.coords);
    }),
      (document.title = "MediTrade | Signup");
  }, []);
  const Ze = (Se) => {
      const Ce = Se.target.value.trim();
      Ke(!1), p(Ce);
      const ze = /^[A-Za-z0-9_]+$/;
      Ce.length > 2
        ? ze.test(Ce)
          ? fetch(`${c.api}/onuserValidation?username=${Ce}`, { method: "GET" })
              .then((Ie) => Ie.json())
              .then((Ie) => {
                Ie.success.username == null
                  ? (He(!0), Me("Valid user"))
                  : (He(!1), Ke(!0), Me(Ie.success.username));
              })
              .catch((Ie) => {
                console.error("Error:", Ie);
              })
          : (He(!1),
            Me(
              "Invalid characters in username. Only letters, numbers, and underscores are allowed."
            ))
        : (He(!1), Me("Minimum 3 characters allowed"));
    },
    Ot = (Se) => {
      const Ce = Se.target.value.trim();
      pt(!1),
        /^\d+$/.test(Ce)
          ? (Ce.length <= 10 ? H(Ce) : Me("Phone length should be 10"),
            Ce.length > 8 &&
              fetch(`${c.api}/onphoneValidation?phone=${Ce}`, { method: "GET" })
                .then((Ie) => Ie.json())
                .then((Ie) => {
                  Ie.success.phone == null
                    ? (He(!0), Me("Valid Phone"))
                    : (He(!1), pt(!0), Me(Ie.success.phone));
                })
                .catch((Ie) => {
                  console.error("Error:", Ie);
                }))
          : (He(!1), Me("Invalid phone number. Only numbers are allowed."));
    },
    Tt = (Se) => {
      const Ce = Se.target.value;
      K(Ce),
        Ce === j
          ? (He(!0), Me("Matched"))
          : (He(!1), Me("Password Did not Matched"));
    },
    oi = (Se) => {
      const Ce = Se.target.value.toUpperCase(),
        ze = hy(Ce);
      X(Ce),
        ze === "No Errors"
          ? (He(!0), Me("Valid GST number"))
          : (He(!1), Me(ze));
    };
  function _t(Se) {
    if (Se.length !== 15) return !1;
    var Ce = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
      ze = Ce.length;
    let Ie = {},
      bi = {};
    for (let Ve = 0; Ve < ze; Ve++) Ie[Ce[Ve]] = Ve;
    for (let Ve = 0; Ve < Ce.length; Ve++) bi[Ve] = Ce[Ve];
    const ki = Se.split("")
        .slice(0, 14)
        .map((Ve, ne) =>
          ne % 2 === 0 ? Ie[Ve.toUpperCase()] : Ie[Ve.toUpperCase()] * 2
        ),
      Oi = ki.map((Ve) => Math.floor(Ve / ze)),
      Si = ki
        .map((Ve, ne) => Ve - Oi[ne] * ze)
        .map((Ve, ne) => Ve + Oi[ne])
        .reduce((Ve, ne) => Ve + ne, 0),
      ia = Si + -(Math.floor(Si / ze) * ze),
      At = ze - ia,
      ei = Se[14],
      Pt = bi[At];
    return ei === Pt;
  }
  const li = (Se) => {
      const Ce = Se.target.value;
      fe(Ce);
      const ze = nd[Ce] || [];
      Le(ze), ke("");
    },
    Qt = (Se) => {
      if (
        (Se.preventDefault(), console.log("heyaa", ue.lat, ue.lng), j !== q)
      ) {
        alert("Password Not Matched"), Me("Provide Politely Password");
        return;
      }
      if (De || u.length < 2) {
        alert("Create a Valid User"), Me("Create a Valid user");
        return;
      }
      if (je || F.length < 9) {
        alert("Provide a Valid Phone"), Me("Provide a Valid Phone");
        return;
      }
      if (ue.lat == null || ue.lng == null) {
        alert("Provide a Valid Location"), Me("Provide a Valid Location");
        return;
      }
      if (!_t(O)) {
        alert("Invalid GST number"), Me("Provide GSTIN");
        return;
      }
      const Ce = new FormData();
      if (J) {
        const ze = new Blob([J], { type: J.type });
        Ce.append("shopimage", ze, J.name);
      }
      Ce.append("username", u),
        Ce.append("firstname", b),
        Ce.append("lastname", E),
        Ce.append("phoneNo", F),
        Ce.append("password", j),
        Ce.append("confpassword", q),
        Ce.append("shopName", ae),
        Ce.append("drugLicenseNo", L),
        Ce.append("GSTnumber", O),
        Ce.append("state", se),
        Ce.append("district", ie),
        Ce.append("locality", W),
        Ce.append("address", te),
        Ce.append("latitude", ue.lat),
        Ce.append("longitude", ue.lng),
        fetch(`${c.api}/register_member`, { method: "POST", body: Ce })
          .then((ze) => ze.json())
          .then((ze) => {
            console.log("Response from server:", ze), alert(ze.info), t("/");
          })
          .catch((ze) => {
            console.error("Error:", ze);
          });
    },
    Wt = (Se) => {
      const Ce = Se.target.files[0];
      Y(Ce);
    },
    ci = (Se) => {
      const Ce = Se.lat,
        ze = Se.lng;
      xe({ lat: Ce, lng: ze }),
        console.log("Latitude:", Ce),
        console.log("Longitude:", ze);
    };
  return k.jsxs("div", {
    className: "signup-form-container",
    children: [
      k.jsxs("div", {
        className: "header",
        children: [
          k.jsx("img", { src: fh, className: "logo", alt: "" }),
          k.jsx(Ao, {
            to: "/",
            className: "link",
            children: "Already have an account.",
          }),
        ],
      }),
      k.jsxs("form", {
        onSubmit: Qt,
        className: "signup-form",
        children: [
          k.jsx("div", {
            style: {
              color: Te ? "#3ddc8d" : "rgba(237, 59, 59, 0.926)",
              textAlign: "center",
            },
            children: k.jsx("p", { children: be }),
          }),
          k.jsx("div", { children: k.jsx("p", {}) }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Username",
                value: u,
                onChange: Ze,
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  d: "M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "First Name",
                value: b,
                onChange: (Se) => S(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  d: "M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Last Name",
                value: E,
                onChange: (Se) => N(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M2 3.5A1.5 1.5 0 013.5 2h1.148a1.5 1.5 0 011.465 1.175l.716 3.223a1.5 1.5 0 01-1.052 1.767l-.933.267c-.41.117-.643.555-.48.95a11.542 11.542 0 006.254 6.254c.395.163.833-.07.95-.48l.267-.933a1.5 1.5 0 011.767-1.052l3.223.716A1.5 1.5 0 0118 15.352V16.5a1.5 1.5 0 01-1.5 1.5H15c-1.149 0-2.263-.15-3.326-.43A13.022 13.022 0 012.43 8.326 13.019 13.019 0 012 5V3.5z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Phone",
                value: F,
                onChange: Ot,
                type: "phone",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Password",
                value: j,
                onChange: (Se) => V(Se.target.value),
                type: "password",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Repeat Password",
                value: q,
                onChange: Tt,
                type: "password",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M6 5v1H4.667a1.75 1.75 0 00-1.743 1.598l-.826 9.5A1.75 1.75 0 003.84 19H16.16a1.75 1.75 0 001.743-1.902l-.826-9.5A1.75 1.75 0 0015.333 6H14V5a4 4 0 00-8 0zm4-2.5A2.5 2.5 0 007.5 5v1h5V5A2.5 2.5 0 0010 2.5zM7.5 10a2.5 2.5 0 005 0V8.75a.75.75 0 011.5 0V10a4 4 0 01-8 0V8.75a.75.75 0 011.5 0V10z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Shop Name",
                value: ae,
                onChange: (Se) => G(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M5.404 14.596A6.5 6.5 0 1116.5 10a1.25 1.25 0 01-2.5 0 4 4 0 10-.571 2.06A2.75 2.75 0 0018 10a8 8 0 10-2.343 5.657.75.75 0 00-1.06-1.06 6.5 6.5 0 01-9.193 0zM10 7.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Drug License Number",
                value: L,
                onChange: (Se) => R(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M16.403 12.652a3 3 0 000-5.304 3 3 0 00-3.75-3.751 3 3 0 00-5.305 0 3 3 0 00-3.751 3.75 3 3 0 000 5.305 3 3 0 003.75 3.751 3 3 0 005.305 0 3 3 0 003.751-3.75zm-2.546-4.46a.75.75 0 00-1.214-.883l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
                }),
              }),
              k.jsx("input", {
                maxLength: "15",
                placeholder: "GST Number",
                value: O,
                onChange: oi,
                type: "text",
              }),
            ],
          }),
          k.jsxs("select", {
            name: "state",
            id: "state",
            value: se,
            onChange: li,
            required: !0,
            children: [
              k.jsx("option", { value: "", children: "Select State" }),
              Object.keys(nd).map((Se) =>
                k.jsx("option", { value: Se, children: Se }, Se)
              ),
            ],
          }),
          k.jsxs("select", {
            name: "district",
            id: "district",
            value: ie,
            onChange: (Se) => ke(Se.target.value),
            required: !0,
            children: [
              k.jsx("option", { value: "", children: "Select District" }),
              _e.map((Se) => k.jsx("option", { value: Se, children: Se }, Se)),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M9.69 18.933l.003.001C9.89 19.02 10 19 10 19s.11.02.308-.066l.002-.001.006-.003.018-.008a5.741 5.741 0 00.281-.14c.186-.096.446-.24.757-.433.62-.384 1.445-.966 2.274-1.765C15.302 14.988 17 12.493 17 9A7 7 0 103 9c0 3.492 1.698 5.988 3.355 7.584a13.731 13.731 0 002.273 1.765 11.842 11.842 0 00.976.544l.062.029.018.008.006.003zM10 11.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Locality",
                value: W,
                onChange: (Se) => U(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  clipRule: "evenodd",
                  fillRule: "evenodd",
                  d: "M8.157 2.175a1.5 1.5 0 00-1.147 0l-4.084 1.69A1.5 1.5 0 002 5.251v10.877a1.5 1.5 0 002.074 1.386l3.51-1.453 4.26 1.763a1.5 1.5 0 001.146 0l4.083-1.69A1.5 1.5 0 0018 14.748V3.873a1.5 1.5 0 00-2.073-1.386l-3.51 1.452-4.26-1.763zM7.58 5a.75.75 0 01.75.75v6.5a.75.75 0 01-1.5 0v-6.5A.75.75 0 017.58 5zm5.59 2.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z",
                }),
              }),
              k.jsx("input", {
                required: !0,
                placeholder: "Address",
                value: te,
                onChange: (Se) => he(Se.target.value),
                type: "text",
              }),
            ],
          }),
          k.jsxs("div", {
            className: "input-container",
            children: [
              k.jsx("svg", {
                className: "icon",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                xmlns: "http://www.w3.org/2000/svg",
                "aria-hidden": "true",
                children: k.jsx("path", {
                  d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13z",
                }),
              }),
              k.jsx("input", { type: "file", onChange: Wt }),
            ],
          }),
          k.jsx("div", {
            className: "btn-container",
            children: k.jsx("button", {
              className: "btn btn-primary",
              children: "SIGN UP",
            }),
          }),
        ],
      }),
      k.jsx("div", {
        className: "map-container",
        children: k.jsx(Ns, {
          bootstrapURLKeys: { key: "AIzaSyBcjOCY2sK1-HXkxsQUqISRRYqF9p9Ul8U" },
          defaultZoom: 11,
          defaultCenter: {
            lat: a == null ? void 0 : a.coords.lattitude,
            lng: a == null ? void 0 : a.coords.longitude,
          },
          onClick: (Se) => ci(Se),
        }),
      }),
    ],
  });
}
const gs = "/assets/Indian-Rupee-symbol-ee5cfa5b.svg",
  dy = "/assets/sales-f8907697.svg",
  py = "/assets/purchase-29329091.svg",
  fy = "/assets/totalProducts-e1363800.svg",
  gy = "/assets/partyname-3f110045.svg",
  my = "/assets/billno-2bc4b793.svg",
  xy = "/assets/billdate-e803f0c9.svg",
  vy = "/assets/trtype-46c25bca.svg";
var Rf = {},
  no = {},
  yy = {
    get exports() {
      return no;
    },
    set exports(t) {
      no = t;
    },
  };
/*!
 * ApexCharts v3.41.1
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */ (function (t, a) {
  function s(T, e) {
    var i = Object.keys(T);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(T);
      e &&
        (n = n.filter(function (r) {
          return Object.getOwnPropertyDescriptor(T, r).enumerable;
        })),
        i.push.apply(i, n);
    }
    return i;
  }
  function c(T) {
    for (var e = 1; e < arguments.length; e++) {
      var i = arguments[e] != null ? arguments[e] : {};
      e % 2
        ? s(Object(i), !0).forEach(function (n) {
            E(T, n, i[n]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(T, Object.getOwnPropertyDescriptors(i))
        : s(Object(i)).forEach(function (n) {
            Object.defineProperty(T, n, Object.getOwnPropertyDescriptor(i, n));
          });
    }
    return T;
  }
  function u(T) {
    return (
      (u =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (e) {
              return typeof e;
            }
          : function (e) {
              return e &&
                typeof Symbol == "function" &&
                e.constructor === Symbol &&
                e !== Symbol.prototype
                ? "symbol"
                : typeof e;
            }),
      u(T)
    );
  }
  function p(T, e) {
    if (!(T instanceof e))
      throw new TypeError("Cannot call a class as a function");
  }
  function b(T, e) {
    for (var i = 0; i < e.length; i++) {
      var n = e[i];
      (n.enumerable = n.enumerable || !1),
        (n.configurable = !0),
        "value" in n && (n.writable = !0),
        Object.defineProperty(T, n.key, n);
    }
  }
  function S(T, e, i) {
    return e && b(T.prototype, e), i && b(T, i), T;
  }
  function E(T, e, i) {
    return (
      e in T
        ? Object.defineProperty(T, e, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (T[e] = i),
      T
    );
  }
  function N(T, e) {
    if (typeof e != "function" && e !== null)
      throw new TypeError("Super expression must either be null or a function");
    (T.prototype = Object.create(e && e.prototype, {
      constructor: { value: T, writable: !0, configurable: !0 },
    })),
      e && H(T, e);
  }
  function F(T) {
    return (
      (F = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (e) {
            return e.__proto__ || Object.getPrototypeOf(e);
          }),
      F(T)
    );
  }
  function H(T, e) {
    return (
      (H =
        Object.setPrototypeOf ||
        function (i, n) {
          return (i.__proto__ = n), i;
        }),
      H(T, e)
    );
  }
  function j(T, e) {
    if (e && (typeof e == "object" || typeof e == "function")) return e;
    if (e !== void 0)
      throw new TypeError(
        "Derived constructors may only return object or undefined"
      );
    return (function (i) {
      if (i === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called"
        );
      return i;
    })(T);
  }
  function V(T) {
    var e = (function () {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function") return !0;
      try {
        return (
          Boolean.prototype.valueOf.call(
            Reflect.construct(Boolean, [], function () {})
          ),
          !0
        );
      } catch {
        return !1;
      }
    })();
    return function () {
      var i,
        n = F(T);
      if (e) {
        var r = F(this).constructor;
        i = Reflect.construct(n, arguments, r);
      } else i = n.apply(this, arguments);
      return j(this, i);
    };
  }
  function q(T, e) {
    return (
      (function (i) {
        if (Array.isArray(i)) return i;
      })(T) ||
      (function (i, n) {
        var r =
          i == null
            ? null
            : (typeof Symbol < "u" && i[Symbol.iterator]) || i["@@iterator"];
        if (r != null) {
          var o,
            l,
            h = [],
            d = !0,
            g = !1;
          try {
            for (
              r = r.call(i);
              !(d = (o = r.next()).done) &&
              (h.push(o.value), !n || h.length !== n);
              d = !0
            );
          } catch (m) {
            (g = !0), (l = m);
          } finally {
            try {
              d || r.return == null || r.return();
            } finally {
              if (g) throw l;
            }
          }
          return h;
        }
      })(T, e) ||
      ae(T, e) ||
      (function () {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function K(T) {
    return (
      (function (e) {
        if (Array.isArray(e)) return G(e);
      })(T) ||
      (function (e) {
        if (
          (typeof Symbol < "u" && e[Symbol.iterator] != null) ||
          e["@@iterator"] != null
        )
          return Array.from(e);
      })(T) ||
      ae(T) ||
      (function () {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function ae(T, e) {
    if (T) {
      if (typeof T == "string") return G(T, e);
      var i = Object.prototype.toString.call(T).slice(8, -1);
      return (
        i === "Object" && T.constructor && (i = T.constructor.name),
        i === "Map" || i === "Set"
          ? Array.from(T)
          : i === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)
          ? G(T, e)
          : void 0
      );
    }
  }
  function G(T, e) {
    (e == null || e > T.length) && (e = T.length);
    for (var i = 0, n = new Array(e); i < e; i++) n[i] = T[i];
    return n;
  }
  var L = (function () {
      function T() {
        p(this, T);
      }
      return (
        S(
          T,
          [
            {
              key: "shadeRGBColor",
              value: function (e, i) {
                var n = i.split(","),
                  r = e < 0 ? 0 : 255,
                  o = e < 0 ? -1 * e : e,
                  l = parseInt(n[0].slice(4), 10),
                  h = parseInt(n[1], 10),
                  d = parseInt(n[2], 10);
                return (
                  "rgb(" +
                  (Math.round((r - l) * o) + l) +
                  "," +
                  (Math.round((r - h) * o) + h) +
                  "," +
                  (Math.round((r - d) * o) + d) +
                  ")"
                );
              },
            },
            {
              key: "shadeHexColor",
              value: function (e, i) {
                var n = parseInt(i.slice(1), 16),
                  r = e < 0 ? 0 : 255,
                  o = e < 0 ? -1 * e : e,
                  l = n >> 16,
                  h = (n >> 8) & 255,
                  d = 255 & n;
                return (
                  "#" +
                  (
                    16777216 +
                    65536 * (Math.round((r - l) * o) + l) +
                    256 * (Math.round((r - h) * o) + h) +
                    (Math.round((r - d) * o) + d)
                  )
                    .toString(16)
                    .slice(1)
                );
              },
            },
            {
              key: "shadeColor",
              value: function (e, i) {
                return T.isColorHex(i)
                  ? this.shadeHexColor(e, i)
                  : this.shadeRGBColor(e, i);
              },
            },
          ],
          [
            {
              key: "bind",
              value: function (e, i) {
                return function () {
                  return e.apply(i, arguments);
                };
              },
            },
            {
              key: "isObject",
              value: function (e) {
                return e && u(e) === "object" && !Array.isArray(e) && e != null;
              },
            },
            {
              key: "is",
              value: function (e, i) {
                return (
                  Object.prototype.toString.call(i) === "[object " + e + "]"
                );
              },
            },
            {
              key: "listToArray",
              value: function (e) {
                var i,
                  n = [];
                for (i = 0; i < e.length; i++) n[i] = e[i];
                return n;
              },
            },
            {
              key: "extend",
              value: function (e, i) {
                var n = this;
                typeof Object.assign != "function" &&
                  (Object.assign = function (o) {
                    if (o == null)
                      throw new TypeError(
                        "Cannot convert undefined or null to object"
                      );
                    for (var l = Object(o), h = 1; h < arguments.length; h++) {
                      var d = arguments[h];
                      if (d != null)
                        for (var g in d) d.hasOwnProperty(g) && (l[g] = d[g]);
                    }
                    return l;
                  });
                var r = Object.assign({}, e);
                return (
                  this.isObject(e) &&
                    this.isObject(i) &&
                    Object.keys(i).forEach(function (o) {
                      n.isObject(i[o]) && o in e
                        ? (r[o] = n.extend(e[o], i[o]))
                        : Object.assign(r, E({}, o, i[o]));
                    }),
                  r
                );
              },
            },
            {
              key: "extendArray",
              value: function (e, i) {
                var n = [];
                return (
                  e.map(function (r) {
                    n.push(T.extend(i, r));
                  }),
                  (e = n)
                );
              },
            },
            {
              key: "monthMod",
              value: function (e) {
                return e % 12;
              },
            },
            {
              key: "clone",
              value: function (e) {
                if (T.is("Array", e)) {
                  for (var i = [], n = 0; n < e.length; n++)
                    i[n] = this.clone(e[n]);
                  return i;
                }
                if (T.is("Null", e)) return null;
                if (T.is("Date", e)) return e;
                if (u(e) === "object") {
                  var r = {};
                  for (var o in e)
                    e.hasOwnProperty(o) && (r[o] = this.clone(e[o]));
                  return r;
                }
                return e;
              },
            },
            {
              key: "log10",
              value: function (e) {
                return Math.log(e) / Math.LN10;
              },
            },
            {
              key: "roundToBase10",
              value: function (e) {
                return Math.pow(10, Math.floor(Math.log10(e)));
              },
            },
            {
              key: "roundToBase",
              value: function (e, i) {
                return Math.pow(i, Math.floor(Math.log(e) / Math.log(i)));
              },
            },
            {
              key: "parseNumber",
              value: function (e) {
                return e === null ? e : parseFloat(e);
              },
            },
            {
              key: "stripNumber",
              value: function (e) {
                var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 2;
                return parseFloat(e.toPrecision(i));
              },
            },
            {
              key: "randomId",
              value: function () {
                return (Math.random() + 1).toString(36).substring(4);
              },
            },
            {
              key: "noExponents",
              value: function (e) {
                var i = String(e).split(/[eE]/);
                if (i.length === 1) return i[0];
                var n = "",
                  r = e < 0 ? "-" : "",
                  o = i[0].replace(".", ""),
                  l = Number(i[1]) + 1;
                if (l < 0) {
                  for (n = r + "0."; l++; ) n += "0";
                  return n + o.replace(/^-/, "");
                }
                for (l -= o.length; l--; ) n += "0";
                return o + n;
              },
            },
            {
              key: "getDimensions",
              value: function (e) {
                var i = getComputedStyle(e, null),
                  n = e.clientHeight,
                  r = e.clientWidth;
                return (
                  (n -= parseFloat(i.paddingTop) + parseFloat(i.paddingBottom)),
                  [
                    (r -=
                      parseFloat(i.paddingLeft) + parseFloat(i.paddingRight)),
                    n,
                  ]
                );
              },
            },
            {
              key: "getBoundingClientRect",
              value: function (e) {
                var i = e.getBoundingClientRect();
                return {
                  top: i.top,
                  right: i.right,
                  bottom: i.bottom,
                  left: i.left,
                  width: e.clientWidth,
                  height: e.clientHeight,
                  x: i.left,
                  y: i.top,
                };
              },
            },
            {
              key: "getLargestStringFromArr",
              value: function (e) {
                return e.reduce(function (i, n) {
                  return (
                    Array.isArray(n) &&
                      (n = n.reduce(function (r, o) {
                        return r.length > o.length ? r : o;
                      })),
                    i.length > n.length ? i : n
                  );
                }, 0);
              },
            },
            {
              key: "hexToRgba",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "#999999",
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0.6;
                e.substring(0, 1) !== "#" && (e = "#999999");
                var n = e.replace("#", "");
                n = n.match(new RegExp("(.{" + n.length / 3 + "})", "g"));
                for (var r = 0; r < n.length; r++)
                  n[r] = parseInt(n[r].length === 1 ? n[r] + n[r] : n[r], 16);
                return i !== void 0 && n.push(i), "rgba(" + n.join(",") + ")";
              },
            },
            {
              key: "getOpacityFromRGBA",
              value: function (e) {
                return parseFloat(e.replace(/^.*,(.+)\)/, "$1"));
              },
            },
            {
              key: "rgb2hex",
              value: function (e) {
                return (e = e.match(
                  /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                )) && e.length === 4
                  ? "#" +
                      ("0" + parseInt(e[1], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(e[2], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(e[3], 10).toString(16)).slice(-2)
                  : "";
              },
            },
            {
              key: "isColorHex",
              value: function (e) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                  e
                );
              },
            },
            {
              key: "getPolygonPos",
              value: function (e, i) {
                for (var n = [], r = (2 * Math.PI) / i, o = 0; o < i; o++) {
                  var l = {};
                  (l.x = e * Math.sin(o * r)),
                    (l.y = -e * Math.cos(o * r)),
                    n.push(l);
                }
                return n;
              },
            },
            {
              key: "polarToCartesian",
              value: function (e, i, n, r) {
                var o = ((r - 90) * Math.PI) / 180;
                return { x: e + n * Math.cos(o), y: i + n * Math.sin(o) };
              },
            },
            {
              key: "escapeString",
              value: function (e) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "x",
                  n = e.toString().slice();
                return (n = n.replace(
                  /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                  i
                ));
              },
            },
            {
              key: "negToZero",
              value: function (e) {
                return e < 0 ? 0 : e;
              },
            },
            {
              key: "moveIndexInArray",
              value: function (e, i, n) {
                if (n >= e.length)
                  for (var r = n - e.length + 1; r--; ) e.push(void 0);
                return e.splice(n, 0, e.splice(i, 1)[0]), e;
              },
            },
            {
              key: "extractNumber",
              value: function (e) {
                return parseFloat(e.replace(/[^\d.]*/g, ""));
              },
            },
            {
              key: "findAncestor",
              value: function (e, i) {
                for (; (e = e.parentElement) && !e.classList.contains(i); );
                return e;
              },
            },
            {
              key: "setELstyles",
              value: function (e, i) {
                for (var n in i) i.hasOwnProperty(n) && (e.style.key = i[n]);
              },
            },
            {
              key: "isNumber",
              value: function (e) {
                return (
                  !isNaN(e) &&
                  parseFloat(Number(e)) === e &&
                  !isNaN(parseInt(e, 10))
                );
              },
            },
            {
              key: "isFloat",
              value: function (e) {
                return Number(e) === e && e % 1 != 0;
              },
            },
            {
              key: "isSafari",
              value: function () {
                return /^((?!chrome|android).)*safari/i.test(
                  navigator.userAgent
                );
              },
            },
            {
              key: "isFirefox",
              value: function () {
                return (
                  navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                );
              },
            },
            {
              key: "isIE11",
              value: function () {
                if (
                  window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                  window.navigator.appVersion.indexOf("Trident/") > -1
                )
                  return !0;
              },
            },
            {
              key: "isIE",
              value: function () {
                var e = window.navigator.userAgent,
                  i = e.indexOf("MSIE ");
                if (i > 0)
                  return parseInt(e.substring(i + 5, e.indexOf(".", i)), 10);
                if (e.indexOf("Trident/") > 0) {
                  var n = e.indexOf("rv:");
                  return parseInt(e.substring(n + 3, e.indexOf(".", n)), 10);
                }
                var r = e.indexOf("Edge/");
                return (
                  r > 0 && parseInt(e.substring(r + 5, e.indexOf(".", r)), 10)
                );
              },
            },
          ]
        ),
        T
      );
    })(),
    R = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w), this.setEasingFunctions();
      }
      return (
        S(T, [
          {
            key: "setEasingFunctions",
            value: function () {
              var e;
              if (!this.w.globals.easing) {
                switch (this.w.config.chart.animations.easing) {
                  case "linear":
                    e = "-";
                    break;
                  case "easein":
                    e = "<";
                    break;
                  case "easeout":
                    e = ">";
                    break;
                  case "easeinout":
                  default:
                    e = "<>";
                    break;
                  case "swing":
                    e = function (i) {
                      var n = 1.70158;
                      return (i -= 1) * i * ((n + 1) * i + n) + 1;
                    };
                    break;
                  case "bounce":
                    e = function (i) {
                      return i < 1 / 2.75
                        ? 7.5625 * i * i
                        : i < 2 / 2.75
                        ? 7.5625 * (i -= 1.5 / 2.75) * i + 0.75
                        : i < 2.5 / 2.75
                        ? 7.5625 * (i -= 2.25 / 2.75) * i + 0.9375
                        : 7.5625 * (i -= 2.625 / 2.75) * i + 0.984375;
                    };
                    break;
                  case "elastic":
                    e = function (i) {
                      return i === !!i
                        ? i
                        : Math.pow(2, -10 * i) *
                            Math.sin(((i - 0.075) * (2 * Math.PI)) / 0.3) +
                            1;
                    };
                }
                this.w.globals.easing = e;
              }
            },
          },
          {
            key: "animateLine",
            value: function (e, i, n, r) {
              e.attr(i).animate(r).attr(n);
            },
          },
          {
            key: "animateMarker",
            value: function (e, i, n, r, o, l) {
              i || (i = 0),
                e
                  .attr({ r: i, width: i, height: i })
                  .animate(r, o)
                  .attr({ r: n, width: n.width, height: n.height })
                  .afterAll(function () {
                    l();
                  });
            },
          },
          {
            key: "animateCircle",
            value: function (e, i, n, r, o) {
              e.attr({ r: i.r, cx: i.cx, cy: i.cy })
                .animate(r, o)
                .attr({ r: n.r, cx: n.cx, cy: n.cy });
            },
          },
          {
            key: "animateRect",
            value: function (e, i, n, r, o) {
              e.attr(i)
                .animate(r)
                .attr(n)
                .afterAll(function () {
                  return o();
                });
            },
          },
          {
            key: "animatePathsGradually",
            value: function (e) {
              var i = e.el,
                n = e.realIndex,
                r = e.j,
                o = e.fill,
                l = e.pathFrom,
                h = e.pathTo,
                d = e.speed,
                g = e.delay,
                m = this.w,
                x = 0;
              m.config.chart.animations.animateGradually.enabled &&
                (x = m.config.chart.animations.animateGradually.delay),
                m.config.chart.animations.dynamicAnimation.enabled &&
                  m.globals.dataChanged &&
                  m.config.chart.type !== "bar" &&
                  (x = 0),
                this.morphSVG(
                  i,
                  n,
                  r,
                  m.config.chart.type !== "line" || m.globals.comboCharts
                    ? o
                    : "stroke",
                  l,
                  h,
                  d,
                  g * x
                );
            },
          },
          {
            key: "showDelayedElements",
            value: function () {
              this.w.globals.delayedElements.forEach(function (e) {
                var i = e.el;
                i.classList.remove("apexcharts-element-hidden"),
                  i.classList.add("apexcharts-hidden-element-shown");
              });
            },
          },
          {
            key: "animationCompleted",
            value: function (e) {
              var i = this.w;
              i.globals.animationEnded ||
                ((i.globals.animationEnded = !0),
                this.showDelayedElements(),
                typeof i.config.chart.events.animationEnd == "function" &&
                  i.config.chart.events.animationEnd(this.ctx, {
                    el: e,
                    w: i,
                  }));
            },
          },
          {
            key: "morphSVG",
            value: function (e, i, n, r, o, l, h, d) {
              var g = this,
                m = this.w;
              o || (o = e.attr("pathFrom")), l || (l = e.attr("pathTo"));
              var x = function (v) {
                return (
                  m.config.chart.type === "radar" && (h = 1),
                  "M 0 ".concat(m.globals.gridHeight)
                );
              };
              (!o || o.indexOf("undefined") > -1 || o.indexOf("NaN") > -1) &&
                (o = x()),
                (!l || l.indexOf("undefined") > -1 || l.indexOf("NaN") > -1) &&
                  (l = x()),
                m.globals.shouldAnimate || (h = 1),
                e
                  .plot(o)
                  .animate(1, m.globals.easing, d)
                  .plot(o)
                  .animate(h, m.globals.easing, d)
                  .plot(l)
                  .afterAll(function () {
                    L.isNumber(n)
                      ? n ===
                          m.globals.series[m.globals.maxValsInArrayIndex]
                            .length -
                            2 &&
                        m.globals.shouldAnimate &&
                        g.animationCompleted(e)
                      : r !== "none" &&
                        m.globals.shouldAnimate &&
                        ((!m.globals.comboCharts &&
                          i === m.globals.series.length - 1) ||
                          m.globals.comboCharts) &&
                        g.animationCompleted(e),
                      g.showDelayedElements();
                  });
            },
          },
        ]),
        T
      );
    })(),
    O = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "getDefaultFilter",
            value: function (e, i) {
              var n = this.w;
              e.unfilter(!0),
                new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                n.config.states.normal.filter !== "none"
                  ? this.applyFilter(
                      e,
                      i,
                      n.config.states.normal.filter.type,
                      n.config.states.normal.filter.value
                    )
                  : n.config.chart.dropShadow.enabled &&
                    this.dropShadow(e, n.config.chart.dropShadow, i);
            },
          },
          {
            key: "addNormalFilter",
            value: function (e, i) {
              var n = this.w;
              n.config.chart.dropShadow.enabled &&
                !e.node.classList.contains("apexcharts-marker") &&
                this.dropShadow(e, n.config.chart.dropShadow, i);
            },
          },
          {
            key: "addLightenFilter",
            value: function (e, i, n) {
              var r = this,
                o = this.w,
                l = n.intensity;
              e.unfilter(!0),
                new window.SVG.Filter(),
                e.filter(function (h) {
                  var d = o.config.chart.dropShadow;
                  (d.enabled ? r.addShadow(h, i, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: 1.5, intercept: l },
                  });
                }),
                e.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(e.filterer.node);
            },
          },
          {
            key: "addDarkenFilter",
            value: function (e, i, n) {
              var r = this,
                o = this.w,
                l = n.intensity;
              e.unfilter(!0),
                new window.SVG.Filter(),
                e.filter(function (h) {
                  var d = o.config.chart.dropShadow;
                  (d.enabled ? r.addShadow(h, i, d) : h).componentTransfer({
                    rgb: { type: "linear", slope: l },
                  });
                }),
                e.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(e.filterer.node);
            },
          },
          {
            key: "applyFilter",
            value: function (e, i, n) {
              var r =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0.5;
              switch (n) {
                case "none":
                  this.addNormalFilter(e, i);
                  break;
                case "lighten":
                  this.addLightenFilter(e, i, { intensity: r });
                  break;
                case "darken":
                  this.addDarkenFilter(e, i, { intensity: r });
              }
            },
          },
          {
            key: "addShadow",
            value: function (e, i, n) {
              var r = n.blur,
                o = n.top,
                l = n.left,
                h = n.color,
                d = n.opacity,
                g = e
                  .flood(Array.isArray(h) ? h[i] : h, d)
                  .composite(e.sourceAlpha, "in")
                  .offset(l, o)
                  .gaussianBlur(r)
                  .merge(e.source);
              return e.blend(e.source, g);
            },
          },
          {
            key: "dropShadow",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
                r = i.top,
                o = i.left,
                l = i.blur,
                h = i.color,
                d = i.opacity,
                g = i.noUserSpaceOnUse,
                m = this.w;
              return (
                e.unfilter(!0),
                (L.isIE() && m.config.chart.type === "radialBar") ||
                  ((h = Array.isArray(h) ? h[n] : h),
                  e.filter(function (x) {
                    var v = null;
                    (v =
                      L.isSafari() || L.isFirefox() || L.isIE()
                        ? x
                            .flood(h, d)
                            .composite(x.sourceAlpha, "in")
                            .offset(o, r)
                            .gaussianBlur(l)
                        : x
                            .flood(h, d)
                            .composite(x.sourceAlpha, "in")
                            .offset(o, r)
                            .gaussianBlur(l)
                            .merge(x.source)),
                      x.blend(x.source, v);
                  }),
                  g ||
                    e.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse"
                    ),
                  this._scaleFilterSize(e.filterer.node)),
                e
              );
            },
          },
          {
            key: "setSelectionFilter",
            value: function (e, i, n) {
              var r = this.w;
              if (
                r.globals.selectedDataPoints[i] !== void 0 &&
                r.globals.selectedDataPoints[i].indexOf(n) > -1
              ) {
                e.node.setAttribute("selected", !0);
                var o = r.config.states.active.filter;
                o !== "none" && this.applyFilter(e, i, o.type, o.value);
              }
            },
          },
          {
            key: "_scaleFilterSize",
            value: function (e) {
              (function (i) {
                for (var n in i) i.hasOwnProperty(n) && e.setAttribute(n, i[n]);
              })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
            },
          },
        ]),
        T
      );
    })(),
    X = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(
          T,
          [
            {
              key: "roundPathCorners",
              value: function (e, i) {
                function n(B, $, Z) {
                  var re = $.x - B.x,
                    ce = $.y - B.y,
                    oe = Math.sqrt(re * re + ce * ce);
                  return r(B, $, Math.min(1, Z / oe));
                }
                function r(B, $, Z) {
                  return { x: B.x + ($.x - B.x) * Z, y: B.y + ($.y - B.y) * Z };
                }
                function o(B, $) {
                  B.length > 2 &&
                    ((B[B.length - 2] = $.x), (B[B.length - 1] = $.y));
                }
                function l(B) {
                  return {
                    x: parseFloat(B[B.length - 2]),
                    y: parseFloat(B[B.length - 1]),
                  };
                }
                e.indexOf("NaN") > -1 && (e = "");
                var h = e
                    .split(/[,\s]/)
                    .reduce(function (B, $) {
                      var Z = $.match("([a-zA-Z])(.+)");
                      return Z ? (B.push(Z[1]), B.push(Z[2])) : B.push($), B;
                    }, [])
                    .reduce(function (B, $) {
                      return (
                        parseFloat($) == $ && B.length
                          ? B[B.length - 1].push($)
                          : B.push([$]),
                        B
                      );
                    }, []),
                  d = [];
                if (h.length > 1) {
                  var g = l(h[0]),
                    m = null;
                  h[h.length - 1][0] == "Z" &&
                    h[0].length > 2 &&
                    ((m = ["L", g.x, g.y]), (h[h.length - 1] = m)),
                    d.push(h[0]);
                  for (var x = 1; x < h.length; x++) {
                    var v = d[d.length - 1],
                      w = h[x],
                      C = w == m ? h[1] : h[x + 1];
                    if (
                      C &&
                      v &&
                      v.length > 2 &&
                      w[0] == "L" &&
                      C.length > 2 &&
                      C[0] == "L"
                    ) {
                      var P,
                        M,
                        I = l(v),
                        D = l(w),
                        f = l(C);
                      (P = n(D, I, i)),
                        (M = n(D, f, i)),
                        o(w, P),
                        (w.origPoint = D),
                        d.push(w);
                      var y = r(P, D, 0.5),
                        A = r(D, M, 0.5),
                        _ = ["C", y.x, y.y, A.x, A.y, M.x, M.y];
                      (_.origPoint = D), d.push(_);
                    } else d.push(w);
                  }
                  if (m) {
                    var z = l(d[d.length - 1]);
                    d.push(["Z"]), o(d[0], z);
                  }
                } else d = h;
                return d.reduce(function (B, $) {
                  return B + $.join(" ") + " ";
                }, "");
              },
            },
            {
              key: "drawLine",
              value: function (e, i, n, r) {
                var o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : "#a8a8a8",
                  l =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : 0,
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : "butt";
                return this.w.globals.dom.Paper.line().attr({
                  x1: e,
                  y1: i,
                  x2: n,
                  y2: r,
                  stroke: o,
                  "stroke-dasharray": l,
                  "stroke-width": h,
                  "stroke-linecap": d,
                });
              },
            },
            {
              key: "drawRect",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  r =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0,
                  l =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : "#fefefe",
                  h =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : 1,
                  d =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  g =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : null,
                  m =
                    arguments.length > 9 && arguments[9] !== void 0
                      ? arguments[9]
                      : 0,
                  x = this.w.globals.dom.Paper.rect();
                return (
                  x.attr({
                    x: e,
                    y: i,
                    width: n > 0 ? n : 0,
                    height: r > 0 ? r : 0,
                    rx: o,
                    ry: o,
                    opacity: h,
                    "stroke-width": d !== null ? d : 0,
                    stroke: g !== null ? g : "none",
                    "stroke-dasharray": m,
                  }),
                  x.node.setAttribute("fill", l),
                  x
                );
              },
            },
            {
              key: "drawPolygon",
              value: function (e) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "#e1e1e1",
                  n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 1,
                  r =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "none";
                return this.w.globals.dom.Paper.polygon(e).attr({
                  fill: r,
                  stroke: i,
                  "stroke-width": n,
                });
              },
            },
            {
              key: "drawCircle",
              value: function (e) {
                var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null;
                e < 0 && (e = 0);
                var n = this.w.globals.dom.Paper.circle(2 * e);
                return i !== null && n.attr(i), n;
              },
            },
            {
              key: "drawPath",
              value: function (e) {
                var i = e.d,
                  n = i === void 0 ? "" : i,
                  r = e.stroke,
                  o = r === void 0 ? "#a8a8a8" : r,
                  l = e.strokeWidth,
                  h = l === void 0 ? 1 : l,
                  d = e.fill,
                  g = e.fillOpacity,
                  m = g === void 0 ? 1 : g,
                  x = e.strokeOpacity,
                  v = x === void 0 ? 1 : x,
                  w = e.classes,
                  C = e.strokeLinecap,
                  P = C === void 0 ? null : C,
                  M = e.strokeDashArray,
                  I = M === void 0 ? 0 : M,
                  D = this.w;
                return (
                  P === null && (P = D.config.stroke.lineCap),
                  (n.indexOf("undefined") > -1 || n.indexOf("NaN") > -1) &&
                    (n = "M 0 ".concat(D.globals.gridHeight)),
                  D.globals.dom.Paper.path(n).attr({
                    fill: d,
                    "fill-opacity": m,
                    stroke: o,
                    "stroke-opacity": v,
                    "stroke-linecap": P,
                    "stroke-width": h,
                    "stroke-dasharray": I,
                    class: w,
                  })
                );
              },
            },
            {
              key: "group",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  i = this.w.globals.dom.Paper.group();
                return e !== null && i.attr(e), i;
              },
            },
            {
              key: "move",
              value: function (e, i) {
                var n = ["M", e, i].join(" ");
                return n;
              },
            },
            {
              key: "line",
              value: function (e, i) {
                var n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  r = null;
                return (
                  n === null
                    ? (r = [" L", e, i].join(" "))
                    : n === "H"
                    ? (r = [" H", e].join(" "))
                    : n === "V" && (r = [" V", i].join(" ")),
                  r
                );
              },
            },
            {
              key: "curve",
              value: function (e, i, n, r, o, l) {
                var h = ["C", e, i, n, r, o, l].join(" ");
                return h;
              },
            },
            {
              key: "quadraticCurve",
              value: function (e, i, n, r) {
                return ["Q", e, i, n, r].join(" ");
              },
            },
            {
              key: "arc",
              value: function (e, i, n, r, o, l, h) {
                var d = "A";
                arguments.length > 7 &&
                  arguments[7] !== void 0 &&
                  arguments[7] &&
                  (d = "a");
                var g = [d, e, i, n, r, o, l, h].join(" ");
                return g;
              },
            },
            {
              key: "renderPaths",
              value: function (e) {
                var i,
                  n = e.j,
                  r = e.realIndex,
                  o = e.pathFrom,
                  l = e.pathTo,
                  h = e.stroke,
                  d = e.strokeWidth,
                  g = e.strokeLinecap,
                  m = e.fill,
                  x = e.animationDelay,
                  v = e.initialSpeed,
                  w = e.dataChangeSpeed,
                  C = e.className,
                  P = e.shouldClipToGrid,
                  M = P === void 0 || P,
                  I = e.bindEventsOnPaths,
                  D = I === void 0 || I,
                  f = e.drawShadow,
                  y = f === void 0 || f,
                  A = this.w,
                  _ = new O(this.ctx),
                  z = new R(this.ctx),
                  B = this.w.config.chart.animations.enabled,
                  $ =
                    B &&
                    this.w.config.chart.animations.dynamicAnimation.enabled,
                  Z = !!(
                    (B && !A.globals.resized) ||
                    ($ && A.globals.dataChanged && A.globals.shouldAnimate)
                  );
                Z ? (i = o) : ((i = l), (A.globals.animationEnded = !0));
                var re = A.config.stroke.dashArray,
                  ce = 0;
                ce = Array.isArray(re) ? re[r] : A.config.stroke.dashArray;
                var oe = this.drawPath({
                  d: i,
                  stroke: h,
                  strokeWidth: d,
                  fill: m,
                  fillOpacity: 1,
                  classes: C,
                  strokeLinecap: g,
                  strokeDashArray: ce,
                });
                if (
                  (oe.attr("index", r),
                  M &&
                    oe.attr({
                      "clip-path": "url(#gridRectMask".concat(
                        A.globals.cuid,
                        ")"
                      ),
                    }),
                  A.config.states.normal.filter.type !== "none")
                )
                  _.getDefaultFilter(oe, r);
                else if (
                  A.config.chart.dropShadow.enabled &&
                  y &&
                  (!A.config.chart.dropShadow.enabledOnSeries ||
                    (A.config.chart.dropShadow.enabledOnSeries &&
                      A.config.chart.dropShadow.enabledOnSeries.indexOf(r) !==
                        -1))
                ) {
                  var de = A.config.chart.dropShadow;
                  _.dropShadow(oe, de, r);
                }
                D &&
                  (oe.node.addEventListener(
                    "mouseenter",
                    this.pathMouseEnter.bind(this, oe)
                  ),
                  oe.node.addEventListener(
                    "mouseleave",
                    this.pathMouseLeave.bind(this, oe)
                  ),
                  oe.node.addEventListener(
                    "mousedown",
                    this.pathMouseDown.bind(this, oe)
                  )),
                  oe.attr({ pathTo: l, pathFrom: o });
                var Pe = {
                  el: oe,
                  j: n,
                  realIndex: r,
                  pathFrom: o,
                  pathTo: l,
                  fill: m,
                  strokeWidth: d,
                  delay: x,
                };
                return (
                  !B || A.globals.resized || A.globals.dataChanged
                    ? (!A.globals.resized && A.globals.dataChanged) ||
                      z.showDelayedElements()
                    : z.animatePathsGradually(c(c({}, Pe), {}, { speed: v })),
                  A.globals.dataChanged &&
                    $ &&
                    Z &&
                    z.animatePathsGradually(c(c({}, Pe), {}, { speed: w })),
                  oe
                );
              },
            },
            {
              key: "drawPattern",
              value: function (e, i, n) {
                var r =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "#a8a8a8",
                  o =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0;
                return this.w.globals.dom.Paper.pattern(i, n, function (l) {
                  e === "horizontalLines"
                    ? l.line(0, 0, n, 0).stroke({ color: r, width: o + 1 })
                    : e === "verticalLines"
                    ? l.line(0, 0, 0, i).stroke({ color: r, width: o + 1 })
                    : e === "slantedLines"
                    ? l.line(0, 0, i, n).stroke({ color: r, width: o })
                    : e === "squares"
                    ? l.rect(i, n).fill("none").stroke({ color: r, width: o })
                    : e === "circles" &&
                      l.circle(i).fill("none").stroke({ color: r, width: o });
                });
              },
            },
            {
              key: "drawGradient",
              value: function (e, i, n, r, o) {
                var l,
                  h =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  g =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  m =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : 0,
                  x = this.w;
                i.length < 9 && i.indexOf("#") === 0 && (i = L.hexToRgba(i, r)),
                  n.length < 9 &&
                    n.indexOf("#") === 0 &&
                    (n = L.hexToRgba(n, o));
                var v = 0,
                  w = 1,
                  C = 1,
                  P = null;
                d !== null &&
                  ((v = d[0] !== void 0 ? d[0] / 100 : 0),
                  (w = d[1] !== void 0 ? d[1] / 100 : 1),
                  (C = d[2] !== void 0 ? d[2] / 100 : 1),
                  (P = d[3] !== void 0 ? d[3] / 100 : null));
                var M = !(
                  x.config.chart.type !== "donut" &&
                  x.config.chart.type !== "pie" &&
                  x.config.chart.type !== "polarArea" &&
                  x.config.chart.type !== "bubble"
                );
                if (
                  ((l =
                    g === null || g.length === 0
                      ? x.globals.dom.Paper.gradient(
                          M ? "radial" : "linear",
                          function (f) {
                            f.at(v, i, r),
                              f.at(w, n, o),
                              f.at(C, n, o),
                              P !== null && f.at(P, i, r);
                          }
                        )
                      : x.globals.dom.Paper.gradient(
                          M ? "radial" : "linear",
                          function (f) {
                            (Array.isArray(g[m]) ? g[m] : g).forEach(function (
                              y
                            ) {
                              f.at(y.offset / 100, y.color, y.opacity);
                            });
                          }
                        )),
                  M)
                ) {
                  var I = x.globals.gridWidth / 2,
                    D = x.globals.gridHeight / 2;
                  x.config.chart.type !== "bubble"
                    ? l.attr({
                        gradientUnits: "userSpaceOnUse",
                        cx: I,
                        cy: D,
                        r: h,
                      })
                    : l.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                } else
                  e === "vertical"
                    ? l.from(0, 0).to(0, 1)
                    : e === "diagonal"
                    ? l.from(0, 0).to(1, 1)
                    : e === "horizontal"
                    ? l.from(0, 1).to(1, 1)
                    : e === "diagonal2" && l.from(1, 0).to(0, 1);
                return l;
              },
            },
            {
              key: "getTextBasedOnMaxWidth",
              value: function (e) {
                var i = e.text,
                  n = e.maxWidth,
                  r = e.fontSize,
                  o = e.fontFamily,
                  l = this.getTextRects(i, r, o),
                  h = l.width / i.length,
                  d = Math.floor(n / h);
                return n < l.width ? i.slice(0, d - 3) + "..." : i;
              },
            },
            {
              key: "drawText",
              value: function (e) {
                var i = this,
                  n = e.x,
                  r = e.y,
                  o = e.text,
                  l = e.textAnchor,
                  h = e.fontSize,
                  d = e.fontFamily,
                  g = e.fontWeight,
                  m = e.foreColor,
                  x = e.opacity,
                  v = e.maxWidth,
                  w = e.cssClass,
                  C = w === void 0 ? "" : w,
                  P = e.isPlainText,
                  M = P === void 0 || P,
                  I = this.w;
                o === void 0 && (o = "");
                var D = o;
                l || (l = "start"),
                  (m && m.length) || (m = I.config.chart.foreColor),
                  (d = d || I.config.chart.fontFamily),
                  (g = g || "regular");
                var f,
                  y = {
                    maxWidth: v,
                    fontSize: (h = h || "11px"),
                    fontFamily: d,
                  };
                return (
                  Array.isArray(o)
                    ? (f = I.globals.dom.Paper.text(function (A) {
                        for (var _ = 0; _ < o.length; _++)
                          (D = o[_]),
                            v &&
                              (D = i.getTextBasedOnMaxWidth(
                                c({ text: o[_] }, y)
                              )),
                            _ === 0 ? A.tspan(D) : A.tspan(D).newLine();
                      }))
                    : (v &&
                        (D = this.getTextBasedOnMaxWidth(c({ text: o }, y))),
                      (f = M
                        ? I.globals.dom.Paper.plain(o)
                        : I.globals.dom.Paper.text(function (A) {
                            return A.tspan(D);
                          }))),
                  f.attr({
                    x: n,
                    y: r,
                    "text-anchor": l,
                    "dominant-baseline": "auto",
                    "font-size": h,
                    "font-family": d,
                    "font-weight": g,
                    fill: m,
                    class: "apexcharts-text " + C,
                  }),
                  (f.node.style.fontFamily = d),
                  (f.node.style.opacity = x),
                  f
                );
              },
            },
            {
              key: "drawMarker",
              value: function (e, i, n) {
                e = e || 0;
                var r = n.pSize || 0,
                  o = null;
                if (n.shape === "square" || n.shape === "rect") {
                  var l = n.pRadius === void 0 ? r / 2 : n.pRadius;
                  (i !== null && r) || ((r = 0), (l = 0));
                  var h = 1.2 * r + l,
                    d = this.drawRect(h, h, h, h, l);
                  d.attr({
                    x: e - h / 2,
                    y: i - h / 2,
                    cx: e,
                    cy: i,
                    class: n.class ? n.class : "",
                    fill: n.pointFillColor,
                    "fill-opacity": n.pointFillOpacity ? n.pointFillOpacity : 1,
                    stroke: n.pointStrokeColor,
                    "stroke-width": n.pointStrokeWidth ? n.pointStrokeWidth : 0,
                    "stroke-opacity": n.pointStrokeOpacity
                      ? n.pointStrokeOpacity
                      : 1,
                  }),
                    (o = d);
                } else
                  (n.shape !== "circle" && n.shape) ||
                    (L.isNumber(i) || ((r = 0), (i = 0)),
                    (o = this.drawCircle(r, {
                      cx: e,
                      cy: i,
                      class: n.class ? n.class : "",
                      stroke: n.pointStrokeColor,
                      fill: n.pointFillColor,
                      "fill-opacity": n.pointFillOpacity
                        ? n.pointFillOpacity
                        : 1,
                      "stroke-width": n.pointStrokeWidth
                        ? n.pointStrokeWidth
                        : 0,
                      "stroke-opacity": n.pointStrokeOpacity
                        ? n.pointStrokeOpacity
                        : 1,
                    })));
                return o;
              },
            },
            {
              key: "pathMouseEnter",
              value: function (e, i) {
                var n = this.w,
                  r = new O(this.ctx),
                  o = parseInt(e.node.getAttribute("index"), 10),
                  l = parseInt(e.node.getAttribute("j"), 10);
                if (
                  (typeof n.config.chart.events.dataPointMouseEnter ==
                    "function" &&
                    n.config.chart.events.dataPointMouseEnter(i, this.ctx, {
                      seriesIndex: o,
                      dataPointIndex: l,
                      w: n,
                    }),
                  this.ctx.events.fireEvent("dataPointMouseEnter", [
                    i,
                    this.ctx,
                    { seriesIndex: o, dataPointIndex: l, w: n },
                  ]),
                  (n.config.states.active.filter.type === "none" ||
                    e.node.getAttribute("selected") !== "true") &&
                    n.config.states.hover.filter.type !== "none" &&
                    !n.globals.isTouchDevice)
                ) {
                  var h = n.config.states.hover.filter;
                  r.applyFilter(e, o, h.type, h.value);
                }
              },
            },
            {
              key: "pathMouseLeave",
              value: function (e, i) {
                var n = this.w,
                  r = new O(this.ctx),
                  o = parseInt(e.node.getAttribute("index"), 10),
                  l = parseInt(e.node.getAttribute("j"), 10);
                typeof n.config.chart.events.dataPointMouseLeave ==
                  "function" &&
                  n.config.chart.events.dataPointMouseLeave(i, this.ctx, {
                    seriesIndex: o,
                    dataPointIndex: l,
                    w: n,
                  }),
                  this.ctx.events.fireEvent("dataPointMouseLeave", [
                    i,
                    this.ctx,
                    { seriesIndex: o, dataPointIndex: l, w: n },
                  ]),
                  (n.config.states.active.filter.type !== "none" &&
                    e.node.getAttribute("selected") === "true") ||
                    (n.config.states.hover.filter.type !== "none" &&
                      r.getDefaultFilter(e, o));
              },
            },
            {
              key: "pathMouseDown",
              value: function (e, i) {
                var n = this.w,
                  r = new O(this.ctx),
                  o = parseInt(e.node.getAttribute("index"), 10),
                  l = parseInt(e.node.getAttribute("j"), 10),
                  h = "false";
                if (e.node.getAttribute("selected") === "true") {
                  if (
                    (e.node.setAttribute("selected", "false"),
                    n.globals.selectedDataPoints[o].indexOf(l) > -1)
                  ) {
                    var d = n.globals.selectedDataPoints[o].indexOf(l);
                    n.globals.selectedDataPoints[o].splice(d, 1);
                  }
                } else {
                  if (
                    !n.config.states.active.allowMultipleDataPointsSelection &&
                    n.globals.selectedDataPoints.length > 0
                  ) {
                    n.globals.selectedDataPoints = [];
                    var g = n.globals.dom.Paper.select(
                        ".apexcharts-series path"
                      ).members,
                      m = n.globals.dom.Paper.select(
                        ".apexcharts-series circle, .apexcharts-series rect"
                      ).members,
                      x = function (C) {
                        Array.prototype.forEach.call(C, function (P) {
                          P.node.setAttribute("selected", "false"),
                            r.getDefaultFilter(P, o);
                        });
                      };
                    x(g), x(m);
                  }
                  e.node.setAttribute("selected", "true"),
                    (h = "true"),
                    n.globals.selectedDataPoints[o] === void 0 &&
                      (n.globals.selectedDataPoints[o] = []),
                    n.globals.selectedDataPoints[o].push(l);
                }
                if (h === "true") {
                  var v = n.config.states.active.filter;
                  if (v !== "none") r.applyFilter(e, o, v.type, v.value);
                  else if (
                    n.config.states.hover.filter !== "none" &&
                    !n.globals.isTouchDevice
                  ) {
                    var w = n.config.states.hover.filter;
                    r.applyFilter(e, o, w.type, w.value);
                  }
                } else
                  n.config.states.active.filter.type !== "none" &&
                    (n.config.states.hover.filter.type === "none" ||
                    n.globals.isTouchDevice
                      ? r.getDefaultFilter(e, o)
                      : ((w = n.config.states.hover.filter),
                        r.applyFilter(e, o, w.type, w.value)));
                typeof n.config.chart.events.dataPointSelection == "function" &&
                  n.config.chart.events.dataPointSelection(i, this.ctx, {
                    selectedDataPoints: n.globals.selectedDataPoints,
                    seriesIndex: o,
                    dataPointIndex: l,
                    w: n,
                  }),
                  i &&
                    this.ctx.events.fireEvent("dataPointSelection", [
                      i,
                      this.ctx,
                      {
                        selectedDataPoints: n.globals.selectedDataPoints,
                        seriesIndex: o,
                        dataPointIndex: l,
                        w: n,
                      },
                    ]);
              },
            },
            {
              key: "rotateAroundCenter",
              value: function (e) {
                var i = {};
                return (
                  e && typeof e.getBBox == "function" && (i = e.getBBox()),
                  { x: i.x + i.width / 2, y: i.y + i.height / 2 }
                );
              },
            },
            {
              key: "getTextRects",
              value: function (e, i, n, r) {
                var o =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  l = this.w,
                  h = this.drawText({
                    x: -200,
                    y: -200,
                    text: e,
                    textAnchor: "start",
                    fontSize: i,
                    fontFamily: n,
                    foreColor: "#fff",
                    opacity: 0,
                  });
                r && h.attr("transform", r), l.globals.dom.Paper.add(h);
                var d = h.bbox();
                return (
                  o || (d = h.node.getBoundingClientRect()),
                  h.remove(),
                  { width: d.width, height: d.height }
                );
              },
            },
            {
              key: "placeTextWithEllipsis",
              value: function (e, i, n) {
                if (
                  typeof e.getComputedTextLength == "function" &&
                  ((e.textContent = i),
                  i.length > 0 && e.getComputedTextLength() >= n / 1.1)
                ) {
                  for (var r = i.length - 3; r > 0; r -= 3)
                    if (e.getSubStringLength(0, r) <= n / 1.1)
                      return void (e.textContent = i.substring(0, r) + "...");
                  e.textContent = ".";
                }
              },
            },
          ],
          [
            {
              key: "setAttrs",
              value: function (e, i) {
                for (var n in i) i.hasOwnProperty(n) && e.setAttribute(n, i[n]);
              },
            },
          ]
        ),
        T
      );
    })(),
    W = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(
          T,
          [
            {
              key: "getStackedSeriesTotals",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i = this.w,
                  n = [];
                if (i.globals.series.length === 0) return n;
                for (
                  var r = 0;
                  r < i.globals.series[i.globals.maxValsInArrayIndex].length;
                  r++
                ) {
                  for (var o = 0, l = 0; l < i.globals.series.length; l++)
                    i.globals.series[l][r] !== void 0 &&
                      e.indexOf(l) === -1 &&
                      (o += i.globals.series[l][r]);
                  n.push(o);
                }
                return n;
              },
            },
            {
              key: "getSeriesTotalByIndex",
              value: function () {
                var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return e === null
                  ? this.w.config.series.reduce(function (i, n) {
                      return i + n;
                    }, 0)
                  : this.w.globals.series[e].reduce(function (i, n) {
                      return i + n;
                    }, 0);
              },
            },
            {
              key: "isSeriesNull",
              value: function () {
                var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return (
                  (e === null
                    ? this.w.config.series.filter(function (i) {
                        return i !== null;
                      })
                    : this.w.config.series[e].data.filter(function (i) {
                        return i !== null;
                      })
                  ).length === 0
                );
              },
            },
            {
              key: "seriesHaveSameValues",
              value: function (e) {
                return this.w.globals.series[e].every(function (i, n, r) {
                  return i === r[0];
                });
              },
            },
            {
              key: "getCategoryLabels",
              value: function (e) {
                var i = this.w,
                  n = e.slice();
                return (
                  i.config.xaxis.convertedCatToNumeric &&
                    (n = e.map(function (r, o) {
                      return i.config.xaxis.labels.formatter(
                        r - i.globals.minX + 1
                      );
                    })),
                  n
                );
              },
            },
            {
              key: "getLargestSeries",
              value: function () {
                var e = this.w;
                e.globals.maxValsInArrayIndex = e.globals.series
                  .map(function (i) {
                    return i.length;
                  })
                  .indexOf(
                    Math.max.apply(
                      Math,
                      e.globals.series.map(function (i) {
                        return i.length;
                      })
                    )
                  );
              },
            },
            {
              key: "getLargestMarkerSize",
              value: function () {
                var e = this.w,
                  i = 0;
                return (
                  e.globals.markers.size.forEach(function (n) {
                    i = Math.max(i, n);
                  }),
                  e.config.markers.discrete &&
                    e.config.markers.discrete.length &&
                    e.config.markers.discrete.forEach(function (n) {
                      i = Math.max(i, n.size);
                    }),
                  i > 0 && (i += e.config.markers.hover.sizeOffset + 1),
                  (e.globals.markers.largestSize = i),
                  i
                );
              },
            },
            {
              key: "getSeriesTotals",
              value: function () {
                var e = this.w;
                e.globals.seriesTotals = e.globals.series.map(function (i, n) {
                  var r = 0;
                  if (Array.isArray(i))
                    for (var o = 0; o < i.length; o++) r += i[o];
                  else r += i;
                  return r;
                });
              },
            },
            {
              key: "getSeriesTotalsXRange",
              value: function (e, i) {
                var n = this.w;
                return n.globals.series.map(function (r, o) {
                  for (var l = 0, h = 0; h < r.length; h++)
                    n.globals.seriesX[o][h] > e &&
                      n.globals.seriesX[o][h] < i &&
                      (l += r[h]);
                  return l;
                });
              },
            },
            {
              key: "getPercentSeries",
              value: function () {
                var e = this.w;
                e.globals.seriesPercent = e.globals.series.map(function (i, n) {
                  var r = [];
                  if (Array.isArray(i))
                    for (var o = 0; o < i.length; o++) {
                      var l = e.globals.stackedSeriesTotals[o],
                        h = 0;
                      l && (h = (100 * i[o]) / l), r.push(h);
                    }
                  else {
                    var d =
                      (100 * i) /
                      e.globals.seriesTotals.reduce(function (g, m) {
                        return g + m;
                      }, 0);
                    r.push(d);
                  }
                  return r;
                });
              },
            },
            {
              key: "getCalculatedRatios",
              value: function () {
                var e,
                  i,
                  n,
                  r,
                  o = this.w.globals,
                  l = [],
                  h = 0,
                  d = [],
                  g = 0.1,
                  m = 0;
                if (((o.yRange = []), o.isMultipleYAxis))
                  for (var x = 0; x < o.minYArr.length; x++)
                    o.yRange.push(Math.abs(o.minYArr[x] - o.maxYArr[x])),
                      d.push(0);
                else o.yRange.push(Math.abs(o.minY - o.maxY));
                (o.xRange = Math.abs(o.maxX - o.minX)),
                  (o.zRange = Math.abs(o.maxZ - o.minZ));
                for (var v = 0; v < o.yRange.length; v++)
                  l.push(o.yRange[v] / o.gridHeight);
                if (
                  ((i = o.xRange / o.gridWidth),
                  (n = Math.abs(o.initialMaxX - o.initialMinX) / o.gridWidth),
                  (e = o.yRange / o.gridWidth),
                  (r = o.xRange / o.gridHeight),
                  (h = (o.zRange / o.gridHeight) * 16) || (h = 1),
                  o.minY !== Number.MIN_VALUE &&
                    Math.abs(o.minY) !== 0 &&
                    (o.hasNegs = !0),
                  o.isMultipleYAxis)
                ) {
                  d = [];
                  for (var w = 0; w < l.length; w++)
                    d.push(-o.minYArr[w] / l[w]);
                } else
                  d.push(-o.minY / l[0]),
                    o.minY !== Number.MIN_VALUE &&
                      Math.abs(o.minY) !== 0 &&
                      ((g = -o.minY / e), (m = o.minX / i));
                return {
                  yRatio: l,
                  invertedYRatio: e,
                  zRatio: h,
                  xRatio: i,
                  initialXRatio: n,
                  invertedXRatio: r,
                  baseLineInvertedY: g,
                  baseLineY: d,
                  baseLineX: m,
                };
              },
            },
            {
              key: "getLogSeries",
              value: function (e) {
                var i = this,
                  n = this.w;
                return (
                  (n.globals.seriesLog = e.map(function (r, o) {
                    return n.config.yaxis[o] && n.config.yaxis[o].logarithmic
                      ? r.map(function (l) {
                          return l === null
                            ? null
                            : i.getLogVal(n.config.yaxis[o].logBase, l, o);
                        })
                      : r;
                  })),
                  n.globals.invalidLogScale ? e : n.globals.seriesLog
                );
              },
            },
            {
              key: "getBaseLog",
              value: function (e, i) {
                return Math.log(i) / Math.log(e);
              },
            },
            {
              key: "getLogVal",
              value: function (e, i, n) {
                if (i === 0) return 0;
                var r = this.w,
                  o =
                    r.globals.minYArr[n] === 0
                      ? -1
                      : this.getBaseLog(e, r.globals.minYArr[n]),
                  l =
                    (r.globals.maxYArr[n] === 0
                      ? 0
                      : this.getBaseLog(e, r.globals.maxYArr[n])) - o;
                return i < 1 ? i / l : (this.getBaseLog(e, i) - o) / l;
              },
            },
            {
              key: "getLogYRatios",
              value: function (e) {
                var i = this,
                  n = this.w,
                  r = this.w.globals;
                return (
                  (r.yLogRatio = e.slice()),
                  (r.logYRange = r.yRange.map(function (o, l) {
                    if (n.config.yaxis[l] && i.w.config.yaxis[l].logarithmic) {
                      var h,
                        d = -Number.MAX_VALUE,
                        g = Number.MIN_VALUE;
                      return (
                        r.seriesLog.forEach(function (m, x) {
                          m.forEach(function (v) {
                            n.config.yaxis[x] &&
                              n.config.yaxis[x].logarithmic &&
                              ((d = Math.max(v, d)), (g = Math.min(v, g)));
                          });
                        }),
                        (h = Math.pow(
                          r.yRange[l],
                          Math.abs(g - d) / r.yRange[l]
                        )),
                        (r.yLogRatio[l] = h / r.gridHeight),
                        h
                      );
                    }
                  })),
                  r.invalidLogScale ? e.slice() : r.yLogRatio
                );
              },
            },
          ],
          [
            {
              key: "checkComboSeries",
              value: function (e) {
                var i = !1,
                  n = 0,
                  r = 0;
                return (
                  e.length &&
                    e[0].type !== void 0 &&
                    e.forEach(function (o) {
                      (o.type !== "bar" &&
                        o.type !== "column" &&
                        o.type !== "candlestick" &&
                        o.type !== "boxPlot") ||
                        n++,
                        o.type !== void 0 && r++;
                    }),
                  r > 0 && (i = !0),
                  { comboBarCount: n, comboCharts: i }
                );
              },
            },
            {
              key: "extendArrayProps",
              value: function (e, i, n) {
                return (
                  i.yaxis && (i = e.extendYAxis(i, n)),
                  i.annotations &&
                    (i.annotations.yaxis && (i = e.extendYAxisAnnotations(i)),
                    i.annotations.xaxis && (i = e.extendXAxisAnnotations(i)),
                    i.annotations.points && (i = e.extendPointAnnotations(i))),
                  i
                );
              },
            },
          ]
        ),
        T
      );
    })(),
    U = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.annoCtx = e);
      }
      return (
        S(T, [
          {
            key: "setOrientations",
            value: function (e) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                n = this.w;
              if (e.label.orientation === "vertical") {
                var r = i !== null ? i : 0,
                  o = n.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                      r,
                      "']"
                    )
                  );
                if (o !== null) {
                  var l = o.getBoundingClientRect();
                  o.setAttribute(
                    "x",
                    parseFloat(o.getAttribute("x")) - l.height + 4
                  ),
                    e.label.position === "top"
                      ? o.setAttribute(
                          "y",
                          parseFloat(o.getAttribute("y")) + l.width
                        )
                      : o.setAttribute(
                          "y",
                          parseFloat(o.getAttribute("y")) - l.width
                        );
                  var h = this.annoCtx.graphics.rotateAroundCenter(o),
                    d = h.x,
                    g = h.y;
                  o.setAttribute(
                    "transform",
                    "rotate(-90 ".concat(d, " ").concat(g, ")")
                  );
                }
              }
            },
          },
          {
            key: "addBackgroundToAnno",
            value: function (e, i) {
              var n = this.w;
              if (
                !e ||
                i.label.text === void 0 ||
                (i.label.text !== void 0 && !String(i.label.text).trim())
              )
                return null;
              var r = n.globals.dom.baseEl
                  .querySelector(".apexcharts-grid")
                  .getBoundingClientRect(),
                o = e.getBoundingClientRect(),
                l = i.label.style.padding.left,
                h = i.label.style.padding.right,
                d = i.label.style.padding.top,
                g = i.label.style.padding.bottom;
              i.label.orientation === "vertical" &&
                ((d = i.label.style.padding.left),
                (g = i.label.style.padding.right),
                (l = i.label.style.padding.top),
                (h = i.label.style.padding.bottom));
              var m = o.left - r.left - l,
                x = o.top - r.top - d,
                v = this.annoCtx.graphics.drawRect(
                  m - n.globals.barPadForNumericAxis,
                  x,
                  o.width + l + h,
                  o.height + d + g,
                  i.label.borderRadius,
                  i.label.style.background,
                  1,
                  i.label.borderWidth,
                  i.label.borderColor,
                  0
                );
              return i.id && v.node.classList.add(i.id), v;
            },
          },
          {
            key: "annotationsBackground",
            value: function () {
              var e = this,
                i = this.w,
                n = function (r, o, l) {
                  var h = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-"
                      .concat(l, "-annotations .apexcharts-")
                      .concat(l, "-annotation-label[rel='")
                      .concat(o, "']")
                  );
                  if (h) {
                    var d = h.parentNode,
                      g = e.addBackgroundToAnno(h, r);
                    g &&
                      (d.insertBefore(g.node, h),
                      r.label.mouseEnter &&
                        g.node.addEventListener(
                          "mouseenter",
                          r.label.mouseEnter.bind(e, r)
                        ),
                      r.label.mouseLeave &&
                        g.node.addEventListener(
                          "mouseleave",
                          r.label.mouseLeave.bind(e, r)
                        ),
                      r.label.click &&
                        g.node.addEventListener(
                          "click",
                          r.label.click.bind(e, r)
                        ));
                  }
                };
              i.config.annotations.xaxis.map(function (r, o) {
                n(r, o, "xaxis");
              }),
                i.config.annotations.yaxis.map(function (r, o) {
                  n(r, o, "yaxis");
                }),
                i.config.annotations.points.map(function (r, o) {
                  n(r, o, "point");
                });
            },
          },
          {
            key: "getY1Y2",
            value: function (e, i) {
              var n,
                r = e === "y1" ? i.y : i.y2,
                o = this.w;
              if (this.annoCtx.invertAxis) {
                var l = o.globals.labels.indexOf(r);
                o.config.xaxis.convertedCatToNumeric &&
                  (l = o.globals.categoryLabels.indexOf(r));
                var h = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-yaxis-texts-g text:nth-child(" + (l + 1) + ")"
                );
                h && (n = parseFloat(h.getAttribute("y")));
              } else {
                var d;
                o.config.yaxis[i.yAxisIndex].logarithmic
                  ? (d =
                      (r = new W(this.annoCtx.ctx).getLogVal(r, i.yAxisIndex)) /
                      o.globals.yLogRatio[i.yAxisIndex])
                  : (d =
                      (r - o.globals.minYArr[i.yAxisIndex]) /
                      (o.globals.yRange[i.yAxisIndex] / o.globals.gridHeight)),
                  (n = o.globals.gridHeight - d),
                  !i.marker || (i.y !== void 0 && i.y !== null) || (n = 0),
                  o.config.yaxis[i.yAxisIndex] &&
                    o.config.yaxis[i.yAxisIndex].reversed &&
                    (n = d);
              }
              return (
                typeof r == "string" &&
                  r.indexOf("px") > -1 &&
                  (n = parseFloat(r)),
                n
              );
            },
          },
          {
            key: "getX1X2",
            value: function (e, i) {
              var n = this.w,
                r = this.annoCtx.invertAxis ? n.globals.minY : n.globals.minX,
                o = this.annoCtx.invertAxis ? n.globals.maxY : n.globals.maxX,
                l = this.annoCtx.invertAxis
                  ? n.globals.yRange[0]
                  : n.globals.xRange,
                h = (i.x - r) / (l / n.globals.gridWidth);
              this.annoCtx.inversedReversedAxis &&
                (h = (o - i.x) / (l / n.globals.gridWidth)),
                (n.config.xaxis.type !== "category" &&
                  !n.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  n.globals.dataFormatXNumeric ||
                  (h = this.getStringX(i.x));
              var d = (i.x2 - r) / (l / n.globals.gridWidth);
              return (
                this.annoCtx.inversedReversedAxis &&
                  (d = (o - i.x2) / (l / n.globals.gridWidth)),
                (n.config.xaxis.type !== "category" &&
                  !n.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  n.globals.dataFormatXNumeric ||
                  (d = this.getStringX(i.x2)),
                (i.x !== void 0 && i.x !== null) ||
                  !i.marker ||
                  (h = n.globals.gridWidth),
                e === "x1" &&
                  typeof i.x == "string" &&
                  i.x.indexOf("px") > -1 &&
                  (h = parseFloat(i.x)),
                e === "x2" &&
                  typeof i.x2 == "string" &&
                  i.x2.indexOf("px") > -1 &&
                  (d = parseFloat(i.x2)),
                e === "x1" ? h : d
              );
            },
          },
          {
            key: "getStringX",
            value: function (e) {
              var i = this.w,
                n = e;
              i.config.xaxis.convertedCatToNumeric &&
                i.globals.categoryLabels.length &&
                (e = i.globals.categoryLabels.indexOf(e) + 1);
              var r = i.globals.labels.indexOf(e),
                o = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g text:nth-child(" + (r + 1) + ")"
                );
              return o && (n = parseFloat(o.getAttribute("x"))), n;
            },
          },
        ]),
        T
      );
    })(),
    te = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.annoCtx = e),
          (this.invertAxis = this.annoCtx.invertAxis),
          (this.helpers = new U(this.annoCtx));
      }
      return (
        S(T, [
          {
            key: "addXaxisAnnotation",
            value: function (e, i, n) {
              var r,
                o = this.w,
                l = this.helpers.getX1X2("x1", e),
                h = e.label.text,
                d = e.strokeDashArray;
              if (L.isNumber(l)) {
                if (e.x2 === null || e.x2 === void 0) {
                  var g = this.annoCtx.graphics.drawLine(
                    l + e.offsetX,
                    0 + e.offsetY,
                    l + e.offsetX,
                    o.globals.gridHeight + e.offsetY,
                    e.borderColor,
                    d,
                    e.borderWidth
                  );
                  i.appendChild(g.node), e.id && g.node.classList.add(e.id);
                } else {
                  if ((r = this.helpers.getX1X2("x2", e)) < l) {
                    var m = l;
                    (l = r), (r = m);
                  }
                  var x = this.annoCtx.graphics.drawRect(
                    l + e.offsetX,
                    0 + e.offsetY,
                    r - l,
                    o.globals.gridHeight + e.offsetY,
                    0,
                    e.fillColor,
                    e.opacity,
                    1,
                    e.borderColor,
                    d
                  );
                  x.node.classList.add("apexcharts-annotation-rect"),
                    x.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(o.globals.cuid, ")")
                    ),
                    i.appendChild(x.node),
                    e.id && x.node.classList.add(e.id);
                }
                var v = this.annoCtx.graphics.getTextRects(
                    h,
                    parseFloat(e.label.style.fontSize)
                  ),
                  w =
                    e.label.position === "top"
                      ? 4
                      : e.label.position === "center"
                      ? o.globals.gridHeight / 2 +
                        (e.label.orientation === "vertical" ? v.width / 2 : 0)
                      : o.globals.gridHeight,
                  C = this.annoCtx.graphics.drawText({
                    x: l + e.label.offsetX,
                    y:
                      w +
                      e.label.offsetY -
                      (e.label.orientation === "vertical"
                        ? e.label.position === "top"
                          ? v.width / 2 - 12
                          : -v.width / 2
                        : 0),
                    text: h,
                    textAnchor: e.label.textAnchor,
                    fontSize: e.label.style.fontSize,
                    fontFamily: e.label.style.fontFamily,
                    fontWeight: e.label.style.fontWeight,
                    foreColor: e.label.style.color,
                    cssClass: "apexcharts-xaxis-annotation-label "
                      .concat(e.label.style.cssClass, " ")
                      .concat(e.id ? e.id : ""),
                  });
                C.attr({ rel: n }),
                  i.appendChild(C.node),
                  this.annoCtx.helpers.setOrientations(e, n);
              }
            },
          },
          {
            key: "drawXAxisAnnotations",
            value: function () {
              var e = this,
                i = this.w,
                n = this.annoCtx.graphics.group({
                  class: "apexcharts-xaxis-annotations",
                });
              return (
                i.config.annotations.xaxis.map(function (r, o) {
                  e.addXaxisAnnotation(r, n.node, o);
                }),
                n
              );
            },
          },
        ]),
        T
      );
    })(),
    he = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.annoCtx = e),
          (this.helpers = new U(this.annoCtx));
      }
      return (
        S(T, [
          {
            key: "addYaxisAnnotation",
            value: function (e, i, n) {
              var r,
                o = this.w,
                l = e.strokeDashArray,
                h = this.helpers.getY1Y2("y1", e),
                d = e.label.text;
              if (e.y2 === null || e.y2 === void 0) {
                var g = this.annoCtx.graphics.drawLine(
                  0 + e.offsetX,
                  h + e.offsetY,
                  this._getYAxisAnnotationWidth(e),
                  h + e.offsetY,
                  e.borderColor,
                  l,
                  e.borderWidth
                );
                i.appendChild(g.node), e.id && g.node.classList.add(e.id);
              } else {
                if ((r = this.helpers.getY1Y2("y2", e)) > h) {
                  var m = h;
                  (h = r), (r = m);
                }
                var x = this.annoCtx.graphics.drawRect(
                  0 + e.offsetX,
                  r + e.offsetY,
                  this._getYAxisAnnotationWidth(e),
                  h - r,
                  0,
                  e.fillColor,
                  e.opacity,
                  1,
                  e.borderColor,
                  l
                );
                x.node.classList.add("apexcharts-annotation-rect"),
                  x.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(o.globals.cuid, ")")
                  ),
                  i.appendChild(x.node),
                  e.id && x.node.classList.add(e.id);
              }
              var v =
                  e.label.position === "right"
                    ? o.globals.gridWidth
                    : e.label.position === "center"
                    ? o.globals.gridWidth / 2
                    : 0,
                w = this.annoCtx.graphics.drawText({
                  x: v + e.label.offsetX,
                  y: (r ?? h) + e.label.offsetY - 3,
                  text: d,
                  textAnchor: e.label.textAnchor,
                  fontSize: e.label.style.fontSize,
                  fontFamily: e.label.style.fontFamily,
                  fontWeight: e.label.style.fontWeight,
                  foreColor: e.label.style.color,
                  cssClass: "apexcharts-yaxis-annotation-label "
                    .concat(e.label.style.cssClass, " ")
                    .concat(e.id ? e.id : ""),
                });
              w.attr({ rel: n }), i.appendChild(w.node);
            },
          },
          {
            key: "_getYAxisAnnotationWidth",
            value: function (e) {
              var i = this.w;
              return (
                i.globals.gridWidth,
                (e.width.indexOf("%") > -1
                  ? (i.globals.gridWidth * parseInt(e.width, 10)) / 100
                  : parseInt(e.width, 10)) + e.offsetX
              );
            },
          },
          {
            key: "drawYAxisAnnotations",
            value: function () {
              var e = this,
                i = this.w,
                n = this.annoCtx.graphics.group({
                  class: "apexcharts-yaxis-annotations",
                });
              return (
                i.config.annotations.yaxis.map(function (r, o) {
                  e.addYaxisAnnotation(r, n.node, o);
                }),
                n
              );
            },
          },
        ]),
        T
      );
    })(),
    J = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.annoCtx = e),
          (this.helpers = new U(this.annoCtx));
      }
      return (
        S(T, [
          {
            key: "addPointAnnotation",
            value: function (e, i, n) {
              this.w;
              var r = this.helpers.getX1X2("x1", e),
                o = this.helpers.getY1Y2("y1", e);
              if (L.isNumber(r)) {
                var l = {
                    pSize: e.marker.size,
                    pointStrokeWidth: e.marker.strokeWidth,
                    pointFillColor: e.marker.fillColor,
                    pointStrokeColor: e.marker.strokeColor,
                    shape: e.marker.shape,
                    pRadius: e.marker.radius,
                    class: "apexcharts-point-annotation-marker "
                      .concat(e.marker.cssClass, " ")
                      .concat(e.id ? e.id : ""),
                  },
                  h = this.annoCtx.graphics.drawMarker(
                    r + e.marker.offsetX,
                    o + e.marker.offsetY,
                    l
                  );
                i.appendChild(h.node);
                var d = e.label.text ? e.label.text : "",
                  g = this.annoCtx.graphics.drawText({
                    x: r + e.label.offsetX,
                    y:
                      o +
                      e.label.offsetY -
                      e.marker.size -
                      parseFloat(e.label.style.fontSize) / 1.6,
                    text: d,
                    textAnchor: e.label.textAnchor,
                    fontSize: e.label.style.fontSize,
                    fontFamily: e.label.style.fontFamily,
                    fontWeight: e.label.style.fontWeight,
                    foreColor: e.label.style.color,
                    cssClass: "apexcharts-point-annotation-label "
                      .concat(e.label.style.cssClass, " ")
                      .concat(e.id ? e.id : ""),
                  });
                if (
                  (g.attr({ rel: n }), i.appendChild(g.node), e.customSVG.SVG)
                ) {
                  var m = this.annoCtx.graphics.group({
                    class:
                      "apexcharts-point-annotations-custom-svg " +
                      e.customSVG.cssClass,
                  });
                  m.attr({
                    transform: "translate("
                      .concat(r + e.customSVG.offsetX, ", ")
                      .concat(o + e.customSVG.offsetY, ")"),
                  }),
                    (m.node.innerHTML = e.customSVG.SVG),
                    i.appendChild(m.node);
                }
                if (e.image.path) {
                  var x = e.image.width ? e.image.width : 20,
                    v = e.image.height ? e.image.height : 20;
                  h = this.annoCtx.addImage({
                    x: r + e.image.offsetX - x / 2,
                    y: o + e.image.offsetY - v / 2,
                    width: x,
                    height: v,
                    path: e.image.path,
                    appendTo: ".apexcharts-point-annotations",
                  });
                }
                e.mouseEnter &&
                  h.node.addEventListener(
                    "mouseenter",
                    e.mouseEnter.bind(this, e)
                  ),
                  e.mouseLeave &&
                    h.node.addEventListener(
                      "mouseleave",
                      e.mouseLeave.bind(this, e)
                    ),
                  e.click &&
                    h.node.addEventListener("click", e.click.bind(this, e));
              }
            },
          },
          {
            key: "drawPointAnnotations",
            value: function () {
              var e = this,
                i = this.w,
                n = this.annoCtx.graphics.group({
                  class: "apexcharts-point-annotations",
                });
              return (
                i.config.annotations.points.map(function (r, o) {
                  e.addPointAnnotation(r, n.node, o);
                }),
                n
              );
            },
          },
        ]),
        T
      );
    })(),
    Y = {
      name: "en",
      options: {
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        toolbar: {
          exportToSVG: "Download SVG",
          exportToPNG: "Download PNG",
          exportToCSV: "Download CSV",
          menu: "Menu",
          selection: "Selection",
          selectionZoom: "Selection Zoom",
          zoomIn: "Zoom In",
          zoomOut: "Zoom Out",
          pan: "Panning",
          reset: "Reset Zoom",
        },
      },
    },
    se = (function () {
      function T() {
        p(this, T),
          (this.yAxis = {
            show: !0,
            showAlways: !1,
            showForNullSeries: !0,
            seriesName: void 0,
            opposite: !1,
            reversed: !1,
            logarithmic: !1,
            logBase: 10,
            tickAmount: void 0,
            forceNiceScale: !1,
            max: void 0,
            min: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            labels: {
              show: !0,
              minWidth: 0,
              maxWidth: 160,
              offsetX: 0,
              offsetY: 0,
              align: void 0,
              rotate: 0,
              padding: 20,
              style: {
                colors: [],
                fontSize: "11px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: "",
              },
              formatter: void 0,
            },
            axisBorder: {
              show: !1,
              color: "#e0e0e0",
              width: 1,
              offsetX: 0,
              offsetY: 0,
            },
            axisTicks: {
              show: !1,
              color: "#e0e0e0",
              width: 6,
              offsetX: 0,
              offsetY: 0,
            },
            title: {
              text: void 0,
              rotate: -90,
              offsetY: 0,
              offsetX: 0,
              style: {
                color: void 0,
                fontSize: "11px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: "",
              },
            },
            tooltip: { enabled: !1, offsetX: 0 },
            crosshairs: {
              show: !0,
              position: "front",
              stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
            },
          }),
          (this.pointAnnotation = {
            id: void 0,
            x: 0,
            y: null,
            yAxisIndex: 0,
            seriesIndex: 0,
            mouseEnter: void 0,
            mouseLeave: void 0,
            click: void 0,
            marker: {
              size: 4,
              fillColor: "#fff",
              strokeWidth: 2,
              strokeColor: "#333",
              shape: "circle",
              offsetX: 0,
              offsetY: 0,
              radius: 2,
              cssClass: "",
            },
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
            customSVG: {
              SVG: void 0,
              cssClass: void 0,
              offsetX: 0,
              offsetY: 0,
            },
            image: {
              path: void 0,
              width: 20,
              height: 20,
              offsetX: 0,
              offsetY: 0,
            },
          }),
          (this.yAxisAnnotation = {
            id: void 0,
            y: 0,
            y2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            width: "100%",
            yAxisIndex: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "end",
              position: "right",
              offsetX: 0,
              offsetY: -3,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.xAxisAnnotation = {
            id: void 0,
            x: 0,
            x2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              orientation: "vertical",
              position: "top",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.text = {
            x: 0,
            y: 0,
            text: "",
            textAnchor: "start",
            foreColor: void 0,
            fontSize: "13px",
            fontFamily: void 0,
            fontWeight: 400,
            appendTo: ".apexcharts-annotations",
            backgroundColor: "transparent",
            borderColor: "#c2c2c2",
            borderRadius: 0,
            borderWidth: 0,
            paddingLeft: 4,
            paddingRight: 4,
            paddingTop: 2,
            paddingBottom: 2,
          });
      }
      return (
        S(T, [
          {
            key: "init",
            value: function () {
              return {
                annotations: {
                  yaxis: [this.yAxisAnnotation],
                  xaxis: [this.xAxisAnnotation],
                  points: [this.pointAnnotation],
                  texts: [],
                  images: [],
                  shapes: [],
                },
                chart: {
                  animations: {
                    enabled: !0,
                    easing: "easeinout",
                    speed: 800,
                    animateGradually: { delay: 150, enabled: !0 },
                    dynamicAnimation: { enabled: !0, speed: 350 },
                  },
                  background: "transparent",
                  locales: [Y],
                  defaultLocale: "en",
                  dropShadow: {
                    enabled: !1,
                    enabledOnSeries: void 0,
                    top: 2,
                    left: 2,
                    blur: 4,
                    color: "#000",
                    opacity: 0.35,
                  },
                  events: {
                    animationEnd: void 0,
                    beforeMount: void 0,
                    mounted: void 0,
                    updated: void 0,
                    click: void 0,
                    mouseMove: void 0,
                    mouseLeave: void 0,
                    xAxisLabelClick: void 0,
                    legendClick: void 0,
                    markerClick: void 0,
                    selection: void 0,
                    dataPointSelection: void 0,
                    dataPointMouseEnter: void 0,
                    dataPointMouseLeave: void 0,
                    beforeZoom: void 0,
                    beforeResetZoom: void 0,
                    zoomed: void 0,
                    scrolled: void 0,
                    brushScrolled: void 0,
                  },
                  foreColor: "#373d3f",
                  fontFamily: "Helvetica, Arial, sans-serif",
                  height: "auto",
                  parentHeightOffset: 15,
                  redrawOnParentResize: !0,
                  redrawOnWindowResize: !0,
                  id: void 0,
                  group: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  selection: {
                    enabled: !1,
                    type: "x",
                    fill: { color: "#24292e", opacity: 0.1 },
                    stroke: {
                      width: 1,
                      color: "#24292e",
                      opacity: 0.4,
                      dashArray: 3,
                    },
                    xaxis: { min: void 0, max: void 0 },
                    yaxis: { min: void 0, max: void 0 },
                  },
                  sparkline: { enabled: !1 },
                  brush: {
                    enabled: !1,
                    autoScaleYaxis: !0,
                    target: void 0,
                    targets: void 0,
                  },
                  stacked: !1,
                  stackType: "normal",
                  toolbar: {
                    show: !0,
                    offsetX: 0,
                    offsetY: 0,
                    tools: {
                      download: !0,
                      selection: !0,
                      zoom: !0,
                      zoomin: !0,
                      zoomout: !0,
                      pan: !0,
                      reset: !0,
                      customIcons: [],
                    },
                    export: {
                      csv: {
                        filename: void 0,
                        columnDelimiter: ",",
                        headerCategory: "category",
                        headerValue: "value",
                        dateFormatter: function (e) {
                          return new Date(e).toDateString();
                        },
                      },
                      png: { filename: void 0 },
                      svg: { filename: void 0 },
                    },
                    autoSelected: "zoom",
                  },
                  type: "line",
                  width: "100%",
                  zoom: {
                    enabled: !0,
                    type: "x",
                    autoScaleYaxis: !1,
                    zoomedArea: {
                      fill: { color: "#90CAF9", opacity: 0.4 },
                      stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                    },
                  },
                },
                plotOptions: {
                  area: { fillTo: "origin" },
                  bar: {
                    horizontal: !1,
                    columnWidth: "70%",
                    barHeight: "70%",
                    distributed: !1,
                    borderRadius: 0,
                    borderRadiusApplication: "around",
                    borderRadiusWhenStacked: "last",
                    rangeBarOverlap: !0,
                    rangeBarGroupRows: !1,
                    hideZeroBarsWhenGrouped: !1,
                    isDumbbell: !1,
                    dumbbellColors: void 0,
                    isFunnel: !1,
                    isFunnel3d: !0,
                    colors: {
                      ranges: [],
                      backgroundBarColors: [],
                      backgroundBarOpacity: 1,
                      backgroundBarRadius: 0,
                    },
                    dataLabels: {
                      position: "top",
                      maxItems: 100,
                      hideOverflowingLabels: !0,
                      orientation: "horizontal",
                      total: {
                        enabled: !1,
                        formatter: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: "#373d3f",
                          fontSize: "12px",
                          fontFamily: void 0,
                          fontWeight: 600,
                        },
                      },
                    },
                  },
                  bubble: {
                    zScaling: !0,
                    minBubbleRadius: void 0,
                    maxBubbleRadius: void 0,
                  },
                  candlestick: {
                    colors: { upward: "#00B746", downward: "#EF403C" },
                    wick: { useFillColor: !0 },
                  },
                  boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } },
                  heatmap: {
                    radius: 2,
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    reverseNegativeShade: !1,
                    distributed: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  treemap: {
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    distributed: !1,
                    reverseNegativeShade: !1,
                    useFillColorAsStroke: !1,
                    dataLabels: { format: "scale" },
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  radialBar: {
                    inverseOrder: !1,
                    startAngle: 0,
                    endAngle: 360,
                    offsetX: 0,
                    offsetY: 0,
                    hollow: {
                      margin: 5,
                      size: "50%",
                      background: "transparent",
                      image: void 0,
                      imageWidth: 150,
                      imageHeight: 150,
                      imageOffsetX: 0,
                      imageOffsetY: 0,
                      imageClipped: !0,
                      position: "front",
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    track: {
                      show: !0,
                      startAngle: void 0,
                      endAngle: void 0,
                      background: "#f2f2f2",
                      strokeWidth: "97%",
                      opacity: 1,
                      margin: 5,
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    dataLabels: {
                      show: !0,
                      name: {
                        show: !0,
                        fontSize: "16px",
                        fontFamily: void 0,
                        fontWeight: 600,
                        color: void 0,
                        offsetY: 0,
                        formatter: function (e) {
                          return e;
                        },
                      },
                      value: {
                        show: !0,
                        fontSize: "14px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        color: void 0,
                        offsetY: 16,
                        formatter: function (e) {
                          return e + "%";
                        },
                      },
                      total: {
                        show: !1,
                        label: "Total",
                        fontSize: "16px",
                        fontWeight: 600,
                        fontFamily: void 0,
                        color: void 0,
                        formatter: function (e) {
                          return (
                            e.globals.seriesTotals.reduce(function (i, n) {
                              return i + n;
                            }, 0) /
                              e.globals.series.length +
                            "%"
                          );
                        },
                      },
                    },
                  },
                  pie: {
                    customScale: 1,
                    offsetX: 0,
                    offsetY: 0,
                    startAngle: 0,
                    endAngle: 360,
                    expandOnClick: !0,
                    dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                    donut: {
                      size: "65%",
                      background: "transparent",
                      labels: {
                        show: !1,
                        name: {
                          show: !0,
                          fontSize: "16px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: -10,
                          formatter: function (e) {
                            return e;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: "20px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 10,
                          formatter: function (e) {
                            return e;
                          },
                        },
                        total: {
                          show: !1,
                          showAlways: !1,
                          label: "Total",
                          fontSize: "16px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (e) {
                            return e.globals.seriesTotals.reduce(function (
                              i,
                              n
                            ) {
                              return i + n;
                            },
                            0);
                          },
                        },
                      },
                    },
                  },
                  polarArea: {
                    rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                    spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                  },
                  radar: {
                    size: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    polygons: {
                      strokeWidth: 1,
                      strokeColors: "#e8e8e8",
                      connectorColors: "#e8e8e8",
                      fill: { colors: void 0 },
                    },
                  },
                },
                colors: void 0,
                dataLabels: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  formatter: function (e) {
                    return e !== null ? e : "";
                  },
                  textAnchor: "middle",
                  distributed: !1,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    colors: void 0,
                  },
                  background: {
                    enabled: !0,
                    foreColor: "#fff",
                    borderRadius: 2,
                    padding: 4,
                    opacity: 0.9,
                    borderWidth: 1,
                    borderColor: "#fff",
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: "#000",
                      opacity: 0.45,
                    },
                  },
                  dropShadow: {
                    enabled: !1,
                    top: 1,
                    left: 1,
                    blur: 1,
                    color: "#000",
                    opacity: 0.45,
                  },
                },
                fill: {
                  type: "solid",
                  colors: void 0,
                  opacity: 0.85,
                  gradient: {
                    shade: "dark",
                    type: "horizontal",
                    shadeIntensity: 0.5,
                    gradientToColors: void 0,
                    inverseColors: !0,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [0, 50, 100],
                    colorStops: [],
                  },
                  image: { src: [], width: void 0, height: void 0 },
                  pattern: {
                    style: "squares",
                    width: 6,
                    height: 6,
                    strokeWidth: 2,
                  },
                },
                forecastDataPoints: {
                  count: 0,
                  fillOpacity: 0.5,
                  strokeWidth: void 0,
                  dashArray: 4,
                },
                grid: {
                  show: !0,
                  borderColor: "#e0e0e0",
                  strokeDashArray: 0,
                  position: "back",
                  xaxis: { lines: { show: !1 } },
                  yaxis: { lines: { show: !0 } },
                  row: { colors: void 0, opacity: 0.5 },
                  column: { colors: void 0, opacity: 0.5 },
                  padding: { top: 0, right: 10, bottom: 0, left: 12 },
                },
                labels: [],
                legend: {
                  show: !0,
                  showForSingleSeries: !1,
                  showForNullSeries: !0,
                  showForZeroSeries: !0,
                  floating: !1,
                  position: "bottom",
                  horizontalAlign: "center",
                  inverseOrder: !1,
                  fontSize: "12px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  width: void 0,
                  height: void 0,
                  formatter: void 0,
                  tooltipHoverFormatter: void 0,
                  offsetX: -20,
                  offsetY: 4,
                  customLegendItems: [],
                  labels: { colors: void 0, useSeriesColors: !1 },
                  markers: {
                    width: 12,
                    height: 12,
                    strokeWidth: 0,
                    fillColors: void 0,
                    strokeColor: "#fff",
                    radius: 12,
                    customHTML: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                  },
                  itemMargin: { horizontal: 5, vertical: 2 },
                  onItemClick: { toggleDataSeries: !0 },
                  onItemHover: { highlightDataSeries: !0 },
                },
                markers: {
                  discrete: [],
                  size: 0,
                  colors: void 0,
                  strokeColors: "#fff",
                  strokeWidth: 2,
                  strokeOpacity: 0.9,
                  strokeDashArray: 0,
                  fillOpacity: 1,
                  shape: "circle",
                  width: 8,
                  height: 8,
                  radius: 2,
                  offsetX: 0,
                  offsetY: 0,
                  onClick: void 0,
                  onDblClick: void 0,
                  showNullDataPoints: !0,
                  hover: { size: void 0, sizeOffset: 3 },
                },
                noData: {
                  text: void 0,
                  align: "center",
                  verticalAlign: "middle",
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: void 0,
                    fontSize: "14px",
                    fontFamily: void 0,
                  },
                },
                responsive: [],
                series: void 0,
                states: {
                  normal: { filter: { type: "none", value: 0 } },
                  hover: { filter: { type: "lighten", value: 0.1 } },
                  active: {
                    allowMultipleDataPointsSelection: !1,
                    filter: { type: "darken", value: 0.5 },
                  },
                },
                title: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 0,
                  floating: !1,
                  style: {
                    fontSize: "14px",
                    fontWeight: 900,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                subtitle: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 30,
                  floating: !1,
                  style: {
                    fontSize: "12px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                stroke: {
                  show: !0,
                  curve: "smooth",
                  lineCap: "butt",
                  width: 2,
                  colors: void 0,
                  dashArray: 0,
                  fill: {
                    type: "solid",
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: "dark",
                      type: "horizontal",
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  shared: !0,
                  followCursor: !1,
                  intersect: !1,
                  inverseOrder: !1,
                  custom: void 0,
                  fillSeriesColor: !1,
                  theme: "light",
                  cssClass: "",
                  style: { fontSize: "12px", fontFamily: void 0 },
                  onDatasetHover: { highlightDataSeries: !1 },
                  x: { show: !0, format: "dd MMM", formatter: void 0 },
                  y: {
                    formatter: void 0,
                    title: {
                      formatter: function (e) {
                        return e ? e + ": " : "";
                      },
                    },
                  },
                  z: { formatter: void 0, title: "Size: " },
                  marker: { show: !0, fillColors: void 0 },
                  items: { display: "flex" },
                  fixed: {
                    enabled: !1,
                    position: "topRight",
                    offsetX: 0,
                    offsetY: 0,
                  },
                },
                xaxis: {
                  type: "category",
                  categories: [],
                  convertedCatToNumeric: !1,
                  offsetX: 0,
                  offsetY: 0,
                  overwriteCategories: void 0,
                  labels: {
                    show: !0,
                    rotate: -45,
                    rotateAlways: !1,
                    hideOverlappingLabels: !0,
                    trim: !1,
                    minHeight: void 0,
                    maxHeight: 120,
                    showDuplicates: !0,
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                    offsetX: 0,
                    offsetY: 0,
                    format: void 0,
                    formatter: void 0,
                    datetimeUTC: !0,
                    datetimeFormatter: {
                      year: "yyyy",
                      month: "MMM 'yy",
                      day: "dd MMM",
                      hour: "HH:mm",
                      minute: "HH:mm:ss",
                      second: "HH:mm:ss",
                    },
                  },
                  group: {
                    groups: [],
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  axisBorder: {
                    show: !0,
                    color: "#e0e0e0",
                    width: "100%",
                    height: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !0,
                    color: "#e0e0e0",
                    height: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  tickAmount: void 0,
                  tickPlacement: "on",
                  min: void 0,
                  max: void 0,
                  range: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  position: "bottom",
                  title: {
                    text: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: "12px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  crosshairs: {
                    show: !0,
                    width: 1,
                    position: "back",
                    opacity: 0.9,
                    stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                    fill: {
                      type: "solid",
                      color: "#B1B9C4",
                      gradient: {
                        colorFrom: "#D8E3F0",
                        colorTo: "#BED1E6",
                        stops: [0, 100],
                        opacityFrom: 0.4,
                        opacityTo: 0.5,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      left: 0,
                      top: 0,
                      blur: 1,
                      opacity: 0.4,
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    offsetY: 0,
                    formatter: void 0,
                    style: { fontSize: "12px", fontFamily: void 0 },
                  },
                },
                yaxis: this.yAxis,
                theme: {
                  mode: "light",
                  palette: "palette1",
                  monochrome: {
                    enabled: !1,
                    color: "#008FFB",
                    shadeTo: "light",
                    shadeIntensity: 0.65,
                  },
                },
              };
            },
          },
        ]),
        T
      );
    })(),
    fe = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.graphics = new X(this.ctx)),
          this.w.globals.isBarHorizontal && (this.invertAxis = !0),
          (this.helpers = new U(this)),
          (this.xAxisAnnotations = new te(this)),
          (this.yAxisAnnotations = new he(this)),
          (this.pointsAnnotations = new J(this)),
          this.w.globals.isBarHorizontal &&
            this.w.config.yaxis[0].reversed &&
            (this.inversedReversedAxis = !0),
          (this.xDivision =
            this.w.globals.gridWidth / this.w.globals.dataPoints);
      }
      return (
        S(T, [
          {
            key: "drawAxesAnnotations",
            value: function () {
              var e = this.w;
              if (e.globals.axisCharts) {
                for (
                  var i = this.yAxisAnnotations.drawYAxisAnnotations(),
                    n = this.xAxisAnnotations.drawXAxisAnnotations(),
                    r = this.pointsAnnotations.drawPointAnnotations(),
                    o = e.config.chart.animations.enabled,
                    l = [i, n, r],
                    h = [n.node, i.node, r.node],
                    d = 0;
                  d < 3;
                  d++
                )
                  e.globals.dom.elGraphical.add(l[d]),
                    !o ||
                      e.globals.resized ||
                      e.globals.dataChanged ||
                      (e.config.chart.type !== "scatter" &&
                        e.config.chart.type !== "bubble" &&
                        e.globals.dataPoints > 1 &&
                        h[d].classList.add("apexcharts-element-hidden")),
                    e.globals.delayedElements.push({ el: h[d], index: 0 });
                this.helpers.annotationsBackground();
              }
            },
          },
          {
            key: "drawImageAnnos",
            value: function () {
              var e = this;
              this.w.config.annotations.images.map(function (i, n) {
                e.addImage(i, n);
              });
            },
          },
          {
            key: "drawTextAnnos",
            value: function () {
              var e = this;
              this.w.config.annotations.texts.map(function (i, n) {
                e.addText(i, n);
              });
            },
          },
          {
            key: "addXaxisAnnotation",
            value: function (e, i, n) {
              this.xAxisAnnotations.addXaxisAnnotation(e, i, n);
            },
          },
          {
            key: "addYaxisAnnotation",
            value: function (e, i, n) {
              this.yAxisAnnotations.addYaxisAnnotation(e, i, n);
            },
          },
          {
            key: "addPointAnnotation",
            value: function (e, i, n) {
              this.pointsAnnotations.addPointAnnotation(e, i, n);
            },
          },
          {
            key: "addText",
            value: function (e, i) {
              var n = e.x,
                r = e.y,
                o = e.text,
                l = e.textAnchor,
                h = e.foreColor,
                d = e.fontSize,
                g = e.fontFamily,
                m = e.fontWeight,
                x = e.cssClass,
                v = e.backgroundColor,
                w = e.borderWidth,
                C = e.strokeDashArray,
                P = e.borderRadius,
                M = e.borderColor,
                I = e.appendTo,
                D = I === void 0 ? ".apexcharts-annotations" : I,
                f = e.paddingLeft,
                y = f === void 0 ? 4 : f,
                A = e.paddingRight,
                _ = A === void 0 ? 4 : A,
                z = e.paddingBottom,
                B = z === void 0 ? 2 : z,
                $ = e.paddingTop,
                Z = $ === void 0 ? 2 : $,
                re = this.w,
                ce = this.graphics.drawText({
                  x: n,
                  y: r,
                  text: o,
                  textAnchor: l || "start",
                  fontSize: d || "12px",
                  fontWeight: m || "regular",
                  fontFamily: g || re.config.chart.fontFamily,
                  foreColor: h || re.config.chart.foreColor,
                  cssClass: x,
                }),
                oe = re.globals.dom.baseEl.querySelector(D);
              oe && oe.appendChild(ce.node);
              var de = ce.bbox();
              if (o) {
                var Pe = this.graphics.drawRect(
                  de.x - y,
                  de.y - Z,
                  de.width + y + _,
                  de.height + B + Z,
                  P,
                  v || "transparent",
                  1,
                  w,
                  M,
                  C
                );
                oe.insertBefore(Pe.node, ce.node);
              }
            },
          },
          {
            key: "addImage",
            value: function (e, i) {
              var n = this.w,
                r = e.path,
                o = e.x,
                l = o === void 0 ? 0 : o,
                h = e.y,
                d = h === void 0 ? 0 : h,
                g = e.width,
                m = g === void 0 ? 20 : g,
                x = e.height,
                v = x === void 0 ? 20 : x,
                w = e.appendTo,
                C = w === void 0 ? ".apexcharts-annotations" : w,
                P = n.globals.dom.Paper.image(r);
              P.size(m, v).move(l, d);
              var M = n.globals.dom.baseEl.querySelector(C);
              return M && M.appendChild(P.node), P;
            },
          },
          {
            key: "addXaxisAnnotationExternal",
            value: function (e, i, n) {
              return (
                this.addAnnotationExternal({
                  params: e,
                  pushToMemory: i,
                  context: n,
                  type: "xaxis",
                  contextMethod: n.addXaxisAnnotation,
                }),
                n
              );
            },
          },
          {
            key: "addYaxisAnnotationExternal",
            value: function (e, i, n) {
              return (
                this.addAnnotationExternal({
                  params: e,
                  pushToMemory: i,
                  context: n,
                  type: "yaxis",
                  contextMethod: n.addYaxisAnnotation,
                }),
                n
              );
            },
          },
          {
            key: "addPointAnnotationExternal",
            value: function (e, i, n) {
              return (
                this.invertAxis === void 0 &&
                  (this.invertAxis = n.w.globals.isBarHorizontal),
                this.addAnnotationExternal({
                  params: e,
                  pushToMemory: i,
                  context: n,
                  type: "point",
                  contextMethod: n.addPointAnnotation,
                }),
                n
              );
            },
          },
          {
            key: "addAnnotationExternal",
            value: function (e) {
              var i = e.params,
                n = e.pushToMemory,
                r = e.context,
                o = e.type,
                l = e.contextMethod,
                h = r,
                d = h.w,
                g = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(o, "-annotations")
                ),
                m = g.childNodes.length + 1,
                x = new se(),
                v = Object.assign(
                  {},
                  o === "xaxis"
                    ? x.xAxisAnnotation
                    : o === "yaxis"
                    ? x.yAxisAnnotation
                    : x.pointAnnotation
                ),
                w = L.extend(v, i);
              switch (o) {
                case "xaxis":
                  this.addXaxisAnnotation(w, g, m);
                  break;
                case "yaxis":
                  this.addYaxisAnnotation(w, g, m);
                  break;
                case "point":
                  this.addPointAnnotation(w, g, m);
              }
              var C = d.globals.dom.baseEl.querySelector(
                  ".apexcharts-"
                    .concat(o, "-annotations .apexcharts-")
                    .concat(o, "-annotation-label[rel='")
                    .concat(m, "']")
                ),
                P = this.helpers.addBackgroundToAnno(C, w);
              return (
                P && g.insertBefore(P.node, C),
                n &&
                  d.globals.memory.methodsToExec.push({
                    context: h,
                    id: w.id ? w.id : L.randomId(),
                    method: l,
                    label: "addAnnotation",
                    params: i,
                  }),
                r
              );
            },
          },
          {
            key: "clearAnnotations",
            value: function (e) {
              var i = e.w,
                n = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"
                );
              i.globals.memory.methodsToExec.map(function (r, o) {
                (r.label !== "addText" && r.label !== "addAnnotation") ||
                  i.globals.memory.methodsToExec.splice(o, 1);
              }),
                (n = L.listToArray(n)),
                Array.prototype.forEach.call(n, function (r) {
                  for (; r.firstChild; ) r.removeChild(r.firstChild);
                });
            },
          },
          {
            key: "removeAnnotation",
            value: function (e, i) {
              var n = e.w,
                r = n.globals.dom.baseEl.querySelectorAll(".".concat(i));
              r &&
                (n.globals.memory.methodsToExec.map(function (o, l) {
                  o.id === i && n.globals.memory.methodsToExec.splice(l, 1);
                }),
                Array.prototype.forEach.call(r, function (o) {
                  o.parentElement.removeChild(o);
                }));
            },
          },
        ]),
        T
      );
    })(),
    ie = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
          (this.months30 = [2, 4, 6, 9, 11]),
          (this.daysCntOfYear = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
          ]);
      }
      return (
        S(T, [
          {
            key: "isValidDate",
            value: function (e) {
              return !isNaN(this.parseDate(e));
            },
          },
          {
            key: "getTimeStamp",
            value: function (e) {
              return Date.parse(e)
                ? this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(e).toISOString().substr(0, 25)).getTime()
                  : new Date(e).getTime()
                : e;
            },
          },
          {
            key: "getDate",
            value: function (e) {
              return this.w.config.xaxis.labels.datetimeUTC
                ? new Date(new Date(e).toUTCString())
                : new Date(e);
            },
          },
          {
            key: "parseDate",
            value: function (e) {
              var i = Date.parse(e);
              if (!isNaN(i)) return this.getTimeStamp(e);
              var n = Date.parse(e.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
              return (n = this.getTimeStamp(n));
            },
          },
          {
            key: "parseDateWithTimezone",
            value: function (e) {
              return Date.parse(e.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
            },
          },
          {
            key: "formatDate",
            value: function (e, i) {
              var n = this.w.globals.locale,
                r = this.w.config.xaxis.labels.datetimeUTC,
                o = ["\0"].concat(K(n.months)),
                l = [""].concat(K(n.shortMonths)),
                h = [""].concat(K(n.days)),
                d = [""].concat(K(n.shortDays));
              function g(B, $) {
                var Z = B + "";
                for ($ = $ || 2; Z.length < $; ) Z = "0" + Z;
                return Z;
              }
              var m = r ? e.getUTCFullYear() : e.getFullYear();
              i = (i = (i = i.replace(/(^|[^\\])yyyy+/g, "$1" + m)).replace(
                /(^|[^\\])yy/g,
                "$1" + m.toString().substr(2, 2)
              )).replace(/(^|[^\\])y/g, "$1" + m);
              var x = (r ? e.getUTCMonth() : e.getMonth()) + 1;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])MMMM+/g,
                "$1" + o[0]
              )).replace(/(^|[^\\])MMM/g, "$1" + l[0])).replace(
                /(^|[^\\])MM/g,
                "$1" + g(x)
              )).replace(/(^|[^\\])M/g, "$1" + x);
              var v = r ? e.getUTCDate() : e.getDate();
              i = (i = (i = (i = i.replace(
                /(^|[^\\])dddd+/g,
                "$1" + h[0]
              )).replace(/(^|[^\\])ddd/g, "$1" + d[0])).replace(
                /(^|[^\\])dd/g,
                "$1" + g(v)
              )).replace(/(^|[^\\])d/g, "$1" + v);
              var w = r ? e.getUTCHours() : e.getHours(),
                C = w > 12 ? w - 12 : w === 0 ? 12 : w;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])HH+/g,
                "$1" + g(w)
              )).replace(/(^|[^\\])H/g, "$1" + w)).replace(
                /(^|[^\\])hh+/g,
                "$1" + g(C)
              )).replace(/(^|[^\\])h/g, "$1" + C);
              var P = r ? e.getUTCMinutes() : e.getMinutes();
              i = (i = i.replace(/(^|[^\\])mm+/g, "$1" + g(P))).replace(
                /(^|[^\\])m/g,
                "$1" + P
              );
              var M = r ? e.getUTCSeconds() : e.getSeconds();
              i = (i = i.replace(/(^|[^\\])ss+/g, "$1" + g(M))).replace(
                /(^|[^\\])s/g,
                "$1" + M
              );
              var I = r ? e.getUTCMilliseconds() : e.getMilliseconds();
              (i = i.replace(/(^|[^\\])fff+/g, "$1" + g(I, 3))),
                (I = Math.round(I / 10)),
                (i = i.replace(/(^|[^\\])ff/g, "$1" + g(I))),
                (I = Math.round(I / 10));
              var D = w < 12 ? "AM" : "PM";
              i = (i = (i = i.replace(/(^|[^\\])f/g, "$1" + I)).replace(
                /(^|[^\\])TT+/g,
                "$1" + D
              )).replace(/(^|[^\\])T/g, "$1" + D.charAt(0));
              var f = D.toLowerCase();
              i = (i = i.replace(/(^|[^\\])tt+/g, "$1" + f)).replace(
                /(^|[^\\])t/g,
                "$1" + f.charAt(0)
              );
              var y = -e.getTimezoneOffset(),
                A = r || !y ? "Z" : y > 0 ? "+" : "-";
              if (!r) {
                var _ = (y = Math.abs(y)) % 60;
                A += g(Math.floor(y / 60)) + ":" + g(_);
              }
              i = i.replace(/(^|[^\\])K/g, "$1" + A);
              var z = (r ? e.getUTCDay() : e.getDay()) + 1;
              return (i = (i = (i = (i = (i = i.replace(
                new RegExp(h[0], "g"),
                h[z]
              )).replace(new RegExp(d[0], "g"), d[z])).replace(
                new RegExp(o[0], "g"),
                o[x]
              )).replace(new RegExp(l[0], "g"), l[x])).replace(/\\(.)/g, "$1"));
            },
          },
          {
            key: "getTimeUnitsfromTimestamp",
            value: function (e, i, n) {
              var r = this.w;
              r.config.xaxis.min !== void 0 && (e = r.config.xaxis.min),
                r.config.xaxis.max !== void 0 && (i = r.config.xaxis.max);
              var o = this.getDate(e),
                l = this.getDate(i),
                h = this.formatDate(o, "yyyy MM dd HH mm ss fff").split(" "),
                d = this.formatDate(l, "yyyy MM dd HH mm ss fff").split(" ");
              return {
                minMillisecond: parseInt(h[6], 10),
                maxMillisecond: parseInt(d[6], 10),
                minSecond: parseInt(h[5], 10),
                maxSecond: parseInt(d[5], 10),
                minMinute: parseInt(h[4], 10),
                maxMinute: parseInt(d[4], 10),
                minHour: parseInt(h[3], 10),
                maxHour: parseInt(d[3], 10),
                minDate: parseInt(h[2], 10),
                maxDate: parseInt(d[2], 10),
                minMonth: parseInt(h[1], 10) - 1,
                maxMonth: parseInt(d[1], 10) - 1,
                minYear: parseInt(h[0], 10),
                maxYear: parseInt(d[0], 10),
              };
            },
          },
          {
            key: "isLeapYear",
            value: function (e) {
              return (e % 4 == 0 && e % 100 != 0) || e % 400 == 0;
            },
          },
          {
            key: "calculcateLastDaysOfMonth",
            value: function (e, i, n) {
              return this.determineDaysOfMonths(e, i) - n;
            },
          },
          {
            key: "determineDaysOfYear",
            value: function (e) {
              var i = 365;
              return this.isLeapYear(e) && (i = 366), i;
            },
          },
          {
            key: "determineRemainingDaysOfYear",
            value: function (e, i, n) {
              var r = this.daysCntOfYear[i] + n;
              return i > 1 && this.isLeapYear() && r++, r;
            },
          },
          {
            key: "determineDaysOfMonths",
            value: function (e, i) {
              var n = 30;
              switch (((e = L.monthMod(e)), !0)) {
                case this.months30.indexOf(e) > -1:
                  e === 2 && (n = this.isLeapYear(i) ? 29 : 28);
                  break;
                case this.months31.indexOf(e) > -1:
                default:
                  n = 31;
              }
              return n;
            },
          },
        ]),
        T
      );
    })(),
    ke = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.tooltipKeyFormat = "dd MMM");
      }
      return (
        S(T, [
          {
            key: "xLabelFormat",
            value: function (e, i, n, r) {
              var o = this.w;
              if (
                o.config.xaxis.type === "datetime" &&
                o.config.xaxis.labels.formatter === void 0 &&
                o.config.tooltip.x.formatter === void 0
              ) {
                var l = new ie(this.ctx);
                return l.formatDate(l.getDate(i), o.config.tooltip.x.format);
              }
              return e(i, n, r);
            },
          },
          {
            key: "defaultGeneralFormatter",
            value: function (e) {
              return Array.isArray(e)
                ? e.map(function (i) {
                    return i;
                  })
                : e;
            },
          },
          {
            key: "defaultYFormatter",
            value: function (e, i, n) {
              var r = this.w;
              return (
                L.isNumber(e) &&
                  (e =
                    r.globals.yValueDecimal !== 0
                      ? e.toFixed(
                          i.decimalsInFloat !== void 0
                            ? i.decimalsInFloat
                            : r.globals.yValueDecimal
                        )
                      : r.globals.maxYArr[n] - r.globals.minYArr[n] < 5
                      ? e.toFixed(1)
                      : e.toFixed(0)),
                e
              );
            },
          },
          {
            key: "setLabelFormatters",
            value: function () {
              var e = this,
                i = this.w;
              return (
                (i.globals.xaxisTooltipFormatter = function (n) {
                  return e.defaultGeneralFormatter(n);
                }),
                (i.globals.ttKeyFormatter = function (n) {
                  return e.defaultGeneralFormatter(n);
                }),
                (i.globals.ttZFormatter = function (n) {
                  return n;
                }),
                (i.globals.legendFormatter = function (n) {
                  return e.defaultGeneralFormatter(n);
                }),
                i.config.xaxis.labels.formatter !== void 0
                  ? (i.globals.xLabelFormatter =
                      i.config.xaxis.labels.formatter)
                  : (i.globals.xLabelFormatter = function (n) {
                      if (L.isNumber(n)) {
                        if (
                          !i.config.xaxis.convertedCatToNumeric &&
                          i.config.xaxis.type === "numeric"
                        ) {
                          if (L.isNumber(i.config.xaxis.decimalsInFloat))
                            return n.toFixed(i.config.xaxis.decimalsInFloat);
                          var r = i.globals.maxX - i.globals.minX;
                          return r > 0 && r < 100 ? n.toFixed(1) : n.toFixed(0);
                        }
                        return i.globals.isBarHorizontal &&
                          i.globals.maxY - i.globals.minYArr < 4
                          ? n.toFixed(1)
                          : n.toFixed(0);
                      }
                      return n;
                    }),
                typeof i.config.tooltip.x.formatter == "function"
                  ? (i.globals.ttKeyFormatter = i.config.tooltip.x.formatter)
                  : (i.globals.ttKeyFormatter = i.globals.xLabelFormatter),
                typeof i.config.xaxis.tooltip.formatter == "function" &&
                  (i.globals.xaxisTooltipFormatter =
                    i.config.xaxis.tooltip.formatter),
                (Array.isArray(i.config.tooltip.y) ||
                  i.config.tooltip.y.formatter !== void 0) &&
                  (i.globals.ttVal = i.config.tooltip.y),
                i.config.tooltip.z.formatter !== void 0 &&
                  (i.globals.ttZFormatter = i.config.tooltip.z.formatter),
                i.config.legend.formatter !== void 0 &&
                  (i.globals.legendFormatter = i.config.legend.formatter),
                i.config.yaxis.forEach(function (n, r) {
                  n.labels.formatter !== void 0
                    ? (i.globals.yLabelFormatters[r] = n.labels.formatter)
                    : (i.globals.yLabelFormatters[r] = function (o) {
                        return i.globals.xyCharts
                          ? Array.isArray(o)
                            ? o.map(function (l) {
                                return e.defaultYFormatter(l, n, r);
                              })
                            : e.defaultYFormatter(o, n, r)
                          : o;
                      });
                }),
                i.globals
              );
            },
          },
          {
            key: "heatmapLabelFormatters",
            value: function () {
              var e = this.w;
              if (e.config.chart.type === "heatmap") {
                e.globals.yAxisScale[0].result = e.globals.seriesNames.slice();
                var i = e.globals.seriesNames.reduce(function (n, r) {
                  return n.length > r.length ? n : r;
                }, 0);
                (e.globals.yAxisScale[0].niceMax = i),
                  (e.globals.yAxisScale[0].niceMin = i);
              }
            },
          },
        ]),
        T
      );
    })(),
    _e = function (T) {
      var e,
        i = T.isTimeline,
        n = T.ctx,
        r = T.seriesIndex,
        o = T.dataPointIndex,
        l = T.y1,
        h = T.y2,
        d = T.w,
        g = d.globals.seriesRangeStart[r][o],
        m = d.globals.seriesRangeEnd[r][o],
        x = d.globals.labels[o],
        v = d.config.series[r].name ? d.config.series[r].name : "",
        w = d.globals.ttKeyFormatter,
        C = d.config.tooltip.y.title.formatter,
        P = { w: d, seriesIndex: r, dataPointIndex: o, start: g, end: m };
      typeof C == "function" && (v = C(v, P)),
        (e = d.config.series[r].data[o]) !== null &&
          e !== void 0 &&
          e.x &&
          (x = d.config.series[r].data[o].x),
        i ||
          (d.config.xaxis.type === "datetime" &&
            (x = new ke(n).xLabelFormat(d.globals.ttKeyFormatter, x, x, {
              i: void 0,
              dateFormatter: new ie(n).formatDate,
              w: d,
            }))),
        typeof w == "function" && (x = w(x, P)),
        Number.isFinite(l) && Number.isFinite(h) && ((g = l), (m = h));
      var M = "",
        I = "",
        D = d.globals.colors[r];
      if (d.config.tooltip.x.formatter === void 0)
        if (d.config.xaxis.type === "datetime") {
          var f = new ie(n);
          (M = f.formatDate(f.getDate(g), d.config.tooltip.x.format)),
            (I = f.formatDate(f.getDate(m), d.config.tooltip.x.format));
        } else (M = g), (I = m);
      else
        (M = d.config.tooltip.x.formatter(g)),
          (I = d.config.tooltip.x.formatter(m));
      return {
        start: g,
        end: m,
        startVal: M,
        endVal: I,
        ylabel: x,
        color: D,
        seriesName: v,
      };
    },
    Le = function (T) {
      var e = T.color,
        i = T.seriesName,
        n = T.ylabel,
        r = T.start,
        o = T.end,
        l = T.seriesIndex,
        h = T.dataPointIndex,
        d = T.ctx.tooltip.tooltipLabels.getFormatters(l);
      (r = d.yLbFormatter(r)), (o = d.yLbFormatter(o));
      var g = d.yLbFormatter(T.w.globals.series[l][h]),
        m = `<span class="value start-value">
  `
          .concat(
            r,
            `
  </span> <span class="separator">-</span> <span class="value end-value">
  `
          )
          .concat(
            o,
            `
  </span>`
          );
      return (
        '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
        e +
        '">' +
        (i || "") +
        '</span></div><div> <span class="category">' +
        n +
        ": </span> " +
        (T.w.globals.comboCharts
          ? T.w.config.series[l].type === "rangeArea" ||
            T.w.config.series[l].type === "rangeBar"
            ? m
            : "<span>".concat(g, "</span>")
          : m) +
        " </div></div>"
      );
    },
    ue = (function () {
      function T(e) {
        p(this, T), (this.opts = e);
      }
      return (
        S(T, [
          {
            key: "hideYAxis",
            value: function () {
              (this.opts.yaxis[0].show = !1),
                (this.opts.yaxis[0].title.text = ""),
                (this.opts.yaxis[0].axisBorder.show = !1),
                (this.opts.yaxis[0].axisTicks.show = !1),
                (this.opts.yaxis[0].floating = !0);
            },
          },
          {
            key: "line",
            value: function () {
              return {
                chart: { animations: { easing: "swing" } },
                dataLabels: { enabled: !1 },
                stroke: { width: 5, curve: "straight" },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "sparkline",
            value: function (e) {
              return (
                this.hideYAxis(),
                L.extend(e, {
                  grid: {
                    show: !1,
                    padding: { left: 0, right: 0, top: 0, bottom: 0 },
                  },
                  legend: { show: !1 },
                  xaxis: {
                    labels: { show: !1 },
                    tooltip: { enabled: !1 },
                    axisBorder: { show: !1 },
                    axisTicks: { show: !1 },
                  },
                  chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                  dataLabels: { enabled: !1 },
                })
              );
            },
          },
          {
            key: "bar",
            value: function () {
              return {
                chart: { stacked: !1, animations: { easing: "swing" } },
                plotOptions: { bar: { dataLabels: { position: "center" } } },
                dataLabels: {
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                },
                stroke: { width: 0, lineCap: "round" },
                fill: { opacity: 0.85 },
                legend: { markers: { shape: "square", radius: 2, size: 8 } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: {
                  tooltip: { enabled: !1 },
                  tickPlacement: "between",
                  crosshairs: {
                    width: "barWidth",
                    position: "back",
                    fill: { type: "gradient" },
                    dropShadow: { enabled: !1 },
                    stroke: { width: 0 },
                  },
                },
              };
            },
          },
          {
            key: "funnel",
            value: function () {
              return (
                this.hideYAxis(),
                c(
                  c({}, this.bar()),
                  {},
                  {
                    chart: {
                      animations: {
                        easing: "linear",
                        speed: 800,
                        animateGradually: { enabled: !1 },
                      },
                    },
                    plotOptions: {
                      bar: {
                        horizontal: !0,
                        borderRadiusApplication: "around",
                        borderRadius: 0,
                        dataLabels: { position: "center" },
                      },
                    },
                    grid: { show: !1, padding: { left: 0, right: 0 } },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                  }
                )
              );
            },
          },
          {
            key: "candlestick",
            value: function () {
              var e = this;
              return {
                stroke: { width: 1, colors: ["#333"] },
                fill: { opacity: 1 },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var n = i.seriesIndex,
                      r = i.dataPointIndex,
                      o = i.w;
                    return e._getBoxTooltip(
                      o,
                      n,
                      r,
                      ["Open", "High", "", "Low", "Close"],
                      "candlestick"
                    );
                  },
                },
                states: { active: { filter: { type: "none" } } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "boxPlot",
            value: function () {
              var e = this;
              return {
                chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                stroke: { width: 1, colors: ["#24292e"] },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var n = i.seriesIndex,
                      r = i.dataPointIndex,
                      o = i.w;
                    return e._getBoxTooltip(
                      o,
                      n,
                      r,
                      ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                      "boxPlot"
                    );
                  },
                },
                markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "rangeBar",
            value: function () {
              return {
                chart: { animations: { animateGradually: !1 } },
                stroke: { width: 0, lineCap: "square" },
                plotOptions: {
                  bar: { borderRadius: 0, dataLabels: { position: "center" } },
                },
                dataLabels: {
                  enabled: !1,
                  formatter: function (e, i) {
                    i.ctx;
                    var n = i.seriesIndex,
                      r = i.dataPointIndex,
                      o = i.w,
                      l = function () {
                        var h = o.globals.seriesRangeStart[n][r];
                        return o.globals.seriesRangeEnd[n][r] - h;
                      };
                    return o.globals.comboCharts
                      ? o.config.series[n].type === "rangeBar" ||
                        o.config.series[n].type === "rangeArea"
                        ? l()
                        : e
                      : l();
                  },
                  background: { enabled: !1 },
                  style: { colors: ["#fff"] },
                },
                markers: { size: 10 },
                tooltip: {
                  shared: !1,
                  followCursor: !0,
                  custom: function (e) {
                    return e.w.config.plotOptions &&
                      e.w.config.plotOptions.bar &&
                      e.w.config.plotOptions.bar.horizontal
                      ? (function (i) {
                          var n = _e(c(c({}, i), {}, { isTimeline: !0 })),
                            r = n.color,
                            o = n.seriesName,
                            l = n.ylabel,
                            h = n.startVal,
                            d = n.endVal;
                          return Le(
                            c(
                              c({}, i),
                              {},
                              {
                                color: r,
                                seriesName: o,
                                ylabel: l,
                                start: h,
                                end: d,
                              }
                            )
                          );
                        })(e)
                      : (function (i) {
                          var n = _e(i),
                            r = n.color,
                            o = n.seriesName,
                            l = n.ylabel,
                            h = n.start,
                            d = n.end;
                          return Le(
                            c(
                              c({}, i),
                              {},
                              {
                                color: r,
                                seriesName: o,
                                ylabel: l,
                                start: h,
                                end: d,
                              }
                            )
                          );
                        })(e);
                  },
                },
                xaxis: {
                  tickPlacement: "between",
                  tooltip: { enabled: !1 },
                  crosshairs: { stroke: { width: 0 } },
                },
              };
            },
          },
          {
            key: "dumbbell",
            value: function (e) {
              var i, n;
              return (
                ((i = e.plotOptions.bar) !== null &&
                  i !== void 0 &&
                  i.barHeight) ||
                  (e.plotOptions.bar.barHeight = 2),
                ((n = e.plotOptions.bar) !== null &&
                  n !== void 0 &&
                  n.columnWidth) ||
                  (e.plotOptions.bar.columnWidth = 2),
                e
              );
            },
          },
          {
            key: "area",
            value: function () {
              return {
                stroke: {
                  width: 4,
                  fill: {
                    type: "solid",
                    gradient: {
                      inverseColors: !1,
                      shade: "light",
                      type: "vertical",
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                },
                fill: {
                  type: "gradient",
                  gradient: {
                    inverseColors: !1,
                    shade: "light",
                    type: "vertical",
                    opacityFrom: 0.65,
                    opacityTo: 0.5,
                    stops: [0, 100, 100],
                  },
                },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                tooltip: { followCursor: !1 },
              };
            },
          },
          {
            key: "rangeArea",
            value: function () {
              return {
                stroke: { curve: "straight", width: 0 },
                fill: { type: "solid", opacity: 0.6 },
                markers: { size: 0 },
                states: {
                  hover: { filter: { type: "none" } },
                  active: { filter: { type: "none" } },
                },
                tooltip: {
                  intersect: !1,
                  shared: !0,
                  followCursor: !0,
                  custom: function (e) {
                    return (function (i) {
                      var n = _e(i),
                        r = n.color,
                        o = n.seriesName,
                        l = n.ylabel,
                        h = n.start,
                        d = n.end;
                      return Le(
                        c(
                          c({}, i),
                          {},
                          {
                            color: r,
                            seriesName: o,
                            ylabel: l,
                            start: h,
                            end: d,
                          }
                        )
                      );
                    })(e);
                  },
                },
              };
            },
          },
          {
            key: "brush",
            value: function (e) {
              return L.extend(e, {
                chart: {
                  toolbar: { autoSelected: "selection", show: !1 },
                  zoom: { enabled: !1 },
                },
                dataLabels: { enabled: !1 },
                stroke: { width: 1 },
                tooltip: { enabled: !1 },
                xaxis: { tooltip: { enabled: !1 } },
              });
            },
          },
          {
            key: "stacked100",
            value: function (e) {
              (e.dataLabels = e.dataLabels || {}),
                (e.dataLabels.formatter = e.dataLabels.formatter || void 0);
              var i = e.dataLabels.formatter;
              return (
                e.yaxis.forEach(function (n, r) {
                  (e.yaxis[r].min = 0), (e.yaxis[r].max = 100);
                }),
                e.chart.type === "bar" &&
                  (e.dataLabels.formatter =
                    i ||
                    function (n) {
                      return typeof n == "number" && n ? n.toFixed(0) + "%" : n;
                    }),
                e
              );
            },
          },
          {
            key: "stackedBars",
            value: function () {
              var e = this.bar();
              return c(
                c({}, e),
                {},
                {
                  plotOptions: c(
                    c({}, e.plotOptions),
                    {},
                    {
                      bar: c(
                        c({}, e.plotOptions.bar),
                        {},
                        {
                          borderRadiusApplication: "end",
                          borderRadiusWhenStacked: "last",
                        }
                      ),
                    }
                  ),
                }
              );
            },
          },
          {
            key: "convertCatToNumeric",
            value: function (e) {
              return (e.xaxis.convertedCatToNumeric = !0), e;
            },
          },
          {
            key: "convertCatToNumericXaxis",
            value: function (e, i, n) {
              (e.xaxis.type = "numeric"),
                (e.xaxis.labels = e.xaxis.labels || {}),
                (e.xaxis.labels.formatter =
                  e.xaxis.labels.formatter ||
                  function (l) {
                    return L.isNumber(l) ? Math.floor(l) : l;
                  });
              var r = e.xaxis.labels.formatter,
                o =
                  e.xaxis.categories && e.xaxis.categories.length
                    ? e.xaxis.categories
                    : e.labels;
              return (
                n &&
                  n.length &&
                  (o = n.map(function (l) {
                    return Array.isArray(l) ? l : String(l);
                  })),
                o &&
                  o.length &&
                  (e.xaxis.labels.formatter = function (l) {
                    return L.isNumber(l) ? r(o[Math.floor(l) - 1]) : r(l);
                  }),
                (e.xaxis.categories = []),
                (e.labels = []),
                (e.xaxis.tickAmount = e.xaxis.tickAmount || "dataPoints"),
                e
              );
            },
          },
          {
            key: "bubble",
            value: function () {
              return {
                dataLabels: { style: { colors: ["#fff"] } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: { crosshairs: { width: 0 } },
                fill: {
                  type: "solid",
                  gradient: {
                    shade: "light",
                    inverse: !0,
                    shadeIntensity: 0.55,
                    opacityFrom: 0.4,
                    opacityTo: 0.8,
                  },
                },
              };
            },
          },
          {
            key: "scatter",
            value: function () {
              return {
                dataLabels: { enabled: !1 },
                tooltip: { shared: !1, intersect: !0 },
                markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } },
              };
            },
          },
          {
            key: "heatmap",
            value: function () {
              return {
                chart: { stacked: !1 },
                fill: { opacity: 1 },
                dataLabels: { style: { colors: ["#fff"] } },
                stroke: { colors: ["#fff"] },
                tooltip: {
                  followCursor: !0,
                  marker: { show: !1 },
                  x: { show: !1 },
                },
                legend: {
                  position: "top",
                  markers: { shape: "square", size: 10, offsetY: 2 },
                },
                grid: { padding: { right: 20 } },
              };
            },
          },
          {
            key: "treemap",
            value: function () {
              return {
                chart: { zoom: { enabled: !1 } },
                dataLabels: {
                  style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] },
                },
                stroke: { show: !0, width: 2, colors: ["#fff"] },
                legend: { show: !1 },
                fill: { gradient: { stops: [0, 100] } },
                tooltip: { followCursor: !0, x: { show: !1 } },
                grid: { padding: { left: 0, right: 0 } },
                xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
              };
            },
          },
          {
            key: "pie",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                dataLabels: {
                  formatter: function (e) {
                    return e.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: { shade: "light", stops: [0, 100] },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "donut",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                dataLabels: {
                  formatter: function (e) {
                    return e.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: {
                    shade: "light",
                    shadeIntensity: 0.35,
                    stops: [80, 100],
                    opacityFrom: 1,
                    opacityTo: 1,
                  },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "polarArea",
            value: function () {
              return (
                (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                  ? this.opts.yaxis[0].tickAmount
                  : 6),
                {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (e) {
                      return e.toFixed(1) + "%";
                    },
                    enabled: !1,
                  },
                  stroke: { show: !0, width: 2 },
                  fill: { opacity: 0.7 },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                }
              );
            },
          },
          {
            key: "radar",
            value: function () {
              return (
                (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                  .offsetY
                  ? this.opts.yaxis[0].labels.offsetY
                  : 6),
                {
                  dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                  stroke: { width: 2 },
                  markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                  fill: { opacity: 0.2 },
                  tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                  grid: { show: !1 },
                  xaxis: {
                    labels: {
                      formatter: function (e) {
                        return e;
                      },
                      style: { colors: ["#a8a8a8"], fontSize: "11px" },
                    },
                    tooltip: { enabled: !1 },
                    crosshairs: { show: !1 },
                  },
                }
              );
            },
          },
          {
            key: "radialBar",
            value: function () {
              return {
                chart: {
                  animations: { dynamicAnimation: { enabled: !0, speed: 800 } },
                  toolbar: { show: !1 },
                },
                fill: {
                  gradient: {
                    shade: "dark",
                    shadeIntensity: 0.4,
                    inverseColors: !1,
                    type: "diagonal2",
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [70, 98, 100],
                  },
                },
                legend: { show: !1, position: "right" },
                tooltip: { enabled: !1, fillSeriesColor: !0 },
              };
            },
          },
          {
            key: "_getBoxTooltip",
            value: function (e, i, n, r, o) {
              var l = e.globals.seriesCandleO[i][n],
                h = e.globals.seriesCandleH[i][n],
                d = e.globals.seriesCandleM[i][n],
                g = e.globals.seriesCandleL[i][n],
                m = e.globals.seriesCandleC[i][n];
              return e.config.series[i].type && e.config.series[i].type !== o
                ? `<div class="apexcharts-custom-tooltip">
          `
                    .concat(
                      e.config.series[i].name
                        ? e.config.series[i].name
                        : "series-" + (i + 1),
                      ": <strong>"
                    )
                    .concat(
                      e.globals.series[i][n],
                      `</strong>
        </div>`
                    )
                : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                    e.config.chart.type,
                    '">'
                  ) +
                    "<div>".concat(r[0], ': <span class="value">') +
                    l +
                    "</span></div>" +
                    "<div>".concat(r[1], ': <span class="value">') +
                    h +
                    "</span></div>" +
                    (d
                      ? "<div>".concat(r[2], ': <span class="value">') +
                        d +
                        "</span></div>"
                      : "") +
                    "<div>".concat(r[3], ': <span class="value">') +
                    g +
                    "</span></div>" +
                    "<div>".concat(r[4], ': <span class="value">') +
                    m +
                    "</span></div></div>";
            },
          },
        ]),
        T
      );
    })(),
    xe = (function () {
      function T(e) {
        p(this, T), (this.opts = e);
      }
      return (
        S(T, [
          {
            key: "init",
            value: function (e) {
              var i = e.responsiveOverride,
                n = this.opts,
                r = new se(),
                o = new ue(n);
              (this.chartType = n.chart.type),
                (n = this.extendYAxis(n)),
                (n = this.extendAnnotations(n));
              var l = r.init(),
                h = {};
              if (n && u(n) === "object") {
                var d,
                  g,
                  m,
                  x,
                  v,
                  w,
                  C,
                  P,
                  M = {};
                (M =
                  [
                    "line",
                    "area",
                    "bar",
                    "candlestick",
                    "boxPlot",
                    "rangeBar",
                    "rangeArea",
                    "bubble",
                    "scatter",
                    "heatmap",
                    "treemap",
                    "pie",
                    "polarArea",
                    "donut",
                    "radar",
                    "radialBar",
                  ].indexOf(n.chart.type) !== -1
                    ? o[n.chart.type]()
                    : o.line()),
                  (d = n.plotOptions) !== null &&
                    d !== void 0 &&
                    (g = d.bar) !== null &&
                    g !== void 0 &&
                    g.isFunnel &&
                    (M = o.funnel()),
                  n.chart.stacked &&
                    n.chart.type === "bar" &&
                    (M = o.stackedBars()),
                  (m = n.chart.brush) !== null &&
                    m !== void 0 &&
                    m.enabled &&
                    (M = o.brush(M)),
                  n.chart.stacked &&
                    n.chart.stackType === "100%" &&
                    (n = o.stacked100(n)),
                  (x = n.plotOptions) !== null &&
                    x !== void 0 &&
                    (v = x.bar) !== null &&
                    v !== void 0 &&
                    v.isDumbbell &&
                    (n = o.dumbbell(n)),
                  this.checkForDarkTheme(window.Apex),
                  this.checkForDarkTheme(n),
                  (n.xaxis = n.xaxis || window.Apex.xaxis || {}),
                  i || (n.xaxis.convertedCatToNumeric = !1),
                  (((w = (n = this.checkForCatToNumericXAxis(
                    this.chartType,
                    M,
                    n
                  )).chart.sparkline) !== null &&
                    w !== void 0 &&
                    w.enabled) ||
                    ((C = window.Apex.chart) !== null &&
                      C !== void 0 &&
                      (P = C.sparkline) !== null &&
                      P !== void 0 &&
                      P.enabled)) &&
                    (M = o.sparkline(M)),
                  (h = L.extend(l, M));
              }
              var I = L.extend(h, window.Apex);
              return (l = L.extend(I, n)), (l = this.handleUserInputErrors(l));
            },
          },
          {
            key: "checkForCatToNumericXAxis",
            value: function (e, i, n) {
              var r,
                o,
                l = new ue(n),
                h =
                  (e === "bar" || e === "boxPlot") &&
                  ((r = n.plotOptions) === null ||
                  r === void 0 ||
                  (o = r.bar) === null ||
                  o === void 0
                    ? void 0
                    : o.horizontal),
                d =
                  e === "pie" ||
                  e === "polarArea" ||
                  e === "donut" ||
                  e === "radar" ||
                  e === "radialBar" ||
                  e === "heatmap",
                g = n.xaxis.type !== "datetime" && n.xaxis.type !== "numeric",
                m = n.xaxis.tickPlacement
                  ? n.xaxis.tickPlacement
                  : i.xaxis && i.xaxis.tickPlacement;
              return (
                h ||
                  d ||
                  !g ||
                  m === "between" ||
                  (n = l.convertCatToNumeric(n)),
                n
              );
            },
          },
          {
            key: "extendYAxis",
            value: function (e, i) {
              var n = new se();
              (e.yaxis === void 0 ||
                !e.yaxis ||
                (Array.isArray(e.yaxis) && e.yaxis.length === 0)) &&
                (e.yaxis = {}),
                e.yaxis.constructor !== Array &&
                  window.Apex.yaxis &&
                  window.Apex.yaxis.constructor !== Array &&
                  (e.yaxis = L.extend(e.yaxis, window.Apex.yaxis)),
                e.yaxis.constructor !== Array
                  ? (e.yaxis = [L.extend(n.yAxis, e.yaxis)])
                  : (e.yaxis = L.extendArray(e.yaxis, n.yAxis));
              var r = !1;
              e.yaxis.forEach(function (l) {
                l.logarithmic && (r = !0);
              });
              var o = e.series;
              return (
                i && !o && (o = i.config.series),
                r &&
                  o.length !== e.yaxis.length &&
                  o.length &&
                  (e.yaxis = o.map(function (l, h) {
                    if (
                      (l.name || (o[h].name = "series-".concat(h + 1)),
                      e.yaxis[h])
                    )
                      return (e.yaxis[h].seriesName = o[h].name), e.yaxis[h];
                    var d = L.extend(n.yAxis, e.yaxis[0]);
                    return (d.show = !1), d;
                  })),
                r &&
                  o.length > 1 &&
                  o.length !== e.yaxis.length &&
                  console.warn(
                    "A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."
                  ),
                e
              );
            },
          },
          {
            key: "extendAnnotations",
            value: function (e) {
              return (
                e.annotations === void 0 &&
                  ((e.annotations = {}),
                  (e.annotations.yaxis = []),
                  (e.annotations.xaxis = []),
                  (e.annotations.points = [])),
                (e = this.extendYAxisAnnotations(e)),
                (e = this.extendXAxisAnnotations(e)),
                (e = this.extendPointAnnotations(e))
              );
            },
          },
          {
            key: "extendYAxisAnnotations",
            value: function (e) {
              var i = new se();
              return (
                (e.annotations.yaxis = L.extendArray(
                  e.annotations.yaxis !== void 0 ? e.annotations.yaxis : [],
                  i.yAxisAnnotation
                )),
                e
              );
            },
          },
          {
            key: "extendXAxisAnnotations",
            value: function (e) {
              var i = new se();
              return (
                (e.annotations.xaxis = L.extendArray(
                  e.annotations.xaxis !== void 0 ? e.annotations.xaxis : [],
                  i.xAxisAnnotation
                )),
                e
              );
            },
          },
          {
            key: "extendPointAnnotations",
            value: function (e) {
              var i = new se();
              return (
                (e.annotations.points = L.extendArray(
                  e.annotations.points !== void 0 ? e.annotations.points : [],
                  i.pointAnnotation
                )),
                e
              );
            },
          },
          {
            key: "checkForDarkTheme",
            value: function (e) {
              e.theme &&
                e.theme.mode === "dark" &&
                (e.tooltip || (e.tooltip = {}),
                e.tooltip.theme !== "light" && (e.tooltip.theme = "dark"),
                e.chart.foreColor || (e.chart.foreColor = "#f6f7f8"),
                e.chart.background || (e.chart.background = "#424242"),
                e.theme.palette || (e.theme.palette = "palette4"));
            },
          },
          {
            key: "handleUserInputErrors",
            value: function (e) {
              var i = e;
              if (i.tooltip.shared && i.tooltip.intersect)
                throw new Error(
                  "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false."
                );
              if (i.chart.type === "bar" && i.plotOptions.bar.horizontal) {
                if (i.yaxis.length > 1)
                  throw new Error(
                    "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false"
                  );
                i.yaxis[0].reversed && (i.yaxis[0].opposite = !0),
                  (i.xaxis.tooltip.enabled = !1),
                  (i.yaxis[0].tooltip.enabled = !1),
                  (i.chart.zoom.enabled = !1);
              }
              return (
                (i.chart.type !== "bar" && i.chart.type !== "rangeBar") ||
                  (i.tooltip.shared &&
                    i.xaxis.crosshairs.width === "barWidth" &&
                    i.series.length > 1 &&
                    (i.xaxis.crosshairs.width = "tickWidth")),
                (i.chart.type !== "candlestick" &&
                  i.chart.type !== "boxPlot") ||
                  (i.yaxis[0].reversed &&
                    (console.warn(
                      "Reversed y-axis in ".concat(
                        i.chart.type,
                        " chart is not supported."
                      )
                    ),
                    (i.yaxis[0].reversed = !1))),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    be = (function () {
      function T() {
        p(this, T);
      }
      return (
        S(T, [
          {
            key: "initGlobalVars",
            value: function (e) {
              (e.series = []),
                (e.seriesCandleO = []),
                (e.seriesCandleH = []),
                (e.seriesCandleM = []),
                (e.seriesCandleL = []),
                (e.seriesCandleC = []),
                (e.seriesRangeStart = []),
                (e.seriesRangeEnd = []),
                (e.seriesRange = []),
                (e.seriesPercent = []),
                (e.seriesGoals = []),
                (e.seriesX = []),
                (e.seriesZ = []),
                (e.seriesNames = []),
                (e.seriesTotals = []),
                (e.seriesLog = []),
                (e.seriesColors = []),
                (e.stackedSeriesTotals = []),
                (e.seriesXvalues = []),
                (e.seriesYvalues = []),
                (e.labels = []),
                (e.hasXaxisGroups = !1),
                (e.groups = []),
                (e.hasSeriesGroups = !1),
                (e.seriesGroups = []),
                (e.categoryLabels = []),
                (e.timescaleLabels = []),
                (e.noLabelsProvided = !1),
                (e.resizeTimer = null),
                (e.selectionResizeTimer = null),
                (e.delayedElements = []),
                (e.pointsArray = []),
                (e.dataLabelsRects = []),
                (e.isXNumeric = !1),
                (e.skipLastTimelinelabel = !1),
                (e.skipFirstTimelinelabel = !1),
                (e.isDataXYZ = !1),
                (e.isMultiLineX = !1),
                (e.isMultipleYAxis = !1),
                (e.maxY = -Number.MAX_VALUE),
                (e.minY = Number.MIN_VALUE),
                (e.minYArr = []),
                (e.maxYArr = []),
                (e.maxX = -Number.MAX_VALUE),
                (e.minX = Number.MAX_VALUE),
                (e.initialMaxX = -Number.MAX_VALUE),
                (e.initialMinX = Number.MAX_VALUE),
                (e.maxDate = 0),
                (e.minDate = Number.MAX_VALUE),
                (e.minZ = Number.MAX_VALUE),
                (e.maxZ = -Number.MAX_VALUE),
                (e.minXDiff = Number.MAX_VALUE),
                (e.yAxisScale = []),
                (e.xAxisScale = null),
                (e.xAxisTicksPositions = []),
                (e.yLabelsCoords = []),
                (e.yTitleCoords = []),
                (e.barPadForNumericAxis = 0),
                (e.padHorizontal = 0),
                (e.xRange = 0),
                (e.yRange = []),
                (e.zRange = 0),
                (e.dataPoints = 0),
                (e.xTickAmount = 0);
            },
          },
          {
            key: "globalVars",
            value: function (e) {
              return {
                chartID: null,
                cuid: null,
                events: {
                  beforeMount: [],
                  mounted: [],
                  updated: [],
                  clicked: [],
                  selection: [],
                  dataPointSelection: [],
                  zoomed: [],
                  scrolled: [],
                },
                colors: [],
                clientX: null,
                clientY: null,
                fill: { colors: [] },
                stroke: { colors: [] },
                dataLabels: { style: { colors: [] } },
                radarPolygons: { fill: { colors: [] } },
                markers: { colors: [], size: e.markers.size, largestSize: 0 },
                animationEnded: !1,
                isTouchDevice:
                  "ontouchstart" in window || navigator.msMaxTouchPoints,
                isDirty: !1,
                isExecCalled: !1,
                initialConfig: null,
                initialSeries: [],
                lastXAxis: [],
                lastYAxis: [],
                columnSeries: null,
                labels: [],
                timescaleLabels: [],
                noLabelsProvided: !1,
                allSeriesCollapsed: !1,
                collapsedSeries: [],
                collapsedSeriesIndices: [],
                ancillaryCollapsedSeries: [],
                ancillaryCollapsedSeriesIndices: [],
                risingSeries: [],
                dataFormatXNumeric: !1,
                capturedSeriesIndex: -1,
                capturedDataPointIndex: -1,
                selectedDataPoints: [],
                goldenPadding: 35,
                invalidLogScale: !1,
                ignoreYAxisIndexes: [],
                yAxisSameScaleIndices: [],
                maxValsInArrayIndex: 0,
                radialSize: 0,
                selection: void 0,
                zoomEnabled:
                  e.chart.toolbar.autoSelected === "zoom" &&
                  e.chart.toolbar.tools.zoom &&
                  e.chart.zoom.enabled,
                panEnabled:
                  e.chart.toolbar.autoSelected === "pan" &&
                  e.chart.toolbar.tools.pan,
                selectionEnabled:
                  e.chart.toolbar.autoSelected === "selection" &&
                  e.chart.toolbar.tools.selection,
                yaxis: null,
                mousedown: !1,
                lastClientPosition: {},
                visibleXRange: void 0,
                yValueDecimal: 0,
                total: 0,
                SVGNS: "http://www.w3.org/2000/svg",
                svgWidth: 0,
                svgHeight: 0,
                noData: !1,
                locale: {},
                dom: {},
                memory: { methodsToExec: [] },
                shouldAnimate: !0,
                skipLastTimelinelabel: !1,
                skipFirstTimelinelabel: !1,
                delayedElements: [],
                axisCharts: !0,
                isDataXYZ: !1,
                resized: !1,
                resizeTimer: null,
                comboCharts: !1,
                dataChanged: !1,
                previousPaths: [],
                allSeriesHasEqualX: !0,
                pointsArray: [],
                dataLabelsRects: [],
                lastDrawnDataLabelsIndexes: [],
                hasNullValues: !1,
                easing: null,
                zoomed: !1,
                gridWidth: 0,
                gridHeight: 0,
                rotateXLabels: !1,
                defaultLabels: !1,
                xLabelFormatter: void 0,
                yLabelFormatters: [],
                xaxisTooltipFormatter: void 0,
                ttKeyFormatter: void 0,
                ttVal: void 0,
                ttZFormatter: void 0,
                LINE_HEIGHT_RATIO: 1.618,
                xAxisLabelsHeight: 0,
                xAxisGroupLabelsHeight: 0,
                xAxisLabelsWidth: 0,
                yAxisLabelsWidth: 0,
                scaleX: 1,
                scaleY: 1,
                translateX: 0,
                translateY: 0,
                translateYAxisX: [],
                yAxisWidths: [],
                translateXAxisY: 0,
                translateXAxisX: 0,
                tooltip: null,
              };
            },
          },
          {
            key: "init",
            value: function (e) {
              var i = this.globalVars(e);
              return (
                this.initGlobalVars(i),
                (i.initialConfig = L.extend({}, e)),
                (i.initialSeries = L.clone(e.series)),
                (i.lastXAxis = L.clone(i.initialConfig.xaxis)),
                (i.lastYAxis = L.clone(i.initialConfig.yaxis)),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Me = (function () {
      function T(e) {
        p(this, T), (this.opts = e);
      }
      return (
        S(T, [
          {
            key: "init",
            value: function () {
              var e = new xe(this.opts).init({ responsiveOverride: !1 });
              return { config: e, globals: new be().init(e) };
            },
          },
        ]),
        T
      );
    })(),
    Te = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.opts = null),
          (this.seriesIndex = 0);
      }
      return (
        S(T, [
          {
            key: "clippedImgArea",
            value: function (e) {
              var i = this.w,
                n = i.config,
                r = parseInt(i.globals.gridWidth, 10),
                o = parseInt(i.globals.gridHeight, 10),
                l = r > o ? r : o,
                h = e.image,
                d = 0,
                g = 0;
              e.width === void 0 && e.height === void 0
                ? n.fill.image.width !== void 0 &&
                  n.fill.image.height !== void 0
                  ? ((d = n.fill.image.width + 1), (g = n.fill.image.height))
                  : ((d = l + 1), (g = l))
                : ((d = e.width), (g = e.height));
              var m = document.createElementNS(i.globals.SVGNS, "pattern");
              X.setAttrs(m, {
                id: e.patternID,
                patternUnits: e.patternUnits
                  ? e.patternUnits
                  : "userSpaceOnUse",
                width: d + "px",
                height: g + "px",
              });
              var x = document.createElementNS(i.globals.SVGNS, "image");
              m.appendChild(x),
                x.setAttributeNS(window.SVG.xlink, "href", h),
                X.setAttrs(x, {
                  x: 0,
                  y: 0,
                  preserveAspectRatio: "none",
                  width: d + "px",
                  height: g + "px",
                }),
                (x.style.opacity = e.opacity),
                i.globals.dom.elDefs.node.appendChild(m);
            },
          },
          {
            key: "getSeriesIndex",
            value: function (e) {
              var i = this.w,
                n = i.config.chart.type;
              return (
                ((n === "bar" || n === "rangeBar") &&
                  i.config.plotOptions.bar.distributed) ||
                n === "heatmap" ||
                n === "treemap"
                  ? (this.seriesIndex = e.seriesNumber)
                  : (this.seriesIndex =
                      e.seriesNumber % i.globals.series.length),
                this.seriesIndex
              );
            },
          },
          {
            key: "fillPath",
            value: function (e) {
              var i = this.w;
              this.opts = e;
              var n,
                r,
                o,
                l = this.w.config;
              this.seriesIndex = this.getSeriesIndex(e);
              var h = this.getFillColors()[this.seriesIndex];
              i.globals.seriesColors[this.seriesIndex] !== void 0 &&
                (h = i.globals.seriesColors[this.seriesIndex]),
                typeof h == "function" &&
                  (h = h({
                    seriesIndex: this.seriesIndex,
                    dataPointIndex: e.dataPointIndex,
                    value: e.value,
                    w: i,
                  }));
              var d = e.fillType
                  ? e.fillType
                  : this.getFillType(this.seriesIndex),
                g = Array.isArray(l.fill.opacity)
                  ? l.fill.opacity[this.seriesIndex]
                  : l.fill.opacity;
              e.color && (h = e.color);
              var m = h;
              if (
                (h.indexOf("rgb") === -1
                  ? h.length < 9 && (m = L.hexToRgba(h, g))
                  : h.indexOf("rgba") > -1 && (g = L.getOpacityFromRGBA(h)),
                e.opacity && (g = e.opacity),
                d === "pattern" &&
                  (r = this.handlePatternFill({
                    fillConfig: e.fillConfig,
                    patternFill: r,
                    fillColor: h,
                    fillOpacity: g,
                    defaultColor: m,
                  })),
                d === "gradient" &&
                  (o = this.handleGradientFill({
                    fillConfig: e.fillConfig,
                    fillColor: h,
                    fillOpacity: g,
                    i: this.seriesIndex,
                  })),
                d === "image")
              ) {
                var x = l.fill.image.src,
                  v = e.patternID ? e.patternID : "";
                this.clippedImgArea({
                  opacity: g,
                  image: Array.isArray(x)
                    ? e.seriesNumber < x.length
                      ? x[e.seriesNumber]
                      : x[0]
                    : x,
                  width: e.width ? e.width : void 0,
                  height: e.height ? e.height : void 0,
                  patternUnits: e.patternUnits,
                  patternID: "pattern"
                    .concat(i.globals.cuid)
                    .concat(e.seriesNumber + 1)
                    .concat(v),
                }),
                  (n = "url(#pattern"
                    .concat(i.globals.cuid)
                    .concat(e.seriesNumber + 1)
                    .concat(v, ")"));
              } else n = d === "gradient" ? o : d === "pattern" ? r : m;
              return e.solid && (n = m), n;
            },
          },
          {
            key: "getFillType",
            value: function (e) {
              var i = this.w;
              return Array.isArray(i.config.fill.type)
                ? i.config.fill.type[e]
                : i.config.fill.type;
            },
          },
          {
            key: "getFillColors",
            value: function () {
              var e = this.w,
                i = e.config,
                n = this.opts,
                r = [];
              return (
                e.globals.comboCharts
                  ? e.config.series[this.seriesIndex].type === "line"
                    ? Array.isArray(e.globals.stroke.colors)
                      ? (r = e.globals.stroke.colors)
                      : r.push(e.globals.stroke.colors)
                    : Array.isArray(e.globals.fill.colors)
                    ? (r = e.globals.fill.colors)
                    : r.push(e.globals.fill.colors)
                  : i.chart.type === "line"
                  ? Array.isArray(e.globals.stroke.colors)
                    ? (r = e.globals.stroke.colors)
                    : r.push(e.globals.stroke.colors)
                  : Array.isArray(e.globals.fill.colors)
                  ? (r = e.globals.fill.colors)
                  : r.push(e.globals.fill.colors),
                n.fillColors !== void 0 &&
                  ((r = []),
                  Array.isArray(n.fillColors)
                    ? (r = n.fillColors.slice())
                    : r.push(n.fillColors)),
                r
              );
            },
          },
          {
            key: "handlePatternFill",
            value: function (e) {
              var i = e.fillConfig,
                n = e.patternFill,
                r = e.fillColor,
                o = e.fillOpacity,
                l = e.defaultColor,
                h = this.w.config.fill;
              i && (h = i);
              var d = this.opts,
                g = new X(this.ctx),
                m = Array.isArray(h.pattern.strokeWidth)
                  ? h.pattern.strokeWidth[this.seriesIndex]
                  : h.pattern.strokeWidth,
                x = r;
              return (
                Array.isArray(h.pattern.style)
                  ? (n =
                      h.pattern.style[d.seriesNumber] !== void 0
                        ? g.drawPattern(
                            h.pattern.style[d.seriesNumber],
                            h.pattern.width,
                            h.pattern.height,
                            x,
                            m,
                            o
                          )
                        : l)
                  : (n = g.drawPattern(
                      h.pattern.style,
                      h.pattern.width,
                      h.pattern.height,
                      x,
                      m,
                      o
                    )),
                n
              );
            },
          },
          {
            key: "handleGradientFill",
            value: function (e) {
              var i = e.fillColor,
                n = e.fillOpacity,
                r = e.fillConfig,
                o = e.i,
                l = this.w.config.fill;
              r && (l = c(c({}, l), r));
              var h,
                d = this.opts,
                g = new X(this.ctx),
                m = new L(),
                x = l.gradient.type,
                v = i,
                w =
                  l.gradient.opacityFrom === void 0
                    ? n
                    : Array.isArray(l.gradient.opacityFrom)
                    ? l.gradient.opacityFrom[o]
                    : l.gradient.opacityFrom;
              v.indexOf("rgba") > -1 && (w = L.getOpacityFromRGBA(v));
              var C =
                l.gradient.opacityTo === void 0
                  ? n
                  : Array.isArray(l.gradient.opacityTo)
                  ? l.gradient.opacityTo[o]
                  : l.gradient.opacityTo;
              if (
                l.gradient.gradientToColors === void 0 ||
                l.gradient.gradientToColors.length === 0
              )
                h =
                  l.gradient.shade === "dark"
                    ? m.shadeColor(
                        -1 * parseFloat(l.gradient.shadeIntensity),
                        i.indexOf("rgb") > -1 ? L.rgb2hex(i) : i
                      )
                    : m.shadeColor(
                        parseFloat(l.gradient.shadeIntensity),
                        i.indexOf("rgb") > -1 ? L.rgb2hex(i) : i
                      );
              else if (l.gradient.gradientToColors[d.seriesNumber]) {
                var P = l.gradient.gradientToColors[d.seriesNumber];
                (h = P),
                  P.indexOf("rgba") > -1 && (C = L.getOpacityFromRGBA(P));
              } else h = i;
              if (
                (l.gradient.gradientFrom && (v = l.gradient.gradientFrom),
                l.gradient.gradientTo && (h = l.gradient.gradientTo),
                l.gradient.inverseColors)
              ) {
                var M = v;
                (v = h), (h = M);
              }
              return (
                v.indexOf("rgb") > -1 && (v = L.rgb2hex(v)),
                h.indexOf("rgb") > -1 && (h = L.rgb2hex(h)),
                g.drawGradient(
                  x,
                  v,
                  h,
                  w,
                  C,
                  d.size,
                  l.gradient.stops,
                  l.gradient.colorStops,
                  o
                )
              );
            },
          },
        ]),
        T
      );
    })(),
    He = (function () {
      function T(e, i) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "setGlobalMarkerSize",
            value: function () {
              var e = this.w;
              if (
                ((e.globals.markers.size = Array.isArray(e.config.markers.size)
                  ? e.config.markers.size
                  : [e.config.markers.size]),
                e.globals.markers.size.length > 0)
              ) {
                if (e.globals.markers.size.length < e.globals.series.length + 1)
                  for (var i = 0; i <= e.globals.series.length; i++)
                    e.globals.markers.size[i] === void 0 &&
                      e.globals.markers.size.push(e.globals.markers.size[0]);
              } else
                e.globals.markers.size = e.config.series.map(function (n) {
                  return e.config.markers.size;
                });
            },
          },
          {
            key: "plotChartMarkers",
            value: function (e, i, n, r) {
              var o,
                l =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4],
                h = this.w,
                d = i,
                g = e,
                m = null,
                x = new X(this.ctx),
                v =
                  h.config.markers.discrete && h.config.markers.discrete.length;
              if (
                ((h.globals.markers.size[i] > 0 || l || v) &&
                  (m = x.group({
                    class: l || v ? "" : "apexcharts-series-markers",
                  })).attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(h.globals.cuid, ")")
                  ),
                Array.isArray(g.x))
              )
                for (var w = 0; w < g.x.length; w++) {
                  var C = n;
                  n === 1 && w === 0 && (C = 0), n === 1 && w === 1 && (C = 1);
                  var P = "apexcharts-marker";
                  if (
                    ((h.config.chart.type !== "line" &&
                      h.config.chart.type !== "area") ||
                      h.globals.comboCharts ||
                      h.config.tooltip.intersect ||
                      (P += " no-pointer-events"),
                    (Array.isArray(h.config.markers.size)
                      ? h.globals.markers.size[i] > 0
                      : h.config.markers.size > 0) ||
                      l ||
                      v)
                  ) {
                    L.isNumber(g.y[w])
                      ? (P += " w".concat(L.randomId()))
                      : (P = "apexcharts-nullpoint");
                    var M = this.getMarkerConfig({
                      cssClass: P,
                      seriesIndex: i,
                      dataPointIndex: C,
                    });
                    h.config.series[d].data[C] &&
                      (h.config.series[d].data[C].fillColor &&
                        (M.pointFillColor =
                          h.config.series[d].data[C].fillColor),
                      h.config.series[d].data[C].strokeColor &&
                        (M.pointStrokeColor =
                          h.config.series[d].data[C].strokeColor)),
                      r && (M.pSize = r),
                      (g.x[w] < 0 ||
                        g.x[w] > h.globals.gridWidth ||
                        g.y[w] < 0 ||
                        g.y[w] > h.globals.gridHeight) &&
                        (M.pSize = 0),
                      (o = x.drawMarker(g.x[w], g.y[w], M)).attr("rel", C),
                      o.attr("j", C),
                      o.attr("index", i),
                      o.node.setAttribute("default-marker-size", M.pSize),
                      new O(this.ctx).setSelectionFilter(o, i, C),
                      this.addEvents(o),
                      m && m.add(o);
                  } else
                    h.globals.pointsArray[i] === void 0 &&
                      (h.globals.pointsArray[i] = []),
                      h.globals.pointsArray[i].push([g.x[w], g.y[w]]);
                }
              return m;
            },
          },
          {
            key: "getMarkerConfig",
            value: function (e) {
              var i = e.cssClass,
                n = e.seriesIndex,
                r = e.dataPointIndex,
                o = r === void 0 ? null : r,
                l = e.finishRadius,
                h = l === void 0 ? null : l,
                d = this.w,
                g = this.getMarkerStyle(n),
                m = d.globals.markers.size[n],
                x = d.config.markers;
              return (
                o !== null &&
                  x.discrete.length &&
                  x.discrete.map(function (v) {
                    v.seriesIndex === n &&
                      v.dataPointIndex === o &&
                      ((g.pointStrokeColor = v.strokeColor),
                      (g.pointFillColor = v.fillColor),
                      (m = v.size),
                      (g.pointShape = v.shape));
                  }),
                {
                  pSize: h === null ? m : h,
                  pRadius: x.radius,
                  width: Array.isArray(x.width) ? x.width[n] : x.width,
                  height: Array.isArray(x.height) ? x.height[n] : x.height,
                  pointStrokeWidth: Array.isArray(x.strokeWidth)
                    ? x.strokeWidth[n]
                    : x.strokeWidth,
                  pointStrokeColor: g.pointStrokeColor,
                  pointFillColor: g.pointFillColor,
                  shape:
                    g.pointShape ||
                    (Array.isArray(x.shape) ? x.shape[n] : x.shape),
                  class: i,
                  pointStrokeOpacity: Array.isArray(x.strokeOpacity)
                    ? x.strokeOpacity[n]
                    : x.strokeOpacity,
                  pointStrokeDashArray: Array.isArray(x.strokeDashArray)
                    ? x.strokeDashArray[n]
                    : x.strokeDashArray,
                  pointFillOpacity: Array.isArray(x.fillOpacity)
                    ? x.fillOpacity[n]
                    : x.fillOpacity,
                  seriesIndex: n,
                }
              );
            },
          },
          {
            key: "addEvents",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx);
              e.node.addEventListener(
                "mouseenter",
                n.pathMouseEnter.bind(this.ctx, e)
              ),
                e.node.addEventListener(
                  "mouseleave",
                  n.pathMouseLeave.bind(this.ctx, e)
                ),
                e.node.addEventListener(
                  "mousedown",
                  n.pathMouseDown.bind(this.ctx, e)
                ),
                e.node.addEventListener("click", i.config.markers.onClick),
                e.node.addEventListener(
                  "dblclick",
                  i.config.markers.onDblClick
                ),
                e.node.addEventListener(
                  "touchstart",
                  n.pathMouseDown.bind(this.ctx, e),
                  { passive: !0 }
                );
            },
          },
          {
            key: "getMarkerStyle",
            value: function (e) {
              var i = this.w,
                n = i.globals.markers.colors,
                r =
                  i.config.markers.strokeColor || i.config.markers.strokeColors;
              return {
                pointStrokeColor: Array.isArray(r) ? r[e] : r,
                pointFillColor: Array.isArray(n) ? n[e] : n,
              };
            },
          },
        ]),
        T
      );
    })(),
    De = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e, i, n) {
              var r = this.w,
                o = new X(this.ctx),
                l = n.realIndex,
                h = n.pointsPos,
                d = n.zRatio,
                g = n.elParent,
                m = o.group({
                  class: "apexcharts-series-markers apexcharts-series-".concat(
                    r.config.chart.type
                  ),
                });
              if (
                (m.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(r.globals.cuid, ")")
                ),
                Array.isArray(h.x))
              )
                for (var x = 0; x < h.x.length; x++) {
                  var v = i + 1,
                    w = !0;
                  i === 0 && x === 0 && (v = 0), i === 0 && x === 1 && (v = 1);
                  var C = 0,
                    P = r.globals.markers.size[l];
                  if (d !== 1 / 0) {
                    var M = r.config.plotOptions.bubble;
                    (P = r.globals.seriesZ[l][v]),
                      M.zScaling && (P /= d),
                      M.minBubbleRadius &&
                        P < M.minBubbleRadius &&
                        (P = M.minBubbleRadius),
                      M.maxBubbleRadius &&
                        P > M.maxBubbleRadius &&
                        (P = M.maxBubbleRadius);
                  }
                  r.config.chart.animations.enabled || (C = P);
                  var I = h.x[x],
                    D = h.y[x];
                  if (
                    ((C = C || 0),
                    (D !== null && r.globals.series[l][v] !== void 0) ||
                      (w = !1),
                    w)
                  ) {
                    var f = this.drawPoint(I, D, C, P, l, v, i);
                    m.add(f);
                  }
                  g.add(m);
                }
            },
          },
          {
            key: "drawPoint",
            value: function (e, i, n, r, o, l, h) {
              var d = this.w,
                g = o,
                m = new R(this.ctx),
                x = new O(this.ctx),
                v = new Te(this.ctx),
                w = new He(this.ctx),
                C = new X(this.ctx),
                P = w.getMarkerConfig({
                  cssClass: "apexcharts-marker",
                  seriesIndex: g,
                  dataPointIndex: l,
                  finishRadius:
                    d.config.chart.type === "bubble" ||
                    (d.globals.comboCharts &&
                      d.config.series[o] &&
                      d.config.series[o].type === "bubble")
                      ? r
                      : null,
                });
              r = P.pSize;
              var M,
                I = v.fillPath({
                  seriesNumber: o,
                  dataPointIndex: l,
                  color: P.pointFillColor,
                  patternUnits: "objectBoundingBox",
                  value: d.globals.series[o][h],
                });
              if (
                (P.shape === "circle"
                  ? (M = C.drawCircle(n))
                  : (P.shape !== "square" && P.shape !== "rect") ||
                    (M = C.drawRect(
                      0,
                      0,
                      P.width - P.pointStrokeWidth / 2,
                      P.height - P.pointStrokeWidth / 2,
                      P.pRadius
                    )),
                d.config.series[g].data[l] &&
                  d.config.series[g].data[l].fillColor &&
                  (I = d.config.series[g].data[l].fillColor),
                M.attr({
                  x: e - P.width / 2 - P.pointStrokeWidth / 2,
                  y: i - P.height / 2 - P.pointStrokeWidth / 2,
                  cx: e,
                  cy: i,
                  fill: I,
                  "fill-opacity": P.pointFillOpacity,
                  stroke: P.pointStrokeColor,
                  r,
                  "stroke-width": P.pointStrokeWidth,
                  "stroke-dasharray": P.pointStrokeDashArray,
                  "stroke-opacity": P.pointStrokeOpacity,
                }),
                d.config.chart.dropShadow.enabled)
              ) {
                var D = d.config.chart.dropShadow;
                x.dropShadow(M, D, o);
              }
              if (
                !this.initialAnim ||
                d.globals.dataChanged ||
                d.globals.resized
              )
                d.globals.animationEnded = !0;
              else {
                var f = d.config.chart.animations.speed;
                m.animateMarker(
                  M,
                  0,
                  P.shape === "circle"
                    ? r
                    : { width: P.width, height: P.height },
                  f,
                  d.globals.easing,
                  function () {
                    window.setTimeout(function () {
                      m.animationCompleted(M);
                    }, 100);
                  }
                );
              }
              if (d.globals.dataChanged && P.shape === "circle")
                if (this.dynamicAnim) {
                  var y,
                    A,
                    _,
                    z,
                    B = d.config.chart.animations.dynamicAnimation.speed;
                  (z =
                    d.globals.previousPaths[o] &&
                    d.globals.previousPaths[o][h]) != null &&
                    ((y = z.x), (A = z.y), (_ = z.r !== void 0 ? z.r : r));
                  for (var $ = 0; $ < d.globals.collapsedSeries.length; $++)
                    d.globals.collapsedSeries[$].index === o &&
                      ((B = 1), (r = 0));
                  e === 0 && i === 0 && (r = 0),
                    m.animateCircle(
                      M,
                      { cx: y, cy: A, r: _ },
                      { cx: e, cy: i, r },
                      B,
                      d.globals.easing
                    );
                } else M.attr({ r });
              return (
                M.attr({ rel: l, j: l, index: o, "default-marker-size": r }),
                x.setSelectionFilter(M, o, l),
                w.addEvents(M),
                M.node.classList.add("apexcharts-marker"),
                M
              );
            },
          },
          {
            key: "centerTextInBubble",
            value: function (e) {
              var i = this.w;
              return {
                y: (e += parseInt(i.config.dataLabels.style.fontSize, 10) / 4),
              };
            },
          },
        ]),
        T
      );
    })(),
    Ke = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "dataLabelsCorrection",
            value: function (e, i, n, r, o, l, h) {
              var d = this.w,
                g = !1,
                m = new X(this.ctx).getTextRects(n, h),
                x = m.width,
                v = m.height;
              i < 0 && (i = 0),
                i > d.globals.gridHeight + v &&
                  (i = d.globals.gridHeight + v / 2),
                d.globals.dataLabelsRects[r] === void 0 &&
                  (d.globals.dataLabelsRects[r] = []),
                d.globals.dataLabelsRects[r].push({
                  x: e,
                  y: i,
                  width: x,
                  height: v,
                });
              var w = d.globals.dataLabelsRects[r].length - 2,
                C =
                  d.globals.lastDrawnDataLabelsIndexes[r] !== void 0
                    ? d.globals.lastDrawnDataLabelsIndexes[r][
                        d.globals.lastDrawnDataLabelsIndexes[r].length - 1
                      ]
                    : 0;
              if (d.globals.dataLabelsRects[r][w] !== void 0) {
                var P = d.globals.dataLabelsRects[r][C];
                (e > P.x + P.width + 2 ||
                  i > P.y + P.height + 2 ||
                  e + x < P.x) &&
                  (g = !0);
              }
              return (
                (o === 0 || l) && (g = !0),
                { x: e, y: i, textRects: m, drawnextLabel: g }
              );
            },
          },
          {
            key: "drawDataLabel",
            value: function (e) {
              var i = this,
                n = e.type,
                r = e.pos,
                o = e.i,
                l = e.j,
                h = e.isRangeStart,
                d = e.strokeWidth,
                g = d === void 0 ? 2 : d,
                m = this.w,
                x = new X(this.ctx),
                v = m.config.dataLabels,
                w = 0,
                C = 0,
                P = l,
                M = null;
              if (!v.enabled || !Array.isArray(r.x)) return M;
              M = x.group({ class: "apexcharts-data-labels" });
              for (var I = 0; I < r.x.length; I++)
                if (
                  ((w = r.x[I] + v.offsetX),
                  (C = r.y[I] + v.offsetY + g),
                  !isNaN(w))
                ) {
                  l === 1 && I === 0 && (P = 0), l === 1 && I === 1 && (P = 1);
                  var D = m.globals.series[o][P];
                  n === "rangeArea" &&
                    (D = h
                      ? m.globals.seriesRangeStart[o][P]
                      : m.globals.seriesRangeEnd[o][P]);
                  var f = "",
                    y = function (A) {
                      return m.config.dataLabels.formatter(A, {
                        ctx: i.ctx,
                        seriesIndex: o,
                        dataPointIndex: P,
                        w: m,
                      });
                    };
                  m.config.chart.type === "bubble"
                    ? ((f = y((D = m.globals.seriesZ[o][P]))),
                      (C = r.y[I]),
                      (C = new De(this.ctx).centerTextInBubble(C, o, P).y))
                    : D !== void 0 && (f = y(D)),
                    this.plotDataLabelsText({
                      x: w,
                      y: C,
                      text: f,
                      i: o,
                      j: P,
                      parent: M,
                      offsetCorrection: !0,
                      dataLabelsConfig: m.config.dataLabels,
                    });
                }
              return M;
            },
          },
          {
            key: "plotDataLabelsText",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx),
                r = e.x,
                o = e.y,
                l = e.i,
                h = e.j,
                d = e.text,
                g = e.textAnchor,
                m = e.fontSize,
                x = e.parent,
                v = e.dataLabelsConfig,
                w = e.color,
                C = e.alwaysDrawDataLabel,
                P = e.offsetCorrection;
              if (
                !(
                  Array.isArray(i.config.dataLabels.enabledOnSeries) &&
                  i.config.dataLabels.enabledOnSeries.indexOf(l) < 0
                )
              ) {
                var M = { x: r, y: o, drawnextLabel: !0, textRects: null };
                P &&
                  (M = this.dataLabelsCorrection(
                    r,
                    o,
                    d,
                    l,
                    h,
                    C,
                    parseInt(v.style.fontSize, 10)
                  )),
                  i.globals.zoomed || ((r = M.x), (o = M.y)),
                  M.textRects &&
                    (r < -10 - M.textRects.width ||
                      r > i.globals.gridWidth + M.textRects.width + 10) &&
                    (d = "");
                var I = i.globals.dataLabels.style.colors[l];
                (((i.config.chart.type === "bar" ||
                  i.config.chart.type === "rangeBar") &&
                  i.config.plotOptions.bar.distributed) ||
                  i.config.dataLabels.distributed) &&
                  (I = i.globals.dataLabels.style.colors[h]),
                  typeof I == "function" &&
                    (I = I({
                      series: i.globals.series,
                      seriesIndex: l,
                      dataPointIndex: h,
                      w: i,
                    })),
                  w && (I = w);
                var D = v.offsetX,
                  f = v.offsetY;
                if (
                  ((i.config.chart.type !== "bar" &&
                    i.config.chart.type !== "rangeBar") ||
                    ((D = 0), (f = 0)),
                  M.drawnextLabel)
                ) {
                  var y = n.drawText({
                    width: 100,
                    height: parseInt(v.style.fontSize, 10),
                    x: r + D,
                    y: o + f,
                    foreColor: I,
                    textAnchor: g || v.textAnchor,
                    text: d,
                    fontSize: m || v.style.fontSize,
                    fontFamily: v.style.fontFamily,
                    fontWeight: v.style.fontWeight || "normal",
                  });
                  if (
                    (y.attr({ class: "apexcharts-datalabel", cx: r, cy: o }),
                    v.dropShadow.enabled)
                  ) {
                    var A = v.dropShadow;
                    new O(this.ctx).dropShadow(y, A);
                  }
                  x.add(y),
                    i.globals.lastDrawnDataLabelsIndexes[l] === void 0 &&
                      (i.globals.lastDrawnDataLabelsIndexes[l] = []),
                    i.globals.lastDrawnDataLabelsIndexes[l].push(h);
                }
              }
            },
          },
          {
            key: "addBackgroundToDataLabel",
            value: function (e, i) {
              var n = this.w,
                r = n.config.dataLabels.background,
                o = r.padding,
                l = r.padding / 2,
                h = i.width,
                d = i.height,
                g = new X(this.ctx).drawRect(
                  i.x - o,
                  i.y - l / 2,
                  h + 2 * o,
                  d + l,
                  r.borderRadius,
                  n.config.chart.background === "transparent"
                    ? "#fff"
                    : n.config.chart.background,
                  r.opacity,
                  r.borderWidth,
                  r.borderColor
                );
              return (
                r.dropShadow.enabled &&
                  new O(this.ctx).dropShadow(g, r.dropShadow),
                g
              );
            },
          },
          {
            key: "dataLabelsBackground",
            value: function () {
              var e = this.w;
              if (e.config.chart.type !== "bubble")
                for (
                  var i = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-datalabels text"
                    ),
                    n = 0;
                  n < i.length;
                  n++
                ) {
                  var r = i[n],
                    o = r.getBBox(),
                    l = null;
                  if (
                    (o.width &&
                      o.height &&
                      (l = this.addBackgroundToDataLabel(r, o)),
                    l)
                  ) {
                    r.parentNode.insertBefore(l.node, r);
                    var h = r.getAttribute("fill");
                    e.config.chart.animations.enabled &&
                    !e.globals.resized &&
                    !e.globals.dataChanged
                      ? l.animate().attr({ fill: h })
                      : l.attr({ fill: h }),
                      r.setAttribute(
                        "fill",
                        e.config.dataLabels.background.foreColor
                      );
                  }
                }
            },
          },
          {
            key: "bringForward",
            value: function () {
              for (
                var e = this.w,
                  i = e.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-datalabels"
                  ),
                  n = e.globals.dom.baseEl.querySelector(
                    ".apexcharts-plot-series:last-child"
                  ),
                  r = 0;
                r < i.length;
                r++
              )
                n && n.insertBefore(i[r], n.nextSibling);
            },
          },
        ]),
        T
      );
    })(),
    je = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.legendInactiveClass = "legend-mouseover-inactive");
      }
      return (
        S(T, [
          {
            key: "getAllSeriesEls",
            value: function () {
              return this.w.globals.dom.baseEl.getElementsByClassName(
                "apexcharts-series"
              );
            },
          },
          {
            key: "getSeriesByName",
            value: function (e) {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                  L.escapeString(e),
                  "']"
                )
              );
            },
          },
          {
            key: "isSeriesHidden",
            value: function (e) {
              var i = this.getSeriesByName(e),
                n = parseInt(i.getAttribute("data:realIndex"), 10);
              return {
                isHidden: i.classList.contains("apexcharts-series-collapsed"),
                realIndex: n,
              };
            },
          },
          {
            key: "addCollapsedClassToSeries",
            value: function (e, i) {
              var n = this.w;
              function r(o) {
                for (var l = 0; l < o.length; l++)
                  o[l].index === i &&
                    e.node.classList.add("apexcharts-series-collapsed");
              }
              r(n.globals.collapsedSeries),
                r(n.globals.ancillaryCollapsedSeries);
            },
          },
          {
            key: "toggleSeries",
            value: function (e) {
              var i = this.isSeriesHidden(e);
              return (
                this.ctx.legend.legendHelpers.toggleDataSeries(
                  i.realIndex,
                  i.isHidden
                ),
                i.isHidden
              );
            },
          },
          {
            key: "showSeries",
            value: function (e) {
              var i = this.isSeriesHidden(e);
              i.isHidden &&
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !0);
            },
          },
          {
            key: "hideSeries",
            value: function (e) {
              var i = this.isSeriesHidden(e);
              i.isHidden ||
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !1);
            },
          },
          {
            key: "resetSeries",
            value: function () {
              var e =
                  !(arguments.length > 0 && arguments[0] !== void 0) ||
                  arguments[0],
                i =
                  !(arguments.length > 1 && arguments[1] !== void 0) ||
                  arguments[1],
                n =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                r = this.w,
                o = L.clone(r.globals.initialSeries);
              (r.globals.previousPaths = []),
                n
                  ? ((r.globals.collapsedSeries = []),
                    (r.globals.ancillaryCollapsedSeries = []),
                    (r.globals.collapsedSeriesIndices = []),
                    (r.globals.ancillaryCollapsedSeriesIndices = []))
                  : (o = this.emptyCollapsedSeries(o)),
                (r.config.series = o),
                e &&
                  (i &&
                    ((r.globals.zoomed = !1),
                    this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                  this.ctx.updateHelpers._updateSeries(
                    o,
                    r.config.chart.animations.dynamicAnimation.enabled
                  ));
            },
          },
          {
            key: "emptyCollapsedSeries",
            value: function (e) {
              for (var i = this.w, n = 0; n < e.length; n++)
                i.globals.collapsedSeriesIndices.indexOf(n) > -1 &&
                  (e[n].data = []);
              return e;
            },
          },
          {
            key: "toggleSeriesOnHover",
            value: function (e, i) {
              var n = this.w;
              i || (i = e.target);
              var r = n.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series, .apexcharts-datalabels"
              );
              if (e.type === "mousemove") {
                var o = parseInt(i.getAttribute("rel"), 10) - 1,
                  l = null,
                  h = null;
                n.globals.axisCharts || n.config.chart.type === "radialBar"
                  ? n.globals.axisCharts
                    ? ((l = n.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(o, "']")
                      )),
                      (h = n.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabels[data\\:realIndex='".concat(
                          o,
                          "']"
                        )
                      )))
                    : (l = n.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(o + 1, "']")
                      ))
                  : (l = n.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[rel='".concat(o + 1, "'] path")
                    ));
                for (var d = 0; d < r.length; d++)
                  r[d].classList.add(this.legendInactiveClass);
                l !== null &&
                  (n.globals.axisCharts ||
                    l.parentNode.classList.remove(this.legendInactiveClass),
                  l.classList.remove(this.legendInactiveClass),
                  h !== null && h.classList.remove(this.legendInactiveClass));
              } else if (e.type === "mouseout")
                for (var g = 0; g < r.length; g++)
                  r[g].classList.remove(this.legendInactiveClass);
            },
          },
          {
            key: "highlightRangeInSeries",
            value: function (e, i) {
              var n = this,
                r = this.w,
                o = r.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-heatmap-rect"
                ),
                l = function (d) {
                  for (var g = 0; g < o.length; g++)
                    o[g].classList[d](n.legendInactiveClass);
                };
              if (e.type === "mousemove") {
                var h = parseInt(i.getAttribute("rel"), 10) - 1;
                l("add"),
                  (function (d) {
                    for (var g = 0; g < o.length; g++) {
                      var m = parseInt(o[g].getAttribute("val"), 10);
                      m >= d.from &&
                        m <= d.to &&
                        o[g].classList.remove(n.legendInactiveClass);
                    }
                  })(r.config.plotOptions.heatmap.colorScale.ranges[h]);
              } else e.type === "mouseout" && l("remove");
            },
          },
          {
            key: "getActiveConfigSeriesIndex",
            value: function () {
              var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : "asc",
                i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
                n = this.w,
                r = 0;
              if (n.config.series.length > 1) {
                for (
                  var o = n.config.series.map(function (h, d) {
                      return h.data &&
                        h.data.length > 0 &&
                        n.globals.collapsedSeriesIndices.indexOf(d) === -1 &&
                        (!n.globals.comboCharts ||
                          i.length === 0 ||
                          (i.length && i.indexOf(n.config.series[d].type) > -1))
                        ? d
                        : -1;
                    }),
                    l = e === "asc" ? 0 : o.length - 1;
                  e === "asc" ? l < o.length : l >= 0;
                  e === "asc" ? l++ : l--
                )
                  if (o[l] !== -1) {
                    r = o[l];
                    break;
                  }
              }
              return r;
            },
          },
          {
            key: "getBarSeriesIndices",
            value: function () {
              return this.w.globals.comboCharts
                ? this.w.config.series
                    .map(function (e, i) {
                      return e.type === "bar" || e.type === "column" ? i : -1;
                    })
                    .filter(function (e) {
                      return e !== -1;
                    })
                : this.w.config.series.map(function (e, i) {
                    return i;
                  });
            },
          },
          {
            key: "getPreviousPaths",
            value: function () {
              var e = this.w;
              function i(l, h, d) {
                for (
                  var g = l[h].childNodes,
                    m = {
                      type: d,
                      paths: [],
                      realIndex: l[h].getAttribute("data:realIndex"),
                    },
                    x = 0;
                  x < g.length;
                  x++
                )
                  if (g[x].hasAttribute("pathTo")) {
                    var v = g[x].getAttribute("pathTo");
                    m.paths.push({ d: v });
                  }
                e.globals.previousPaths.push(m);
              }
              (e.globals.previousPaths = []),
                [
                  "line",
                  "area",
                  "bar",
                  "rangebar",
                  "rangeArea",
                  "candlestick",
                  "radar",
                ].forEach(function (l) {
                  for (
                    var h,
                      d =
                        ((h = l),
                        e.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-".concat(h, "-series .apexcharts-series")
                        )),
                      g = 0;
                    g < d.length;
                    g++
                  )
                    i(d, g, l);
                }),
                this.handlePrevBubbleScatterPaths("bubble"),
                this.handlePrevBubbleScatterPaths("scatter");
              var n = e.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-".concat(
                  e.config.chart.type,
                  " .apexcharts-series"
                )
              );
              if (n.length > 0)
                for (
                  var r = function (l) {
                      for (
                        var h = e.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-"
                              .concat(
                                e.config.chart.type,
                                " .apexcharts-series[data\\:realIndex='"
                              )
                              .concat(l, "'] rect")
                          ),
                          d = [],
                          g = function (x) {
                            var v = function (C) {
                                return h[x].getAttribute(C);
                              },
                              w = {
                                x: parseFloat(v("x")),
                                y: parseFloat(v("y")),
                                width: parseFloat(v("width")),
                                height: parseFloat(v("height")),
                              };
                            d.push({
                              rect: w,
                              color: h[x].getAttribute("color"),
                            });
                          },
                          m = 0;
                        m < h.length;
                        m++
                      )
                        g(m);
                      e.globals.previousPaths.push(d);
                    },
                    o = 0;
                  o < n.length;
                  o++
                )
                  r(o);
              e.globals.axisCharts ||
                (e.globals.previousPaths = e.globals.series);
            },
          },
          {
            key: "handlePrevBubbleScatterPaths",
            value: function (e) {
              var i = this.w,
                n = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-".concat(e, "-series .apexcharts-series")
                );
              if (n.length > 0)
                for (var r = 0; r < n.length; r++) {
                  for (
                    var o = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-"
                          .concat(
                            e,
                            "-series .apexcharts-series[data\\:realIndex='"
                          )
                          .concat(r, "'] circle")
                      ),
                      l = [],
                      h = 0;
                    h < o.length;
                    h++
                  )
                    l.push({
                      x: o[h].getAttribute("cx"),
                      y: o[h].getAttribute("cy"),
                      r: o[h].getAttribute("r"),
                    });
                  i.globals.previousPaths.push(l);
                }
            },
          },
          {
            key: "clearPreviousPaths",
            value: function () {
              var e = this.w;
              (e.globals.previousPaths = []),
                (e.globals.allSeriesCollapsed = !1);
            },
          },
          {
            key: "handleNoData",
            value: function () {
              var e = this.w,
                i = e.config.noData,
                n = new X(this.ctx),
                r = e.globals.svgWidth / 2,
                o = e.globals.svgHeight / 2,
                l = "middle";
              if (
                ((e.globals.noData = !0),
                (e.globals.animationEnded = !0),
                i.align === "left"
                  ? ((r = 10), (l = "start"))
                  : i.align === "right" &&
                    ((r = e.globals.svgWidth - 10), (l = "end")),
                i.verticalAlign === "top"
                  ? (o = 50)
                  : i.verticalAlign === "bottom" &&
                    (o = e.globals.svgHeight - 50),
                (r += i.offsetX),
                (o = o + parseInt(i.style.fontSize, 10) + 2 + i.offsetY),
                i.text !== void 0 && i.text !== "")
              ) {
                var h = n.drawText({
                  x: r,
                  y: o,
                  text: i.text,
                  textAnchor: l,
                  fontSize: i.style.fontSize,
                  fontFamily: i.style.fontFamily,
                  foreColor: i.style.color,
                  opacity: 1,
                  class: "apexcharts-text-nodata",
                });
                e.globals.dom.Paper.add(h);
              }
            },
          },
          {
            key: "setNullSeriesToZeroValues",
            value: function (e) {
              for (var i = this.w, n = 0; n < e.length; n++)
                if (e[n].length === 0)
                  for (
                    var r = 0;
                    r < e[i.globals.maxValsInArrayIndex].length;
                    r++
                  )
                    e[n].push(0);
              return e;
            },
          },
          {
            key: "hasAllSeriesEqualX",
            value: function () {
              for (
                var e = !0, i = this.w, n = this.filteredSeriesX(), r = 0;
                r < n.length - 1;
                r++
              )
                if (n[r][0] !== n[r + 1][0]) {
                  e = !1;
                  break;
                }
              return (i.globals.allSeriesHasEqualX = e), e;
            },
          },
          {
            key: "filteredSeriesX",
            value: function () {
              var e = this.w.globals.seriesX.map(function (i) {
                return i.length > 0 ? i : [];
              });
              return e;
            },
          },
        ]),
        T
      );
    })(),
    pt = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.twoDSeries = []),
          (this.threeDSeries = []),
          (this.twoDSeriesX = []),
          (this.seriesGoals = []),
          (this.coreUtils = new W(this.ctx));
      }
      return (
        S(T, [
          {
            key: "isMultiFormat",
            value: function () {
              return this.isFormatXY() || this.isFormat2DArray();
            },
          },
          {
            key: "isFormatXY",
            value: function () {
              var e = this.w.config.series.slice(),
                i = new je(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                e[this.activeSeriesIndex].data !== void 0 &&
                  e[this.activeSeriesIndex].data.length > 0 &&
                  e[this.activeSeriesIndex].data[0] !== null &&
                  e[this.activeSeriesIndex].data[0].x !== void 0 &&
                  e[this.activeSeriesIndex].data[0] !== null)
              )
                return !0;
            },
          },
          {
            key: "isFormat2DArray",
            value: function () {
              var e = this.w.config.series.slice(),
                i = new je(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                e[this.activeSeriesIndex].data !== void 0 &&
                  e[this.activeSeriesIndex].data.length > 0 &&
                  e[this.activeSeriesIndex].data[0] !== void 0 &&
                  e[this.activeSeriesIndex].data[0] !== null &&
                  e[this.activeSeriesIndex].data[0].constructor === Array)
              )
                return !0;
            },
          },
          {
            key: "handleFormat2DArray",
            value: function (e, i) {
              for (
                var n = this.w.config,
                  r = this.w.globals,
                  o =
                    n.chart.type === "boxPlot" ||
                    n.series[i].type === "boxPlot",
                  l = 0;
                l < e[i].data.length;
                l++
              )
                if (
                  (e[i].data[l][1] !== void 0 &&
                    (Array.isArray(e[i].data[l][1]) &&
                    e[i].data[l][1].length === 4 &&
                    !o
                      ? this.twoDSeries.push(L.parseNumber(e[i].data[l][1][3]))
                      : e[i].data[l].length >= 5
                      ? this.twoDSeries.push(L.parseNumber(e[i].data[l][4]))
                      : this.twoDSeries.push(L.parseNumber(e[i].data[l][1])),
                    (r.dataFormatXNumeric = !0)),
                  n.xaxis.type === "datetime")
                ) {
                  var h = new Date(e[i].data[l][0]);
                  (h = new Date(h).getTime()), this.twoDSeriesX.push(h);
                } else this.twoDSeriesX.push(e[i].data[l][0]);
              for (var d = 0; d < e[i].data.length; d++)
                e[i].data[d][2] !== void 0 &&
                  (this.threeDSeries.push(e[i].data[d][2]), (r.isDataXYZ = !0));
            },
          },
          {
            key: "handleFormatXY",
            value: function (e, i) {
              var n = this.w.config,
                r = this.w.globals,
                o = new ie(this.ctx),
                l = i;
              r.collapsedSeriesIndices.indexOf(i) > -1 &&
                (l = this.activeSeriesIndex);
              for (var h = 0; h < e[i].data.length; h++)
                e[i].data[h].y !== void 0 &&
                  (Array.isArray(e[i].data[h].y)
                    ? this.twoDSeries.push(
                        L.parseNumber(e[i].data[h].y[e[i].data[h].y.length - 1])
                      )
                    : this.twoDSeries.push(L.parseNumber(e[i].data[h].y))),
                  e[i].data[h].goals !== void 0 &&
                  Array.isArray(e[i].data[h].goals)
                    ? (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(e[i].data[h].goals))
                    : (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(null));
              for (var d = 0; d < e[l].data.length; d++) {
                var g = typeof e[l].data[d].x == "string",
                  m = Array.isArray(e[l].data[d].x),
                  x = !m && !!o.isValidDate(e[l].data[d].x.toString());
                if (g || x)
                  if (g || n.xaxis.convertedCatToNumeric) {
                    var v = r.isBarHorizontal && r.isRangeData;
                    n.xaxis.type !== "datetime" || v
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(e[l].data[d].x))
                      : this.twoDSeriesX.push(o.parseDate(e[l].data[d].x));
                  } else
                    n.xaxis.type === "datetime"
                      ? this.twoDSeriesX.push(
                          o.parseDate(e[l].data[d].x.toString())
                        )
                      : ((r.dataFormatXNumeric = !0),
                        (r.isXNumeric = !0),
                        this.twoDSeriesX.push(parseFloat(e[l].data[d].x)));
                else
                  m
                    ? ((this.fallbackToCategory = !0),
                      this.twoDSeriesX.push(e[l].data[d].x))
                    : ((r.isXNumeric = !0),
                      (r.dataFormatXNumeric = !0),
                      this.twoDSeriesX.push(e[l].data[d].x));
              }
              if (e[i].data[0] && e[i].data[0].z !== void 0) {
                for (var w = 0; w < e[i].data.length; w++)
                  this.threeDSeries.push(e[i].data[w].z);
                r.isDataXYZ = !0;
              }
            },
          },
          {
            key: "handleRangeData",
            value: function (e, i) {
              var n = this.w.globals,
                r = {};
              return (
                this.isFormat2DArray()
                  ? (r = this.handleRangeDataFormat("array", e, i))
                  : this.isFormatXY() &&
                    (r = this.handleRangeDataFormat("xy", e, i)),
                n.seriesRangeStart.push(r.start),
                n.seriesRangeEnd.push(r.end),
                n.seriesRange.push(r.rangeUniques),
                n.seriesRange.forEach(function (o, l) {
                  o &&
                    o.forEach(function (h, d) {
                      h.y.forEach(function (g, m) {
                        for (var x = 0; x < h.y.length; x++)
                          if (m !== x) {
                            var v = g.y1,
                              w = g.y2,
                              C = h.y[x].y1;
                            v <= h.y[x].y2 &&
                              C <= w &&
                              (h.overlaps.indexOf(g.rangeName) < 0 &&
                                h.overlaps.push(g.rangeName),
                              h.overlaps.indexOf(h.y[x].rangeName) < 0 &&
                                h.overlaps.push(h.y[x].rangeName));
                          }
                      });
                    });
                }),
                r
              );
            },
          },
          {
            key: "handleCandleStickBoxData",
            value: function (e, i) {
              var n = this.w.globals,
                r = {};
              return (
                this.isFormat2DArray()
                  ? (r = this.handleCandleStickBoxDataFormat("array", e, i))
                  : this.isFormatXY() &&
                    (r = this.handleCandleStickBoxDataFormat("xy", e, i)),
                (n.seriesCandleO[i] = r.o),
                (n.seriesCandleH[i] = r.h),
                (n.seriesCandleM[i] = r.m),
                (n.seriesCandleL[i] = r.l),
                (n.seriesCandleC[i] = r.c),
                r
              );
            },
          },
          {
            key: "handleRangeDataFormat",
            value: function (e, i, n) {
              var r = [],
                o = [],
                l = i[n].data
                  .filter(function (m, x, v) {
                    return (
                      x ===
                      v.findIndex(function (w) {
                        return w.x === m.x;
                      })
                    );
                  })
                  .map(function (m, x) {
                    return { x: m.x, overlaps: [], y: [] };
                  });
              if (e === "array")
                for (var h = 0; h < i[n].data.length; h++)
                  Array.isArray(i[n].data[h])
                    ? (r.push(i[n].data[h][1][0]), o.push(i[n].data[h][1][1]))
                    : (r.push(i[n].data[h]), o.push(i[n].data[h]));
              else if (e === "xy")
                for (
                  var d = function (m) {
                      var x = Array.isArray(i[n].data[m].y),
                        v = L.randomId(),
                        w = i[n].data[m].x,
                        C = {
                          y1: x ? i[n].data[m].y[0] : i[n].data[m].y,
                          y2: x ? i[n].data[m].y[1] : i[n].data[m].y,
                          rangeName: v,
                        };
                      i[n].data[m].rangeName = v;
                      var P = l.findIndex(function (M) {
                        return M.x === w;
                      });
                      l[P].y.push(C), r.push(C.y1), o.push(C.y2);
                    },
                    g = 0;
                  g < i[n].data.length;
                  g++
                )
                  d(g);
              return { start: r, end: o, rangeUniques: l };
            },
          },
          {
            key: "handleCandleStickBoxDataFormat",
            value: function (e, i, n) {
              var r = this.w,
                o =
                  r.config.chart.type === "boxPlot" ||
                  r.config.series[n].type === "boxPlot",
                l = [],
                h = [],
                d = [],
                g = [],
                m = [];
              if (e === "array")
                if (
                  (o && i[n].data[0].length === 6) ||
                  (!o && i[n].data[0].length === 5)
                )
                  for (var x = 0; x < i[n].data.length; x++)
                    l.push(i[n].data[x][1]),
                      h.push(i[n].data[x][2]),
                      o
                        ? (d.push(i[n].data[x][3]),
                          g.push(i[n].data[x][4]),
                          m.push(i[n].data[x][5]))
                        : (g.push(i[n].data[x][3]), m.push(i[n].data[x][4]));
                else
                  for (var v = 0; v < i[n].data.length; v++)
                    Array.isArray(i[n].data[v][1]) &&
                      (l.push(i[n].data[v][1][0]),
                      h.push(i[n].data[v][1][1]),
                      o
                        ? (d.push(i[n].data[v][1][2]),
                          g.push(i[n].data[v][1][3]),
                          m.push(i[n].data[v][1][4]))
                        : (g.push(i[n].data[v][1][2]),
                          m.push(i[n].data[v][1][3])));
              else if (e === "xy")
                for (var w = 0; w < i[n].data.length; w++)
                  Array.isArray(i[n].data[w].y) &&
                    (l.push(i[n].data[w].y[0]),
                    h.push(i[n].data[w].y[1]),
                    o
                      ? (d.push(i[n].data[w].y[2]),
                        g.push(i[n].data[w].y[3]),
                        m.push(i[n].data[w].y[4]))
                      : (g.push(i[n].data[w].y[2]), m.push(i[n].data[w].y[3])));
              return { o: l, h, m: d, l: g, c: m };
            },
          },
          {
            key: "parseDataAxisCharts",
            value: function (e) {
              var i,
                n = this,
                r =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : this.ctx,
                o = this.w.config,
                l = this.w.globals,
                h = new ie(r),
                d =
                  o.labels.length > 0
                    ? o.labels.slice()
                    : o.xaxis.categories.slice();
              if (
                ((l.isRangeBar =
                  o.chart.type === "rangeBar" && l.isBarHorizontal),
                (l.hasXaxisGroups =
                  o.xaxis.type === "category" &&
                  o.xaxis.group.groups.length > 0),
                l.hasXaxisGroups && (l.groups = o.xaxis.group.groups),
                (l.hasSeriesGroups =
                  (i = e[0]) === null || i === void 0 ? void 0 : i.group),
                l.hasSeriesGroups)
              ) {
                var g = [],
                  m = K(
                    new Set(
                      e.map(function (C) {
                        return C.group;
                      })
                    )
                  );
                e.forEach(function (C, P) {
                  var M = m.indexOf(C.group);
                  g[M] || (g[M] = []), g[M].push(C.name);
                }),
                  (l.seriesGroups = g);
              }
              for (
                var x = function () {
                    for (var C = 0; C < d.length; C++)
                      if (typeof d[C] == "string") {
                        if (!h.isValidDate(d[C]))
                          throw new Error(
                            "You have provided invalid Date format. Please provide a valid JavaScript Date"
                          );
                        n.twoDSeriesX.push(h.parseDate(d[C]));
                      } else n.twoDSeriesX.push(d[C]);
                  },
                  v = 0;
                v < e.length;
                v++
              ) {
                if (
                  ((this.twoDSeries = []),
                  (this.twoDSeriesX = []),
                  (this.threeDSeries = []),
                  e[v].data === void 0)
                )
                  return void console.error(
                    "It is a possibility that you may have not included 'data' property in series."
                  );
                if (
                  ((o.chart.type !== "rangeBar" &&
                    o.chart.type !== "rangeArea" &&
                    e[v].type !== "rangeBar" &&
                    e[v].type !== "rangeArea") ||
                    ((l.isRangeData = !0),
                    l.isComboCharts
                      ? (e[v].type !== "rangeBar" &&
                          e[v].type !== "rangeArea") ||
                        this.handleRangeData(e, v)
                      : (o.chart.type !== "rangeBar" &&
                          o.chart.type !== "rangeArea") ||
                        this.handleRangeData(e, v)),
                  this.isMultiFormat())
                )
                  this.isFormat2DArray()
                    ? this.handleFormat2DArray(e, v)
                    : this.isFormatXY() && this.handleFormatXY(e, v),
                    (o.chart.type !== "candlestick" &&
                      e[v].type !== "candlestick" &&
                      o.chart.type !== "boxPlot" &&
                      e[v].type !== "boxPlot") ||
                      this.handleCandleStickBoxData(e, v),
                    l.series.push(this.twoDSeries),
                    l.labels.push(this.twoDSeriesX),
                    l.seriesX.push(this.twoDSeriesX),
                    (l.seriesGoals = this.seriesGoals),
                    v !== this.activeSeriesIndex ||
                      this.fallbackToCategory ||
                      (l.isXNumeric = !0);
                else {
                  o.xaxis.type === "datetime"
                    ? ((l.isXNumeric = !0),
                      x(),
                      l.seriesX.push(this.twoDSeriesX))
                    : o.xaxis.type === "numeric" &&
                      ((l.isXNumeric = !0),
                      d.length > 0 &&
                        ((this.twoDSeriesX = d),
                        l.seriesX.push(this.twoDSeriesX))),
                    l.labels.push(this.twoDSeriesX);
                  var w = e[v].data.map(function (C) {
                    return L.parseNumber(C);
                  });
                  l.series.push(w);
                }
                l.seriesZ.push(this.threeDSeries),
                  e[v].name !== void 0
                    ? l.seriesNames.push(e[v].name)
                    : l.seriesNames.push("series-" + parseInt(v + 1, 10)),
                  e[v].color !== void 0
                    ? l.seriesColors.push(e[v].color)
                    : l.seriesColors.push(void 0);
              }
              return this.w;
            },
          },
          {
            key: "parseDataNonAxisCharts",
            value: function (e) {
              var i = this.w.globals,
                n = this.w.config;
              (i.series = e.slice()), (i.seriesNames = n.labels.slice());
              for (var r = 0; r < i.series.length; r++)
                i.seriesNames[r] === void 0 &&
                  i.seriesNames.push("series-" + (r + 1));
              return this.w;
            },
          },
          {
            key: "handleExternalLabelsData",
            value: function (e) {
              var i = this.w.config,
                n = this.w.globals;
              i.xaxis.categories.length > 0
                ? (n.labels = i.xaxis.categories)
                : i.labels.length > 0
                ? (n.labels = i.labels.slice())
                : this.fallbackToCategory
                ? ((n.labels = n.labels[0]),
                  n.seriesRange.length &&
                    (n.seriesRange.map(function (r) {
                      r.forEach(function (o) {
                        n.labels.indexOf(o.x) < 0 && o.x && n.labels.push(o.x);
                      });
                    }),
                    (n.labels = Array.from(
                      new Set(n.labels.map(JSON.stringify)),
                      JSON.parse
                    ))),
                  i.xaxis.convertedCatToNumeric &&
                    (new ue(i).convertCatToNumericXaxis(
                      i,
                      this.ctx,
                      n.seriesX[0]
                    ),
                    this._generateExternalLabels(e)))
                : this._generateExternalLabels(e);
            },
          },
          {
            key: "_generateExternalLabels",
            value: function (e) {
              var i = this.w.globals,
                n = this.w.config,
                r = [];
              if (i.axisCharts) {
                if (i.series.length > 0)
                  if (this.isFormatXY())
                    for (
                      var o = n.series.map(function (x, v) {
                          return x.data.filter(function (w, C, P) {
                            return (
                              P.findIndex(function (M) {
                                return M.x === w.x;
                              }) === C
                            );
                          });
                        }),
                        l = o.reduce(function (x, v, w, C) {
                          return C[x].length > v.length ? x : w;
                        }, 0),
                        h = 0;
                      h < o[l].length;
                      h++
                    )
                      r.push(h + 1);
                  else
                    for (
                      var d = 0;
                      d < i.series[i.maxValsInArrayIndex].length;
                      d++
                    )
                      r.push(d + 1);
                i.seriesX = [];
                for (var g = 0; g < e.length; g++) i.seriesX.push(r);
                this.w.globals.isBarHorizontal || (i.isXNumeric = !0);
              }
              if (r.length === 0) {
                r = i.axisCharts
                  ? []
                  : i.series.map(function (x, v) {
                      return v + 1;
                    });
                for (var m = 0; m < e.length; m++) i.seriesX.push(r);
              }
              (i.labels = r),
                n.xaxis.convertedCatToNumeric &&
                  (i.categoryLabels = r.map(function (x) {
                    return n.xaxis.labels.formatter(x);
                  })),
                (i.noLabelsProvided = !0);
            },
          },
          {
            key: "parseData",
            value: function (e) {
              var i = this.w,
                n = i.config,
                r = i.globals;
              if (
                (this.excludeCollapsedSeriesInYAxis(),
                (this.fallbackToCategory = !1),
                this.ctx.core.resetGlobals(),
                this.ctx.core.isMultipleY(),
                r.axisCharts
                  ? (this.parseDataAxisCharts(e),
                    this.coreUtils.getLargestSeries())
                  : this.parseDataNonAxisCharts(e),
                n.chart.stacked)
              ) {
                var o = new je(this.ctx);
                r.series = o.setNullSeriesToZeroValues(r.series);
              }
              this.coreUtils.getSeriesTotals(),
                r.axisCharts &&
                  (r.stackedSeriesTotals =
                    this.coreUtils.getStackedSeriesTotals()),
                this.coreUtils.getPercentSeries(),
                r.dataFormatXNumeric ||
                  (r.isXNumeric &&
                    (n.xaxis.type !== "numeric" ||
                      n.labels.length !== 0 ||
                      n.xaxis.categories.length !== 0)) ||
                  this.handleExternalLabelsData(e);
              for (
                var l = this.coreUtils.getCategoryLabels(r.labels), h = 0;
                h < l.length;
                h++
              )
                if (Array.isArray(l[h])) {
                  r.isMultiLineX = !0;
                  break;
                }
            },
          },
          {
            key: "excludeCollapsedSeriesInYAxis",
            value: function () {
              var e = this,
                i = this.w;
              i.globals.ignoreYAxisIndexes = i.globals.collapsedSeries.map(
                function (n, r) {
                  if (e.w.globals.isMultipleYAxis && !i.config.chart.stacked)
                    return n.index;
                }
              );
            },
          },
        ]),
        T
      );
    })(),
    Ze = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "getLabel",
            value: function (e, i, n, r) {
              var o =
                  arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : [],
                l =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : "12px",
                h =
                  !(arguments.length > 6 && arguments[6] !== void 0) ||
                  arguments[6],
                d = this.w,
                g = e[r] === void 0 ? "" : e[r],
                m = g,
                x = d.globals.xLabelFormatter,
                v = d.config.xaxis.labels.formatter,
                w = !1,
                C = new ke(this.ctx),
                P = g;
              h &&
                ((m = C.xLabelFormat(x, g, P, {
                  i: r,
                  dateFormatter: new ie(this.ctx).formatDate,
                  w: d,
                })),
                v !== void 0 &&
                  (m = v(g, e[r], {
                    i: r,
                    dateFormatter: new ie(this.ctx).formatDate,
                    w: d,
                  })));
              var M, I;
              i.length > 0
                ? ((M = i[r].unit),
                  (I = null),
                  i.forEach(function (A) {
                    A.unit === "month"
                      ? (I = "year")
                      : A.unit === "day"
                      ? (I = "month")
                      : A.unit === "hour"
                      ? (I = "day")
                      : A.unit === "minute" && (I = "hour");
                  }),
                  (w = I === M),
                  (n = i[r].position),
                  (m = i[r].value))
                : d.config.xaxis.type === "datetime" &&
                  v === void 0 &&
                  (m = ""),
                m === void 0 && (m = ""),
                (m = Array.isArray(m) ? m : m.toString());
              var D = new X(this.ctx),
                f = {};
              f =
                d.globals.rotateXLabels && h
                  ? D.getTextRects(
                      m,
                      parseInt(l, 10),
                      null,
                      "rotate(".concat(d.config.xaxis.labels.rotate, " 0 0)"),
                      !1
                    )
                  : D.getTextRects(m, parseInt(l, 10));
              var y =
                !d.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
              return (
                !Array.isArray(m) &&
                  (m.indexOf("NaN") === 0 ||
                    m.toLowerCase().indexOf("invalid") === 0 ||
                    m.toLowerCase().indexOf("infinity") >= 0 ||
                    (o.indexOf(m) >= 0 && y)) &&
                  (m = ""),
                { x: n, text: m, textRect: f, isBold: w }
              );
            },
          },
          {
            key: "checkLabelBasedOnTickamount",
            value: function (e, i, n) {
              var r = this.w,
                o = r.config.xaxis.tickAmount;
              return (
                o === "dataPoints" &&
                  (o = Math.round(r.globals.gridWidth / 120)),
                o > n || e % Math.round(n / (o + 1)) == 0 || (i.text = ""),
                i
              );
            },
          },
          {
            key: "checkForOverflowingLabels",
            value: function (e, i, n, r, o) {
              var l = this.w;
              if (
                (e === 0 && l.globals.skipFirstTimelinelabel && (i.text = ""),
                e === n - 1 && l.globals.skipLastTimelinelabel && (i.text = ""),
                l.config.xaxis.labels.hideOverlappingLabels && r.length > 0)
              ) {
                var h = o[o.length - 1];
                i.x <
                  h.textRect.width /
                    (l.globals.rotateXLabels
                      ? Math.abs(l.config.xaxis.labels.rotate) / 12
                      : 1.01) +
                    h.x && (i.text = "");
              }
              return i;
            },
          },
          {
            key: "checkForReversedLabels",
            value: function (e, i) {
              var n = this.w;
              return (
                n.config.yaxis[e] && n.config.yaxis[e].reversed && i.reverse(),
                i
              );
            },
          },
          {
            key: "isYAxisHidden",
            value: function (e) {
              var i = this.w,
                n = new W(this.ctx);
              return (
                !i.config.yaxis[e].show ||
                (!i.config.yaxis[e].showForNullSeries &&
                  n.isSeriesNull(e) &&
                  i.globals.collapsedSeriesIndices.indexOf(e) === -1)
              );
            },
          },
          {
            key: "getYAxisForeColor",
            value: function (e, i) {
              var n = this.w;
              return (
                Array.isArray(e) &&
                  n.globals.yAxisScale[i] &&
                  this.ctx.theme.pushExtraColors(
                    e,
                    n.globals.yAxisScale[i].result.length,
                    !1
                  ),
                e
              );
            },
          },
          {
            key: "drawYAxisTicks",
            value: function (e, i, n, r, o, l, h) {
              var d = this.w,
                g = new X(this.ctx),
                m = d.globals.translateY;
              if (r.show && i > 0) {
                d.config.yaxis[o].opposite === !0 && (e += r.width);
                for (var x = i; x >= 0; x--) {
                  var v = m + i / 10 + d.config.yaxis[o].labels.offsetY - 1;
                  d.globals.isBarHorizontal && (v = l * x),
                    d.config.chart.type === "heatmap" && (v += l / 2);
                  var w = g.drawLine(
                    e + n.offsetX - r.width + r.offsetX,
                    v + r.offsetY,
                    e + n.offsetX + r.offsetX,
                    v + r.offsetY,
                    r.color
                  );
                  h.add(w), (m += l);
                }
              }
            },
          },
        ]),
        T
      );
    })(),
    Ot = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "scaleSvgNode",
            value: function (e, i) {
              var n = parseFloat(e.getAttributeNS(null, "width")),
                r = parseFloat(e.getAttributeNS(null, "height"));
              e.setAttributeNS(null, "width", n * i),
                e.setAttributeNS(null, "height", r * i),
                e.setAttributeNS(null, "viewBox", "0 0 " + n + " " + r);
            },
          },
          {
            key: "fixSvgStringForIe11",
            value: function (e) {
              if (!L.isIE11()) return e.replace(/&nbsp;/g, "&#160;");
              var i = 0,
                n = e.replace(
                  /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                  function (r) {
                    return ++i === 2
                      ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                      : r;
                  }
                );
              return (n = (n = n.replace(/xmlns:NS\d+=""/g, "")).replace(
                /NS\d+:(\w+:\w+=")/g,
                "$1"
              ));
            },
          },
          {
            key: "getSvgString",
            value: function (e) {
              e == null && (e = 1);
              var i = this.w.globals.dom.Paper.svg();
              if (e !== 1) {
                var n = this.w.globals.dom.Paper.node.cloneNode(!0);
                this.scaleSvgNode(n, e),
                  (i = new XMLSerializer().serializeToString(n));
              }
              return this.fixSvgStringForIe11(i);
            },
          },
          {
            key: "cleanup",
            value: function () {
              var e = this.w,
                i = e.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-xcrosshairs"
                ),
                n = e.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-ycrosshairs"
                ),
                r = e.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-zoom-rect, .apexcharts-selection-rect"
                );
              Array.prototype.forEach.call(r, function (o) {
                o.setAttribute("width", 0);
              }),
                i &&
                  i[0] &&
                  (i[0].setAttribute("x", -500),
                  i[0].setAttribute("x1", -500),
                  i[0].setAttribute("x2", -500)),
                n &&
                  n[0] &&
                  (n[0].setAttribute("y", -100),
                  n[0].setAttribute("y1", -100),
                  n[0].setAttribute("y2", -100));
            },
          },
          {
            key: "svgUrl",
            value: function () {
              this.cleanup();
              var e = this.getSvgString(),
                i = new Blob([e], { type: "image/svg+xml;charset=utf-8" });
              return URL.createObjectURL(i);
            },
          },
          {
            key: "dataURI",
            value: function (e) {
              var i = this;
              return new Promise(function (n) {
                var r = i.w,
                  o = e ? e.scale || e.width / r.globals.svgWidth : 1;
                i.cleanup();
                var l = document.createElement("canvas");
                (l.width = r.globals.svgWidth * o),
                  (l.height =
                    parseInt(r.globals.dom.elWrap.style.height, 10) * o);
                var h =
                    r.config.chart.background === "transparent"
                      ? "#fff"
                      : r.config.chart.background,
                  d = l.getContext("2d");
                (d.fillStyle = h), d.fillRect(0, 0, l.width * o, l.height * o);
                var g = i.getSvgString(o);
                if (window.canvg && L.isIE11()) {
                  var m = window.canvg.Canvg.fromString(d, g, {
                    ignoreClear: !0,
                    ignoreDimensions: !0,
                  });
                  m.start();
                  var x = l.msToBlob();
                  m.stop(), n({ blob: x });
                } else {
                  var v = "data:image/svg+xml," + encodeURIComponent(g),
                    w = new Image();
                  (w.crossOrigin = "anonymous"),
                    (w.onload = function () {
                      if ((d.drawImage(w, 0, 0), l.msToBlob)) {
                        var C = l.msToBlob();
                        n({ blob: C });
                      } else {
                        var P = l.toDataURL("image/png");
                        n({ imgURI: P });
                      }
                    }),
                    (w.src = v);
                }
              });
            },
          },
          {
            key: "exportToSVG",
            value: function () {
              this.triggerDownload(
                this.svgUrl(),
                this.w.config.chart.toolbar.export.svg.filename,
                ".svg"
              );
            },
          },
          {
            key: "exportToPng",
            value: function () {
              var e = this;
              this.dataURI().then(function (i) {
                var n = i.imgURI,
                  r = i.blob;
                r
                  ? navigator.msSaveOrOpenBlob(r, e.w.globals.chartID + ".png")
                  : e.triggerDownload(
                      n,
                      e.w.config.chart.toolbar.export.png.filename,
                      ".png"
                    );
              });
            },
          },
          {
            key: "exportToCSV",
            value: function (e) {
              var i = this,
                n = e.series,
                r = e.fileName,
                o = e.columnDelimiter,
                l = o === void 0 ? "," : o,
                h = e.lineDelimiter,
                d =
                  h === void 0
                    ? `
`
                    : h,
                g = this.w;
              n || (n = g.config.series);
              var m = [],
                x = [],
                v = "",
                w = g.globals.series.map(function (f, y) {
                  return g.globals.collapsedSeriesIndices.indexOf(y) === -1
                    ? f
                    : [];
                }),
                C = Math.max.apply(
                  Math,
                  K(
                    n.map(function (f) {
                      return f.data ? f.data.length : 0;
                    })
                  )
                ),
                P = new pt(this.ctx),
                M = new Ze(this.ctx),
                I = function (f) {
                  var y = "";
                  if (g.globals.axisCharts) {
                    if (
                      g.config.xaxis.type === "category" ||
                      g.config.xaxis.convertedCatToNumeric
                    )
                      if (g.globals.isBarHorizontal) {
                        var A = g.globals.yLabelFormatters[0],
                          _ = new je(i.ctx).getActiveConfigSeriesIndex();
                        y = A(g.globals.labels[f], {
                          seriesIndex: _,
                          dataPointIndex: f,
                          w: g,
                        });
                      } else
                        y = M.getLabel(
                          g.globals.labels,
                          g.globals.timescaleLabels,
                          0,
                          f
                        ).text;
                    g.config.xaxis.type === "datetime" &&
                      (g.config.xaxis.categories.length
                        ? (y = g.config.xaxis.categories[f])
                        : g.config.labels.length && (y = g.config.labels[f]));
                  } else y = g.config.labels[f];
                  return (
                    Array.isArray(y) && (y = y.join(" ")),
                    L.isNumber(y) ? y : y.split(l).join("")
                  );
                },
                D = function (f, y) {
                  if ((m.length && y === 0 && x.push(m.join(l)), f.data)) {
                    f.data =
                      (f.data.length && f.data) ||
                      K(Array(C)).map(function () {
                        return "";
                      });
                    for (var A = 0; A < f.data.length; A++) {
                      m = [];
                      var _ = I(A);
                      if (
                        (_ ||
                          (P.isFormatXY()
                            ? (_ = n[y].data[A].x)
                            : P.isFormat2DArray() &&
                              (_ = n[y].data[A] ? n[y].data[A][0] : "")),
                        y === 0)
                      ) {
                        m.push(
                          (($ = _),
                          g.config.xaxis.type === "datetime" &&
                          String($).length >= 10
                            ? g.config.chart.toolbar.export.csv.dateFormatter(_)
                            : L.isNumber(_)
                            ? _
                            : _.split(l).join(""))
                        );
                        for (var z = 0; z < g.globals.series.length; z++) {
                          var B;
                          P.isFormatXY()
                            ? m.push(
                                (B = n[z].data[A]) === null || B === void 0
                                  ? void 0
                                  : B.y
                              )
                            : m.push(w[z][A]);
                        }
                      }
                      (g.config.chart.type === "candlestick" ||
                        (f.type && f.type === "candlestick")) &&
                        (m.pop(),
                        m.push(g.globals.seriesCandleO[y][A]),
                        m.push(g.globals.seriesCandleH[y][A]),
                        m.push(g.globals.seriesCandleL[y][A]),
                        m.push(g.globals.seriesCandleC[y][A])),
                        (g.config.chart.type === "boxPlot" ||
                          (f.type && f.type === "boxPlot")) &&
                          (m.pop(),
                          m.push(g.globals.seriesCandleO[y][A]),
                          m.push(g.globals.seriesCandleH[y][A]),
                          m.push(g.globals.seriesCandleM[y][A]),
                          m.push(g.globals.seriesCandleL[y][A]),
                          m.push(g.globals.seriesCandleC[y][A])),
                        g.config.chart.type === "rangeBar" &&
                          (m.pop(),
                          m.push(g.globals.seriesRangeStart[y][A]),
                          m.push(g.globals.seriesRangeEnd[y][A])),
                        m.length && x.push(m.join(l));
                    }
                  }
                  var $;
                };
              m.push(g.config.chart.toolbar.export.csv.headerCategory),
                g.config.chart.type === "boxPlot"
                  ? (m.push("minimum"),
                    m.push("q1"),
                    m.push("median"),
                    m.push("q3"),
                    m.push("maximum"))
                  : g.config.chart.type === "candlestick"
                  ? (m.push("open"),
                    m.push("high"),
                    m.push("low"),
                    m.push("close"))
                  : g.config.chart.type === "rangeBar"
                  ? (m.push("minimum"), m.push("maximum"))
                  : n.map(function (f, y) {
                      var A = (f.name ? f.name : "series-".concat(y)) + "";
                      g.globals.axisCharts &&
                        m.push(
                          A.split(l).join("")
                            ? A.split(l).join("")
                            : "series-".concat(y)
                        );
                    }),
                g.globals.axisCharts ||
                  (m.push(g.config.chart.toolbar.export.csv.headerValue),
                  x.push(m.join(l))),
                n.map(function (f, y) {
                  g.globals.axisCharts
                    ? D(f, y)
                    : ((m = []).push(g.globals.labels[y].split(l).join("")),
                      m.push(w[y]),
                      x.push(m.join(l)));
                }),
                (v += x.join(d)),
                this.triggerDownload(
                  "data:text/csv; charset=utf-8," +
                    encodeURIComponent("\uFEFF" + v),
                  r || g.config.chart.toolbar.export.csv.filename,
                  ".csv"
                );
            },
          },
          {
            key: "triggerDownload",
            value: function (e, i, n) {
              var r = document.createElement("a");
              (r.href = e),
                (r.download = (i || this.w.globals.chartID) + n),
                document.body.appendChild(r),
                r.click(),
                document.body.removeChild(r);
            },
          },
        ]),
        T
      );
    })(),
    Tt = (function () {
      function T(e, i) {
        p(this, T), (this.ctx = e), (this.elgrid = i), (this.w = e.w);
        var n = this.w;
        (this.axesUtils = new Ze(e)),
          (this.xaxisLabels = n.globals.labels.slice()),
          n.globals.timescaleLabels.length > 0 &&
            !n.globals.isBarHorizontal &&
            (this.xaxisLabels = n.globals.timescaleLabels.slice()),
          n.config.xaxis.overwriteCategories &&
            (this.xaxisLabels = n.config.xaxis.overwriteCategories),
          (this.drawnLabels = []),
          (this.drawnLabelsRects = []),
          n.config.xaxis.position === "top"
            ? (this.offY = 0)
            : (this.offY = n.globals.gridHeight + 1),
          (this.offY = this.offY + n.config.xaxis.axisBorder.offsetY),
          (this.isCategoryBarHorizontal =
            n.config.chart.type === "bar" &&
            n.config.plotOptions.bar.horizontal),
          (this.xaxisFontSize = n.config.xaxis.labels.style.fontSize),
          (this.xaxisFontFamily = n.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = n.config.xaxis.labels.style.colors),
          (this.xaxisBorderWidth = n.config.xaxis.axisBorder.width),
          this.isCategoryBarHorizontal &&
            (this.xaxisBorderWidth =
              n.config.yaxis[0].axisBorder.width.toString()),
          this.xaxisBorderWidth.indexOf("%") > -1
            ? (this.xaxisBorderWidth =
                (n.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                100)
            : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
          (this.xaxisBorderHeight = n.config.xaxis.axisBorder.height),
          (this.yaxis = n.config.yaxis[0]);
      }
      return (
        S(T, [
          {
            key: "drawXaxis",
            value: function () {
              var e = this.w,
                i = new X(this.ctx),
                n = i.group({
                  class: "apexcharts-xaxis",
                  transform: "translate("
                    .concat(e.config.xaxis.offsetX, ", ")
                    .concat(e.config.xaxis.offsetY, ")"),
                }),
                r = i.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(e.globals.translateXAxisX, ", ")
                    .concat(e.globals.translateXAxisY, ")"),
                });
              n.add(r);
              for (var o = [], l = 0; l < this.xaxisLabels.length; l++)
                o.push(this.xaxisLabels[l]);
              if (
                (this.drawXAxisLabelAndGroup(
                  !0,
                  i,
                  r,
                  o,
                  e.globals.isXNumeric,
                  function (C, P) {
                    return P;
                  }
                ),
                e.globals.hasXaxisGroups)
              ) {
                var h = e.globals.groups;
                o = [];
                for (var d = 0; d < h.length; d++) o.push(h[d].title);
                var g = {};
                e.config.xaxis.group.style &&
                  ((g.xaxisFontSize = e.config.xaxis.group.style.fontSize),
                  (g.xaxisFontFamily = e.config.xaxis.group.style.fontFamily),
                  (g.xaxisForeColors = e.config.xaxis.group.style.colors),
                  (g.fontWeight = e.config.xaxis.group.style.fontWeight),
                  (g.cssClass = e.config.xaxis.group.style.cssClass)),
                  this.drawXAxisLabelAndGroup(
                    !1,
                    i,
                    r,
                    o,
                    !1,
                    function (C, P) {
                      return h[C].cols * P;
                    },
                    g
                  );
              }
              if (e.config.xaxis.title.text !== void 0) {
                var m = i.group({ class: "apexcharts-xaxis-title" }),
                  x = i.drawText({
                    x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
                    y:
                      this.offY +
                      parseFloat(this.xaxisFontSize) +
                      (e.config.xaxis.position === "bottom"
                        ? e.globals.xAxisLabelsHeight
                        : -e.globals.xAxisLabelsHeight - 10) +
                      e.config.xaxis.title.offsetY,
                    text: e.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: e.config.xaxis.title.style.fontSize,
                    fontFamily: e.config.xaxis.title.style.fontFamily,
                    fontWeight: e.config.xaxis.title.style.fontWeight,
                    foreColor: e.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      e.config.xaxis.title.style.cssClass,
                  });
                m.add(x), n.add(m);
              }
              if (e.config.xaxis.axisBorder.show) {
                var v = e.globals.barPadForNumericAxis,
                  w = i.drawLine(
                    e.globals.padHorizontal +
                      e.config.xaxis.axisBorder.offsetX -
                      v,
                    this.offY,
                    this.xaxisBorderWidth + v,
                    this.offY,
                    e.config.xaxis.axisBorder.color,
                    0,
                    this.xaxisBorderHeight
                  );
                this.elgrid && this.elgrid.elGridBorders && e.config.grid.show
                  ? this.elgrid.elGridBorders.add(w)
                  : n.add(w);
              }
              return n;
            },
          },
          {
            key: "drawXAxisLabelAndGroup",
            value: function (e, i, n, r, o, l) {
              var h,
                d = this,
                g =
                  arguments.length > 6 && arguments[6] !== void 0
                    ? arguments[6]
                    : {},
                m = [],
                x = [],
                v = this.w,
                w = g.xaxisFontSize || this.xaxisFontSize,
                C = g.xaxisFontFamily || this.xaxisFontFamily,
                P = g.xaxisForeColors || this.xaxisForeColors,
                M = g.fontWeight || v.config.xaxis.labels.style.fontWeight,
                I = g.cssClass || v.config.xaxis.labels.style.cssClass,
                D = v.globals.padHorizontal,
                f = r.length,
                y =
                  v.config.xaxis.type === "category" ? v.globals.dataPoints : f;
              if ((y === 0 && f > y && (y = f), o)) {
                var A = y > 1 ? y - 1 : y;
                (h = v.globals.gridWidth / A),
                  (D = D + l(0, h) / 2 + v.config.xaxis.labels.offsetX);
              } else
                (h = v.globals.gridWidth / y),
                  (D = D + l(0, h) + v.config.xaxis.labels.offsetX);
              for (
                var _ = function (B) {
                    var $ = D - l(B, h) / 2 + v.config.xaxis.labels.offsetX;
                    B === 0 &&
                      f === 1 &&
                      h / 2 === D &&
                      y === 1 &&
                      ($ = v.globals.gridWidth / 2);
                    var Z = d.axesUtils.getLabel(
                        r,
                        v.globals.timescaleLabels,
                        $,
                        B,
                        m,
                        w,
                        e
                      ),
                      re = 28;
                    if (
                      (v.globals.rotateXLabels && e && (re = 22),
                      v.config.xaxis.title.text &&
                        v.config.xaxis.position === "top" &&
                        (re +=
                          parseFloat(v.config.xaxis.title.style.fontSize) + 2),
                      e ||
                        (re =
                          re +
                          parseFloat(w) +
                          (v.globals.xAxisLabelsHeight -
                            v.globals.xAxisGroupLabelsHeight) +
                          (v.globals.rotateXLabels ? 10 : 0)),
                      (Z =
                        v.config.xaxis.tickAmount !== void 0 &&
                        v.config.xaxis.tickAmount !== "dataPoints" &&
                        v.config.xaxis.type !== "datetime"
                          ? d.axesUtils.checkLabelBasedOnTickamount(B, Z, f)
                          : d.axesUtils.checkForOverflowingLabels(
                              B,
                              Z,
                              f,
                              m,
                              x
                            )),
                      v.config.xaxis.labels.show)
                    ) {
                      var ce = i.drawText({
                        x: Z.x,
                        y:
                          d.offY +
                          v.config.xaxis.labels.offsetY +
                          re -
                          (v.config.xaxis.position === "top"
                            ? v.globals.xAxisHeight +
                              v.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: Z.text,
                        textAnchor: "middle",
                        fontWeight: Z.isBold ? 600 : M,
                        fontSize: w,
                        fontFamily: C,
                        foreColor: Array.isArray(P)
                          ? e && v.config.xaxis.convertedCatToNumeric
                            ? P[v.globals.minX + B - 1]
                            : P[B]
                          : P,
                        isPlainText: !1,
                        cssClass:
                          (e
                            ? "apexcharts-xaxis-label "
                            : "apexcharts-xaxis-group-label ") + I,
                      });
                      if (
                        (n.add(ce),
                        ce.on("click", function (de) {
                          if (
                            typeof v.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var Pe = Object.assign({}, v, { labelIndex: B });
                            v.config.chart.events.xAxisLabelClick(
                              de,
                              d.ctx,
                              Pe
                            );
                          }
                        }),
                        e)
                      ) {
                        var oe = document.createElementNS(
                          v.globals.SVGNS,
                          "title"
                        );
                        (oe.textContent = Array.isArray(Z.text)
                          ? Z.text.join(" ")
                          : Z.text),
                          ce.node.appendChild(oe),
                          Z.text !== "" && (m.push(Z.text), x.push(Z));
                      }
                    }
                    B < f - 1 && (D += l(B + 1, h));
                  },
                  z = 0;
                z <= f - 1;
                z++
              )
                _(z);
            },
          },
          {
            key: "drawXaxisInversed",
            value: function (e) {
              var i,
                n,
                r = this,
                o = this.w,
                l = new X(this.ctx),
                h = o.config.yaxis[0].opposite
                  ? o.globals.translateYAxisX[e]
                  : 0,
                d = l.group({
                  class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                  rel: e,
                }),
                g = l.group({
                  class:
                    "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                  transform: "translate(" + h + ", 0)",
                });
              d.add(g);
              var m = [];
              if (o.config.yaxis[e].show)
                for (var x = 0; x < this.xaxisLabels.length; x++)
                  m.push(this.xaxisLabels[x]);
              (i = o.globals.gridHeight / m.length), (n = -i / 2.2);
              var v = o.globals.yLabelFormatters[0],
                w = o.config.yaxis[0].labels;
              if (w.show)
                for (
                  var C = function (A) {
                      var _ = m[A] === void 0 ? "" : m[A];
                      _ = v(_, { seriesIndex: e, dataPointIndex: A, w: o });
                      var z = r.axesUtils.getYAxisForeColor(w.style.colors, e),
                        B = 0;
                      Array.isArray(_) &&
                        (B = (_.length / 2) * parseInt(w.style.fontSize, 10));
                      var $ = w.offsetX - 15,
                        Z = "end";
                      r.yaxis.opposite && (Z = "start"),
                        o.config.yaxis[0].labels.align === "left"
                          ? (($ = w.offsetX), (Z = "start"))
                          : o.config.yaxis[0].labels.align === "center"
                          ? (($ = w.offsetX), (Z = "middle"))
                          : o.config.yaxis[0].labels.align === "right" &&
                            (Z = "end");
                      var re = l.drawText({
                        x: $,
                        y: n + i + w.offsetY - B,
                        text: _,
                        textAnchor: Z,
                        foreColor: Array.isArray(z) ? z[A] : z,
                        fontSize: w.style.fontSize,
                        fontFamily: w.style.fontFamily,
                        fontWeight: w.style.fontWeight,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + w.style.cssClass,
                        maxWidth: w.maxWidth,
                      });
                      g.add(re),
                        re.on("click", function (de) {
                          if (
                            typeof o.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var Pe = Object.assign({}, o, { labelIndex: A });
                            o.config.chart.events.xAxisLabelClick(
                              de,
                              r.ctx,
                              Pe
                            );
                          }
                        });
                      var ce = document.createElementNS(
                        o.globals.SVGNS,
                        "title"
                      );
                      if (
                        ((ce.textContent = Array.isArray(_) ? _.join(" ") : _),
                        re.node.appendChild(ce),
                        o.config.yaxis[e].labels.rotate !== 0)
                      ) {
                        var oe = l.rotateAroundCenter(re.node);
                        re.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(o.config.yaxis[e].labels.rotate, " 0 ")
                            .concat(oe.y, ")")
                        );
                      }
                      n += i;
                    },
                    P = 0;
                  P <= m.length - 1;
                  P++
                )
                  C(P);
              if (o.config.yaxis[0].title.text !== void 0) {
                var M = l.group({
                    class:
                      "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                    transform: "translate(" + h + ", 0)",
                  }),
                  I = l.drawText({
                    x: o.config.yaxis[0].title.offsetX,
                    y:
                      o.globals.gridHeight / 2 +
                      o.config.yaxis[0].title.offsetY,
                    text: o.config.yaxis[0].title.text,
                    textAnchor: "middle",
                    foreColor: o.config.yaxis[0].title.style.color,
                    fontSize: o.config.yaxis[0].title.style.fontSize,
                    fontWeight: o.config.yaxis[0].title.style.fontWeight,
                    fontFamily: o.config.yaxis[0].title.style.fontFamily,
                    cssClass:
                      "apexcharts-yaxis-title-text " +
                      o.config.yaxis[0].title.style.cssClass,
                  });
                M.add(I), d.add(M);
              }
              var D = 0;
              this.isCategoryBarHorizontal &&
                o.config.yaxis[0].opposite &&
                (D = o.globals.gridWidth);
              var f = o.config.xaxis.axisBorder;
              if (f.show) {
                var y = l.drawLine(
                  o.globals.padHorizontal + f.offsetX + D,
                  1 + f.offsetY,
                  o.globals.padHorizontal + f.offsetX + D,
                  o.globals.gridHeight + f.offsetY,
                  f.color,
                  0
                );
                this.elgrid && this.elgrid.elGridBorders && o.config.grid.show
                  ? this.elgrid.elGridBorders.add(y)
                  : d.add(y);
              }
              return (
                o.config.yaxis[0].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    D,
                    m.length,
                    o.config.yaxis[0].axisBorder,
                    o.config.yaxis[0].axisTicks,
                    0,
                    i,
                    d
                  ),
                d
              );
            },
          },
          {
            key: "drawXaxisTicks",
            value: function (e, i, n) {
              var r = this.w,
                o = e;
              if (!(e < 0 || e - 2 > r.globals.gridWidth)) {
                var l = this.offY + r.config.xaxis.axisTicks.offsetY;
                if (
                  ((i = i + l + r.config.xaxis.axisTicks.height),
                  r.config.xaxis.position === "top" &&
                    (i = l - r.config.xaxis.axisTicks.height),
                  r.config.xaxis.axisTicks.show)
                ) {
                  var h = new X(this.ctx).drawLine(
                    e + r.config.xaxis.axisTicks.offsetX,
                    l + r.config.xaxis.offsetY,
                    o + r.config.xaxis.axisTicks.offsetX,
                    i + r.config.xaxis.offsetY,
                    r.config.xaxis.axisTicks.color
                  );
                  n.add(h), h.node.classList.add("apexcharts-xaxis-tick");
                }
              }
            },
          },
          {
            key: "getXAxisTicksPositions",
            value: function () {
              var e = this.w,
                i = [],
                n = this.xaxisLabels.length,
                r = e.globals.padHorizontal;
              if (e.globals.timescaleLabels.length > 0)
                for (var o = 0; o < n; o++)
                  (r = this.xaxisLabels[o].position), i.push(r);
              else
                for (var l = n, h = 0; h < l; h++) {
                  var d = l;
                  e.globals.isXNumeric &&
                    e.config.chart.type !== "bar" &&
                    (d -= 1),
                    (r += e.globals.gridWidth / d),
                    i.push(r);
                }
              return i;
            },
          },
          {
            key: "xAxisLabelCorrections",
            value: function () {
              var e = this.w,
                i = new X(this.ctx),
                n = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g"
                ),
                r = e.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"
                ),
                o = e.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-inversed text"
                ),
                l = e.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-inversed-texts-g text tspan"
                );
              if (e.globals.rotateXLabels || e.config.xaxis.labels.rotateAlways)
                for (var h = 0; h < r.length; h++) {
                  var d = i.rotateAroundCenter(r[h]);
                  (d.y = d.y - 1),
                    (d.x = d.x + 1),
                    r[h].setAttribute(
                      "transform",
                      "rotate("
                        .concat(e.config.xaxis.labels.rotate, " ")
                        .concat(d.x, " ")
                        .concat(d.y, ")")
                    ),
                    r[h].setAttribute("text-anchor", "end"),
                    n.setAttribute(
                      "transform",
                      "translate(0, ".concat(-10, ")")
                    );
                  var g = r[h].childNodes;
                  e.config.xaxis.labels.trim &&
                    Array.prototype.forEach.call(g, function (w) {
                      i.placeTextWithEllipsis(
                        w,
                        w.textContent,
                        e.globals.xAxisLabelsHeight -
                          (e.config.legend.position === "bottom" ? 20 : 10)
                      );
                    });
                }
              else
                (function () {
                  for (
                    var w = e.globals.gridWidth / (e.globals.labels.length + 1),
                      C = 0;
                    C < r.length;
                    C++
                  ) {
                    var P = r[C].childNodes;
                    e.config.xaxis.labels.trim &&
                      e.config.xaxis.type !== "datetime" &&
                      Array.prototype.forEach.call(P, function (M) {
                        i.placeTextWithEllipsis(M, M.textContent, w);
                      });
                  }
                })();
              if (o.length > 0) {
                var m = o[o.length - 1].getBBox(),
                  x = o[0].getBBox();
                m.x < -20 &&
                  o[o.length - 1].parentNode.removeChild(o[o.length - 1]),
                  x.x + x.width > e.globals.gridWidth &&
                    !e.globals.isBarHorizontal &&
                    o[0].parentNode.removeChild(o[0]);
                for (var v = 0; v < l.length; v++)
                  i.placeTextWithEllipsis(
                    l[v],
                    l[v].textContent,
                    e.config.yaxis[0].labels.maxWidth -
                      (e.config.yaxis[0].title.text
                        ? 2 * parseFloat(e.config.yaxis[0].title.style.fontSize)
                        : 0) -
                      15
                  );
              }
            },
          },
        ]),
        T
      );
    })(),
    oi = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
        var i = this.w;
        (this.xaxisLabels = i.globals.labels.slice()),
          (this.axesUtils = new Ze(e)),
          (this.isRangeBar =
            i.globals.seriesRange.length && i.globals.isBarHorizontal),
          i.globals.timescaleLabels.length > 0 &&
            (this.xaxisLabels = i.globals.timescaleLabels.slice());
      }
      return (
        S(T, [
          {
            key: "drawGridArea",
            value: function () {
              var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null,
                i = this.w,
                n = new X(this.ctx);
              e === null && (e = n.group({ class: "apexcharts-grid" }));
              var r = n.drawLine(
                  i.globals.padHorizontal,
                  1,
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  "transparent"
                ),
                o = n.drawLine(
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  i.globals.gridWidth,
                  i.globals.gridHeight,
                  "transparent"
                );
              return e.add(o), e.add(r), e;
            },
          },
          {
            key: "drawGrid",
            value: function () {
              var e = null;
              return (
                this.w.globals.axisCharts &&
                  ((e = this.renderGrid()), this.drawGridArea(e.el)),
                e
              );
            },
          },
          {
            key: "createGridMask",
            value: function () {
              var e = this.w,
                i = e.globals,
                n = new X(this.ctx),
                r = Array.isArray(e.config.stroke.width)
                  ? 0
                  : e.config.stroke.width;
              if (Array.isArray(e.config.stroke.width)) {
                var o = 0;
                e.config.stroke.width.forEach(function (x) {
                  o = Math.max(o, x);
                }),
                  (r = o);
              }
              (i.dom.elGridRectMask = document.createElementNS(
                i.SVGNS,
                "clipPath"
              )),
                i.dom.elGridRectMask.setAttribute(
                  "id",
                  "gridRectMask".concat(i.cuid)
                ),
                (i.dom.elGridRectMarkerMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath"
                )),
                i.dom.elGridRectMarkerMask.setAttribute(
                  "id",
                  "gridRectMarkerMask".concat(i.cuid)
                ),
                (i.dom.elForecastMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath"
                )),
                i.dom.elForecastMask.setAttribute(
                  "id",
                  "forecastMask".concat(i.cuid)
                ),
                (i.dom.elNonForecastMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath"
                )),
                i.dom.elNonForecastMask.setAttribute(
                  "id",
                  "nonForecastMask".concat(i.cuid)
                );
              var l = e.config.chart.type,
                h = 0,
                d = 0;
              (l === "bar" ||
                l === "rangeBar" ||
                l === "candlestick" ||
                l === "boxPlot" ||
                e.globals.comboBarCount > 0) &&
                e.globals.isXNumeric &&
                !e.globals.isBarHorizontal &&
                ((h = e.config.grid.padding.left),
                (d = e.config.grid.padding.right),
                i.barPadForNumericAxis > h &&
                  ((h = i.barPadForNumericAxis), (d = i.barPadForNumericAxis))),
                (i.dom.elGridRect = n.drawRect(
                  -r / 2 - h - 2,
                  -r / 2,
                  i.gridWidth + r + d + h + 4,
                  i.gridHeight + r,
                  0,
                  "#fff"
                ));
              var g = e.globals.markers.largestSize + 1;
              (i.dom.elGridRectMarker = n.drawRect(
                2 * -g,
                2 * -g,
                i.gridWidth + 4 * g,
                i.gridHeight + 4 * g,
                0,
                "#fff"
              )),
                i.dom.elGridRectMask.appendChild(i.dom.elGridRect.node),
                i.dom.elGridRectMarkerMask.appendChild(
                  i.dom.elGridRectMarker.node
                );
              var m = i.dom.baseEl.querySelector("defs");
              m.appendChild(i.dom.elGridRectMask),
                m.appendChild(i.dom.elForecastMask),
                m.appendChild(i.dom.elNonForecastMask),
                m.appendChild(i.dom.elGridRectMarkerMask);
            },
          },
          {
            key: "_drawGridLines",
            value: function (e) {
              var i = e.i,
                n = e.x1,
                r = e.y1,
                o = e.x2,
                l = e.y2,
                h = e.xCount,
                d = e.parent,
                g = this.w;
              if (
                !(
                  (i === 0 && g.globals.skipFirstTimelinelabel) ||
                  (i === h - 1 &&
                    g.globals.skipLastTimelinelabel &&
                    !g.config.xaxis.labels.formatter) ||
                  g.config.chart.type === "radar"
                )
              ) {
                g.config.grid.xaxis.lines.show &&
                  this._drawGridLine({
                    i,
                    x1: n,
                    y1: r,
                    x2: o,
                    y2: l,
                    xCount: h,
                    parent: d,
                  });
                var m = 0;
                if (
                  g.globals.hasXaxisGroups &&
                  g.config.xaxis.tickPlacement === "between"
                ) {
                  var x = g.globals.groups;
                  if (x) {
                    for (var v = 0, w = 0; v < i && w < x.length; w++)
                      v += x[w].cols;
                    v === i && (m = 0.6 * g.globals.xAxisLabelsHeight);
                  }
                }
                new Tt(this.ctx).drawXaxisTicks(
                  n,
                  m,
                  g.globals.dom.elGraphical
                );
              }
            },
          },
          {
            key: "_drawGridLine",
            value: function (e) {
              var i = e.i,
                n = e.x1,
                r = e.y1,
                o = e.x2,
                l = e.y2,
                h = e.xCount,
                d = e.parent,
                g = this.w,
                m = !1,
                x = d.node.classList.contains(
                  "apexcharts-gridlines-horizontal"
                ),
                v = g.config.grid.strokeDashArray,
                w = g.globals.barPadForNumericAxis;
              ((r === 0 && l === 0) || (n === 0 && o === 0)) && (m = !0),
                r === g.globals.gridHeight &&
                  l === g.globals.gridHeight &&
                  (m = !0),
                !g.globals.isBarHorizontal ||
                  (i !== 0 && i !== h - 1) ||
                  (m = !0);
              var C = new X(this).drawLine(
                n - (x ? w : 0),
                r,
                o + (x ? w : 0),
                l,
                g.config.grid.borderColor,
                v
              );
              C.node.classList.add("apexcharts-gridline"),
                m && g.config.grid.show ? this.elGridBorders.add(C) : d.add(C);
            },
          },
          {
            key: "_drawGridBandRect",
            value: function (e) {
              var i = e.c,
                n = e.x1,
                r = e.y1,
                o = e.x2,
                l = e.y2,
                h = e.type,
                d = this.w,
                g = new X(this.ctx),
                m = d.globals.barPadForNumericAxis;
              if (h !== "column" || d.config.xaxis.type !== "datetime") {
                var x = d.config.grid[h].colors[i],
                  v = g.drawRect(
                    n - (h === "row" ? m : 0),
                    r,
                    o + (h === "row" ? 2 * m : 0),
                    l,
                    0,
                    x,
                    d.config.grid[h].opacity
                  );
                this.elg.add(v),
                  v.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(d.globals.cuid, ")")
                  ),
                  v.node.classList.add("apexcharts-grid-".concat(h));
              }
            },
          },
          {
            key: "_drawXYLines",
            value: function (e) {
              var i = this,
                n = e.xCount,
                r = e.tickAmount,
                o = this.w;
              if (
                o.config.grid.xaxis.lines.show ||
                o.config.xaxis.axisTicks.show
              ) {
                var l,
                  h = o.globals.padHorizontal,
                  d = o.globals.gridHeight;
                o.globals.timescaleLabels.length
                  ? (function (C) {
                      for (
                        var P = C.xC,
                          M = C.x1,
                          I = C.y1,
                          D = C.x2,
                          f = C.y2,
                          y = 0;
                        y < P;
                        y++
                      )
                        (M = i.xaxisLabels[y].position),
                          (D = i.xaxisLabels[y].position),
                          i._drawGridLines({
                            i: y,
                            x1: M,
                            y1: I,
                            x2: D,
                            y2: f,
                            xCount: n,
                            parent: i.elgridLinesV,
                          });
                    })({ xC: n, x1: h, y1: 0, x2: l, y2: d })
                  : (o.globals.isXNumeric &&
                      (n = o.globals.xAxisScale.result.length),
                    (function (C) {
                      for (
                        var P = C.xC,
                          M = C.x1,
                          I = C.y1,
                          D = C.x2,
                          f = C.y2,
                          y = 0;
                        y < P + (o.globals.isXNumeric ? 0 : 1);
                        y++
                      )
                        y === 0 &&
                          P === 1 &&
                          o.globals.dataPoints === 1 &&
                          (D = M = o.globals.gridWidth / 2),
                          i._drawGridLines({
                            i: y,
                            x1: M,
                            y1: I,
                            x2: D,
                            y2: f,
                            xCount: n,
                            parent: i.elgridLinesV,
                          }),
                          (D = M +=
                            o.globals.gridWidth /
                            (o.globals.isXNumeric ? P - 1 : P));
                    })({ xC: n, x1: h, y1: 0, x2: l, y2: d }));
              }
              if (o.config.grid.yaxis.lines.show) {
                var g = 0,
                  m = 0,
                  x = o.globals.gridWidth,
                  v = r + 1;
                this.isRangeBar && (v = o.globals.labels.length);
                for (var w = 0; w < v + (this.isRangeBar ? 1 : 0); w++)
                  this._drawGridLine({
                    i: w,
                    xCount: v + (this.isRangeBar ? 1 : 0),
                    x1: 0,
                    y1: g,
                    x2: x,
                    y2: m,
                    parent: this.elgridLinesH,
                  }),
                    (m = g += o.globals.gridHeight / (this.isRangeBar ? v : r));
              }
            },
          },
          {
            key: "_drawInvertedXYLines",
            value: function (e) {
              var i = e.xCount,
                n = this.w;
              if (
                n.config.grid.xaxis.lines.show ||
                n.config.xaxis.axisTicks.show
              )
                for (
                  var r,
                    o = n.globals.padHorizontal,
                    l = n.globals.gridHeight,
                    h = 0;
                  h < i + 1;
                  h++
                )
                  n.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: h,
                      xCount: i + 1,
                      x1: o,
                      y1: 0,
                      x2: r,
                      y2: l,
                      parent: this.elgridLinesV,
                    }),
                    new Tt(this.ctx).drawXaxisTicks(
                      o,
                      0,
                      n.globals.dom.elGraphical
                    ),
                    (r = o = o + n.globals.gridWidth / i + 0.3);
              if (n.config.grid.yaxis.lines.show)
                for (
                  var d = 0, g = 0, m = n.globals.gridWidth, x = 0;
                  x < n.globals.dataPoints + 1;
                  x++
                )
                  this._drawGridLine({
                    i: x,
                    xCount: n.globals.dataPoints + 1,
                    x1: 0,
                    y1: d,
                    x2: m,
                    y2: g,
                    parent: this.elgridLinesH,
                  }),
                    (g = d += n.globals.gridHeight / n.globals.dataPoints);
            },
          },
          {
            key: "renderGrid",
            value: function () {
              var e = this.w,
                i = new X(this.ctx);
              (this.elg = i.group({ class: "apexcharts-grid" })),
                (this.elgridLinesH = i.group({
                  class: "apexcharts-gridlines-horizontal",
                })),
                (this.elgridLinesV = i.group({
                  class: "apexcharts-gridlines-vertical",
                })),
                (this.elGridBorders = i.group({
                  class: "apexcharts-grid-borders",
                })),
                this.elg.add(this.elgridLinesH),
                this.elg.add(this.elgridLinesV),
                e.config.grid.show ||
                  (this.elgridLinesV.hide(),
                  this.elgridLinesH.hide(),
                  this.elGridBorders.hide());
              for (
                var n,
                  r = e.globals.yAxisScale.length
                    ? e.globals.yAxisScale[0].result.length - 1
                    : 5,
                  o = 0;
                o < e.globals.series.length &&
                (e.globals.yAxisScale[o] !== void 0 &&
                  (r = e.globals.yAxisScale[o].result.length - 1),
                !(r > 2));
                o++
              );
              return (
                !e.globals.isBarHorizontal || this.isRangeBar
                  ? ((n = this.xaxisLabels.length),
                    this.isRangeBar &&
                      (n--,
                      (r = e.globals.labels.length),
                      e.config.xaxis.tickAmount &&
                        e.config.xaxis.labels.formatter &&
                        (n = e.config.xaxis.tickAmount)),
                    this._drawXYLines({ xCount: n, tickAmount: r }))
                  : ((n = r),
                    (r = e.globals.xTickAmount),
                    this._drawInvertedXYLines({ xCount: n, tickAmount: r })),
                this.drawGridBands(n, r),
                {
                  el: this.elg,
                  elGridBorders: this.elGridBorders,
                  xAxisTickWidth: e.globals.gridWidth / n,
                }
              );
            },
          },
          {
            key: "drawGridBands",
            value: function (e, i) {
              var n = this.w;
              if (
                n.config.grid.row.colors !== void 0 &&
                n.config.grid.row.colors.length > 0
              )
                for (
                  var r = 0,
                    o = n.globals.gridHeight / i,
                    l = n.globals.gridWidth,
                    h = 0,
                    d = 0;
                  h < i;
                  h++, d++
                )
                  d >= n.config.grid.row.colors.length && (d = 0),
                    this._drawGridBandRect({
                      c: d,
                      x1: 0,
                      y1: r,
                      x2: l,
                      y2: o,
                      type: "row",
                    }),
                    (r += n.globals.gridHeight / i);
              if (
                n.config.grid.column.colors !== void 0 &&
                n.config.grid.column.colors.length > 0
              )
                for (
                  var g =
                      n.globals.isBarHorizontal ||
                      (n.config.xaxis.type !== "category" &&
                        !n.config.xaxis.convertedCatToNumeric)
                        ? e
                        : e - 1,
                    m = n.globals.padHorizontal,
                    x = n.globals.padHorizontal + n.globals.gridWidth / g,
                    v = n.globals.gridHeight,
                    w = 0,
                    C = 0;
                  w < e;
                  w++, C++
                )
                  C >= n.config.grid.column.colors.length && (C = 0),
                    this._drawGridBandRect({
                      c: C,
                      x1: m,
                      y1: 0,
                      x2: x,
                      y2: v,
                      type: "column",
                    }),
                    (m += n.globals.gridWidth / g);
            },
          },
        ]),
        T
      );
    })(),
    _t = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "niceScale",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                r =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0,
                o = arguments.length > 4 ? arguments[4] : void 0,
                l = this.w,
                h = Math.abs(i - e);
              if (
                ((n = this._adjustTicksForSmallRange(n, r, h)) ===
                  "dataPoints" && (n = l.globals.dataPoints - 1),
                (e === Number.MIN_VALUE && i === 0) ||
                  (!L.isNumber(e) && !L.isNumber(i)) ||
                  (e === Number.MIN_VALUE && i === -Number.MAX_VALUE))
              )
                return (e = 0), (i = n), this.linearScale(e, i, n);
              e > i
                ? (console.warn("axis.min cannot be greater than axis.max"),
                  (i = e + 0.1))
                : e === i &&
                  ((e = e === 0 ? 0 : e - 0.5), (i = i === 0 ? 2 : i + 0.5));
              var d = [];
              h < 1 &&
                o &&
                (l.config.chart.type === "candlestick" ||
                  l.config.series[r].type === "candlestick" ||
                  l.config.chart.type === "boxPlot" ||
                  l.config.series[r].type === "boxPlot" ||
                  l.globals.isRangeData) &&
                (i *= 1.01);
              var g = n + 1;
              g < 2 ? (g = 2) : g > 2 && (g -= 2);
              var m = h / g,
                x = Math.floor(L.log10(m)),
                v = Math.pow(10, x),
                w = Math.round(m / v);
              w < 1 && (w = 1);
              var C = w * v,
                P = C * Math.floor(e / C),
                M = C * Math.ceil(i / C),
                I = P;
              if (o && h > 2) {
                for (; d.push(L.stripNumber(I, 7)), !((I += C) > M); );
                return { result: d, niceMin: d[0], niceMax: d[d.length - 1] };
              }
              var D = e;
              (d = []).push(L.stripNumber(D, 7));
              for (var f = Math.abs(i - e) / n, y = 0; y <= n; y++)
                (D += f), d.push(D);
              return (
                d[d.length - 2] >= i && d.pop(),
                { result: d, niceMin: d[0], niceMax: d[d.length - 1] }
              );
            },
          },
          {
            key: "linearScale",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                r = arguments.length > 3 ? arguments[3] : void 0,
                o = Math.abs(i - e);
              (n = this._adjustTicksForSmallRange(n, r, o)) === "dataPoints" &&
                (n = this.w.globals.dataPoints - 1);
              var l = o / n;
              n === Number.MAX_VALUE && ((n = 10), (l = 1));
              for (var h = [], d = e; n >= 0; ) h.push(d), (d += l), (n -= 1);
              return { result: h, niceMin: h[0], niceMax: h[h.length - 1] };
            },
          },
          {
            key: "logarithmicScaleNice",
            value: function (e, i, n) {
              i <= 0 && (i = Math.max(e, n)), e <= 0 && (e = Math.min(i, n));
              for (
                var r = [],
                  o = Math.ceil(Math.log(i) / Math.log(n) + 1),
                  l = Math.floor(Math.log(e) / Math.log(n));
                l < o;
                l++
              )
                r.push(Math.pow(n, l));
              return { result: r, niceMin: r[0], niceMax: r[r.length - 1] };
            },
          },
          {
            key: "logarithmicScale",
            value: function (e, i, n) {
              i <= 0 && (i = Math.max(e, n)), e <= 0 && (e = Math.min(i, n));
              for (
                var r = [],
                  o = Math.log(i) / Math.log(n),
                  l = Math.log(e) / Math.log(n),
                  h = o - l,
                  d = Math.round(h),
                  g = h / d,
                  m = 0,
                  x = l;
                m < d;
                m++, x += g
              )
                r.push(Math.pow(n, x));
              return (
                r.push(Math.pow(n, o)), { result: r, niceMin: e, niceMax: i }
              );
            },
          },
          {
            key: "_adjustTicksForSmallRange",
            value: function (e, i, n) {
              var r = e;
              if (
                i !== void 0 &&
                this.w.config.yaxis[i].labels.formatter &&
                this.w.config.yaxis[i].tickAmount === void 0
              ) {
                var o = Number(this.w.config.yaxis[i].labels.formatter(1));
                L.isNumber(o) &&
                  this.w.globals.yValueDecimal === 0 &&
                  (r = Math.ceil(n));
              }
              return r < e ? r : e;
            },
          },
          {
            key: "setYScaleForIndex",
            value: function (e, i, n) {
              var r = this.w.globals,
                o = this.w.config,
                l = r.isBarHorizontal ? o.xaxis : o.yaxis[e];
              r.yAxisScale[e] === void 0 && (r.yAxisScale[e] = []);
              var h = Math.abs(n - i);
              if (
                (l.logarithmic && h <= 5 && (r.invalidLogScale = !0),
                l.logarithmic && h > 5)
              )
                (r.allSeriesCollapsed = !1),
                  (r.yAxisScale[e] = this.logarithmicScale(i, n, l.logBase)),
                  (r.yAxisScale[e] = l.forceNiceScale
                    ? this.logarithmicScaleNice(i, n, l.logBase)
                    : this.logarithmicScale(i, n, l.logBase));
              else if (n !== -Number.MAX_VALUE && L.isNumber(n))
                if (
                  ((r.allSeriesCollapsed = !1),
                  (l.min === void 0 && l.max === void 0) || l.forceNiceScale)
                ) {
                  var d =
                    (o.yaxis[e].max === void 0 && o.yaxis[e].min === void 0) ||
                    o.yaxis[e].forceNiceScale;
                  r.yAxisScale[e] = this.niceScale(
                    i,
                    n,
                    l.tickAmount ? l.tickAmount : h < 5 && h > 1 ? h + 1 : 5,
                    e,
                    d
                  );
                } else
                  r.yAxisScale[e] = this.linearScale(i, n, l.tickAmount, e);
              else r.yAxisScale[e] = this.linearScale(0, 5, 5);
            },
          },
          {
            key: "setXScale",
            value: function (e, i) {
              var n = this.w,
                r = n.globals,
                o = n.config.xaxis,
                l = Math.abs(i - e);
              return (
                i !== -Number.MAX_VALUE && L.isNumber(i)
                  ? (r.xAxisScale = this.linearScale(
                      e,
                      i,
                      o.tickAmount ? o.tickAmount : l < 5 && l > 1 ? l + 1 : 5,
                      0
                    ))
                  : (r.xAxisScale = this.linearScale(0, 5, 5)),
                r.xAxisScale
              );
            },
          },
          {
            key: "setMultipleYScales",
            value: function () {
              var e = this,
                i = this.w.globals,
                n = this.w.config,
                r = i.minYArr.concat([]),
                o = i.maxYArr.concat([]),
                l = [];
              n.yaxis.forEach(function (h, d) {
                var g = d;
                n.series.forEach(function (v, w) {
                  v.name === h.seriesName &&
                    ((g = w),
                    d !== w
                      ? l.push({ index: w, similarIndex: d, alreadyExists: !0 })
                      : l.push({ index: w }));
                });
                var m = r[g],
                  x = o[g];
                e.setYScaleForIndex(d, m, x);
              }),
                this.sameScaleInMultipleAxes(r, o, l);
            },
          },
          {
            key: "sameScaleInMultipleAxes",
            value: function (e, i, n) {
              var r = this,
                o = this.w.config,
                l = this.w.globals,
                h = [];
              n.forEach(function (P) {
                P.alreadyExists &&
                  (h[P.index] === void 0 && (h[P.index] = []),
                  h[P.index].push(P.index),
                  h[P.index].push(P.similarIndex));
              }),
                (l.yAxisSameScaleIndices = h),
                h.forEach(function (P, M) {
                  h.forEach(function (I, D) {
                    var f, y;
                    M !== D &&
                      ((f = P),
                      (y = I),
                      f.filter(function (A) {
                        return y.indexOf(A) !== -1;
                      })).length > 0 &&
                      (h[M] = h[M].concat(h[D]));
                  });
                });
              var d = h
                .map(function (P) {
                  return P.filter(function (M, I) {
                    return P.indexOf(M) === I;
                  });
                })
                .map(function (P) {
                  return P.sort();
                });
              h = h.filter(function (P) {
                return !!P;
              });
              var g = d.slice(),
                m = g.map(function (P) {
                  return JSON.stringify(P);
                });
              g = g.filter(function (P, M) {
                return m.indexOf(JSON.stringify(P)) === M;
              });
              var x = [],
                v = [];
              e.forEach(function (P, M) {
                g.forEach(function (I, D) {
                  I.indexOf(M) > -1 &&
                    (x[D] === void 0 && ((x[D] = []), (v[D] = [])),
                    x[D].push({ key: M, value: P }),
                    v[D].push({ key: M, value: i[M] }));
                });
              });
              var w = Array.apply(null, Array(g.length)).map(
                  Number.prototype.valueOf,
                  Number.MIN_VALUE
                ),
                C = Array.apply(null, Array(g.length)).map(
                  Number.prototype.valueOf,
                  -Number.MAX_VALUE
                );
              x.forEach(function (P, M) {
                P.forEach(function (I, D) {
                  w[M] = Math.min(I.value, w[M]);
                });
              }),
                v.forEach(function (P, M) {
                  P.forEach(function (I, D) {
                    C[M] = Math.max(I.value, C[M]);
                  });
                }),
                e.forEach(function (P, M) {
                  v.forEach(function (I, D) {
                    var f = w[D],
                      y = C[D];
                    o.chart.stacked &&
                      ((y = 0),
                      I.forEach(function (A, _) {
                        A.value !== -Number.MAX_VALUE && (y += A.value),
                          f !== Number.MIN_VALUE && (f += x[D][_].value);
                      })),
                      I.forEach(function (A, _) {
                        I[_].key === M &&
                          (o.yaxis[M].min !== void 0 &&
                            (f =
                              typeof o.yaxis[M].min == "function"
                                ? o.yaxis[M].min(l.minY)
                                : o.yaxis[M].min),
                          o.yaxis[M].max !== void 0 &&
                            (y =
                              typeof o.yaxis[M].max == "function"
                                ? o.yaxis[M].max(l.maxY)
                                : o.yaxis[M].max),
                          r.setYScaleForIndex(M, f, y));
                      });
                  });
                });
            },
          },
          {
            key: "autoScaleY",
            value: function (e, i, n) {
              e || (e = this);
              var r = e.w;
              if (r.globals.isMultipleYAxis || r.globals.collapsedSeries.length)
                return (
                  console.warn(
                    "autoScaleYaxis is not supported in a multi-yaxis chart."
                  ),
                  i
                );
              var o = r.globals.seriesX[0],
                l = r.config.chart.stacked;
              return (
                i.forEach(function (h, d) {
                  for (var g = 0, m = 0; m < o.length; m++)
                    if (o[m] >= n.xaxis.min) {
                      g = m;
                      break;
                    }
                  var x,
                    v,
                    w = r.globals.minYArr[d],
                    C = r.globals.maxYArr[d],
                    P = r.globals.stackedSeriesTotals;
                  r.globals.series.forEach(function (M, I) {
                    var D = M[g];
                    l
                      ? ((D = P[g]),
                        (x = v = D),
                        P.forEach(function (f, y) {
                          o[y] <= n.xaxis.max &&
                            o[y] >= n.xaxis.min &&
                            (f > v && f !== null && (v = f),
                            M[y] < x && M[y] !== null && (x = M[y]));
                        }))
                      : ((x = v = D),
                        M.forEach(function (f, y) {
                          if (o[y] <= n.xaxis.max && o[y] >= n.xaxis.min) {
                            var A = f,
                              _ = f;
                            r.globals.series.forEach(function (z, B) {
                              f !== null &&
                                ((A = Math.min(z[y], A)),
                                (_ = Math.max(z[y], _)));
                            }),
                              _ > v && _ !== null && (v = _),
                              A < x && A !== null && (x = A);
                          }
                        })),
                      x === void 0 && v === void 0 && ((x = w), (v = C)),
                      (v *= v < 0 ? 0.9 : 1.1),
                      (x *= x < 0 ? 1.1 : 0.9) === 0 &&
                        v === 0 &&
                        ((x = -1), (v = 1)),
                      v < 0 && v < C && (v = C),
                      x < 0 && x > w && (x = w),
                      i.length > 1
                        ? ((i[I].min = h.min === void 0 ? x : h.min),
                          (i[I].max = h.max === void 0 ? v : h.max))
                        : ((i[0].min = h.min === void 0 ? x : h.min),
                          (i[0].max = h.max === void 0 ? v : h.max));
                  });
                }),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    li = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w), (this.scales = new _t(e));
      }
      return (
        S(T, [
          {
            key: "init",
            value: function () {
              this.setYRange(), this.setXRange(), this.setZRange();
            },
          },
          {
            key: "getMinYMaxY",
            value: function (e) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : Number.MAX_VALUE,
                n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : -Number.MAX_VALUE,
                r =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                o = this.w.config,
                l = this.w.globals,
                h = -Number.MAX_VALUE,
                d = Number.MIN_VALUE;
              r === null && (r = e + 1);
              var g = l.series,
                m = g,
                x = g;
              o.chart.type === "candlestick"
                ? ((m = l.seriesCandleL), (x = l.seriesCandleH))
                : o.chart.type === "boxPlot"
                ? ((m = l.seriesCandleO), (x = l.seriesCandleC))
                : l.isRangeData &&
                  ((m = l.seriesRangeStart), (x = l.seriesRangeEnd));
              for (var v = e; v < r; v++) {
                (l.dataPoints = Math.max(l.dataPoints, g[v].length)),
                  l.categoryLabels.length &&
                    (l.dataPoints = l.categoryLabels.filter(function (P) {
                      return P !== void 0;
                    }).length),
                  l.labels.length &&
                    o.xaxis.type !== "datetime" &&
                    l.series.reduce(function (P, M) {
                      return P + M.length;
                    }, 0) !== 0 &&
                    (l.dataPoints = Math.max(l.dataPoints, l.labels.length));
                for (var w = 0; w < l.series[v].length; w++) {
                  var C = g[v][w];
                  C !== null && L.isNumber(C)
                    ? (x[v][w] !== void 0 &&
                        ((h = Math.max(h, x[v][w])),
                        (i = Math.min(i, x[v][w]))),
                      m[v][w] !== void 0 &&
                        ((i = Math.min(i, m[v][w])),
                        (n = Math.max(n, m[v][w]))),
                      (this.w.config.chart.type !== "candlestick" &&
                        this.w.config.chart.type !== "boxPlot" &&
                        this.w.config.chart.type === "rangeArea" &&
                        this.w.config.chart.type === "rangeBar") ||
                        ((this.w.config.chart.type !== "candlestick" &&
                          this.w.config.chart.type !== "boxPlot") ||
                          (l.seriesCandleC[v][w] !== void 0 &&
                            ((h = Math.max(h, l.seriesCandleO[v][w])),
                            (h = Math.max(h, l.seriesCandleH[v][w])),
                            (h = Math.max(h, l.seriesCandleL[v][w])),
                            (h = Math.max(h, l.seriesCandleC[v][w])),
                            this.w.config.chart.type === "boxPlot" &&
                              (h = Math.max(h, l.seriesCandleM[v][w])))),
                        !o.series[v].type ||
                          (o.series[v].type === "candlestick" &&
                            o.series[v].type === "boxPlot" &&
                            o.series[v].type === "rangeArea" &&
                            o.series[v].type === "rangeBar") ||
                          ((h = Math.max(h, l.series[v][w])),
                          (i = Math.min(i, l.series[v][w]))),
                        (n = h)),
                      l.seriesGoals[v] &&
                        l.seriesGoals[v][w] &&
                        Array.isArray(l.seriesGoals[v][w]) &&
                        l.seriesGoals[v][w].forEach(function (P) {
                          d !== Number.MIN_VALUE &&
                            ((d = Math.min(d, P.value)), (i = d)),
                            (h = Math.max(h, P.value)),
                            (n = h);
                        }),
                      L.isFloat(C) &&
                        ((C = L.noExponents(C)),
                        (l.yValueDecimal = Math.max(
                          l.yValueDecimal,
                          C.toString().split(".")[1].length
                        ))),
                      d > m[v][w] && m[v][w] < 0 && (d = m[v][w]))
                    : (l.hasNullValues = !0);
                }
              }
              return (
                o.chart.type === "rangeBar" &&
                  l.seriesRangeStart.length &&
                  l.isBarHorizontal &&
                  (d = i),
                o.chart.type === "bar" &&
                  (d < 0 && h < 0 && (h = 0),
                  d === Number.MIN_VALUE && (d = 0)),
                { minY: d, maxY: h, lowestY: i, highestY: n }
              );
            },
          },
          {
            key: "setYRange",
            value: function () {
              var e = this.w.globals,
                i = this.w.config;
              (e.maxY = -Number.MAX_VALUE), (e.minY = Number.MIN_VALUE);
              var n = Number.MAX_VALUE;
              if (e.isMultipleYAxis)
                for (var r = 0; r < e.series.length; r++) {
                  var o = this.getMinYMaxY(r, n, null, r + 1);
                  e.minYArr.push(o.minY),
                    e.maxYArr.push(o.maxY),
                    (n = o.lowestY);
                }
              var l = this.getMinYMaxY(0, n, null, e.series.length);
              if (
                ((e.minY = l.minY),
                (e.maxY = l.maxY),
                (n = l.lowestY),
                i.chart.stacked && this._setStackedMinMax(),
                (i.chart.type === "line" ||
                  i.chart.type === "area" ||
                  i.chart.type === "candlestick" ||
                  i.chart.type === "boxPlot" ||
                  (i.chart.type === "rangeBar" && !e.isBarHorizontal)) &&
                  e.minY === Number.MIN_VALUE &&
                  n !== -Number.MAX_VALUE &&
                  n !== e.maxY)
              ) {
                var h = e.maxY - n;
                ((n >= 0 && n <= 10) ||
                  i.yaxis[0].min !== void 0 ||
                  i.yaxis[0].max !== void 0) &&
                  (h = 0),
                  (e.minY = n - (5 * h) / 100),
                  n > 0 && e.minY < 0 && (e.minY = 0),
                  (e.maxY = e.maxY + (5 * h) / 100);
              }
              return (
                i.yaxis.forEach(function (d, g) {
                  d.max !== void 0 &&
                    (typeof d.max == "number"
                      ? (e.maxYArr[g] = d.max)
                      : typeof d.max == "function" &&
                        (e.maxYArr[g] = d.max(
                          e.isMultipleYAxis ? e.maxYArr[g] : e.maxY
                        )),
                    (e.maxY = e.maxYArr[g])),
                    d.min !== void 0 &&
                      (typeof d.min == "number"
                        ? (e.minYArr[g] = d.min)
                        : typeof d.min == "function" &&
                          (e.minYArr[g] = d.min(
                            e.isMultipleYAxis
                              ? e.minYArr[g] === Number.MIN_VALUE
                                ? 0
                                : e.minYArr[g]
                              : e.minY
                          )),
                      (e.minY = e.minYArr[g]));
                }),
                e.isBarHorizontal &&
                  ["min", "max"].forEach(function (d) {
                    i.xaxis[d] !== void 0 &&
                      typeof i.xaxis[d] == "number" &&
                      (d === "min"
                        ? (e.minY = i.xaxis[d])
                        : (e.maxY = i.xaxis[d]));
                  }),
                e.isMultipleYAxis
                  ? (this.scales.setMultipleYScales(),
                    (e.minY = n),
                    e.yAxisScale.forEach(function (d, g) {
                      (e.minYArr[g] = d.niceMin), (e.maxYArr[g] = d.niceMax);
                    }))
                  : (this.scales.setYScaleForIndex(0, e.minY, e.maxY),
                    (e.minY = e.yAxisScale[0].niceMin),
                    (e.maxY = e.yAxisScale[0].niceMax),
                    (e.minYArr[0] = e.yAxisScale[0].niceMin),
                    (e.maxYArr[0] = e.yAxisScale[0].niceMax)),
                {
                  minY: e.minY,
                  maxY: e.maxY,
                  minYArr: e.minYArr,
                  maxYArr: e.maxYArr,
                  yAxisScale: e.yAxisScale,
                }
              );
            },
          },
          {
            key: "setXRange",
            value: function () {
              var e = this.w.globals,
                i = this.w.config,
                n =
                  i.xaxis.type === "numeric" ||
                  i.xaxis.type === "datetime" ||
                  (i.xaxis.type === "category" && !e.noLabelsProvided) ||
                  e.noLabelsProvided ||
                  e.isXNumeric;
              if (
                (e.isXNumeric &&
                  (function () {
                    for (var h = 0; h < e.series.length; h++)
                      if (e.labels[h])
                        for (var d = 0; d < e.labels[h].length; d++)
                          e.labels[h][d] !== null &&
                            L.isNumber(e.labels[h][d]) &&
                            ((e.maxX = Math.max(e.maxX, e.labels[h][d])),
                            (e.initialMaxX = Math.max(e.maxX, e.labels[h][d])),
                            (e.minX = Math.min(e.minX, e.labels[h][d])),
                            (e.initialMinX = Math.min(e.minX, e.labels[h][d])));
                  })(),
                e.noLabelsProvided &&
                  i.xaxis.categories.length === 0 &&
                  ((e.maxX = e.labels[e.labels.length - 1]),
                  (e.initialMaxX = e.labels[e.labels.length - 1]),
                  (e.minX = 1),
                  (e.initialMinX = 1)),
                e.isXNumeric || e.noLabelsProvided || e.dataFormatXNumeric)
              ) {
                var r;
                if (
                  (i.xaxis.tickAmount === void 0
                    ? ((r = Math.round(e.svgWidth / 150)),
                      i.xaxis.type === "numeric" &&
                        e.dataPoints < 30 &&
                        (r = e.dataPoints - 1),
                      r > e.dataPoints &&
                        e.dataPoints !== 0 &&
                        (r = e.dataPoints - 1))
                    : i.xaxis.tickAmount === "dataPoints"
                    ? (e.series.length > 1 &&
                        (r = e.series[e.maxValsInArrayIndex].length - 1),
                      e.isXNumeric && (r = e.maxX - e.minX - 1))
                    : (r = i.xaxis.tickAmount),
                  (e.xTickAmount = r),
                  i.xaxis.max !== void 0 &&
                    typeof i.xaxis.max == "number" &&
                    (e.maxX = i.xaxis.max),
                  i.xaxis.min !== void 0 &&
                    typeof i.xaxis.min == "number" &&
                    (e.minX = i.xaxis.min),
                  i.xaxis.range !== void 0 && (e.minX = e.maxX - i.xaxis.range),
                  e.minX !== Number.MAX_VALUE && e.maxX !== -Number.MAX_VALUE)
                )
                  if (i.xaxis.convertedCatToNumeric && !e.dataFormatXNumeric) {
                    for (var o = [], l = e.minX - 1; l < e.maxX; l++)
                      o.push(l + 1);
                    e.xAxisScale = {
                      result: o,
                      niceMin: o[0],
                      niceMax: o[o.length - 1],
                    };
                  } else e.xAxisScale = this.scales.setXScale(e.minX, e.maxX);
                else
                  (e.xAxisScale = this.scales.linearScale(1, r, r)),
                    e.noLabelsProvided &&
                      e.labels.length > 0 &&
                      ((e.xAxisScale = this.scales.linearScale(
                        1,
                        e.labels.length,
                        r - 1
                      )),
                      (e.seriesX = e.labels.slice()));
                n && (e.labels = e.xAxisScale.result.slice());
              }
              return (
                e.isBarHorizontal &&
                  e.labels.length &&
                  (e.xTickAmount = e.labels.length),
                this._handleSingleDataPoint(),
                this._getMinXDiff(),
                { minX: e.minX, maxX: e.maxX }
              );
            },
          },
          {
            key: "setZRange",
            value: function () {
              var e = this.w.globals;
              if (e.isDataXYZ) {
                for (var i = 0; i < e.series.length; i++)
                  if (e.seriesZ[i] !== void 0)
                    for (var n = 0; n < e.seriesZ[i].length; n++)
                      e.seriesZ[i][n] !== null &&
                        L.isNumber(e.seriesZ[i][n]) &&
                        ((e.maxZ = Math.max(e.maxZ, e.seriesZ[i][n])),
                        (e.minZ = Math.min(e.minZ, e.seriesZ[i][n])));
              }
            },
          },
          {
            key: "_handleSingleDataPoint",
            value: function () {
              var e = this.w.globals,
                i = this.w.config;
              if (e.minX === e.maxX) {
                var n = new ie(this.ctx);
                if (i.xaxis.type === "datetime") {
                  var r = n.getDate(e.minX);
                  i.xaxis.labels.datetimeUTC
                    ? r.setUTCDate(r.getUTCDate() - 2)
                    : r.setDate(r.getDate() - 2),
                    (e.minX = new Date(r).getTime());
                  var o = n.getDate(e.maxX);
                  i.xaxis.labels.datetimeUTC
                    ? o.setUTCDate(o.getUTCDate() + 2)
                    : o.setDate(o.getDate() + 2),
                    (e.maxX = new Date(o).getTime());
                } else
                  (i.xaxis.type === "numeric" ||
                    (i.xaxis.type === "category" && !e.noLabelsProvided)) &&
                    ((e.minX = e.minX - 2),
                    (e.initialMinX = e.minX),
                    (e.maxX = e.maxX + 2),
                    (e.initialMaxX = e.maxX));
              }
            },
          },
          {
            key: "_getMinXDiff",
            value: function () {
              var e = this.w.globals;
              e.isXNumeric &&
                e.seriesX.forEach(function (i, n) {
                  i.length === 1 &&
                    i.push(
                      e.seriesX[e.maxValsInArrayIndex][
                        e.seriesX[e.maxValsInArrayIndex].length - 1
                      ]
                    );
                  var r = i.slice();
                  r.sort(function (o, l) {
                    return o - l;
                  }),
                    r.forEach(function (o, l) {
                      if (l > 0) {
                        var h = o - r[l - 1];
                        h > 0 && (e.minXDiff = Math.min(h, e.minXDiff));
                      }
                    }),
                    (e.dataPoints !== 1 && e.minXDiff !== Number.MAX_VALUE) ||
                      (e.minXDiff = 0.5);
                });
            },
          },
          {
            key: "_setStackedMinMax",
            value: function () {
              var e = this,
                i = this.w.globals;
              if (i.series.length) {
                var n = i.seriesGroups;
                n.length ||
                  (n = [
                    this.w.config.series.map(function (l) {
                      return l.name;
                    }),
                  ]);
                var r = {},
                  o = {};
                n.forEach(function (l) {
                  (r[l] = []),
                    (o[l] = []),
                    e.w.config.series
                      .map(function (h, d) {
                        return l.indexOf(h.name) > -1 ? d : null;
                      })
                      .filter(function (h) {
                        return h !== null;
                      })
                      .forEach(function (h) {
                        for (
                          var d = 0;
                          d < i.series[i.maxValsInArrayIndex].length;
                          d++
                        )
                          r[l][d] === void 0 && ((r[l][d] = 0), (o[l][d] = 0)),
                            i.series[h][d] !== null &&
                              L.isNumber(i.series[h][d]) &&
                              (i.series[h][d] > 0
                                ? (r[l][d] += parseFloat(i.series[h][d]) + 1e-4)
                                : (o[l][d] += parseFloat(i.series[h][d])));
                      });
                }),
                  Object.entries(r).forEach(function (l) {
                    var h = q(l, 1)[0];
                    r[h].forEach(function (d, g) {
                      (i.maxY = Math.max(i.maxY, r[h][g])),
                        (i.minY = Math.min(i.minY, o[h][g]));
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    Qt = (function () {
      function T(e, i) {
        p(this, T), (this.ctx = e), (this.elgrid = i), (this.w = e.w);
        var n = this.w;
        (this.xaxisFontSize = n.config.xaxis.labels.style.fontSize),
          (this.axisFontFamily = n.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = n.config.xaxis.labels.style.colors),
          (this.isCategoryBarHorizontal =
            n.config.chart.type === "bar" &&
            n.config.plotOptions.bar.horizontal),
          (this.xAxisoffX = 0),
          n.config.xaxis.position === "bottom" &&
            (this.xAxisoffX = n.globals.gridHeight),
          (this.drawnLabels = []),
          (this.axesUtils = new Ze(e));
      }
      return (
        S(T, [
          {
            key: "drawYaxis",
            value: function (e) {
              var i = this,
                n = this.w,
                r = new X(this.ctx),
                o = n.config.yaxis[e].labels.style,
                l = o.fontSize,
                h = o.fontFamily,
                d = o.fontWeight,
                g = r.group({
                  class: "apexcharts-yaxis",
                  rel: e,
                  transform:
                    "translate(" + n.globals.translateYAxisX[e] + ", 0)",
                });
              if (this.axesUtils.isYAxisHidden(e)) return g;
              var m = r.group({ class: "apexcharts-yaxis-texts-g" });
              g.add(m);
              var x = n.globals.yAxisScale[e].result.length - 1,
                v = n.globals.gridHeight / x,
                w = n.globals.translateY,
                C = n.globals.yLabelFormatters[e],
                P = n.globals.yAxisScale[e].result.slice();
              P = this.axesUtils.checkForReversedLabels(e, P);
              var M = "";
              if (n.config.yaxis[e].labels.show)
                for (
                  var I = function ($) {
                      var Z = P[$];
                      Z = C(Z, $, n);
                      var re = n.config.yaxis[e].labels.padding;
                      n.config.yaxis[e].opposite &&
                        n.config.yaxis.length !== 0 &&
                        (re *= -1);
                      var ce = "end";
                      n.config.yaxis[e].opposite && (ce = "start"),
                        n.config.yaxis[e].labels.align === "left"
                          ? (ce = "start")
                          : n.config.yaxis[e].labels.align === "center"
                          ? (ce = "middle")
                          : n.config.yaxis[e].labels.align === "right" &&
                            (ce = "end");
                      var oe = i.axesUtils.getYAxisForeColor(o.colors, e),
                        de = r.drawText({
                          x: re,
                          y: w + x / 10 + n.config.yaxis[e].labels.offsetY + 1,
                          text: Z,
                          textAnchor: ce,
                          fontSize: l,
                          fontFamily: h,
                          fontWeight: d,
                          maxWidth: n.config.yaxis[e].labels.maxWidth,
                          foreColor: Array.isArray(oe) ? oe[$] : oe,
                          isPlainText: !1,
                          cssClass: "apexcharts-yaxis-label " + o.cssClass,
                        });
                      $ === x && (M = de), m.add(de);
                      var Pe = document.createElementNS(
                        n.globals.SVGNS,
                        "title"
                      );
                      if (
                        ((Pe.textContent = Array.isArray(Z) ? Z.join(" ") : Z),
                        de.node.appendChild(Pe),
                        n.config.yaxis[e].labels.rotate !== 0)
                      ) {
                        var Re = r.rotateAroundCenter(M.node),
                          Oe = r.rotateAroundCenter(de.node);
                        de.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(n.config.yaxis[e].labels.rotate, " ")
                            .concat(Re.x, " ")
                            .concat(Oe.y, ")")
                        );
                      }
                      w += v;
                    },
                    D = x;
                  D >= 0;
                  D--
                )
                  I(D);
              if (n.config.yaxis[e].title.text !== void 0) {
                var f = r.group({ class: "apexcharts-yaxis-title" }),
                  y = 0;
                n.config.yaxis[e].opposite &&
                  (y = n.globals.translateYAxisX[e]);
                var A = r.drawText({
                  x: y,
                  y:
                    n.globals.gridHeight / 2 +
                    n.globals.translateY +
                    n.config.yaxis[e].title.offsetY,
                  text: n.config.yaxis[e].title.text,
                  textAnchor: "end",
                  foreColor: n.config.yaxis[e].title.style.color,
                  fontSize: n.config.yaxis[e].title.style.fontSize,
                  fontWeight: n.config.yaxis[e].title.style.fontWeight,
                  fontFamily: n.config.yaxis[e].title.style.fontFamily,
                  cssClass:
                    "apexcharts-yaxis-title-text " +
                    n.config.yaxis[e].title.style.cssClass,
                });
                f.add(A), g.add(f);
              }
              var _ = n.config.yaxis[e].axisBorder,
                z = 31 + _.offsetX;
              if (
                (n.config.yaxis[e].opposite && (z = -31 - _.offsetX), _.show)
              ) {
                var B = r.drawLine(
                  z,
                  n.globals.translateY + _.offsetY - 2,
                  z,
                  n.globals.gridHeight + n.globals.translateY + _.offsetY + 2,
                  _.color,
                  0,
                  _.width
                );
                g.add(B);
              }
              return (
                n.config.yaxis[e].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    z,
                    x,
                    _,
                    n.config.yaxis[e].axisTicks,
                    e,
                    v,
                    g
                  ),
                g
              );
            },
          },
          {
            key: "drawYaxisInversed",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx),
                r = n.group({
                  class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                }),
                o = n.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(i.globals.translateXAxisX, ", ")
                    .concat(i.globals.translateXAxisY, ")"),
                });
              r.add(o);
              var l = i.globals.yAxisScale[e].result.length - 1,
                h = i.globals.gridWidth / l + 0.1,
                d = h + i.config.xaxis.labels.offsetX,
                g = i.globals.xLabelFormatter,
                m = i.globals.yAxisScale[e].result.slice(),
                x = i.globals.timescaleLabels;
              x.length > 0 &&
                ((this.xaxisLabels = x.slice()), (l = (m = x.slice()).length)),
                (m = this.axesUtils.checkForReversedLabels(e, m));
              var v = x.length;
              if (i.config.xaxis.labels.show)
                for (var w = v ? 0 : l; v ? w < v : w >= 0; v ? w++ : w--) {
                  var C = m[w];
                  C = g(C, w, i);
                  var P =
                    i.globals.gridWidth +
                    i.globals.padHorizontal -
                    (d - h + i.config.xaxis.labels.offsetX);
                  if (x.length) {
                    var M = this.axesUtils.getLabel(
                      m,
                      x,
                      P,
                      w,
                      this.drawnLabels,
                      this.xaxisFontSize
                    );
                    (P = M.x),
                      (C = M.text),
                      this.drawnLabels.push(M.text),
                      w === 0 && i.globals.skipFirstTimelinelabel && (C = ""),
                      w === m.length - 1 &&
                        i.globals.skipLastTimelinelabel &&
                        (C = "");
                  }
                  var I = n.drawText({
                    x: P,
                    y:
                      this.xAxisoffX +
                      i.config.xaxis.labels.offsetY +
                      30 -
                      (i.config.xaxis.position === "top"
                        ? i.globals.xAxisHeight +
                          i.config.xaxis.axisTicks.height -
                          2
                        : 0),
                    text: C,
                    textAnchor: "middle",
                    foreColor: Array.isArray(this.xaxisForeColors)
                      ? this.xaxisForeColors[e]
                      : this.xaxisForeColors,
                    fontSize: this.xaxisFontSize,
                    fontFamily: this.xaxisFontFamily,
                    fontWeight: i.config.xaxis.labels.style.fontWeight,
                    isPlainText: !1,
                    cssClass:
                      "apexcharts-xaxis-label " +
                      i.config.xaxis.labels.style.cssClass,
                  });
                  o.add(I), I.tspan(C);
                  var D = document.createElementNS(i.globals.SVGNS, "title");
                  (D.textContent = C), I.node.appendChild(D), (d += h);
                }
              return (
                this.inversedYAxisTitleText(r), this.inversedYAxisBorder(r), r
              );
            },
          },
          {
            key: "inversedYAxisBorder",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx),
                r = i.config.xaxis.axisBorder;
              if (r.show) {
                var o = 0;
                i.config.chart.type === "bar" &&
                  i.globals.isXNumeric &&
                  (o -= 15);
                var l = n.drawLine(
                  i.globals.padHorizontal + o + r.offsetX,
                  this.xAxisoffX,
                  i.globals.gridWidth,
                  this.xAxisoffX,
                  r.color,
                  0,
                  r.height
                );
                this.elgrid && this.elgrid.elGridBorders && i.config.grid.show
                  ? this.elgrid.elGridBorders.add(l)
                  : e.add(l);
              }
            },
          },
          {
            key: "inversedYAxisTitleText",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx);
              if (i.config.xaxis.title.text !== void 0) {
                var r = n.group({
                    class:
                      "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                  }),
                  o = n.drawText({
                    x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                    y:
                      this.xAxisoffX +
                      parseFloat(this.xaxisFontSize) +
                      parseFloat(i.config.xaxis.title.style.fontSize) +
                      i.config.xaxis.title.offsetY +
                      20,
                    text: i.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: i.config.xaxis.title.style.fontSize,
                    fontFamily: i.config.xaxis.title.style.fontFamily,
                    fontWeight: i.config.xaxis.title.style.fontWeight,
                    foreColor: i.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      i.config.xaxis.title.style.cssClass,
                  });
                r.add(o), e.add(r);
              }
            },
          },
          {
            key: "yAxisTitleRotate",
            value: function (e, i) {
              var n = this.w,
                r = new X(this.ctx),
                o = { width: 0, height: 0 },
                l = { width: 0, height: 0 },
                h = n.globals.dom.baseEl.querySelector(
                  " .apexcharts-yaxis[rel='".concat(
                    e,
                    "'] .apexcharts-yaxis-texts-g"
                  )
                );
              h !== null && (o = h.getBoundingClientRect());
              var d = n.globals.dom.baseEl.querySelector(
                ".apexcharts-yaxis[rel='".concat(
                  e,
                  "'] .apexcharts-yaxis-title text"
                )
              );
              if ((d !== null && (l = d.getBoundingClientRect()), d !== null)) {
                var g = this.xPaddingForYAxisTitle(e, o, l, i);
                d.setAttribute("x", g.xPos - (i ? 10 : 0));
              }
              if (d !== null) {
                var m = r.rotateAroundCenter(d);
                d.setAttribute(
                  "transform",
                  "rotate("
                    .concat(
                      i
                        ? -1 * n.config.yaxis[e].title.rotate
                        : n.config.yaxis[e].title.rotate,
                      " "
                    )
                    .concat(m.x, " ")
                    .concat(m.y, ")")
                );
              }
            },
          },
          {
            key: "xPaddingForYAxisTitle",
            value: function (e, i, n, r) {
              var o = this.w,
                l = 0,
                h = 0,
                d = 10;
              return o.config.yaxis[e].title.text === void 0 || e < 0
                ? { xPos: h, padd: 0 }
                : (r
                    ? ((h =
                        i.width +
                        o.config.yaxis[e].title.offsetX +
                        n.width / 2 +
                        d / 2),
                      (l += 1) === 0 && (h -= d / 2))
                    : ((h =
                        -1 * i.width +
                        o.config.yaxis[e].title.offsetX +
                        d / 2 +
                        n.width / 2),
                      o.globals.isBarHorizontal &&
                        ((d = 25),
                        (h =
                          -1 * i.width - o.config.yaxis[e].title.offsetX - d))),
                  { xPos: h, padd: d });
            },
          },
          {
            key: "setYAxisXPosition",
            value: function (e, i) {
              var n = this.w,
                r = 0,
                o = 0,
                l = 18,
                h = 1;
              n.config.yaxis.length > 1 && (this.multipleYs = !0),
                n.config.yaxis.map(function (d, g) {
                  var m =
                      n.globals.ignoreYAxisIndexes.indexOf(g) > -1 ||
                      !d.show ||
                      d.floating ||
                      e[g].width === 0,
                    x = e[g].width + i[g].width;
                  d.opposite
                    ? n.globals.isBarHorizontal
                      ? ((o = n.globals.gridWidth + n.globals.translateX - 1),
                        (n.globals.translateYAxisX[g] = o - d.labels.offsetX))
                      : ((o = n.globals.gridWidth + n.globals.translateX + h),
                        m || (h = h + x + 20),
                        (n.globals.translateYAxisX[g] =
                          o - d.labels.offsetX + 20))
                    : ((r = n.globals.translateX - l),
                      m || (l = l + x + 20),
                      (n.globals.translateYAxisX[g] = r + d.labels.offsetX));
                });
            },
          },
          {
            key: "setYAxisTextAlignments",
            value: function () {
              var e = this.w,
                i =
                  e.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-yaxis"
                  );
              (i = L.listToArray(i)).forEach(function (n, r) {
                var o = e.config.yaxis[r];
                if (o && !o.floating && o.labels.align !== void 0) {
                  var l = e.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        r,
                        "'] .apexcharts-yaxis-texts-g"
                      )
                    ),
                    h = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis[rel='".concat(
                        r,
                        "'] .apexcharts-yaxis-label"
                      )
                    );
                  h = L.listToArray(h);
                  var d = l.getBoundingClientRect();
                  o.labels.align === "left"
                    ? (h.forEach(function (g, m) {
                        g.setAttribute("text-anchor", "start");
                      }),
                      o.opposite ||
                        l.setAttribute(
                          "transform",
                          "translate(-".concat(d.width, ", 0)")
                        ))
                    : o.labels.align === "center"
                    ? (h.forEach(function (g, m) {
                        g.setAttribute("text-anchor", "middle");
                      }),
                      l.setAttribute(
                        "transform",
                        "translate(".concat(
                          (d.width / 2) * (o.opposite ? 1 : -1),
                          ", 0)"
                        )
                      ))
                    : o.labels.align === "right" &&
                      (h.forEach(function (g, m) {
                        g.setAttribute("text-anchor", "end");
                      }),
                      o.opposite &&
                        l.setAttribute(
                          "transform",
                          "translate(".concat(d.width, ", 0)")
                        ));
                }
              });
            },
          },
        ]),
        T
      );
    })(),
    Wt = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.documentEvent = L.bind(this.documentEvent, this));
      }
      return (
        S(T, [
          {
            key: "addEventListener",
            value: function (e, i) {
              var n = this.w;
              n.globals.events.hasOwnProperty(e)
                ? n.globals.events[e].push(i)
                : (n.globals.events[e] = [i]);
            },
          },
          {
            key: "removeEventListener",
            value: function (e, i) {
              var n = this.w;
              if (n.globals.events.hasOwnProperty(e)) {
                var r = n.globals.events[e].indexOf(i);
                r !== -1 && n.globals.events[e].splice(r, 1);
              }
            },
          },
          {
            key: "fireEvent",
            value: function (e, i) {
              var n = this.w;
              if (n.globals.events.hasOwnProperty(e)) {
                (i && i.length) || (i = []);
                for (
                  var r = n.globals.events[e], o = r.length, l = 0;
                  l < o;
                  l++
                )
                  r[l].apply(null, i);
              }
            },
          },
          {
            key: "setupEventHandlers",
            value: function () {
              var e = this,
                i = this.w,
                n = this.ctx,
                r = i.globals.dom.baseEl.querySelector(i.globals.chartClass);
              this.ctx.eventList.forEach(function (o) {
                r.addEventListener(
                  o,
                  function (l) {
                    var h = Object.assign({}, i, {
                      seriesIndex: i.globals.capturedSeriesIndex,
                      dataPointIndex: i.globals.capturedDataPointIndex,
                    });
                    l.type === "mousemove" || l.type === "touchmove"
                      ? typeof i.config.chart.events.mouseMove == "function" &&
                        i.config.chart.events.mouseMove(l, n, h)
                      : l.type === "mouseleave" || l.type === "touchleave"
                      ? typeof i.config.chart.events.mouseLeave == "function" &&
                        i.config.chart.events.mouseLeave(l, n, h)
                      : ((l.type === "mouseup" && l.which === 1) ||
                          l.type === "touchend") &&
                        (typeof i.config.chart.events.click == "function" &&
                          i.config.chart.events.click(l, n, h),
                        n.ctx.events.fireEvent("click", [l, n, h]));
                  },
                  { capture: !1, passive: !0 }
                );
              }),
                this.ctx.eventList.forEach(function (o) {
                  i.globals.dom.baseEl.addEventListener(o, e.documentEvent, {
                    passive: !0,
                  });
                }),
                this.ctx.core.setupBrushHandler();
            },
          },
          {
            key: "documentEvent",
            value: function (e) {
              var i = this.w,
                n = e.target.className;
              if (e.type === "click") {
                var r = i.globals.dom.baseEl.querySelector(".apexcharts-menu");
                r &&
                  r.classList.contains("apexcharts-menu-open") &&
                  n !== "apexcharts-menu-icon" &&
                  r.classList.remove("apexcharts-menu-open");
              }
              (i.globals.clientX =
                e.type === "touchmove" ? e.touches[0].clientX : e.clientX),
                (i.globals.clientY =
                  e.type === "touchmove" ? e.touches[0].clientY : e.clientY);
            },
          },
        ]),
        T
      );
    })(),
    ci = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "setCurrentLocaleValues",
            value: function (e) {
              var i = this.w.config.chart.locales;
              window.Apex.chart &&
                window.Apex.chart.locales &&
                window.Apex.chart.locales.length > 0 &&
                (i = this.w.config.chart.locales.concat(
                  window.Apex.chart.locales
                ));
              var n = i.filter(function (o) {
                return o.name === e;
              })[0];
              if (!n)
                throw new Error(
                  "Wrong locale name provided. Please make sure you set the correct locale name in options"
                );
              var r = L.extend(Y, n);
              this.w.globals.locale = r.options;
            },
          },
        ]),
        T
      );
    })(),
    Se = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "drawAxis",
            value: function (e, i) {
              var n,
                r,
                o = this,
                l = this.w.globals,
                h = this.w.config,
                d = new Tt(this.ctx, i),
                g = new Qt(this.ctx, i);
              l.axisCharts &&
                e !== "radar" &&
                (l.isBarHorizontal
                  ? ((r = g.drawYaxisInversed(0)),
                    (n = d.drawXaxisInversed(0)),
                    l.dom.elGraphical.add(n),
                    l.dom.elGraphical.add(r))
                  : ((n = d.drawXaxis()),
                    l.dom.elGraphical.add(n),
                    h.yaxis.map(function (m, x) {
                      if (
                        l.ignoreYAxisIndexes.indexOf(x) === -1 &&
                        ((r = g.drawYaxis(x)),
                        l.dom.Paper.add(r),
                        o.w.config.grid.position === "back")
                      ) {
                        var v = l.dom.Paper.children()[1];
                        v.remove(), l.dom.Paper.add(v);
                      }
                    })));
            },
          },
        ]),
        T
      );
    })(),
    Ce = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "drawXCrosshairs",
            value: function () {
              var e = this.w,
                i = new X(this.ctx),
                n = new O(this.ctx),
                r = e.config.xaxis.crosshairs.fill.gradient,
                o = e.config.xaxis.crosshairs.dropShadow,
                l = e.config.xaxis.crosshairs.fill.type,
                h = r.colorFrom,
                d = r.colorTo,
                g = r.opacityFrom,
                m = r.opacityTo,
                x = r.stops,
                v = o.enabled,
                w = o.left,
                C = o.top,
                P = o.blur,
                M = o.color,
                I = o.opacity,
                D = e.config.xaxis.crosshairs.fill.color;
              if (e.config.xaxis.crosshairs.show) {
                l === "gradient" &&
                  (D = i.drawGradient("vertical", h, d, g, m, null, x, null));
                var f = i.drawRect();
                e.config.xaxis.crosshairs.width === 1 && (f = i.drawLine());
                var y = e.globals.gridHeight;
                (!L.isNumber(y) || y < 0) && (y = 0);
                var A = e.config.xaxis.crosshairs.width;
                (!L.isNumber(A) || A < 0) && (A = 0),
                  f.attr({
                    class: "apexcharts-xcrosshairs",
                    x: 0,
                    y: 0,
                    y2: y,
                    width: A,
                    height: y,
                    fill: D,
                    filter: "none",
                    "fill-opacity": e.config.xaxis.crosshairs.opacity,
                    stroke: e.config.xaxis.crosshairs.stroke.color,
                    "stroke-width": e.config.xaxis.crosshairs.stroke.width,
                    "stroke-dasharray":
                      e.config.xaxis.crosshairs.stroke.dashArray,
                  }),
                  v &&
                    (f = n.dropShadow(f, {
                      left: w,
                      top: C,
                      blur: P,
                      color: M,
                      opacity: I,
                    })),
                  e.globals.dom.elGraphical.add(f);
              }
            },
          },
          {
            key: "drawYCrosshairs",
            value: function () {
              var e = this.w,
                i = new X(this.ctx),
                n = e.config.yaxis[0].crosshairs,
                r = e.globals.barPadForNumericAxis;
              if (e.config.yaxis[0].crosshairs.show) {
                var o = i.drawLine(
                  -r,
                  0,
                  e.globals.gridWidth + r,
                  0,
                  n.stroke.color,
                  n.stroke.dashArray,
                  n.stroke.width
                );
                o.attr({ class: "apexcharts-ycrosshairs" }),
                  e.globals.dom.elGraphical.add(o);
              }
              var l = i.drawLine(
                -r,
                0,
                e.globals.gridWidth + r,
                0,
                n.stroke.color,
                0,
                0
              );
              l.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                e.globals.dom.elGraphical.add(l);
            },
          },
        ]),
        T
      );
    })(),
    ze = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "checkResponsiveConfig",
            value: function (e) {
              var i = this,
                n = this.w,
                r = n.config;
              if (r.responsive.length !== 0) {
                var o = r.responsive.slice();
                o.sort(function (g, m) {
                  return g.breakpoint > m.breakpoint
                    ? 1
                    : m.breakpoint > g.breakpoint
                    ? -1
                    : 0;
                }).reverse();
                var l = new xe({}),
                  h = function () {
                    var g =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : {},
                      m = o[0].breakpoint,
                      x =
                        window.innerWidth > 0
                          ? window.innerWidth
                          : screen.width;
                    if (x > m) {
                      var v = W.extendArrayProps(l, n.globals.initialConfig, n);
                      (g = L.extend(v, g)),
                        (g = L.extend(n.config, g)),
                        i.overrideResponsiveOptions(g);
                    } else
                      for (var w = 0; w < o.length; w++)
                        x < o[w].breakpoint &&
                          ((g = W.extendArrayProps(l, o[w].options, n)),
                          (g = L.extend(n.config, g)),
                          i.overrideResponsiveOptions(g));
                  };
                if (e) {
                  var d = W.extendArrayProps(l, e, n);
                  (d = L.extend(n.config, d)), h((d = L.extend(d, e)));
                } else h({});
              }
            },
          },
          {
            key: "overrideResponsiveOptions",
            value: function (e) {
              var i = new xe(e).init({ responsiveOverride: !0 });
              this.w.config = i;
            },
          },
        ]),
        T
      );
    })(),
    Ie = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.colors = []), (this.w = e.w);
        var i = this.w;
        (this.isColorFn = !1),
          (this.isHeatmapDistributed =
            (i.config.chart.type === "treemap" &&
              i.config.plotOptions.treemap.distributed) ||
            (i.config.chart.type === "heatmap" &&
              i.config.plotOptions.heatmap.distributed)),
          (this.isBarDistributed =
            i.config.plotOptions.bar.distributed &&
            (i.config.chart.type === "bar" ||
              i.config.chart.type === "rangeBar"));
      }
      return (
        S(T, [
          {
            key: "init",
            value: function () {
              this.setDefaultColors();
            },
          },
          {
            key: "setDefaultColors",
            value: function () {
              var e,
                i = this,
                n = this.w,
                r = new L();
              if (
                (n.globals.dom.elWrap.classList.add(
                  "apexcharts-theme-".concat(n.config.theme.mode)
                ),
                n.config.colors === void 0 ||
                ((e = n.config.colors) === null || e === void 0
                  ? void 0
                  : e.length) === 0
                  ? (n.globals.colors = this.predefined())
                  : ((n.globals.colors = n.config.colors),
                    Array.isArray(n.config.colors) &&
                      n.config.colors.length > 0 &&
                      typeof n.config.colors[0] == "function" &&
                      (n.globals.colors = n.config.series.map(function (C, P) {
                        var M = n.config.colors[P];
                        return (
                          M || (M = n.config.colors[0]),
                          typeof M == "function"
                            ? ((i.isColorFn = !0),
                              M({
                                value: n.globals.axisCharts
                                  ? n.globals.series[P][0]
                                    ? n.globals.series[P][0]
                                    : 0
                                  : n.globals.series[P],
                                seriesIndex: P,
                                dataPointIndex: P,
                                w: n,
                              }))
                            : M
                        );
                      }))),
                n.globals.seriesColors.map(function (C, P) {
                  C && (n.globals.colors[P] = C);
                }),
                n.config.theme.monochrome.enabled)
              ) {
                var o = [],
                  l = n.globals.series.length;
                (this.isBarDistributed || this.isHeatmapDistributed) &&
                  (l = n.globals.series[0].length * n.globals.series.length);
                for (
                  var h = n.config.theme.monochrome.color,
                    d = 1 / (l / n.config.theme.monochrome.shadeIntensity),
                    g = n.config.theme.monochrome.shadeTo,
                    m = 0,
                    x = 0;
                  x < l;
                  x++
                ) {
                  var v = void 0;
                  g === "dark"
                    ? ((v = r.shadeColor(-1 * m, h)), (m += d))
                    : ((v = r.shadeColor(m, h)), (m += d)),
                    o.push(v);
                }
                n.globals.colors = o.slice();
              }
              var w = n.globals.colors.slice();
              this.pushExtraColors(n.globals.colors),
                ["fill", "stroke"].forEach(function (C) {
                  n.config[C].colors === void 0
                    ? (n.globals[C].colors = i.isColorFn ? n.config.colors : w)
                    : (n.globals[C].colors = n.config[C].colors.slice()),
                    i.pushExtraColors(n.globals[C].colors);
                }),
                n.config.dataLabels.style.colors === void 0
                  ? (n.globals.dataLabels.style.colors = w)
                  : (n.globals.dataLabels.style.colors =
                      n.config.dataLabels.style.colors.slice()),
                this.pushExtraColors(n.globals.dataLabels.style.colors, 50),
                n.config.plotOptions.radar.polygons.fill.colors === void 0
                  ? (n.globals.radarPolygons.fill.colors = [
                      n.config.theme.mode === "dark" ? "#424242" : "none",
                    ])
                  : (n.globals.radarPolygons.fill.colors =
                      n.config.plotOptions.radar.polygons.fill.colors.slice()),
                this.pushExtraColors(n.globals.radarPolygons.fill.colors, 20),
                n.config.markers.colors === void 0
                  ? (n.globals.markers.colors = w)
                  : (n.globals.markers.colors =
                      n.config.markers.colors.slice()),
                this.pushExtraColors(n.globals.markers.colors);
            },
          },
          {
            key: "pushExtraColors",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                r = this.w,
                o = i || r.globals.series.length;
              if (
                (n === null &&
                  (n =
                    this.isBarDistributed ||
                    this.isHeatmapDistributed ||
                    (r.config.chart.type === "heatmap" &&
                      r.config.plotOptions.heatmap.colorScale.inverse)),
                n &&
                  r.globals.series.length &&
                  (o =
                    r.globals.series[r.globals.maxValsInArrayIndex].length *
                    r.globals.series.length),
                e.length < o)
              )
                for (var l = o - e.length, h = 0; h < l; h++) e.push(e[h]);
            },
          },
          {
            key: "updateThemeOptions",
            value: function (e) {
              (e.chart = e.chart || {}), (e.tooltip = e.tooltip || {});
              var i = e.theme.mode || "light",
                n = e.theme.palette
                  ? e.theme.palette
                  : i === "dark"
                  ? "palette4"
                  : "palette1",
                r = e.chart.foreColor
                  ? e.chart.foreColor
                  : i === "dark"
                  ? "#f6f7f8"
                  : "#373d3f";
              return (
                (e.tooltip.theme = i),
                (e.chart.foreColor = r),
                (e.theme.palette = n),
                e
              );
            },
          },
          {
            key: "predefined",
            value: function () {
              switch (this.w.config.theme.palette) {
                case "palette1":
                default:
                  this.colors = [
                    "#008FFB",
                    "#00E396",
                    "#FEB019",
                    "#FF4560",
                    "#775DD0",
                  ];
                  break;
                case "palette2":
                  this.colors = [
                    "#3f51b5",
                    "#03a9f4",
                    "#4caf50",
                    "#f9ce1d",
                    "#FF9800",
                  ];
                  break;
                case "palette3":
                  this.colors = [
                    "#33b2df",
                    "#546E7A",
                    "#d4526e",
                    "#13d8aa",
                    "#A5978B",
                  ];
                  break;
                case "palette4":
                  this.colors = [
                    "#4ecdc4",
                    "#c7f464",
                    "#81D4FA",
                    "#fd6a6a",
                    "#546E7A",
                  ];
                  break;
                case "palette5":
                  this.colors = [
                    "#2b908f",
                    "#f9a3a4",
                    "#90ee7e",
                    "#fa4443",
                    "#69d2e7",
                  ];
                  break;
                case "palette6":
                  this.colors = [
                    "#449DD1",
                    "#F86624",
                    "#EA3546",
                    "#662E9B",
                    "#C5D86D",
                  ];
                  break;
                case "palette7":
                  this.colors = [
                    "#D7263D",
                    "#1B998B",
                    "#2E294E",
                    "#F46036",
                    "#E2C044",
                  ];
                  break;
                case "palette8":
                  this.colors = [
                    "#662E9B",
                    "#F86624",
                    "#F9C80E",
                    "#EA3546",
                    "#43BCCD",
                  ];
                  break;
                case "palette9":
                  this.colors = [
                    "#5C4742",
                    "#A5978B",
                    "#8D5B4C",
                    "#5A2A27",
                    "#C4BBAF",
                  ];
                  break;
                case "palette10":
                  this.colors = [
                    "#A300D6",
                    "#7D02EB",
                    "#5653FE",
                    "#2983FF",
                    "#00B1F2",
                  ];
              }
              return this.colors;
            },
          },
        ]),
        T
      );
    })(),
    bi = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function () {
              this.drawTitleSubtitle("title"),
                this.drawTitleSubtitle("subtitle");
            },
          },
          {
            key: "drawTitleSubtitle",
            value: function (e) {
              var i = this.w,
                n = e === "title" ? i.config.title : i.config.subtitle,
                r = i.globals.svgWidth / 2,
                o = n.offsetY,
                l = "middle";
              if (
                (n.align === "left"
                  ? ((r = 10), (l = "start"))
                  : n.align === "right" &&
                    ((r = i.globals.svgWidth - 10), (l = "end")),
                (r += n.offsetX),
                (o = o + parseInt(n.style.fontSize, 10) + n.margin / 2),
                n.text !== void 0)
              ) {
                var h = new X(this.ctx).drawText({
                  x: r,
                  y: o,
                  text: n.text,
                  textAnchor: l,
                  fontSize: n.style.fontSize,
                  fontFamily: n.style.fontFamily,
                  fontWeight: n.style.fontWeight,
                  foreColor: n.style.color,
                  opacity: 1,
                });
                h.node.setAttribute("class", "apexcharts-".concat(e, "-text")),
                  i.globals.dom.Paper.add(h);
              }
            },
          },
        ]),
        T
      );
    })(),
    wi = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.dCtx = e);
      }
      return (
        S(T, [
          {
            key: "getTitleSubtitleCoords",
            value: function (e) {
              var i = this.w,
                n = 0,
                r = 0,
                o =
                  e === "title"
                    ? i.config.title.floating
                    : i.config.subtitle.floating,
                l = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(e, "-text")
                );
              if (l !== null && !o) {
                var h = l.getBoundingClientRect();
                (n = h.width),
                  (r = i.globals.axisCharts ? h.height + 5 : h.height);
              }
              return { width: n, height: r };
            },
          },
          {
            key: "getLegendsRect",
            value: function () {
              var e = this.w,
                i = e.globals.dom.elLegendWrap;
              e.config.legend.height ||
                (e.config.legend.position !== "top" &&
                  e.config.legend.position !== "bottom") ||
                (i.style.maxHeight = e.globals.svgHeight / 2 + "px");
              var n = Object.assign({}, L.getBoundingClientRect(i));
              return (
                i !== null && !e.config.legend.floating && e.config.legend.show
                  ? (this.dCtx.lgRect = {
                      x: n.x,
                      y: n.y,
                      height: n.height,
                      width: n.height === 0 ? 0 : n.width,
                    })
                  : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                (e.config.legend.position !== "left" &&
                  e.config.legend.position !== "right") ||
                  (1.5 * this.dCtx.lgRect.width > e.globals.svgWidth &&
                    (this.dCtx.lgRect.width = e.globals.svgWidth / 1.5)),
                this.dCtx.lgRect
              );
            },
          },
          {
            key: "getLargestStringFromMultiArr",
            value: function (e, i) {
              var n = e;
              if (this.w.globals.isMultiLineX) {
                var r = i.map(function (l, h) {
                    return Array.isArray(l) ? l.length : 1;
                  }),
                  o = Math.max.apply(Math, K(r));
                n = i[r.indexOf(o)];
              }
              return n;
            },
          },
        ]),
        T
      );
    })(),
    La = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.dCtx = e);
      }
      return (
        S(T, [
          {
            key: "getxAxisLabelsCoords",
            value: function () {
              var e,
                i = this.w,
                n = i.globals.labels.slice();
              if (
                (i.config.xaxis.convertedCatToNumeric &&
                  n.length === 0 &&
                  (n = i.globals.categoryLabels),
                i.globals.timescaleLabels.length > 0)
              ) {
                var r = this.getxAxisTimeScaleLabelsCoords();
                (e = { width: r.width, height: r.height }),
                  (i.globals.rotateXLabels = !1);
              } else {
                this.dCtx.lgWidthForSideLegends =
                  (i.config.legend.position !== "left" &&
                    i.config.legend.position !== "right") ||
                  i.config.legend.floating
                    ? 0
                    : this.dCtx.lgRect.width;
                var o = i.globals.xLabelFormatter,
                  l = L.getLargestStringFromArr(n),
                  h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(l, n);
                i.globals.isBarHorizontal &&
                  (h = l =
                    i.globals.yAxisScale[0].result.reduce(function (C, P) {
                      return C.length > P.length ? C : P;
                    }, 0));
                var d = new ke(this.dCtx.ctx),
                  g = l;
                (l = d.xLabelFormat(o, l, g, {
                  i: void 0,
                  dateFormatter: new ie(this.dCtx.ctx).formatDate,
                  w: i,
                })),
                  (h = d.xLabelFormat(o, h, g, {
                    i: void 0,
                    dateFormatter: new ie(this.dCtx.ctx).formatDate,
                    w: i,
                  })),
                  ((i.config.xaxis.convertedCatToNumeric && l === void 0) ||
                    String(l).trim() === "") &&
                    (h = l = "1");
                var m = new X(this.dCtx.ctx),
                  x = m.getTextRects(l, i.config.xaxis.labels.style.fontSize),
                  v = x;
                if (
                  (l !== h &&
                    (v = m.getTextRects(
                      h,
                      i.config.xaxis.labels.style.fontSize
                    )),
                  ((e = {
                    width: x.width >= v.width ? x.width : v.width,
                    height: x.height >= v.height ? x.height : v.height,
                  }).width *
                    n.length >
                    i.globals.svgWidth -
                      this.dCtx.lgWidthForSideLegends -
                      this.dCtx.yAxisWidth -
                      this.dCtx.gridPad.left -
                      this.dCtx.gridPad.right &&
                    i.config.xaxis.labels.rotate !== 0) ||
                    i.config.xaxis.labels.rotateAlways)
                ) {
                  if (!i.globals.isBarHorizontal) {
                    i.globals.rotateXLabels = !0;
                    var w = function (C) {
                      return m.getTextRects(
                        C,
                        i.config.xaxis.labels.style.fontSize,
                        i.config.xaxis.labels.style.fontFamily,
                        "rotate(".concat(i.config.xaxis.labels.rotate, " 0 0)"),
                        !1
                      );
                    };
                    (x = w(l)),
                      l !== h && (v = w(h)),
                      (e.height =
                        (x.height > v.height ? x.height : v.height) / 1.5),
                      (e.width = x.width > v.width ? x.width : v.width);
                  }
                } else i.globals.rotateXLabels = !1;
              }
              return (
                i.config.xaxis.labels.show || (e = { width: 0, height: 0 }),
                { width: e.width, height: e.height }
              );
            },
          },
          {
            key: "getxAxisGroupLabelsCoords",
            value: function () {
              var e,
                i = this.w;
              if (!i.globals.hasXaxisGroups) return { width: 0, height: 0 };
              var n,
                r =
                  ((e = i.config.xaxis.group.style) === null || e === void 0
                    ? void 0
                    : e.fontSize) || i.config.xaxis.labels.style.fontSize,
                o = i.globals.groups.map(function (x) {
                  return x.title;
                }),
                l = L.getLargestStringFromArr(o),
                h = this.dCtx.dimHelpers.getLargestStringFromMultiArr(l, o),
                d = new X(this.dCtx.ctx),
                g = d.getTextRects(l, r),
                m = g;
              return (
                l !== h && (m = d.getTextRects(h, r)),
                (n = {
                  width: g.width >= m.width ? g.width : m.width,
                  height: g.height >= m.height ? g.height : m.height,
                }),
                i.config.xaxis.labels.show || (n = { width: 0, height: 0 }),
                { width: n.width, height: n.height }
              );
            },
          },
          {
            key: "getxAxisTitleCoords",
            value: function () {
              var e = this.w,
                i = 0,
                n = 0;
              if (e.config.xaxis.title.text !== void 0) {
                var r = new X(this.dCtx.ctx).getTextRects(
                  e.config.xaxis.title.text,
                  e.config.xaxis.title.style.fontSize
                );
                (i = r.width), (n = r.height);
              }
              return { width: i, height: n };
            },
          },
          {
            key: "getxAxisTimeScaleLabelsCoords",
            value: function () {
              var e,
                i = this.w;
              this.dCtx.timescaleLabels = i.globals.timescaleLabels.slice();
              var n = this.dCtx.timescaleLabels.map(function (o) {
                  return o.value;
                }),
                r = n.reduce(function (o, l) {
                  return o === void 0
                    ? (console.error(
                        "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"
                      ),
                      0)
                    : o.length > l.length
                    ? o
                    : l;
                }, 0);
              return (
                1.05 *
                  (e = new X(this.dCtx.ctx).getTextRects(
                    r,
                    i.config.xaxis.labels.style.fontSize
                  )).width *
                  n.length >
                  i.globals.gridWidth &&
                  i.config.xaxis.labels.rotate !== 0 &&
                  (i.globals.overlappingXLabels = !0),
                e
              );
            },
          },
          {
            key: "additionalPaddingXLabels",
            value: function (e) {
              var i = this,
                n = this.w,
                r = n.globals,
                o = n.config,
                l = o.xaxis.type,
                h = e.width;
              (r.skipLastTimelinelabel = !1), (r.skipFirstTimelinelabel = !1);
              var d = n.config.yaxis[0].opposite && n.globals.isBarHorizontal,
                g = function (m, x) {
                  (o.yaxis.length > 1 &&
                    (function (v) {
                      return r.collapsedSeriesIndices.indexOf(v) !== -1;
                    })(x)) ||
                    (function (v) {
                      if (
                        i.dCtx.timescaleLabels &&
                        i.dCtx.timescaleLabels.length
                      ) {
                        var w = i.dCtx.timescaleLabels[0],
                          C =
                            i.dCtx.timescaleLabels[
                              i.dCtx.timescaleLabels.length - 1
                            ].position +
                            h / 1.75 -
                            i.dCtx.yAxisWidthRight,
                          P = w.position - h / 1.75 + i.dCtx.yAxisWidthLeft,
                          M =
                            n.config.legend.position === "right" &&
                            i.dCtx.lgRect.width > 0
                              ? i.dCtx.lgRect.width
                              : 0;
                        C > r.svgWidth - r.translateX - M &&
                          (r.skipLastTimelinelabel = !0),
                          P <
                            -((v.show && !v.floating) ||
                            (o.chart.type !== "bar" &&
                              o.chart.type !== "candlestick" &&
                              o.chart.type !== "rangeBar" &&
                              o.chart.type !== "boxPlot")
                              ? 10
                              : h / 1.75) && (r.skipFirstTimelinelabel = !0);
                      } else
                        l === "datetime"
                          ? i.dCtx.gridPad.right < h &&
                            !r.rotateXLabels &&
                            (r.skipLastTimelinelabel = !0)
                          : l !== "datetime" &&
                            i.dCtx.gridPad.right <
                              h / 2 - i.dCtx.yAxisWidthRight &&
                            !r.rotateXLabels &&
                            !n.config.xaxis.labels.trim &&
                            (n.config.xaxis.tickPlacement !== "between" ||
                              n.globals.isBarHorizontal) &&
                            (i.dCtx.xPadRight = h / 2 + 1);
                    })(m);
                };
              o.yaxis.forEach(function (m, x) {
                d
                  ? (i.dCtx.gridPad.left < h && (i.dCtx.xPadLeft = h / 2 + 1),
                    (i.dCtx.xPadRight = h / 2 + 1))
                  : g(m, x);
              });
            },
          },
        ]),
        T
      );
    })(),
    ki = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.dCtx = e);
      }
      return (
        S(T, [
          {
            key: "getyAxisLabelsCoords",
            value: function () {
              var e = this,
                i = this.w,
                n = [],
                r = 10,
                o = new Ze(this.dCtx.ctx);
              return (
                i.config.yaxis.map(function (l, h) {
                  var d = i.globals.yAxisScale[h],
                    g = 0;
                  if (
                    (!o.isYAxisHidden(h) &&
                      l.labels.show &&
                      l.labels.minWidth !== void 0 &&
                      (g = l.labels.minWidth),
                    !o.isYAxisHidden(h) && l.labels.show && d.result.length)
                  ) {
                    var m = i.globals.yLabelFormatters[h],
                      x = d.niceMin === Number.MIN_VALUE ? 0 : d.niceMin,
                      v =
                        String(x).length > String(d.niceMax).length
                          ? x
                          : d.niceMax,
                      w = m(v, { seriesIndex: h, dataPointIndex: -1, w: i }),
                      C = w;
                    if (
                      ((w !== void 0 && w.length !== 0) || (w = v),
                      i.globals.isBarHorizontal)
                    ) {
                      r = 0;
                      var P = i.globals.labels.slice();
                      (w = m((w = L.getLargestStringFromArr(P)), {
                        seriesIndex: h,
                        dataPointIndex: -1,
                        w: i,
                      })),
                        (C = e.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          w,
                          P
                        ));
                    }
                    var M = new X(e.dCtx.ctx),
                      I = "rotate(".concat(l.labels.rotate, " 0 0)"),
                      D = M.getTextRects(
                        w,
                        l.labels.style.fontSize,
                        l.labels.style.fontFamily,
                        I,
                        !1
                      ),
                      f = D;
                    w !== C &&
                      (f = M.getTextRects(
                        C,
                        l.labels.style.fontSize,
                        l.labels.style.fontFamily,
                        I,
                        !1
                      )),
                      n.push({
                        width:
                          (g > f.width || g > D.width
                            ? g
                            : f.width > D.width
                            ? f.width
                            : D.width) + r,
                        height: f.height > D.height ? f.height : D.height,
                      });
                  } else n.push({ width: 0, height: 0 });
                }),
                n
              );
            },
          },
          {
            key: "getyAxisTitleCoords",
            value: function () {
              var e = this,
                i = this.w,
                n = [];
              return (
                i.config.yaxis.map(function (r, o) {
                  if (r.show && r.title.text !== void 0) {
                    var l = new X(e.dCtx.ctx),
                      h = "rotate(".concat(r.title.rotate, " 0 0)"),
                      d = l.getTextRects(
                        r.title.text,
                        r.title.style.fontSize,
                        r.title.style.fontFamily,
                        h,
                        !1
                      );
                    n.push({ width: d.width, height: d.height });
                  } else n.push({ width: 0, height: 0 });
                }),
                n
              );
            },
          },
          {
            key: "getTotalYAxisWidth",
            value: function () {
              var e = this.w,
                i = 0,
                n = 0,
                r = 0,
                o = e.globals.yAxisScale.length > 1 ? 10 : 0,
                l = new Ze(this.dCtx.ctx),
                h = function (d, g) {
                  var m = e.config.yaxis[g].floating,
                    x = 0;
                  d.width > 0 && !m
                    ? ((x = d.width + o),
                      (function (v) {
                        return e.globals.ignoreYAxisIndexes.indexOf(v) > -1;
                      })(g) && (x = x - d.width - o))
                    : (x = m || l.isYAxisHidden(g) ? 0 : 5),
                    e.config.yaxis[g].opposite ? (r += x) : (n += x),
                    (i += x);
                };
              return (
                e.globals.yLabelsCoords.map(function (d, g) {
                  h(d, g);
                }),
                e.globals.yTitleCoords.map(function (d, g) {
                  h(d, g);
                }),
                e.globals.isBarHorizontal &&
                  !e.config.yaxis[0].floating &&
                  (i =
                    e.globals.yLabelsCoords[0].width +
                    e.globals.yTitleCoords[0].width +
                    15),
                (this.dCtx.yAxisWidthLeft = n),
                (this.dCtx.yAxisWidthRight = r),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Oi = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.dCtx = e);
      }
      return (
        S(T, [
          {
            key: "gridPadForColumnsInNumericAxis",
            value: function (e) {
              var i = this.w;
              if (i.globals.noData || i.globals.allSeriesCollapsed) return 0;
              var n = function (m) {
                  return (
                    m === "bar" ||
                    m === "rangeBar" ||
                    m === "candlestick" ||
                    m === "boxPlot"
                  );
                },
                r = i.config.chart.type,
                o = 0,
                l = n(r) ? i.config.series.length : 1;
              if (
                (i.globals.comboBarCount > 0 && (l = i.globals.comboBarCount),
                i.globals.collapsedSeries.forEach(function (m) {
                  n(m.type) && (l -= 1);
                }),
                i.config.chart.stacked && (l = 1),
                (n(r) || i.globals.comboBarCount > 0) &&
                  i.globals.isXNumeric &&
                  !i.globals.isBarHorizontal &&
                  l > 0)
              ) {
                var h,
                  d,
                  g = Math.abs(i.globals.initialMaxX - i.globals.initialMinX);
                g <= 3 && (g = i.globals.dataPoints),
                  (h = g / e),
                  i.globals.minXDiff &&
                    i.globals.minXDiff / h > 0 &&
                    (d = i.globals.minXDiff / h),
                  d > e / 2 && (d /= 2),
                  (o =
                    ((d / l) *
                      parseInt(i.config.plotOptions.bar.columnWidth, 10)) /
                    100) < 1 && (o = 1),
                  (o = o / (l > 1 ? 1 : 1.5) + 5),
                  (i.globals.barPadForNumericAxis = o);
              }
              return o;
            },
          },
          {
            key: "gridPadFortitleSubtitle",
            value: function () {
              var e = this,
                i = this.w,
                n = i.globals,
                r = this.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 10;
              ["title", "subtitle"].forEach(function (h) {
                i.config[h].text !== void 0
                  ? (r += i.config[h].margin)
                  : (r += e.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 5);
              }),
                !i.config.legend.show ||
                  i.config.legend.position !== "bottom" ||
                  i.config.legend.floating ||
                  i.globals.axisCharts ||
                  (r += 10);
              var o = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                l = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
              (n.gridHeight = n.gridHeight - o.height - l.height - r),
                (n.translateY = n.translateY + o.height + l.height + r);
            },
          },
          {
            key: "setGridXPosForDualYAxis",
            value: function (e, i) {
              var n = this.w,
                r = new Ze(this.dCtx.ctx);
              n.config.yaxis.map(function (o, l) {
                n.globals.ignoreYAxisIndexes.indexOf(l) !== -1 ||
                  o.floating ||
                  r.isYAxisHidden(l) ||
                  (o.opposite &&
                    (n.globals.translateX =
                      n.globals.translateX -
                      (i[l].width + e[l].width) -
                      parseInt(n.config.yaxis[l].labels.style.fontSize, 10) /
                        1.2 -
                      12),
                  n.globals.translateX < 2 && (n.globals.translateX = 2));
              });
            },
          },
        ]),
        T
      );
    })(),
    Gt = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.lgRect = {}),
          (this.yAxisWidth = 0),
          (this.yAxisWidthLeft = 0),
          (this.yAxisWidthRight = 0),
          (this.xAxisHeight = 0),
          (this.isSparkline = this.w.config.chart.sparkline.enabled),
          (this.dimHelpers = new wi(this)),
          (this.dimYAxis = new ki(this)),
          (this.dimXAxis = new La(this)),
          (this.dimGrid = new Oi(this)),
          (this.lgWidthForSideLegends = 0),
          (this.gridPad = this.w.config.grid.padding),
          (this.xPadRight = 0),
          (this.xPadLeft = 0);
      }
      return (
        S(T, [
          {
            key: "plotCoords",
            value: function () {
              var e = this,
                i = this.w,
                n = i.globals;
              (this.lgRect = this.dimHelpers.getLegendsRect()),
                this.isSparkline &&
                  (i.config.markers.discrete.length > 0 ||
                    i.config.markers.size > 0) &&
                  Object.entries(this.gridPad).forEach(function (o) {
                    var l = q(o, 2),
                      h = l[0],
                      d = l[1];
                    e.gridPad[h] = Math.max(
                      d,
                      e.w.globals.markers.largestSize / 1.5
                    );
                  }),
                n.axisCharts
                  ? this.setDimensionsForAxisCharts()
                  : this.setDimensionsForNonAxisCharts(),
                this.dimGrid.gridPadFortitleSubtitle(),
                (n.gridHeight =
                  n.gridHeight - this.gridPad.top - this.gridPad.bottom),
                (n.gridWidth =
                  n.gridWidth -
                  this.gridPad.left -
                  this.gridPad.right -
                  this.xPadRight -
                  this.xPadLeft);
              var r = this.dimGrid.gridPadForColumnsInNumericAxis(n.gridWidth);
              (n.gridWidth = n.gridWidth - 2 * r),
                (n.translateX =
                  n.translateX +
                  this.gridPad.left +
                  this.xPadLeft +
                  (r > 0 ? r + 4 : 0)),
                (n.translateY = n.translateY + this.gridPad.top);
            },
          },
          {
            key: "setDimensionsForAxisCharts",
            value: function () {
              var e = this,
                i = this.w,
                n = i.globals,
                r = this.dimYAxis.getyAxisLabelsCoords(),
                o = this.dimYAxis.getyAxisTitleCoords();
              (i.globals.yLabelsCoords = []),
                (i.globals.yTitleCoords = []),
                i.config.yaxis.map(function (w, C) {
                  i.globals.yLabelsCoords.push({ width: r[C].width, index: C }),
                    i.globals.yTitleCoords.push({
                      width: o[C].width,
                      index: C,
                    });
                }),
                (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
              var l = this.dimXAxis.getxAxisLabelsCoords(),
                h = this.dimXAxis.getxAxisGroupLabelsCoords(),
                d = this.dimXAxis.getxAxisTitleCoords();
              this.conditionalChecksForAxisCoords(l, d, h),
                (n.translateXAxisY = i.globals.rotateXLabels
                  ? this.xAxisHeight / 8
                  : -4),
                (n.translateXAxisX =
                  i.globals.rotateXLabels &&
                  i.globals.isXNumeric &&
                  i.config.xaxis.labels.rotate <= -45
                    ? -this.xAxisWidth / 4
                    : 0),
                i.globals.isBarHorizontal &&
                  ((n.rotateXLabels = !1),
                  (n.translateXAxisY =
                    (parseInt(i.config.xaxis.labels.style.fontSize, 10) / 1.5) *
                    -1)),
                (n.translateXAxisY =
                  n.translateXAxisY + i.config.xaxis.labels.offsetY),
                (n.translateXAxisX =
                  n.translateXAxisX + i.config.xaxis.labels.offsetX);
              var g = this.yAxisWidth,
                m = this.xAxisHeight;
              (n.xAxisLabelsHeight = this.xAxisHeight - d.height),
                (n.xAxisGroupLabelsHeight = n.xAxisLabelsHeight - l.height),
                (n.xAxisLabelsWidth = this.xAxisWidth),
                (n.xAxisHeight = this.xAxisHeight);
              var x = 10;
              (i.config.chart.type === "radar" || this.isSparkline) &&
                ((g = 0), (m = n.goldenPadding)),
                this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                (this.isSparkline || i.config.chart.type === "treemap") &&
                  ((g = 0), (m = 0), (x = 0)),
                this.isSparkline || this.dimXAxis.additionalPaddingXLabels(l);
              var v = function () {
                (n.translateX = g),
                  (n.gridHeight =
                    n.svgHeight -
                    e.lgRect.height -
                    m -
                    (e.isSparkline || i.config.chart.type === "treemap"
                      ? 0
                      : i.globals.rotateXLabels
                      ? 10
                      : 15)),
                  (n.gridWidth = n.svgWidth - g);
              };
              switch (
                (i.config.xaxis.position === "top" &&
                  (x = n.xAxisHeight - i.config.xaxis.axisTicks.height - 5),
                i.config.legend.position)
              ) {
                case "bottom":
                  (n.translateY = x), v();
                  break;
                case "top":
                  (n.translateY = this.lgRect.height + x), v();
                  break;
                case "left":
                  (n.translateY = x),
                    (n.translateX = this.lgRect.width + g),
                    (n.gridHeight = n.svgHeight - m - 12),
                    (n.gridWidth = n.svgWidth - this.lgRect.width - g);
                  break;
                case "right":
                  (n.translateY = x),
                    (n.translateX = g),
                    (n.gridHeight = n.svgHeight - m - 12),
                    (n.gridWidth = n.svgWidth - this.lgRect.width - g - 5);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
              this.dimGrid.setGridXPosForDualYAxis(o, r),
                new Qt(this.ctx).setYAxisXPosition(r, o);
            },
          },
          {
            key: "setDimensionsForNonAxisCharts",
            value: function () {
              var e = this.w,
                i = e.globals,
                n = e.config,
                r = 0;
              e.config.legend.show && !e.config.legend.floating && (r = 20);
              var o =
                  n.chart.type === "pie" ||
                  n.chart.type === "polarArea" ||
                  n.chart.type === "donut"
                    ? "pie"
                    : "radialBar",
                l = n.plotOptions[o].offsetY,
                h = n.plotOptions[o].offsetX;
              if (!n.legend.show || n.legend.floating)
                return (
                  (i.gridHeight =
                    i.svgHeight - n.grid.padding.left + n.grid.padding.right),
                  (i.gridWidth = i.gridHeight),
                  (i.translateY = l),
                  void (i.translateX = h + (i.svgWidth - i.gridWidth) / 2)
                );
              switch (n.legend.position) {
                case "bottom":
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = l - 10),
                    (i.translateX = h + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case "top":
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = this.lgRect.height + l + 10),
                    (i.translateX = h + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case "left":
                  (i.gridWidth = i.svgWidth - this.lgRect.width - r),
                    (i.gridHeight =
                      n.chart.height !== "auto" ? i.svgHeight : i.gridWidth),
                    (i.translateY = l),
                    (i.translateX = h + this.lgRect.width + r);
                  break;
                case "right":
                  (i.gridWidth = i.svgWidth - this.lgRect.width - r - 5),
                    (i.gridHeight =
                      n.chart.height !== "auto" ? i.svgHeight : i.gridWidth),
                    (i.translateY = l),
                    (i.translateX = h + 10);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
            },
          },
          {
            key: "conditionalChecksForAxisCoords",
            value: function (e, i, n) {
              var r = this.w,
                o = r.globals.hasXaxisGroups ? 2 : 1,
                l = n.height + e.height + i.height,
                h = r.globals.isMultiLineX ? 1.2 : r.globals.LINE_HEIGHT_RATIO,
                d = r.globals.rotateXLabels ? 22 : 10,
                g =
                  r.globals.rotateXLabels &&
                  r.config.legend.position === "bottom"
                    ? 10
                    : 0;
              (this.xAxisHeight = l * h + o * d + g),
                (this.xAxisWidth = e.width),
                this.xAxisHeight - i.height > r.config.xaxis.labels.maxHeight &&
                  (this.xAxisHeight = r.config.xaxis.labels.maxHeight),
                r.config.xaxis.labels.minHeight &&
                  this.xAxisHeight < r.config.xaxis.labels.minHeight &&
                  (this.xAxisHeight = r.config.xaxis.labels.minHeight),
                r.config.xaxis.floating && (this.xAxisHeight = 0);
              var m = 0,
                x = 0;
              r.config.yaxis.forEach(function (v) {
                (m += v.labels.minWidth), (x += v.labels.maxWidth);
              }),
                this.yAxisWidth < m && (this.yAxisWidth = m),
                this.yAxisWidth > x && (this.yAxisWidth = x);
            },
          },
        ]),
        T
      );
    })(),
    Ea = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.lgCtx = e);
      }
      return (
        S(T, [
          {
            key: "getLegendStyles",
            value: function () {
              var e = document.createElement("style");
              e.setAttribute("type", "text/css");
              var i = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
              return e.appendChild(i), e;
            },
          },
          {
            key: "getLegendBBox",
            value: function () {
              var e = this.w.globals.dom.baseEl
                  .querySelector(".apexcharts-legend")
                  .getBoundingClientRect(),
                i = e.width;
              return { clwh: e.height, clww: i };
            },
          },
          {
            key: "appendToForeignObject",
            value: function () {
              this.w.globals.dom.elLegendForeign.appendChild(
                this.getLegendStyles()
              );
            },
          },
          {
            key: "toggleDataSeries",
            value: function (e, i) {
              var n = this,
                r = this.w;
              if (r.globals.axisCharts || r.config.chart.type === "radialBar") {
                r.globals.resized = !0;
                var o = null,
                  l = null;
                (r.globals.risingSeries = []),
                  r.globals.axisCharts
                    ? ((o = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(e, "']")
                      )),
                      (l = parseInt(o.getAttribute("data:realIndex"), 10)))
                    : ((o = r.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(e + 1, "']")
                      )),
                      (l = parseInt(o.getAttribute("rel"), 10) - 1)),
                  i
                    ? [
                        {
                          cs: r.globals.collapsedSeries,
                          csi: r.globals.collapsedSeriesIndices,
                        },
                        {
                          cs: r.globals.ancillaryCollapsedSeries,
                          csi: r.globals.ancillaryCollapsedSeriesIndices,
                        },
                      ].forEach(function (m) {
                        n.riseCollapsedSeries(m.cs, m.csi, l);
                      })
                    : this.hideSeries({ seriesEl: o, realIndex: l });
              } else {
                var h = r.globals.dom.Paper.select(
                    " .apexcharts-series[rel='".concat(e + 1, "'] path")
                  ),
                  d = r.config.chart.type;
                if (d === "pie" || d === "polarArea" || d === "donut") {
                  var g = r.config.plotOptions.pie.donut.labels;
                  new X(this.lgCtx.ctx).pathMouseDown(h.members[0], null),
                    this.lgCtx.ctx.pie.printDataLabelsInner(
                      h.members[0].node,
                      g
                    );
                }
                h.fire("click");
              }
            },
          },
          {
            key: "hideSeries",
            value: function (e) {
              var i = e.seriesEl,
                n = e.realIndex,
                r = this.w,
                o = L.clone(r.config.series);
              if (r.globals.axisCharts) {
                var l = !1;
                if (
                  (r.config.yaxis[n] &&
                    r.config.yaxis[n].show &&
                    r.config.yaxis[n].showAlways &&
                    ((l = !0),
                    r.globals.ancillaryCollapsedSeriesIndices.indexOf(n) < 0 &&
                      (r.globals.ancillaryCollapsedSeries.push({
                        index: n,
                        data: o[n].data.slice(),
                        type: i.parentNode.className.baseVal.split("-")[1],
                      }),
                      r.globals.ancillaryCollapsedSeriesIndices.push(n))),
                  !l)
                ) {
                  r.globals.collapsedSeries.push({
                    index: n,
                    data: o[n].data.slice(),
                    type: i.parentNode.className.baseVal.split("-")[1],
                  }),
                    r.globals.collapsedSeriesIndices.push(n);
                  var h = r.globals.risingSeries.indexOf(n);
                  r.globals.risingSeries.splice(h, 1);
                }
              } else
                r.globals.collapsedSeries.push({ index: n, data: o[n] }),
                  r.globals.collapsedSeriesIndices.push(n);
              for (var d = i.childNodes, g = 0; g < d.length; g++)
                d[g].classList.contains("apexcharts-series-markers-wrap") &&
                  (d[g].classList.contains("apexcharts-hide")
                    ? d[g].classList.remove("apexcharts-hide")
                    : d[g].classList.add("apexcharts-hide"));
              (r.globals.allSeriesCollapsed =
                r.globals.collapsedSeries.length === r.config.series.length),
                (o = this._getSeriesBasedOnCollapsedState(o)),
                this.lgCtx.ctx.updateHelpers._updateSeries(
                  o,
                  r.config.chart.animations.dynamicAnimation.enabled
                );
            },
          },
          {
            key: "riseCollapsedSeries",
            value: function (e, i, n) {
              var r = this.w,
                o = L.clone(r.config.series);
              if (e.length > 0) {
                for (var l = 0; l < e.length; l++)
                  e[l].index === n &&
                    (r.globals.axisCharts
                      ? ((o[n].data = e[l].data.slice()),
                        e.splice(l, 1),
                        i.splice(l, 1),
                        r.globals.risingSeries.push(n))
                      : ((o[n] = e[l].data),
                        e.splice(l, 1),
                        i.splice(l, 1),
                        r.globals.risingSeries.push(n)));
                (o = this._getSeriesBasedOnCollapsedState(o)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    o,
                    r.config.chart.animations.dynamicAnimation.enabled
                  );
              }
            },
          },
          {
            key: "_getSeriesBasedOnCollapsedState",
            value: function (e) {
              var i = this.w;
              return (
                i.globals.axisCharts
                  ? e.forEach(function (n, r) {
                      i.globals.collapsedSeriesIndices.indexOf(r) > -1 &&
                        (e[r].data = []);
                    })
                  : e.forEach(function (n, r) {
                      i.globals.collapsedSeriesIndices.indexOf(r) > -1 &&
                        (e[r] = 0);
                    }),
                e
              );
            },
          },
        ]),
        T
      );
    })(),
    Si = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.onLegendClick = this.onLegendClick.bind(this)),
          (this.onLegendHovered = this.onLegendHovered.bind(this)),
          (this.isBarsDistributed =
            this.w.config.chart.type === "bar" &&
            this.w.config.plotOptions.bar.distributed &&
            this.w.config.series.length === 1),
          (this.legendHelpers = new Ea(this));
      }
      return (
        S(T, [
          {
            key: "init",
            value: function () {
              var e = this.w,
                i = e.globals,
                n = e.config;
              if (
                ((n.legend.showForSingleSeries && i.series.length === 1) ||
                  this.isBarsDistributed ||
                  i.series.length > 1 ||
                  !i.axisCharts) &&
                n.legend.show
              ) {
                for (; i.dom.elLegendWrap.firstChild; )
                  i.dom.elLegendWrap.removeChild(i.dom.elLegendWrap.firstChild);
                this.drawLegends(),
                  L.isIE11()
                    ? document
                        .getElementsByTagName("head")[0]
                        .appendChild(this.legendHelpers.getLegendStyles())
                    : this.legendHelpers.appendToForeignObject(),
                  n.legend.position === "bottom" || n.legend.position === "top"
                    ? this.legendAlignHorizontal()
                    : (n.legend.position !== "right" &&
                        n.legend.position !== "left") ||
                      this.legendAlignVertical();
              }
            },
          },
          {
            key: "drawLegends",
            value: function () {
              var e = this,
                i = this.w,
                n = i.config.legend.fontFamily,
                r = i.globals.seriesNames,
                o = i.globals.colors.slice();
              if (i.config.chart.type === "heatmap") {
                var l = i.config.plotOptions.heatmap.colorScale.ranges;
                (r = l.map(function (oe) {
                  return oe.name ? oe.name : oe.from + " - " + oe.to;
                })),
                  (o = l.map(function (oe) {
                    return oe.color;
                  }));
              } else this.isBarsDistributed && (r = i.globals.labels.slice());
              i.config.legend.customLegendItems.length &&
                (r = i.config.legend.customLegendItems);
              for (
                var h = i.globals.legendFormatter,
                  d = i.config.legend.inverseOrder,
                  g = d ? r.length - 1 : 0;
                d ? g >= 0 : g <= r.length - 1;
                d ? g-- : g++
              ) {
                var m,
                  x = h(r[g], { seriesIndex: g, w: i }),
                  v = !1,
                  w = !1;
                if (i.globals.collapsedSeries.length > 0)
                  for (var C = 0; C < i.globals.collapsedSeries.length; C++)
                    i.globals.collapsedSeries[C].index === g && (v = !0);
                if (i.globals.ancillaryCollapsedSeriesIndices.length > 0)
                  for (
                    var P = 0;
                    P < i.globals.ancillaryCollapsedSeriesIndices.length;
                    P++
                  )
                    i.globals.ancillaryCollapsedSeriesIndices[P] === g &&
                      (w = !0);
                var M = document.createElement("span");
                M.classList.add("apexcharts-legend-marker");
                var I = i.config.legend.markers.offsetX,
                  D = i.config.legend.markers.offsetY,
                  f = i.config.legend.markers.height,
                  y = i.config.legend.markers.width,
                  A = i.config.legend.markers.strokeWidth,
                  _ = i.config.legend.markers.strokeColor,
                  z = i.config.legend.markers.radius,
                  B = M.style;
                (B.background = o[g]),
                  (B.color = o[g]),
                  B.setProperty("background", o[g], "important"),
                  i.config.legend.markers.fillColors &&
                    i.config.legend.markers.fillColors[g] &&
                    (B.background = i.config.legend.markers.fillColors[g]),
                  i.globals.seriesColors[g] !== void 0 &&
                    ((B.background = i.globals.seriesColors[g]),
                    (B.color = i.globals.seriesColors[g])),
                  (B.height = Array.isArray(f)
                    ? parseFloat(f[g]) + "px"
                    : parseFloat(f) + "px"),
                  (B.width = Array.isArray(y)
                    ? parseFloat(y[g]) + "px"
                    : parseFloat(y) + "px"),
                  (B.left =
                    (Array.isArray(I) ? parseFloat(I[g]) : parseFloat(I)) +
                    "px"),
                  (B.top =
                    (Array.isArray(D) ? parseFloat(D[g]) : parseFloat(D)) +
                    "px"),
                  (B.borderWidth = Array.isArray(A) ? A[g] : A),
                  (B.borderColor = Array.isArray(_) ? _[g] : _),
                  (B.borderRadius = Array.isArray(z)
                    ? parseFloat(z[g]) + "px"
                    : parseFloat(z) + "px"),
                  i.config.legend.markers.customHTML &&
                    (Array.isArray(i.config.legend.markers.customHTML)
                      ? i.config.legend.markers.customHTML[g] &&
                        (M.innerHTML = i.config.legend.markers.customHTML[g]())
                      : (M.innerHTML = i.config.legend.markers.customHTML())),
                  X.setAttrs(M, { rel: g + 1, "data:collapsed": v || w }),
                  (v || w) && M.classList.add("apexcharts-inactive-legend");
                var $ = document.createElement("div"),
                  Z = document.createElement("span");
                Z.classList.add("apexcharts-legend-text"),
                  (Z.innerHTML = Array.isArray(x) ? x.join(" ") : x);
                var re = i.config.legend.labels.useSeriesColors
                  ? i.globals.colors[g]
                  : Array.isArray(i.config.legend.labels.colors)
                  ? (m = i.config.legend.labels.colors) === null || m === void 0
                    ? void 0
                    : m[g]
                  : i.config.legend.labels.colors;
                re || (re = i.config.chart.foreColor),
                  (Z.style.color = re),
                  (Z.style.fontSize =
                    parseFloat(i.config.legend.fontSize) + "px"),
                  (Z.style.fontWeight = i.config.legend.fontWeight),
                  (Z.style.fontFamily = n || i.config.chart.fontFamily),
                  X.setAttrs(Z, {
                    rel: g + 1,
                    i: g,
                    "data:default-text": encodeURIComponent(x),
                    "data:collapsed": v || w,
                  }),
                  $.appendChild(M),
                  $.appendChild(Z);
                var ce = new W(this.ctx);
                i.config.legend.showForZeroSeries ||
                  (ce.getSeriesTotalByIndex(g) === 0 &&
                    ce.seriesHaveSameValues(g) &&
                    !ce.isSeriesNull(g) &&
                    i.globals.collapsedSeriesIndices.indexOf(g) === -1 &&
                    i.globals.ancillaryCollapsedSeriesIndices.indexOf(g) ===
                      -1 &&
                    $.classList.add("apexcharts-hidden-zero-series")),
                  i.config.legend.showForNullSeries ||
                    (ce.isSeriesNull(g) &&
                      i.globals.collapsedSeriesIndices.indexOf(g) === -1 &&
                      i.globals.ancillaryCollapsedSeriesIndices.indexOf(g) ===
                        -1 &&
                      $.classList.add("apexcharts-hidden-null-series")),
                  i.globals.dom.elLegendWrap.appendChild($),
                  i.globals.dom.elLegendWrap.classList.add(
                    "apexcharts-align-".concat(i.config.legend.horizontalAlign)
                  ),
                  i.globals.dom.elLegendWrap.classList.add(
                    "apx-legend-position-" + i.config.legend.position
                  ),
                  $.classList.add("apexcharts-legend-series"),
                  ($.style.margin = ""
                    .concat(i.config.legend.itemMargin.vertical, "px ")
                    .concat(i.config.legend.itemMargin.horizontal, "px")),
                  (i.globals.dom.elLegendWrap.style.width = i.config.legend
                    .width
                    ? i.config.legend.width + "px"
                    : ""),
                  (i.globals.dom.elLegendWrap.style.height = i.config.legend
                    .height
                    ? i.config.legend.height + "px"
                    : ""),
                  X.setAttrs($, {
                    rel: g + 1,
                    seriesName: L.escapeString(r[g]),
                    "data:collapsed": v || w,
                  }),
                  (v || w) && $.classList.add("apexcharts-inactive-legend"),
                  i.config.legend.onItemClick.toggleDataSeries ||
                    $.classList.add("apexcharts-no-click");
              }
              i.globals.dom.elWrap.addEventListener(
                "click",
                e.onLegendClick,
                !0
              ),
                i.config.legend.onItemHover.highlightDataSeries &&
                  i.config.legend.customLegendItems.length === 0 &&
                  (i.globals.dom.elWrap.addEventListener(
                    "mousemove",
                    e.onLegendHovered,
                    !0
                  ),
                  i.globals.dom.elWrap.addEventListener(
                    "mouseout",
                    e.onLegendHovered,
                    !0
                  ));
            },
          },
          {
            key: "setLegendWrapXY",
            value: function (e, i) {
              var n = this.w,
                r = n.globals.dom.elLegendWrap,
                o = r.getBoundingClientRect(),
                l = 0,
                h = 0;
              if (n.config.legend.position === "bottom")
                h += n.globals.svgHeight - o.height / 2;
              else if (n.config.legend.position === "top") {
                var d = new Gt(this.ctx),
                  g = d.dimHelpers.getTitleSubtitleCoords("title").height,
                  m = d.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                h = h + (g > 0 ? g - 10 : 0) + (m > 0 ? m - 10 : 0);
              }
              (r.style.position = "absolute"),
                (l = l + e + n.config.legend.offsetX),
                (h = h + i + n.config.legend.offsetY),
                (r.style.left = l + "px"),
                (r.style.top = h + "px"),
                n.config.legend.position === "bottom"
                  ? ((r.style.top = "auto"),
                    (r.style.bottom = 5 - n.config.legend.offsetY + "px"))
                  : n.config.legend.position === "right" &&
                    ((r.style.left = "auto"),
                    (r.style.right = 25 + n.config.legend.offsetX + "px")),
                ["width", "height"].forEach(function (x) {
                  r.style[x] &&
                    (r.style[x] = parseInt(n.config.legend[x], 10) + "px");
                });
            },
          },
          {
            key: "legendAlignHorizontal",
            value: function () {
              var e = this.w;
              e.globals.dom.elLegendWrap.style.right = 0;
              var i = this.legendHelpers.getLegendBBox(),
                n = new Gt(this.ctx),
                r = n.dimHelpers.getTitleSubtitleCoords("title"),
                o = n.dimHelpers.getTitleSubtitleCoords("subtitle"),
                l = 0;
              e.config.legend.position === "bottom"
                ? (l = -i.clwh / 1.8)
                : e.config.legend.position === "top" &&
                  (l =
                    r.height +
                    o.height +
                    e.config.title.margin +
                    e.config.subtitle.margin -
                    10),
                this.setLegendWrapXY(20, l);
            },
          },
          {
            key: "legendAlignVertical",
            value: function () {
              var e = this.w,
                i = this.legendHelpers.getLegendBBox(),
                n = 0;
              e.config.legend.position === "left" && (n = 20),
                e.config.legend.position === "right" &&
                  (n = e.globals.svgWidth - i.clww - 10),
                this.setLegendWrapXY(n, 20);
            },
          },
          {
            key: "onLegendHovered",
            value: function (e) {
              var i = this.w,
                n =
                  e.target.classList.contains("apexcharts-legend-text") ||
                  e.target.classList.contains("apexcharts-legend-marker");
              if (i.config.chart.type === "heatmap" || this.isBarsDistributed) {
                if (n) {
                  var r = parseInt(e.target.getAttribute("rel"), 10) - 1;
                  this.ctx.events.fireEvent("legendHover", [
                    this.ctx,
                    r,
                    this.w,
                  ]),
                    new je(this.ctx).highlightRangeInSeries(e, e.target);
                }
              } else
                !e.target.classList.contains("apexcharts-inactive-legend") &&
                  n &&
                  new je(this.ctx).toggleSeriesOnHover(e, e.target);
            },
          },
          {
            key: "onLegendClick",
            value: function (e) {
              var i = this.w;
              if (
                !i.config.legend.customLegendItems.length &&
                (e.target.classList.contains("apexcharts-legend-text") ||
                  e.target.classList.contains("apexcharts-legend-marker"))
              ) {
                var n = parseInt(e.target.getAttribute("rel"), 10) - 1,
                  r = e.target.getAttribute("data:collapsed") === "true",
                  o = this.w.config.chart.events.legendClick;
                typeof o == "function" && o(this.ctx, n, this.w),
                  this.ctx.events.fireEvent("legendClick", [
                    this.ctx,
                    n,
                    this.w,
                  ]);
                var l = this.w.config.legend.markers.onClick;
                typeof l == "function" &&
                  e.target.classList.contains("apexcharts-legend-marker") &&
                  (l(this.ctx, n, this.w),
                  this.ctx.events.fireEvent("legendMarkerClick", [
                    this.ctx,
                    n,
                    this.w,
                  ])),
                  i.config.chart.type !== "treemap" &&
                    i.config.chart.type !== "heatmap" &&
                    !this.isBarsDistributed &&
                    i.config.legend.onItemClick.toggleDataSeries &&
                    this.legendHelpers.toggleDataSeries(n, r);
              }
            },
          },
        ]),
        T
      );
    })(),
    ia = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
        var i = this.w;
        (this.ev = this.w.config.chart.events),
          (this.selectedClass = "apexcharts-selected"),
          (this.localeValues = this.w.globals.locale.toolbar),
          (this.minX = i.globals.minX),
          (this.maxX = i.globals.maxX);
      }
      return (
        S(T, [
          {
            key: "createToolbar",
            value: function () {
              var e = this,
                i = this.w,
                n = function () {
                  return document.createElement("div");
                },
                r = n();
              if (
                (r.setAttribute("class", "apexcharts-toolbar"),
                (r.style.top = i.config.chart.toolbar.offsetY + "px"),
                (r.style.right = 3 - i.config.chart.toolbar.offsetX + "px"),
                i.globals.dom.elWrap.appendChild(r),
                (this.elZoom = n()),
                (this.elZoomIn = n()),
                (this.elZoomOut = n()),
                (this.elPan = n()),
                (this.elSelection = n()),
                (this.elZoomReset = n()),
                (this.elMenuIcon = n()),
                (this.elMenu = n()),
                (this.elCustomIcons = []),
                (this.t = i.config.chart.toolbar.tools),
                Array.isArray(this.t.customIcons))
              )
                for (var o = 0; o < this.t.customIcons.length; o++)
                  this.elCustomIcons.push(n());
              var l = [],
                h = function (x, v, w) {
                  var C = x.toLowerCase();
                  e.t[C] &&
                    i.config.chart.zoom.enabled &&
                    l.push({
                      el: v,
                      icon: typeof e.t[C] == "string" ? e.t[C] : w,
                      title: e.localeValues[x],
                      class: "apexcharts-".concat(C, "-icon"),
                    });
                };
              h(
                "zoomIn",
                this.elZoomIn,
                `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
              ),
                h(
                  "zoomOut",
                  this.elZoomOut,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                );
              var d = function (x) {
                e.t[x] &&
                  i.config.chart[x].enabled &&
                  l.push({
                    el: x === "zoom" ? e.elZoom : e.elSelection,
                    icon:
                      typeof e.t[x] == "string"
                        ? e.t[x]
                        : x === "zoom"
                        ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                        : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                    title:
                      e.localeValues[
                        x === "zoom" ? "selectionZoom" : "selection"
                      ],
                    class: i.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-".concat(x, "-icon"),
                  });
              };
              d("zoom"),
                d("selection"),
                this.t.pan &&
                  i.config.chart.zoom.enabled &&
                  l.push({
                    el: this.elPan,
                    icon:
                      typeof this.t.pan == "string"
                        ? this.t.pan
                        : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                    title: this.localeValues.pan,
                    class: i.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-pan-icon",
                  }),
                h(
                  "reset",
                  this.elZoomReset,
                  `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`
                ),
                this.t.download &&
                  l.push({
                    el: this.elMenuIcon,
                    icon:
                      typeof this.t.download == "string"
                        ? this.t.download
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: "apexcharts-menu-icon",
                  });
              for (var g = 0; g < this.elCustomIcons.length; g++)
                l.push({
                  el: this.elCustomIcons[g],
                  icon: this.t.customIcons[g].icon,
                  title: this.t.customIcons[g].title,
                  index: this.t.customIcons[g].index,
                  class:
                    "apexcharts-toolbar-custom-icon " +
                    this.t.customIcons[g].class,
                });
              l.forEach(function (x, v) {
                x.index && L.moveIndexInArray(l, v, x.index);
              });
              for (var m = 0; m < l.length; m++)
                X.setAttrs(l[m].el, { class: l[m].class, title: l[m].title }),
                  (l[m].el.innerHTML = l[m].icon),
                  r.appendChild(l[m].el);
              this._createHamburgerMenu(r),
                i.globals.zoomEnabled
                  ? this.elZoom.classList.add(this.selectedClass)
                  : i.globals.panEnabled
                  ? this.elPan.classList.add(this.selectedClass)
                  : i.globals.selectionEnabled &&
                    this.elSelection.classList.add(this.selectedClass),
                this.addToolbarEventListeners();
            },
          },
          {
            key: "_createHamburgerMenu",
            value: function (e) {
              (this.elMenuItems = []),
                e.appendChild(this.elMenu),
                X.setAttrs(this.elMenu, { class: "apexcharts-menu" });
              var i = [
                { name: "exportSVG", title: this.localeValues.exportToSVG },
                { name: "exportPNG", title: this.localeValues.exportToPNG },
                { name: "exportCSV", title: this.localeValues.exportToCSV },
              ];
              this.w.globals.allSeriesHasEqualX || i.splice(2, 1);
              for (var n = 0; n < i.length; n++)
                this.elMenuItems.push(document.createElement("div")),
                  (this.elMenuItems[n].innerHTML = i[n].title),
                  X.setAttrs(this.elMenuItems[n], {
                    class: "apexcharts-menu-item ".concat(i[n].name),
                    title: i[n].title,
                  }),
                  this.elMenu.appendChild(this.elMenuItems[n]);
            },
          },
          {
            key: "addToolbarEventListeners",
            value: function () {
              var e = this;
              this.elZoomReset.addEventListener(
                "click",
                this.handleZoomReset.bind(this)
              ),
                this.elSelection.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "selection")
                ),
                this.elZoom.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "zoom")
                ),
                this.elZoomIn.addEventListener(
                  "click",
                  this.handleZoomIn.bind(this)
                ),
                this.elZoomOut.addEventListener(
                  "click",
                  this.handleZoomOut.bind(this)
                ),
                this.elPan.addEventListener(
                  "click",
                  this.togglePanning.bind(this)
                ),
                this.elMenuIcon.addEventListener(
                  "click",
                  this.toggleMenu.bind(this)
                ),
                this.elMenuItems.forEach(function (n) {
                  n.classList.contains("exportSVG")
                    ? n.addEventListener(
                        "click",
                        e.handleDownload.bind(e, "svg")
                      )
                    : n.classList.contains("exportPNG")
                    ? n.addEventListener(
                        "click",
                        e.handleDownload.bind(e, "png")
                      )
                    : n.classList.contains("exportCSV") &&
                      n.addEventListener(
                        "click",
                        e.handleDownload.bind(e, "csv")
                      );
                });
              for (var i = 0; i < this.t.customIcons.length; i++)
                this.elCustomIcons[i].addEventListener(
                  "click",
                  this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w)
                );
            },
          },
          {
            key: "toggleZoomSelection",
            value: function (e) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                i.ctx.toolbar.toggleOtherControls();
                var n =
                    e === "selection"
                      ? i.ctx.toolbar.elSelection
                      : i.ctx.toolbar.elZoom,
                  r = e === "selection" ? "selectionEnabled" : "zoomEnabled";
                (i.w.globals[r] = !i.w.globals[r]),
                  n.classList.contains(i.ctx.toolbar.selectedClass)
                    ? n.classList.remove(i.ctx.toolbar.selectedClass)
                    : n.classList.add(i.ctx.toolbar.selectedClass);
              });
            },
          },
          {
            key: "getToolbarIconsReference",
            value: function () {
              var e = this.w;
              this.elZoom ||
                (this.elZoom = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-zoom-icon"
                )),
                this.elPan ||
                  (this.elPan = e.globals.dom.baseEl.querySelector(
                    ".apexcharts-pan-icon"
                  )),
                this.elSelection ||
                  (this.elSelection = e.globals.dom.baseEl.querySelector(
                    ".apexcharts-selection-icon"
                  ));
            },
          },
          {
            key: "enableZoomPanFromToolbar",
            value: function (e) {
              this.toggleOtherControls(),
                e === "pan"
                  ? (this.w.globals.panEnabled = !0)
                  : (this.w.globals.zoomEnabled = !0);
              var i = e === "pan" ? this.elPan : this.elZoom,
                n = e === "pan" ? this.elZoom : this.elPan;
              i && i.classList.add(this.selectedClass),
                n && n.classList.remove(this.selectedClass);
            },
          },
          {
            key: "togglePanning",
            value: function () {
              this.ctx.getSyncedCharts().forEach(function (e) {
                e.ctx.toolbar.toggleOtherControls(),
                  (e.w.globals.panEnabled = !e.w.globals.panEnabled),
                  e.ctx.toolbar.elPan.classList.contains(
                    e.ctx.toolbar.selectedClass
                  )
                    ? e.ctx.toolbar.elPan.classList.remove(
                        e.ctx.toolbar.selectedClass
                      )
                    : e.ctx.toolbar.elPan.classList.add(
                        e.ctx.toolbar.selectedClass
                      );
              });
            },
          },
          {
            key: "toggleOtherControls",
            value: function () {
              var e = this,
                i = this.w;
              (i.globals.panEnabled = !1),
                (i.globals.zoomEnabled = !1),
                (i.globals.selectionEnabled = !1),
                this.getToolbarIconsReference(),
                [this.elPan, this.elSelection, this.elZoom].forEach(function (
                  n
                ) {
                  n && n.classList.remove(e.selectedClass);
                });
            },
          },
          {
            key: "handleZoomIn",
            value: function () {
              var e = this.w;
              e.globals.isRangeBar &&
                ((this.minX = e.globals.minY), (this.maxX = e.globals.maxY));
              var i = (this.minX + this.maxX) / 2,
                n = (this.minX + i) / 2,
                r = (this.maxX + i) / 2,
                o = this._getNewMinXMaxX(n, r);
              e.globals.disableZoomIn || this.zoomUpdateOptions(o.minX, o.maxX);
            },
          },
          {
            key: "handleZoomOut",
            value: function () {
              var e = this.w;
              if (
                (e.globals.isRangeBar &&
                  ((this.minX = e.globals.minY), (this.maxX = e.globals.maxY)),
                !(
                  e.config.xaxis.type === "datetime" &&
                  new Date(this.minX).getUTCFullYear() < 1e3
                ))
              ) {
                var i = (this.minX + this.maxX) / 2,
                  n = this.minX - (i - this.minX),
                  r = this.maxX - (i - this.maxX),
                  o = this._getNewMinXMaxX(n, r);
                e.globals.disableZoomOut ||
                  this.zoomUpdateOptions(o.minX, o.maxX);
              }
            },
          },
          {
            key: "_getNewMinXMaxX",
            value: function (e, i) {
              var n = this.w.config.xaxis.convertedCatToNumeric;
              return {
                minX: n ? Math.floor(e) : e,
                maxX: n ? Math.floor(i) : i,
              };
            },
          },
          {
            key: "zoomUpdateOptions",
            value: function (e, i) {
              var n = this.w;
              if (e !== void 0 || i !== void 0) {
                if (
                  !(
                    n.config.xaxis.convertedCatToNumeric &&
                    (e < 1 && ((e = 1), (i = n.globals.dataPoints)), i - e < 2)
                  )
                ) {
                  var r = { min: e, max: i },
                    o = this.getBeforeZoomRange(r);
                  o && (r = o.xaxis);
                  var l = { xaxis: r },
                    h = L.clone(n.globals.initialConfig.yaxis);
                  n.config.chart.zoom.autoScaleYaxis &&
                    (h = new _t(this.ctx).autoScaleY(this.ctx, h, {
                      xaxis: r,
                    })),
                    n.config.chart.group || (l.yaxis = h),
                    (this.w.globals.zoomed = !0),
                    this.ctx.updateHelpers._updateOptions(
                      l,
                      !1,
                      this.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    this.zoomCallback(r, h);
                }
              } else this.handleZoomReset();
            },
          },
          {
            key: "zoomCallback",
            value: function (e, i) {
              typeof this.ev.zoomed == "function" &&
                this.ev.zoomed(this.ctx, { xaxis: e, yaxis: i });
            },
          },
          {
            key: "getBeforeZoomRange",
            value: function (e, i) {
              var n = null;
              return (
                typeof this.ev.beforeZoom == "function" &&
                  (n = this.ev.beforeZoom(this, { xaxis: e, yaxis: i })),
                n
              );
            },
          },
          {
            key: "toggleMenu",
            value: function () {
              var e = this;
              window.setTimeout(function () {
                e.elMenu.classList.contains("apexcharts-menu-open")
                  ? e.elMenu.classList.remove("apexcharts-menu-open")
                  : e.elMenu.classList.add("apexcharts-menu-open");
              }, 0);
            },
          },
          {
            key: "handleDownload",
            value: function (e) {
              var i = this.w,
                n = new Ot(this.ctx);
              switch (e) {
                case "svg":
                  n.exportToSVG(this.ctx);
                  break;
                case "png":
                  n.exportToPng(this.ctx);
                  break;
                case "csv":
                  n.exportToCSV({
                    series: i.config.series,
                    columnDelimiter:
                      i.config.chart.toolbar.export.csv.columnDelimiter,
                  });
              }
            },
          },
          {
            key: "handleZoomReset",
            value: function (e) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                var n = i.w;
                if (
                  ((n.globals.lastXAxis.min = void 0),
                  (n.globals.lastXAxis.max = void 0),
                  i.updateHelpers.revertDefaultAxisMinMax(),
                  typeof n.config.chart.events.beforeResetZoom == "function")
                ) {
                  var r = n.config.chart.events.beforeResetZoom(i, n);
                  r && i.updateHelpers.revertDefaultAxisMinMax(r);
                }
                typeof n.config.chart.events.zoomed == "function" &&
                  i.ctx.toolbar.zoomCallback({
                    min: n.config.xaxis.min,
                    max: n.config.xaxis.max,
                  }),
                  (n.globals.zoomed = !1);
                var o = i.ctx.series.emptyCollapsedSeries(
                  L.clone(n.globals.initialSeries)
                );
                i.updateHelpers._updateSeries(
                  o,
                  n.config.chart.animations.dynamicAnimation.enabled
                );
              });
            },
          },
          {
            key: "destroy",
            value: function () {
              (this.elZoom = null),
                (this.elZoomIn = null),
                (this.elZoomOut = null),
                (this.elPan = null),
                (this.elSelection = null),
                (this.elZoomReset = null),
                (this.elMenuIcon = null);
            },
          },
        ]),
        T
      );
    })(),
    At = (function (T) {
      N(i, ia);
      var e = V(i);
      function i(n) {
        var r;
        return (
          p(this, i),
          ((r = e.call(this, n)).ctx = n),
          (r.w = n.w),
          (r.dragged = !1),
          (r.graphics = new X(r.ctx)),
          (r.eventList = [
            "mousedown",
            "mouseleave",
            "mousemove",
            "touchstart",
            "touchmove",
            "mouseup",
            "touchend",
          ]),
          (r.clientX = 0),
          (r.clientY = 0),
          (r.startX = 0),
          (r.endX = 0),
          (r.dragX = 0),
          (r.startY = 0),
          (r.endY = 0),
          (r.dragY = 0),
          (r.moveDirection = "none"),
          r
        );
      }
      return (
        S(i, [
          {
            key: "init",
            value: function (n) {
              var r = this,
                o = n.xyRatios,
                l = this.w,
                h = this;
              (this.xyRatios = o),
                (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.gridRect =
                  l.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                this.selectionRect.node.classList.add(
                  "apexcharts-selection-rect"
                ),
                l.globals.dom.elGraphical.add(this.zoomRect),
                l.globals.dom.elGraphical.add(this.selectionRect),
                l.config.chart.selection.type === "x"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({
                        minX: 0,
                        minY: 0,
                        maxX: l.globals.gridWidth,
                        maxY: l.globals.gridHeight,
                      })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      ))
                  : l.config.chart.selection.type === "y"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({ minX: 0, maxX: l.globals.gridWidth })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      ))
                  : (this.slDraggableRect = this.selectionRect
                      .draggable()
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging")
                      )),
                this.preselectedSelection(),
                (this.hoverArea = l.globals.dom.baseEl.querySelector(
                  "".concat(l.globals.chartClass, " .apexcharts-svg")
                )),
                this.hoverArea.classList.add("apexcharts-zoomable"),
                this.eventList.forEach(function (d) {
                  r.hoverArea.addEventListener(d, h.svgMouseEvents.bind(h, o), {
                    capture: !1,
                    passive: !0,
                  });
                });
            },
          },
          {
            key: "destroy",
            value: function () {
              this.slDraggableRect &&
                (this.slDraggableRect.draggable(!1),
                this.slDraggableRect.off(),
                this.selectionRect.off()),
                (this.selectionRect = null),
                (this.zoomRect = null),
                (this.gridRect = null);
            },
          },
          {
            key: "svgMouseEvents",
            value: function (n, r) {
              var o = this.w,
                l = this,
                h = this.ctx.toolbar,
                d = o.globals.zoomEnabled
                  ? o.config.chart.zoom.type
                  : o.config.chart.selection.type,
                g = o.config.chart.toolbar.autoSelected;
              if (
                (r.shiftKey
                  ? ((this.shiftWasPressed = !0),
                    h.enableZoomPanFromToolbar(g === "pan" ? "zoom" : "pan"))
                  : this.shiftWasPressed &&
                    (h.enableZoomPanFromToolbar(g),
                    (this.shiftWasPressed = !1)),
                r.target)
              ) {
                var m,
                  x = r.target.classList;
                if (
                  (r.target.parentNode &&
                    r.target.parentNode !== null &&
                    (m = r.target.parentNode.classList),
                  !(
                    x.contains("apexcharts-selection-rect") ||
                    x.contains("apexcharts-legend-marker") ||
                    x.contains("apexcharts-legend-text") ||
                    (m && m.contains("apexcharts-toolbar"))
                  ))
                ) {
                  if (
                    ((l.clientX =
                      r.type === "touchmove" || r.type === "touchstart"
                        ? r.touches[0].clientX
                        : r.type === "touchend"
                        ? r.changedTouches[0].clientX
                        : r.clientX),
                    (l.clientY =
                      r.type === "touchmove" || r.type === "touchstart"
                        ? r.touches[0].clientY
                        : r.type === "touchend"
                        ? r.changedTouches[0].clientY
                        : r.clientY),
                    r.type === "mousedown" && r.which === 1)
                  ) {
                    var v = l.gridRect.getBoundingClientRect();
                    (l.startX = l.clientX - v.left),
                      (l.startY = l.clientY - v.top),
                      (l.dragged = !1),
                      (l.w.globals.mousedown = !0);
                  }
                  if (
                    (((r.type === "mousemove" && r.which === 1) ||
                      r.type === "touchmove") &&
                      ((l.dragged = !0),
                      o.globals.panEnabled
                        ? ((o.globals.selection = null),
                          l.w.globals.mousedown &&
                            l.panDragging({
                              context: l,
                              zoomtype: d,
                              xyRatios: n,
                            }))
                        : ((l.w.globals.mousedown && o.globals.zoomEnabled) ||
                            (l.w.globals.mousedown &&
                              o.globals.selectionEnabled)) &&
                          (l.selection = l.selectionDrawing({
                            context: l,
                            zoomtype: d,
                          }))),
                    r.type === "mouseup" ||
                      r.type === "touchend" ||
                      r.type === "mouseleave")
                  ) {
                    var w = l.gridRect.getBoundingClientRect();
                    l.w.globals.mousedown &&
                      ((l.endX = l.clientX - w.left),
                      (l.endY = l.clientY - w.top),
                      (l.dragX = Math.abs(l.endX - l.startX)),
                      (l.dragY = Math.abs(l.endY - l.startY)),
                      (o.globals.zoomEnabled || o.globals.selectionEnabled) &&
                        l.selectionDrawn({ context: l, zoomtype: d }),
                      o.globals.panEnabled &&
                        o.config.xaxis.convertedCatToNumeric &&
                        l.delayedPanScrolled()),
                      o.globals.zoomEnabled &&
                        l.hideSelectionRect(this.selectionRect),
                      (l.dragged = !1),
                      (l.w.globals.mousedown = !1);
                  }
                  this.makeSelectionRectDraggable();
                }
              }
            },
          },
          {
            key: "makeSelectionRectDraggable",
            value: function () {
              var n = this.w;
              if (this.selectionRect) {
                var r = this.selectionRect.node.getBoundingClientRect();
                r.width > 0 &&
                  r.height > 0 &&
                  this.slDraggableRect
                    .selectize({
                      points: "l, r",
                      pointSize: 8,
                      pointType: "rect",
                    })
                    .resize({
                      constraint: {
                        minX: 0,
                        minY: 0,
                        maxX: n.globals.gridWidth,
                        maxY: n.globals.gridHeight,
                      },
                    })
                    .on(
                      "resizing",
                      this.selectionDragging.bind(this, "resizing")
                    );
              }
            },
          },
          {
            key: "preselectedSelection",
            value: function () {
              var n = this.w,
                r = this.xyRatios;
              if (!n.globals.zoomEnabled) {
                if (
                  n.globals.selection !== void 0 &&
                  n.globals.selection !== null
                )
                  this.drawSelectionRect(n.globals.selection);
                else if (
                  n.config.chart.selection.xaxis.min !== void 0 &&
                  n.config.chart.selection.xaxis.max !== void 0
                ) {
                  var o =
                      (n.config.chart.selection.xaxis.min - n.globals.minX) /
                      r.xRatio,
                    l = {
                      x: o,
                      y: 0,
                      width:
                        n.globals.gridWidth -
                        (n.globals.maxX - n.config.chart.selection.xaxis.max) /
                          r.xRatio -
                        o,
                      height: n.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                  this.drawSelectionRect(l),
                    this.makeSelectionRectDraggable(),
                    typeof n.config.chart.events.selection == "function" &&
                      n.config.chart.events.selection(this.ctx, {
                        xaxis: {
                          min: n.config.chart.selection.xaxis.min,
                          max: n.config.chart.selection.xaxis.max,
                        },
                        yaxis: {},
                      });
                }
              }
            },
          },
          {
            key: "drawSelectionRect",
            value: function (n) {
              var r = n.x,
                o = n.y,
                l = n.width,
                h = n.height,
                d = n.translateX,
                g = d === void 0 ? 0 : d,
                m = n.translateY,
                x = m === void 0 ? 0 : m,
                v = this.w,
                w = this.zoomRect,
                C = this.selectionRect;
              if (this.dragged || v.globals.selection !== null) {
                var P = { transform: "translate(" + g + ", " + x + ")" };
                v.globals.zoomEnabled &&
                  this.dragged &&
                  (l < 0 && (l = 1),
                  w.attr({
                    x: r,
                    y: o,
                    width: l,
                    height: h,
                    fill: v.config.chart.zoom.zoomedArea.fill.color,
                    "fill-opacity": v.config.chart.zoom.zoomedArea.fill.opacity,
                    stroke: v.config.chart.zoom.zoomedArea.stroke.color,
                    "stroke-width": v.config.chart.zoom.zoomedArea.stroke.width,
                    "stroke-opacity":
                      v.config.chart.zoom.zoomedArea.stroke.opacity,
                  }),
                  X.setAttrs(w.node, P)),
                  v.globals.selectionEnabled &&
                    (C.attr({
                      x: r,
                      y: o,
                      width: l > 0 ? l : 0,
                      height: h > 0 ? h : 0,
                      fill: v.config.chart.selection.fill.color,
                      "fill-opacity": v.config.chart.selection.fill.opacity,
                      stroke: v.config.chart.selection.stroke.color,
                      "stroke-width": v.config.chart.selection.stroke.width,
                      "stroke-dasharray":
                        v.config.chart.selection.stroke.dashArray,
                      "stroke-opacity": v.config.chart.selection.stroke.opacity,
                    }),
                    X.setAttrs(C.node, P));
              }
            },
          },
          {
            key: "hideSelectionRect",
            value: function (n) {
              n && n.attr({ x: 0, y: 0, width: 0, height: 0 });
            },
          },
          {
            key: "selectionDrawing",
            value: function (n) {
              var r = n.context,
                o = n.zoomtype,
                l = this.w,
                h = r,
                d = this.gridRect.getBoundingClientRect(),
                g = h.startX - 1,
                m = h.startY,
                x = !1,
                v = !1,
                w = h.clientX - d.left - g,
                C = h.clientY - d.top - m,
                P = {};
              return (
                Math.abs(w + g) > l.globals.gridWidth
                  ? (w = l.globals.gridWidth - g)
                  : h.clientX - d.left < 0 && (w = g),
                g > h.clientX - d.left && ((x = !0), (w = Math.abs(w))),
                m > h.clientY - d.top && ((v = !0), (C = Math.abs(C))),
                (P =
                  o === "x"
                    ? {
                        x: x ? g - w : g,
                        y: 0,
                        width: w,
                        height: l.globals.gridHeight,
                      }
                    : o === "y"
                    ? {
                        x: 0,
                        y: v ? m - C : m,
                        width: l.globals.gridWidth,
                        height: C,
                      }
                    : {
                        x: x ? g - w : g,
                        y: v ? m - C : m,
                        width: w,
                        height: C,
                      }),
                h.drawSelectionRect(P),
                h.selectionDragging("resizing"),
                P
              );
            },
          },
          {
            key: "selectionDragging",
            value: function (n, r) {
              var o = this,
                l = this.w,
                h = this.xyRatios,
                d = this.selectionRect,
                g = 0;
              n === "resizing" && (g = 30);
              var m = function (v) {
                  return parseFloat(d.node.getAttribute(v));
                },
                x = {
                  x: m("x"),
                  y: m("y"),
                  width: m("width"),
                  height: m("height"),
                };
              (l.globals.selection = x),
                typeof l.config.chart.events.selection == "function" &&
                  l.globals.selectionEnabled &&
                  (clearTimeout(this.w.globals.selectionResizeTimer),
                  (this.w.globals.selectionResizeTimer = window.setTimeout(
                    function () {
                      var v = o.gridRect.getBoundingClientRect(),
                        w = d.node.getBoundingClientRect(),
                        C = {
                          xaxis: {
                            min:
                              l.globals.xAxisScale.niceMin +
                              (w.left - v.left) * h.xRatio,
                            max:
                              l.globals.xAxisScale.niceMin +
                              (w.right - v.left) * h.xRatio,
                          },
                          yaxis: {
                            min:
                              l.globals.yAxisScale[0].niceMin +
                              (v.bottom - w.bottom) * h.yRatio[0],
                            max:
                              l.globals.yAxisScale[0].niceMax -
                              (w.top - v.top) * h.yRatio[0],
                          },
                        };
                      l.config.chart.events.selection(o.ctx, C),
                        l.config.chart.brush.enabled &&
                          l.config.chart.events.brushScrolled !== void 0 &&
                          l.config.chart.events.brushScrolled(o.ctx, C);
                    },
                    g
                  )));
            },
          },
          {
            key: "selectionDrawn",
            value: function (n) {
              var r = n.context,
                o = n.zoomtype,
                l = this.w,
                h = r,
                d = this.xyRatios,
                g = this.ctx.toolbar;
              if (h.startX > h.endX) {
                var m = h.startX;
                (h.startX = h.endX), (h.endX = m);
              }
              if (h.startY > h.endY) {
                var x = h.startY;
                (h.startY = h.endY), (h.endY = x);
              }
              var v = void 0,
                w = void 0;
              l.globals.isRangeBar
                ? ((v =
                    l.globals.yAxisScale[0].niceMin +
                    h.startX * d.invertedYRatio),
                  (w =
                    l.globals.yAxisScale[0].niceMin +
                    h.endX * d.invertedYRatio))
                : ((v = l.globals.xAxisScale.niceMin + h.startX * d.xRatio),
                  (w = l.globals.xAxisScale.niceMin + h.endX * d.xRatio));
              var C = [],
                P = [];
              if (
                (l.config.yaxis.forEach(function (z, B) {
                  C.push(
                    l.globals.yAxisScale[B].niceMax - d.yRatio[B] * h.startY
                  ),
                    P.push(
                      l.globals.yAxisScale[B].niceMax - d.yRatio[B] * h.endY
                    );
                }),
                h.dragged && (h.dragX > 10 || h.dragY > 10) && v !== w)
              ) {
                if (l.globals.zoomEnabled) {
                  var M = L.clone(l.globals.initialConfig.yaxis),
                    I = L.clone(l.globals.initialConfig.xaxis);
                  if (
                    ((l.globals.zoomed = !0),
                    l.config.xaxis.convertedCatToNumeric &&
                      ((v = Math.floor(v)),
                      (w = Math.floor(w)),
                      v < 1 && ((v = 1), (w = l.globals.dataPoints)),
                      w - v < 2 && (w = v + 1)),
                    (o !== "xy" && o !== "x") || (I = { min: v, max: w }),
                    (o !== "xy" && o !== "y") ||
                      M.forEach(function (z, B) {
                        (M[B].min = P[B]), (M[B].max = C[B]);
                      }),
                    l.config.chart.zoom.autoScaleYaxis)
                  ) {
                    var D = new _t(h.ctx);
                    M = D.autoScaleY(h.ctx, M, { xaxis: I });
                  }
                  if (g) {
                    var f = g.getBeforeZoomRange(I, M);
                    f &&
                      ((I = f.xaxis ? f.xaxis : I),
                      (M = f.yaxis ? f.yaxis : M));
                  }
                  var y = { xaxis: I };
                  l.config.chart.group || (y.yaxis = M),
                    h.ctx.updateHelpers._updateOptions(
                      y,
                      !1,
                      h.w.config.chart.animations.dynamicAnimation.enabled
                    ),
                    typeof l.config.chart.events.zoomed == "function" &&
                      g.zoomCallback(I, M);
                } else if (l.globals.selectionEnabled) {
                  var A,
                    _ = null;
                  (A = { min: v, max: w }),
                    (o !== "xy" && o !== "y") ||
                      (_ = L.clone(l.config.yaxis)).forEach(function (z, B) {
                        (_[B].min = P[B]), (_[B].max = C[B]);
                      }),
                    (l.globals.selection = h.selection),
                    typeof l.config.chart.events.selection == "function" &&
                      l.config.chart.events.selection(h.ctx, {
                        xaxis: A,
                        yaxis: _,
                      });
                }
              }
            },
          },
          {
            key: "panDragging",
            value: function (n) {
              var r = n.context,
                o = this.w,
                l = r;
              if (o.globals.lastClientPosition.x !== void 0) {
                var h = o.globals.lastClientPosition.x - l.clientX,
                  d = o.globals.lastClientPosition.y - l.clientY;
                Math.abs(h) > Math.abs(d) && h > 0
                  ? (this.moveDirection = "left")
                  : Math.abs(h) > Math.abs(d) && h < 0
                  ? (this.moveDirection = "right")
                  : Math.abs(d) > Math.abs(h) && d > 0
                  ? (this.moveDirection = "up")
                  : Math.abs(d) > Math.abs(h) &&
                    d < 0 &&
                    (this.moveDirection = "down");
              }
              o.globals.lastClientPosition = { x: l.clientX, y: l.clientY };
              var g = o.globals.isRangeBar ? o.globals.minY : o.globals.minX,
                m = o.globals.isRangeBar ? o.globals.maxY : o.globals.maxX;
              o.config.xaxis.convertedCatToNumeric || l.panScrolled(g, m);
            },
          },
          {
            key: "delayedPanScrolled",
            value: function () {
              var n = this.w,
                r = n.globals.minX,
                o = n.globals.maxX,
                l = (n.globals.maxX - n.globals.minX) / 2;
              this.moveDirection === "left"
                ? ((r = n.globals.minX + l), (o = n.globals.maxX + l))
                : this.moveDirection === "right" &&
                  ((r = n.globals.minX - l), (o = n.globals.maxX - l)),
                (r = Math.floor(r)),
                (o = Math.floor(o)),
                this.updateScrolledChart({ xaxis: { min: r, max: o } }, r, o);
            },
          },
          {
            key: "panScrolled",
            value: function (n, r) {
              var o = this.w,
                l = this.xyRatios,
                h = L.clone(o.globals.initialConfig.yaxis),
                d = l.xRatio,
                g = o.globals.minX,
                m = o.globals.maxX;
              o.globals.isRangeBar &&
                ((d = l.invertedYRatio),
                (g = o.globals.minY),
                (m = o.globals.maxY)),
                this.moveDirection === "left"
                  ? ((n = g + (o.globals.gridWidth / 15) * d),
                    (r = m + (o.globals.gridWidth / 15) * d))
                  : this.moveDirection === "right" &&
                    ((n = g - (o.globals.gridWidth / 15) * d),
                    (r = m - (o.globals.gridWidth / 15) * d)),
                o.globals.isRangeBar ||
                  ((n < o.globals.initialMinX || r > o.globals.initialMaxX) &&
                    ((n = g), (r = m)));
              var x = { min: n, max: r };
              o.config.chart.zoom.autoScaleYaxis &&
                (h = new _t(this.ctx).autoScaleY(this.ctx, h, { xaxis: x }));
              var v = { xaxis: { min: n, max: r } };
              o.config.chart.group || (v.yaxis = h),
                this.updateScrolledChart(v, n, r);
            },
          },
          {
            key: "updateScrolledChart",
            value: function (n, r, o) {
              var l = this.w;
              this.ctx.updateHelpers._updateOptions(n, !1, !1),
                typeof l.config.chart.events.scrolled == "function" &&
                  l.config.chart.events.scrolled(this.ctx, {
                    xaxis: { min: r, max: o },
                  });
            },
          },
        ]),
        i
      );
    })(),
    ei = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.ttCtx = e), (this.ctx = e.ctx);
      }
      return (
        S(T, [
          {
            key: "getNearestValues",
            value: function (e) {
              var i = e.hoverArea,
                n = e.elGrid,
                r = e.clientX,
                o = e.clientY,
                l = this.w,
                h = n.getBoundingClientRect(),
                d = h.width,
                g = h.height,
                m = d / (l.globals.dataPoints - 1),
                x = g / l.globals.dataPoints,
                v = this.hasBars();
              (!l.globals.comboCharts && !v) ||
                l.config.xaxis.convertedCatToNumeric ||
                (m = d / l.globals.dataPoints);
              var w = r - h.left - l.globals.barPadForNumericAxis,
                C = o - h.top;
              w < 0 || C < 0 || w > d || C > g
                ? (i.classList.remove("hovering-zoom"),
                  i.classList.remove("hovering-pan"))
                : l.globals.zoomEnabled
                ? (i.classList.remove("hovering-pan"),
                  i.classList.add("hovering-zoom"))
                : l.globals.panEnabled &&
                  (i.classList.remove("hovering-zoom"),
                  i.classList.add("hovering-pan"));
              var P = Math.round(w / m),
                M = Math.floor(C / x);
              v &&
                !l.config.xaxis.convertedCatToNumeric &&
                ((P = Math.ceil(w / m)), (P -= 1));
              var I = null,
                D = null,
                f = [],
                y = [];
              if (
                (l.globals.seriesXvalues.forEach(function (B) {
                  f.push([B[0] + 1e-6].concat(B));
                }),
                l.globals.seriesYvalues.forEach(function (B) {
                  y.push([B[0] + 1e-6].concat(B));
                }),
                (f = f.map(function (B) {
                  return B.filter(function ($) {
                    return L.isNumber($);
                  });
                })),
                (y = y.map(function (B) {
                  return B.filter(function ($) {
                    return L.isNumber($);
                  });
                })),
                l.globals.isXNumeric)
              ) {
                var A = this.ttCtx.getElGrid().getBoundingClientRect(),
                  _ = w * (A.width / d),
                  z = C * (A.height / g);
                (I = (D = this.closestInMultiArray(_, z, f, y)).index),
                  (P = D.j),
                  I !== null &&
                    ((f = l.globals.seriesXvalues[I]),
                    (P = (D = this.closestInArray(_, f)).index));
              }
              return (
                (l.globals.capturedSeriesIndex = I === null ? -1 : I),
                (!P || P < 1) && (P = 0),
                l.globals.isBarHorizontal
                  ? (l.globals.capturedDataPointIndex = M)
                  : (l.globals.capturedDataPointIndex = P),
                {
                  capturedSeries: I,
                  j: l.globals.isBarHorizontal ? M : P,
                  hoverX: w,
                  hoverY: C,
                }
              );
            },
          },
          {
            key: "closestInMultiArray",
            value: function (e, i, n, r) {
              var o = this.w,
                l = 0,
                h = null,
                d = -1;
              o.globals.series.length > 1
                ? (l = this.getFirstActiveXArray(n))
                : (h = 0);
              var g = n[l][0],
                m = Math.abs(e - g);
              if (
                (n.forEach(function (w) {
                  w.forEach(function (C, P) {
                    var M = Math.abs(e - C);
                    M < m && ((m = M), (d = P));
                  });
                }),
                d !== -1)
              ) {
                var x = r[l][d],
                  v = Math.abs(i - x);
                (h = l),
                  r.forEach(function (w, C) {
                    var P = Math.abs(i - w[d]);
                    P < v && ((v = P), (h = C));
                  });
              }
              return { index: h, j: d };
            },
          },
          {
            key: "getFirstActiveXArray",
            value: function (e) {
              for (
                var i = this.w,
                  n = 0,
                  r = e.map(function (l, h) {
                    return l.length > 0 ? h : -1;
                  }),
                  o = 0;
                o < r.length;
                o++
              )
                if (
                  r[o] !== -1 &&
                  i.globals.collapsedSeriesIndices.indexOf(o) === -1 &&
                  i.globals.ancillaryCollapsedSeriesIndices.indexOf(o) === -1
                ) {
                  n = r[o];
                  break;
                }
              return n;
            },
          },
          {
            key: "closestInArray",
            value: function (e, i) {
              for (
                var n = i[0], r = null, o = Math.abs(e - n), l = 0;
                l < i.length;
                l++
              ) {
                var h = Math.abs(e - i[l]);
                h < o && ((o = h), (r = l));
              }
              return { index: r };
            },
          },
          {
            key: "isXoverlap",
            value: function (e) {
              var i = [],
                n = this.w.globals.seriesX.filter(function (o) {
                  return o[0] !== void 0;
                });
              if (n.length > 0)
                for (var r = 0; r < n.length - 1; r++)
                  n[r][e] !== void 0 &&
                    n[r + 1][e] !== void 0 &&
                    n[r][e] !== n[r + 1][e] &&
                    i.push("unEqual");
              return i.length === 0;
            },
          },
          {
            key: "isInitialSeriesSameLen",
            value: function () {
              for (
                var e = !0, i = this.w.globals.initialSeries, n = 0;
                n < i.length - 1;
                n++
              )
                if (i[n].data.length !== i[n + 1].data.length) {
                  e = !1;
                  break;
                }
              return e;
            },
          },
          {
            key: "getBarsHeight",
            value: function (e) {
              return K(e).reduce(function (i, n) {
                return i + n.getBBox().height;
              }, 0);
            },
          },
          {
            key: "getElMarkers",
            value: function (e) {
              return typeof e == "number"
                ? this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      e,
                      "'] .apexcharts-series-markers-wrap > *"
                    )
                  )
                : this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers-wrap > *"
                  );
            },
          },
          {
            key: "getAllMarkers",
            value: function () {
              var e = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers-wrap"
              );
              (e = K(e)).sort(function (n, r) {
                var o = Number(n.getAttribute("data:realIndex")),
                  l = Number(r.getAttribute("data:realIndex"));
                return l < o ? 1 : l > o ? -1 : 0;
              });
              var i = [];
              return (
                e.forEach(function (n) {
                  i.push(n.querySelector(".apexcharts-marker"));
                }),
                i
              );
            },
          },
          {
            key: "hasMarkers",
            value: function (e) {
              return this.getElMarkers(e).length > 0;
            },
          },
          {
            key: "getElBars",
            value: function () {
              return this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series"
              );
            },
          },
          {
            key: "hasBars",
            value: function () {
              return this.getElBars().length > 0;
            },
          },
          {
            key: "getHoverMarkerSize",
            value: function (e) {
              var i = this.w,
                n = i.config.markers.hover.size;
              return (
                n === void 0 &&
                  (n =
                    i.globals.markers.size[e] +
                    i.config.markers.hover.sizeOffset),
                n
              );
            },
          },
          {
            key: "toggleAllTooltipSeriesGroups",
            value: function (e) {
              var i = this.w,
                n = this.ttCtx;
              n.allTooltipSeriesGroups.length === 0 &&
                (n.allTooltipSeriesGroups =
                  i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-tooltip-series-group"
                  ));
              for (var r = n.allTooltipSeriesGroups, o = 0; o < r.length; o++)
                e === "enable"
                  ? (r[o].classList.add("apexcharts-active"),
                    (r[o].style.display = i.config.tooltip.items.display))
                  : (r[o].classList.remove("apexcharts-active"),
                    (r[o].style.display = "none"));
            },
          },
        ]),
        T
      );
    })(),
    Pt = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.ctx = e.ctx),
          (this.ttCtx = e),
          (this.tooltipUtil = new ei(e));
      }
      return (
        S(T, [
          {
            key: "drawSeriesTexts",
            value: function (e) {
              var i = e.shared,
                n = i === void 0 || i,
                r = e.ttItems,
                o = e.i,
                l = o === void 0 ? 0 : o,
                h = e.j,
                d = h === void 0 ? null : h,
                g = e.y1,
                m = e.y2,
                x = e.e,
                v = this.w;
              v.config.tooltip.custom !== void 0
                ? this.handleCustomTooltip({ i: l, j: d, y1: g, y2: m, w: v })
                : this.toggleActiveInactiveSeries(n);
              var w = this.getValuesToPrint({ i: l, j: d });
              this.printLabels({
                i: l,
                j: d,
                values: w,
                ttItems: r,
                shared: n,
                e: x,
              });
              var C = this.ttCtx.getElTooltip();
              (this.ttCtx.tooltipRect.ttWidth =
                C.getBoundingClientRect().width),
                (this.ttCtx.tooltipRect.ttHeight =
                  C.getBoundingClientRect().height);
            },
          },
          {
            key: "printLabels",
            value: function (e) {
              var i,
                n = this,
                r = e.i,
                o = e.j,
                l = e.values,
                h = e.ttItems,
                d = e.shared,
                g = e.e,
                m = this.w,
                x = [],
                v = function (A) {
                  return (
                    m.globals.seriesGoals[A] &&
                    m.globals.seriesGoals[A][o] &&
                    Array.isArray(m.globals.seriesGoals[A][o])
                  );
                },
                w = l.xVal,
                C = l.zVal,
                P = l.xAxisTTVal,
                M = "",
                I = m.globals.colors[r];
              o !== null &&
                m.config.plotOptions.bar.distributed &&
                (I = m.globals.colors[o]);
              for (
                var D = function (A, _) {
                    var z = n.getFormatters(r);
                    (M = n.getSeriesName({
                      fn: z.yLbTitleFormatter,
                      index: r,
                      seriesIndex: r,
                      j: o,
                    })),
                      m.config.chart.type === "treemap" &&
                        (M = z.yLbTitleFormatter(
                          String(m.config.series[r].data[o].x),
                          {
                            series: m.globals.series,
                            seriesIndex: r,
                            dataPointIndex: o,
                            w: m,
                          }
                        ));
                    var B = m.config.tooltip.inverseOrder ? _ : A;
                    if (m.globals.axisCharts) {
                      var $ = function (ce) {
                        var oe, de, Pe, Re;
                        return m.globals.isRangeData
                          ? z.yLbFormatter(
                              (oe = m.globals.seriesRangeStart) === null ||
                                oe === void 0 ||
                                (de = oe[ce]) === null ||
                                de === void 0
                                ? void 0
                                : de[o],
                              {
                                series: m.globals.seriesRangeStart,
                                seriesIndex: ce,
                                dataPointIndex: o,
                                w: m,
                              }
                            ) +
                              " - " +
                              z.yLbFormatter(
                                (Pe = m.globals.seriesRangeEnd) === null ||
                                  Pe === void 0 ||
                                  (Re = Pe[ce]) === null ||
                                  Re === void 0
                                  ? void 0
                                  : Re[o],
                                {
                                  series: m.globals.seriesRangeEnd,
                                  seriesIndex: ce,
                                  dataPointIndex: o,
                                  w: m,
                                }
                              )
                          : z.yLbFormatter(m.globals.series[ce][o], {
                              series: m.globals.series,
                              seriesIndex: ce,
                              dataPointIndex: o,
                              w: m,
                            });
                      };
                      if (d)
                        (z = n.getFormatters(B)),
                          (M = n.getSeriesName({
                            fn: z.yLbTitleFormatter,
                            index: B,
                            seriesIndex: r,
                            j: o,
                          })),
                          (I = m.globals.colors[B]),
                          (i = $(B)),
                          v(B) &&
                            (x = m.globals.seriesGoals[B][o].map(function (ce) {
                              return {
                                attrs: ce,
                                val: z.yLbFormatter(ce.value, {
                                  seriesIndex: B,
                                  dataPointIndex: o,
                                  w: m,
                                }),
                              };
                            }));
                      else {
                        var Z,
                          re =
                            g == null || (Z = g.target) === null || Z === void 0
                              ? void 0
                              : Z.getAttribute("fill");
                        re &&
                          (I =
                            re.indexOf("url") !== -1
                              ? document
                                  .querySelector(re.substr(4).slice(0, -1))
                                  .childNodes[0].getAttribute("stroke")
                              : re),
                          (i = $(r)),
                          v(r) &&
                            Array.isArray(m.globals.seriesGoals[r][o]) &&
                            (x = m.globals.seriesGoals[r][o].map(function (ce) {
                              return {
                                attrs: ce,
                                val: z.yLbFormatter(ce.value, {
                                  seriesIndex: r,
                                  dataPointIndex: o,
                                  w: m,
                                }),
                              };
                            }));
                      }
                    }
                    o === null &&
                      (i = z.yLbFormatter(
                        m.globals.series[r],
                        c(c({}, m), {}, { seriesIndex: r, dataPointIndex: r })
                      )),
                      n.DOMHandling({
                        i: r,
                        t: B,
                        j: o,
                        ttItems: h,
                        values: {
                          val: i,
                          goalVals: x,
                          xVal: w,
                          xAxisTTVal: P,
                          zVal: C,
                        },
                        seriesName: M,
                        shared: d,
                        pColor: I,
                      });
                  },
                  f = 0,
                  y = m.globals.series.length - 1;
                f < m.globals.series.length;
                f++, y--
              )
                D(f, y);
            },
          },
          {
            key: "getFormatters",
            value: function (e) {
              var i,
                n = this.w,
                r = n.globals.yLabelFormatters[e];
              return (
                n.globals.ttVal !== void 0
                  ? Array.isArray(n.globals.ttVal)
                    ? ((r = n.globals.ttVal[e] && n.globals.ttVal[e].formatter),
                      (i =
                        n.globals.ttVal[e] &&
                        n.globals.ttVal[e].title &&
                        n.globals.ttVal[e].title.formatter))
                    : ((r = n.globals.ttVal.formatter),
                      typeof n.globals.ttVal.title.formatter == "function" &&
                        (i = n.globals.ttVal.title.formatter))
                  : (i = n.config.tooltip.y.title.formatter),
                typeof r != "function" &&
                  (r = n.globals.yLabelFormatters[0]
                    ? n.globals.yLabelFormatters[0]
                    : function (o) {
                        return o;
                      }),
                typeof i != "function" &&
                  (i = function (o) {
                    return o;
                  }),
                { yLbFormatter: r, yLbTitleFormatter: i }
              );
            },
          },
          {
            key: "getSeriesName",
            value: function (e) {
              var i = e.fn,
                n = e.index,
                r = e.seriesIndex,
                o = e.j,
                l = this.w;
              return i(String(l.globals.seriesNames[n]), {
                series: l.globals.series,
                seriesIndex: r,
                dataPointIndex: o,
                w: l,
              });
            },
          },
          {
            key: "DOMHandling",
            value: function (e) {
              e.i;
              var i = e.t,
                n = e.j,
                r = e.ttItems,
                o = e.values,
                l = e.seriesName,
                h = e.shared,
                d = e.pColor,
                g = this.w,
                m = this.ttCtx,
                x = o.val,
                v = o.goalVals,
                w = o.xVal,
                C = o.xAxisTTVal,
                P = o.zVal,
                M = null;
              (M = r[i].children),
                g.config.tooltip.fillSeriesColor &&
                  ((r[i].style.backgroundColor = d),
                  (M[0].style.display = "none")),
                m.showTooltipTitle &&
                  (m.tooltipTitle === null &&
                    (m.tooltipTitle = g.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip-title"
                    )),
                  (m.tooltipTitle.innerHTML = w)),
                m.isXAxisTooltipEnabled &&
                  (m.xaxisTooltipText.innerHTML = C !== "" ? C : w);
              var I = r[i].querySelector(".apexcharts-tooltip-text-y-label");
              I && (I.innerHTML = l || "");
              var D = r[i].querySelector(".apexcharts-tooltip-text-y-value");
              D && (D.innerHTML = x !== void 0 ? x : ""),
                M[0] &&
                  M[0].classList.contains("apexcharts-tooltip-marker") &&
                  (g.config.tooltip.marker.fillColors &&
                    Array.isArray(g.config.tooltip.marker.fillColors) &&
                    (d = g.config.tooltip.marker.fillColors[i]),
                  (M[0].style.backgroundColor = d)),
                g.config.tooltip.marker.show || (M[0].style.display = "none");
              var f = r[i].querySelector(
                  ".apexcharts-tooltip-text-goals-label"
                ),
                y = r[i].querySelector(".apexcharts-tooltip-text-goals-value");
              if (v.length && g.globals.seriesGoals[i]) {
                var A = function () {
                  var _ = "<div >",
                    z = "<div>";
                  v.forEach(function (B, $) {
                    (_ +=
                      ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                        .concat(
                          B.attrs.strokeColor,
                          '; height: 3px; border-radius: 0; top: 5px;"></span> '
                        )
                        .concat(B.attrs.name, "</div>")),
                      (z += "<div>".concat(B.val, "</div>"));
                  }),
                    (f.innerHTML = _ + "</div>"),
                    (y.innerHTML = z + "</div>");
                };
                h
                  ? g.globals.seriesGoals[i][n] &&
                    Array.isArray(g.globals.seriesGoals[i][n])
                    ? A()
                    : ((f.innerHTML = ""), (y.innerHTML = ""))
                  : A();
              } else (f.innerHTML = ""), (y.innerHTML = "");
              P !== null &&
                ((r[i].querySelector(
                  ".apexcharts-tooltip-text-z-label"
                ).innerHTML = g.config.tooltip.z.title),
                (r[i].querySelector(
                  ".apexcharts-tooltip-text-z-value"
                ).innerHTML = P !== void 0 ? P : "")),
                h &&
                  M[0] &&
                  (x == null ||
                  g.globals.ancillaryCollapsedSeriesIndices.indexOf(i) > -1 ||
                  g.globals.collapsedSeriesIndices.indexOf(i) > -1
                    ? (M[0].parentNode.style.display = "none")
                    : (M[0].parentNode.style.display =
                        g.config.tooltip.items.display));
            },
          },
          {
            key: "toggleActiveInactiveSeries",
            value: function (e) {
              var i = this.w;
              if (e) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
              else {
                this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                var n = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip-series-group"
                );
                n &&
                  (n.classList.add("apexcharts-active"),
                  (n.style.display = i.config.tooltip.items.display));
              }
            },
          },
          {
            key: "getValuesToPrint",
            value: function (e) {
              var i = e.i,
                n = e.j,
                r = this.w,
                o = this.ctx.series.filteredSeriesX(),
                l = "",
                h = "",
                d = null,
                g = null,
                m = {
                  series: r.globals.series,
                  seriesIndex: i,
                  dataPointIndex: n,
                  w: r,
                },
                x = r.globals.ttZFormatter;
              n === null
                ? (g = r.globals.series[i])
                : r.globals.isXNumeric && r.config.chart.type !== "treemap"
                ? ((l = o[i][n]),
                  o[i].length === 0 &&
                    (l = o[this.tooltipUtil.getFirstActiveXArray(o)][n]))
                : (l =
                    r.globals.labels[n] !== void 0 ? r.globals.labels[n] : "");
              var v = l;
              return (
                r.globals.isXNumeric && r.config.xaxis.type === "datetime"
                  ? (l = new ke(this.ctx).xLabelFormat(
                      r.globals.ttKeyFormatter,
                      v,
                      v,
                      {
                        i: void 0,
                        dateFormatter: new ie(this.ctx).formatDate,
                        w: this.w,
                      }
                    ))
                  : (l = r.globals.isBarHorizontal
                      ? r.globals.yLabelFormatters[0](v, m)
                      : r.globals.xLabelFormatter(v, m)),
                r.config.tooltip.x.formatter !== void 0 &&
                  (l = r.globals.ttKeyFormatter(v, m)),
                r.globals.seriesZ.length > 0 &&
                  r.globals.seriesZ[i].length > 0 &&
                  (d = x(r.globals.seriesZ[i][n], r)),
                (h =
                  typeof r.config.xaxis.tooltip.formatter == "function"
                    ? r.globals.xaxisTooltipFormatter(v, m)
                    : l),
                {
                  val: Array.isArray(g) ? g.join(" ") : g,
                  xVal: Array.isArray(l) ? l.join(" ") : l,
                  xAxisTTVal: Array.isArray(h) ? h.join(" ") : h,
                  zVal: d,
                }
              );
            },
          },
          {
            key: "handleCustomTooltip",
            value: function (e) {
              var i = e.i,
                n = e.j,
                r = e.y1,
                o = e.y2,
                l = e.w,
                h = this.ttCtx.getElTooltip(),
                d = l.config.tooltip.custom;
              Array.isArray(d) && d[i] && (d = d[i]),
                (h.innerHTML = d({
                  ctx: this.ctx,
                  series: l.globals.series,
                  seriesIndex: i,
                  dataPointIndex: n,
                  y1: r,
                  y2: o,
                  w: l,
                }));
            },
          },
        ]),
        T
      );
    })(),
    Ve = (function () {
      function T(e) {
        p(this, T), (this.ttCtx = e), (this.ctx = e.ctx), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "moveXCrosshairs",
            value: function (e) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                n = this.ttCtx,
                r = this.w,
                o = n.getElXCrosshairs(),
                l = e - n.xcrosshairsWidth / 2,
                h = r.globals.labels.slice().length;
              if (
                (i !== null && (l = (r.globals.gridWidth / h) * i),
                o === null ||
                  r.globals.isBarHorizontal ||
                  (o.setAttribute("x", l),
                  o.setAttribute("x1", l),
                  o.setAttribute("x2", l),
                  o.setAttribute("y2", r.globals.gridHeight),
                  o.classList.add("apexcharts-active")),
                l < 0 && (l = 0),
                l > r.globals.gridWidth && (l = r.globals.gridWidth),
                n.isXAxisTooltipEnabled)
              ) {
                var d = l;
                (r.config.xaxis.crosshairs.width !== "tickWidth" &&
                  r.config.xaxis.crosshairs.width !== "barWidth") ||
                  (d = l + n.xcrosshairsWidth / 2),
                  this.moveXAxisTooltip(d);
              }
            },
          },
          {
            key: "moveYCrosshairs",
            value: function (e) {
              var i = this.ttCtx;
              i.ycrosshairs !== null &&
                X.setAttrs(i.ycrosshairs, { y1: e, y2: e }),
                i.ycrosshairsHidden !== null &&
                  X.setAttrs(i.ycrosshairsHidden, { y1: e, y2: e });
            },
          },
          {
            key: "moveXAxisTooltip",
            value: function (e) {
              var i = this.w,
                n = this.ttCtx;
              if (n.xaxisTooltip !== null && n.xcrosshairsWidth !== 0) {
                n.xaxisTooltip.classList.add("apexcharts-active");
                var r =
                  n.xaxisOffY +
                  i.config.xaxis.tooltip.offsetY +
                  i.globals.translateY +
                  1 +
                  i.config.xaxis.offsetY;
                if (
                  ((e -= n.xaxisTooltip.getBoundingClientRect().width / 2),
                  !isNaN(e))
                ) {
                  e += i.globals.translateX;
                  var o;
                  (o = new X(this.ctx).getTextRects(
                    n.xaxisTooltipText.innerHTML
                  )),
                    (n.xaxisTooltipText.style.minWidth = o.width + "px"),
                    (n.xaxisTooltip.style.left = e + "px"),
                    (n.xaxisTooltip.style.top = r + "px");
                }
              }
            },
          },
          {
            key: "moveYAxisTooltip",
            value: function (e) {
              var i = this.w,
                n = this.ttCtx;
              n.yaxisTTEls === null &&
                (n.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxistooltip"
                ));
              var r = parseInt(n.ycrosshairsHidden.getAttribute("y1"), 10),
                o = i.globals.translateY + r,
                l = n.yaxisTTEls[e].getBoundingClientRect().height,
                h = i.globals.translateYAxisX[e] - 2;
              i.config.yaxis[e].opposite && (h -= 26),
                (o -= l / 2),
                i.globals.ignoreYAxisIndexes.indexOf(e) === -1
                  ? (n.yaxisTTEls[e].classList.add("apexcharts-active"),
                    (n.yaxisTTEls[e].style.top = o + "px"),
                    (n.yaxisTTEls[e].style.left =
                      h + i.config.yaxis[e].tooltip.offsetX + "px"))
                  : n.yaxisTTEls[e].classList.remove("apexcharts-active");
            },
          },
          {
            key: "moveTooltip",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                r = this.w,
                o = this.ttCtx,
                l = o.getElTooltip(),
                h = o.tooltipRect,
                d = n !== null ? parseFloat(n) : 1,
                g = parseFloat(e) + d + 5,
                m = parseFloat(i) + d / 2;
              if (
                (g > r.globals.gridWidth / 2 && (g = g - h.ttWidth - d - 10),
                g > r.globals.gridWidth - h.ttWidth - 10 &&
                  (g = r.globals.gridWidth - h.ttWidth),
                g < -20 && (g = -20),
                r.config.tooltip.followCursor)
              ) {
                var x = o.getElGrid().getBoundingClientRect();
                (g = o.e.clientX - x.left) > r.globals.gridWidth / 2 &&
                  (g -= o.tooltipRect.ttWidth),
                  (m = o.e.clientY + r.globals.translateY - x.top) >
                    r.globals.gridHeight / 2 && (m -= o.tooltipRect.ttHeight);
              } else
                r.globals.isBarHorizontal ||
                  (h.ttHeight / 2 + m > r.globals.gridHeight &&
                    (m =
                      r.globals.gridHeight -
                      h.ttHeight +
                      r.globals.translateY));
              isNaN(g) ||
                ((g += r.globals.translateX),
                (l.style.left = g + "px"),
                (l.style.top = m + "px"));
            },
          },
          {
            key: "moveMarkers",
            value: function (e, i) {
              var n = this.w,
                r = this.ttCtx;
              if (n.globals.markers.size[e] > 0)
                for (
                  var o = n.globals.dom.baseEl.querySelectorAll(
                      " .apexcharts-series[data\\:realIndex='".concat(
                        e,
                        "'] .apexcharts-marker"
                      )
                    ),
                    l = 0;
                  l < o.length;
                  l++
                )
                  parseInt(o[l].getAttribute("rel"), 10) === i &&
                    (r.marker.resetPointsSize(),
                    r.marker.enlargeCurrentPoint(i, o[l]));
              else
                r.marker.resetPointsSize(), this.moveDynamicPointOnHover(i, e);
            },
          },
          {
            key: "moveDynamicPointOnHover",
            value: function (e, i) {
              var n,
                r,
                o = this.w,
                l = this.ttCtx,
                h = o.globals.pointsArray,
                d = l.tooltipUtil.getHoverMarkerSize(i),
                g = o.config.series[i].type;
              if (
                !g ||
                (g !== "column" && g !== "candlestick" && g !== "boxPlot")
              ) {
                (n = h[i][e][0]), (r = h[i][e][1] ? h[i][e][1] : 0);
                var m = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-series[data\\:realIndex='".concat(
                    i,
                    "'] .apexcharts-series-markers circle"
                  )
                );
                m &&
                  r < o.globals.gridHeight &&
                  r > 0 &&
                  (m.setAttribute("r", d),
                  m.setAttribute("cx", n),
                  m.setAttribute("cy", r)),
                  this.moveXCrosshairs(n),
                  l.fixedTooltip || this.moveTooltip(n, r, d);
              }
            },
          },
          {
            key: "moveDynamicPointsOnHover",
            value: function (e) {
              var i,
                n = this.ttCtx,
                r = n.w,
                o = 0,
                l = 0,
                h = r.globals.pointsArray;
              i = new je(this.ctx).getActiveConfigSeriesIndex("asc", [
                "line",
                "area",
                "scatter",
                "bubble",
              ]);
              var d = n.tooltipUtil.getHoverMarkerSize(i);
              h[i] && ((o = h[i][e][0]), (l = h[i][e][1]));
              var g = n.tooltipUtil.getAllMarkers();
              if (g !== null)
                for (var m = 0; m < r.globals.series.length; m++) {
                  var x = h[m];
                  if (
                    (r.globals.comboCharts &&
                      x === void 0 &&
                      g.splice(m, 0, null),
                    x && x.length)
                  ) {
                    var v = h[m][e][1],
                      w = void 0;
                    if (
                      (g[m].setAttribute("cx", o),
                      r.config.chart.type === "rangeArea" &&
                        !r.globals.comboCharts)
                    ) {
                      var C = e + r.globals.series[m].length;
                      (w = h[m][C][1]), (v -= Math.abs(v - w) / 2);
                    }
                    v !== null &&
                    !isNaN(v) &&
                    v < r.globals.gridHeight + d &&
                    v + d > 0
                      ? (g[m] && g[m].setAttribute("r", d),
                        g[m] && g[m].setAttribute("cy", v))
                      : g[m] && g[m].setAttribute("r", 0);
                  }
                }
              this.moveXCrosshairs(o),
                n.fixedTooltip ||
                  this.moveTooltip(o, l || r.globals.gridHeight, d);
            },
          },
          {
            key: "moveStickyTooltipOverBars",
            value: function (e, i) {
              var n = this.w,
                r = this.ttCtx,
                o = n.globals.columnSeries
                  ? n.globals.columnSeries.length
                  : n.globals.series.length,
                l =
                  o >= 2 && o % 2 == 0
                    ? Math.floor(o / 2)
                    : Math.floor(o / 2) + 1;
              n.globals.isBarHorizontal &&
                (l = new je(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
              var h = n.globals.dom.baseEl.querySelector(
                ".apexcharts-bar-series .apexcharts-series[rel='"
                  .concat(l, "'] path[j='")
                  .concat(
                    e,
                    "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(
                    e,
                    "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(
                    e,
                    "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                  )
                  .concat(l, "'] path[j='")
                  .concat(e, "']")
              );
              h ||
                typeof i != "number" ||
                (h = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                    .concat(i, "'] path[j='")
                    .concat(
                      e,
                      `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      e,
                      `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      e,
                      `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`
                    )
                    .concat(i, "'] path[j='")
                    .concat(e, "']")
                ));
              var d = h ? parseFloat(h.getAttribute("cx")) : 0,
                g = h ? parseFloat(h.getAttribute("cy")) : 0,
                m = h ? parseFloat(h.getAttribute("barWidth")) : 0,
                x = r.getElGrid().getBoundingClientRect(),
                v =
                  h &&
                  (h.classList.contains("apexcharts-candlestick-area") ||
                    h.classList.contains("apexcharts-boxPlot-area"));
              n.globals.isXNumeric
                ? (h && !v && (d -= o % 2 != 0 ? m / 2 : 0),
                  h && v && n.globals.comboCharts && (d -= m / 2))
                : n.globals.isBarHorizontal ||
                  ((d =
                    r.xAxisTicksPositions[e - 1] +
                    r.dataPointsDividedWidth / 2),
                  isNaN(d) &&
                    (d =
                      r.xAxisTicksPositions[e] - r.dataPointsDividedWidth / 2)),
                n.globals.isBarHorizontal
                  ? (g -= r.tooltipRect.ttHeight)
                  : n.config.tooltip.followCursor
                  ? (g = r.e.clientY - x.top - r.tooltipRect.ttHeight / 2)
                  : g + r.tooltipRect.ttHeight + 15 > n.globals.gridHeight &&
                    (g = n.globals.gridHeight),
                n.globals.isBarHorizontal || this.moveXCrosshairs(d),
                r.fixedTooltip ||
                  this.moveTooltip(d, g || n.globals.gridHeight);
            },
          },
        ]),
        T
      );
    })(),
    ne = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.ttCtx = e),
          (this.ctx = e.ctx),
          (this.tooltipPosition = new Ve(e));
      }
      return (
        S(T, [
          {
            key: "drawDynamicPoints",
            value: function () {
              var e = this.w,
                i = new X(this.ctx),
                n = new He(this.ctx),
                r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
              (r = K(r)),
                e.config.chart.stacked &&
                  r.sort(function (x, v) {
                    return (
                      parseFloat(x.getAttribute("data:realIndex")) -
                      parseFloat(v.getAttribute("data:realIndex"))
                    );
                  });
              for (var o = 0; o < r.length; o++) {
                var l = r[o].querySelector(".apexcharts-series-markers-wrap");
                if (l !== null) {
                  var h = void 0,
                    d = "apexcharts-marker w".concat(
                      (Math.random() + 1).toString(36).substring(4)
                    );
                  (e.config.chart.type !== "line" &&
                    e.config.chart.type !== "area") ||
                    e.globals.comboCharts ||
                    e.config.tooltip.intersect ||
                    (d += " no-pointer-events");
                  var g = n.getMarkerConfig({
                    cssClass: d,
                    seriesIndex: Number(l.getAttribute("data:realIndex")),
                  });
                  (h = i.drawMarker(0, 0, g)).node.setAttribute(
                    "default-marker-size",
                    0
                  );
                  var m = document.createElementNS(e.globals.SVGNS, "g");
                  m.classList.add("apexcharts-series-markers"),
                    m.appendChild(h.node),
                    l.appendChild(m);
                }
              }
            },
          },
          {
            key: "enlargeCurrentPoint",
            value: function (e, i) {
              var n =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                r =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                o = this.w;
              o.config.chart.type !== "bubble" && this.newPointSize(e, i);
              var l = i.getAttribute("cx"),
                h = i.getAttribute("cy");
              if (
                (n !== null && r !== null && ((l = n), (h = r)),
                this.tooltipPosition.moveXCrosshairs(l),
                !this.fixedTooltip)
              ) {
                if (o.config.chart.type === "radar") {
                  var d = this.ttCtx.getElGrid().getBoundingClientRect();
                  l = this.ttCtx.e.clientX - d.left;
                }
                this.tooltipPosition.moveTooltip(
                  l,
                  h,
                  o.config.markers.hover.size
                );
              }
            },
          },
          {
            key: "enlargePoints",
            value: function (e) {
              for (
                var i = this.w,
                  n = this,
                  r = this.ttCtx,
                  o = e,
                  l = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                  ),
                  h = i.config.markers.hover.size,
                  d = 0;
                d < l.length;
                d++
              ) {
                var g = l[d].getAttribute("rel"),
                  m = l[d].getAttribute("index");
                if (
                  (h === void 0 &&
                    (h =
                      i.globals.markers.size[m] +
                      i.config.markers.hover.sizeOffset),
                  o === parseInt(g, 10))
                ) {
                  n.newPointSize(o, l[d]);
                  var x = l[d].getAttribute("cx"),
                    v = l[d].getAttribute("cy");
                  n.tooltipPosition.moveXCrosshairs(x),
                    r.fixedTooltip || n.tooltipPosition.moveTooltip(x, v, h);
                } else n.oldPointSize(l[d]);
              }
            },
          },
          {
            key: "newPointSize",
            value: function (e, i) {
              var n = this.w,
                r = n.config.markers.hover.size,
                o = e === 0 ? i.parentNode.firstChild : i.parentNode.lastChild;
              if (o.getAttribute("default-marker-size") !== "0") {
                var l = parseInt(o.getAttribute("index"), 10);
                r === void 0 &&
                  (r =
                    n.globals.markers.size[l] +
                    n.config.markers.hover.sizeOffset),
                  r < 0 && (r = 0),
                  o.setAttribute("r", r);
              }
            },
          },
          {
            key: "oldPointSize",
            value: function (e) {
              var i = parseFloat(e.getAttribute("default-marker-size"));
              e.setAttribute("r", i);
            },
          },
          {
            key: "resetPointsSize",
            value: function () {
              for (
                var e = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                  ),
                  i = 0;
                i < e.length;
                i++
              ) {
                var n = parseFloat(e[i].getAttribute("default-marker-size"));
                L.isNumber(n) && n >= 0
                  ? e[i].setAttribute("r", n)
                  : e[i].setAttribute("r", 0);
              }
            },
          },
        ]),
        T
      );
    })(),
    Q = (function () {
      function T(e) {
        p(this, T), (this.w = e.w);
        var i = this.w;
        (this.ttCtx = e),
          (this.isVerticalGroupedRangeBar =
            !i.globals.isBarHorizontal &&
            i.config.chart.type === "rangeBar" &&
            i.config.plotOptions.bar.rangeBarGroupRows);
      }
      return (
        S(T, [
          {
            key: "getAttr",
            value: function (e, i) {
              return parseFloat(e.target.getAttribute(i));
            },
          },
          {
            key: "handleHeatTreeTooltip",
            value: function (e) {
              var i = e.e,
                n = e.opt,
                r = e.x,
                o = e.y,
                l = e.type,
                h = this.ttCtx,
                d = this.w;
              if (
                i.target.classList.contains("apexcharts-".concat(l, "-rect"))
              ) {
                var g = this.getAttr(i, "i"),
                  m = this.getAttr(i, "j"),
                  x = this.getAttr(i, "cx"),
                  v = this.getAttr(i, "cy"),
                  w = this.getAttr(i, "width"),
                  C = this.getAttr(i, "height");
                if (
                  (h.tooltipLabels.drawSeriesTexts({
                    ttItems: n.ttItems,
                    i: g,
                    j: m,
                    shared: !1,
                    e: i,
                  }),
                  (d.globals.capturedSeriesIndex = g),
                  (d.globals.capturedDataPointIndex = m),
                  (r = x + h.tooltipRect.ttWidth / 2 + w),
                  (o = v + h.tooltipRect.ttHeight / 2 - C / 2),
                  h.tooltipPosition.moveXCrosshairs(x + w / 2),
                  r > d.globals.gridWidth / 2 &&
                    (r = x - h.tooltipRect.ttWidth / 2 + w),
                  h.w.config.tooltip.followCursor)
                ) {
                  var P = d.globals.dom.elWrap.getBoundingClientRect();
                  (r =
                    d.globals.clientX -
                    P.left -
                    (r > d.globals.gridWidth / 2 ? h.tooltipRect.ttWidth : 0)),
                    (o =
                      d.globals.clientY -
                      P.top -
                      (o > d.globals.gridHeight / 2
                        ? h.tooltipRect.ttHeight
                        : 0));
                }
              }
              return { x: r, y: o };
            },
          },
          {
            key: "handleMarkerTooltip",
            value: function (e) {
              var i,
                n,
                r = e.e,
                o = e.opt,
                l = e.x,
                h = e.y,
                d = this.w,
                g = this.ttCtx;
              if (r.target.classList.contains("apexcharts-marker")) {
                var m = parseInt(o.paths.getAttribute("cx"), 10),
                  x = parseInt(o.paths.getAttribute("cy"), 10),
                  v = parseFloat(o.paths.getAttribute("val"));
                if (
                  ((n = parseInt(o.paths.getAttribute("rel"), 10)),
                  (i =
                    parseInt(
                      o.paths.parentNode.parentNode.parentNode.getAttribute(
                        "rel"
                      ),
                      10
                    ) - 1),
                  g.intersect)
                ) {
                  var w = L.findAncestor(o.paths, "apexcharts-series");
                  w && (i = parseInt(w.getAttribute("data:realIndex"), 10));
                }
                if (
                  (g.tooltipLabels.drawSeriesTexts({
                    ttItems: o.ttItems,
                    i,
                    j: n,
                    shared: !g.showOnIntersect && d.config.tooltip.shared,
                    e: r,
                  }),
                  r.type === "mouseup" && g.markerClick(r, i, n),
                  (d.globals.capturedSeriesIndex = i),
                  (d.globals.capturedDataPointIndex = n),
                  (l = m),
                  (h = x + d.globals.translateY - 1.4 * g.tooltipRect.ttHeight),
                  g.w.config.tooltip.followCursor)
                ) {
                  var C = g.getElGrid().getBoundingClientRect();
                  h = g.e.clientY + d.globals.translateY - C.top;
                }
                v < 0 && (h = x),
                  g.marker.enlargeCurrentPoint(n, o.paths, l, h);
              }
              return { x: l, y: h };
            },
          },
          {
            key: "handleBarTooltip",
            value: function (e) {
              var i,
                n,
                r = e.e,
                o = e.opt,
                l = this.w,
                h = this.ttCtx,
                d = h.getElTooltip(),
                g = 0,
                m = 0,
                x = 0,
                v = this.getBarTooltipXY({ e: r, opt: o });
              i = v.i;
              var w = v.barHeight,
                C = v.j;
              (l.globals.capturedSeriesIndex = i),
                (l.globals.capturedDataPointIndex = C),
                (l.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                !l.config.tooltip.shared
                  ? ((m = v.x),
                    (x = v.y),
                    (n = Array.isArray(l.config.stroke.width)
                      ? l.config.stroke.width[i]
                      : l.config.stroke.width),
                    (g = m))
                  : l.globals.comboCharts ||
                    l.config.tooltip.shared ||
                    (g /= 2),
                isNaN(x) && (x = l.globals.svgHeight - h.tooltipRect.ttHeight);
              var P = parseInt(
                  o.paths.parentNode.getAttribute("data:realIndex"),
                  10
                ),
                M = l.globals.isMultipleYAxis
                  ? l.config.yaxis[P] && l.config.yaxis[P].reversed
                  : l.config.yaxis[0].reversed;
              if (
                (m + h.tooltipRect.ttWidth > l.globals.gridWidth && !M
                  ? (m -= h.tooltipRect.ttWidth)
                  : m < 0 && (m = 0),
                h.w.config.tooltip.followCursor)
              ) {
                var I = h.getElGrid().getBoundingClientRect();
                x = h.e.clientY - I.top;
              }
              h.tooltip === null &&
                (h.tooltip = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip"
                )),
                l.config.tooltip.shared ||
                  (l.globals.comboBarCount > 0
                    ? h.tooltipPosition.moveXCrosshairs(g + n / 2)
                    : h.tooltipPosition.moveXCrosshairs(g)),
                !h.fixedTooltip &&
                  (!l.config.tooltip.shared ||
                    (l.globals.isBarHorizontal && h.tooltipUtil.hasBars())) &&
                  (M && (m -= h.tooltipRect.ttWidth) < 0 && (m = 0),
                  !M ||
                    (l.globals.isBarHorizontal && h.tooltipUtil.hasBars()) ||
                    (x = x + w - 2 * (l.globals.series[i][C] < 0 ? w : 0)),
                  (x = x + l.globals.translateY - h.tooltipRect.ttHeight / 2),
                  (d.style.left = m + l.globals.translateX + "px"),
                  (d.style.top = x + "px"));
            },
          },
          {
            key: "getBarTooltipXY",
            value: function (e) {
              var i = this,
                n = e.e,
                r = e.opt,
                o = this.w,
                l = null,
                h = this.ttCtx,
                d = 0,
                g = 0,
                m = 0,
                x = 0,
                v = 0,
                w = n.target.classList;
              if (
                w.contains("apexcharts-bar-area") ||
                w.contains("apexcharts-candlestick-area") ||
                w.contains("apexcharts-boxPlot-area") ||
                w.contains("apexcharts-rangebar-area")
              ) {
                var C = n.target,
                  P = C.getBoundingClientRect(),
                  M = r.elGrid.getBoundingClientRect(),
                  I = P.height;
                v = P.height;
                var D = P.width,
                  f = parseInt(C.getAttribute("cx"), 10),
                  y = parseInt(C.getAttribute("cy"), 10);
                x = parseFloat(C.getAttribute("barWidth"));
                var A =
                  n.type === "touchmove" ? n.touches[0].clientX : n.clientX;
                (l = parseInt(C.getAttribute("j"), 10)),
                  (d = parseInt(C.parentNode.getAttribute("rel"), 10) - 1);
                var _ = C.getAttribute("data-range-y1"),
                  z = C.getAttribute("data-range-y2");
                o.globals.comboCharts &&
                  (d = parseInt(
                    C.parentNode.getAttribute("data:realIndex"),
                    10
                  ));
                var B = function (Z) {
                    return o.globals.isXNumeric
                      ? f - D / 2
                      : i.isVerticalGroupedRangeBar
                      ? f + D / 2
                      : f - h.dataPointsDividedWidth + D / 2;
                  },
                  $ = function () {
                    return (
                      y -
                      h.dataPointsDividedHeight +
                      I / 2 -
                      h.tooltipRect.ttHeight / 2
                    );
                  };
                h.tooltipLabels.drawSeriesTexts({
                  ttItems: r.ttItems,
                  i: d,
                  j: l,
                  y1: _ ? parseInt(_, 10) : null,
                  y2: z ? parseInt(z, 10) : null,
                  shared: !h.showOnIntersect && o.config.tooltip.shared,
                  e: n,
                }),
                  o.config.tooltip.followCursor
                    ? o.globals.isBarHorizontal
                      ? ((g = A - M.left + 15), (m = $()))
                      : ((g = B()),
                        (m =
                          n.clientY - M.top - h.tooltipRect.ttHeight / 2 - 15))
                    : o.globals.isBarHorizontal
                    ? ((g = f) < h.xyRatios.baseLineInvertedY &&
                        (g = f - h.tooltipRect.ttWidth),
                      (m = $()))
                    : ((g = B()), (m = y));
              }
              return { x: g, y: m, barHeight: v, barWidth: x, i: d, j: l };
            },
          },
        ]),
        T
      );
    })(),
    le = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.ttCtx = e);
      }
      return (
        S(T, [
          {
            key: "drawXaxisTooltip",
            value: function () {
              var e = this.w,
                i = this.ttCtx,
                n = e.config.xaxis.position === "bottom";
              i.xaxisOffY = n
                ? e.globals.gridHeight + 1
                : -e.globals.xAxisHeight - e.config.xaxis.axisTicks.height + 3;
              var r = n
                  ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                  : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                o = e.globals.dom.elWrap;
              i.isXAxisTooltipEnabled &&
                e.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxistooltip"
                ) === null &&
                ((i.xaxisTooltip = document.createElement("div")),
                i.xaxisTooltip.setAttribute(
                  "class",
                  r + " apexcharts-theme-" + e.config.tooltip.theme
                ),
                o.appendChild(i.xaxisTooltip),
                (i.xaxisTooltipText = document.createElement("div")),
                i.xaxisTooltipText.classList.add(
                  "apexcharts-xaxistooltip-text"
                ),
                (i.xaxisTooltipText.style.fontFamily =
                  e.config.xaxis.tooltip.style.fontFamily ||
                  e.config.chart.fontFamily),
                (i.xaxisTooltipText.style.fontSize =
                  e.config.xaxis.tooltip.style.fontSize),
                i.xaxisTooltip.appendChild(i.xaxisTooltipText));
            },
          },
          {
            key: "drawYaxisTooltip",
            value: function () {
              for (
                var e = this.w,
                  i = this.ttCtx,
                  n = function (o) {
                    var l =
                      e.config.yaxis[o].opposite ||
                      e.config.yaxis[o].crosshairs.opposite;
                    i.yaxisOffX = l ? e.globals.gridWidth + 1 : 1;
                    var h =
                      "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        o,
                        l
                          ? " apexcharts-yaxistooltip-right"
                          : " apexcharts-yaxistooltip-left"
                      );
                    e.globals.yAxisSameScaleIndices.map(function (g, m) {
                      g.map(function (x, v) {
                        v === o &&
                          (h += e.config.yaxis[v].show
                            ? " "
                            : " apexcharts-yaxistooltip-hidden");
                      });
                    });
                    var d = e.globals.dom.elWrap;
                    e.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        o
                      )
                    ) === null &&
                      ((i.yaxisTooltip = document.createElement("div")),
                      i.yaxisTooltip.setAttribute(
                        "class",
                        h + " apexcharts-theme-" + e.config.tooltip.theme
                      ),
                      d.appendChild(i.yaxisTooltip),
                      o === 0 && (i.yaxisTooltipText = []),
                      (i.yaxisTooltipText[o] = document.createElement("div")),
                      i.yaxisTooltipText[o].classList.add(
                        "apexcharts-yaxistooltip-text"
                      ),
                      i.yaxisTooltip.appendChild(i.yaxisTooltipText[o]));
                  },
                  r = 0;
                r < e.config.yaxis.length;
                r++
              )
                n(r);
            },
          },
          {
            key: "setXCrosshairWidth",
            value: function () {
              var e = this.w,
                i = this.ttCtx,
                n = i.getElXCrosshairs();
              if (
                ((i.xcrosshairsWidth = parseInt(
                  e.config.xaxis.crosshairs.width,
                  10
                )),
                e.globals.comboCharts)
              ) {
                var r = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area"
                );
                if (
                  r !== null &&
                  e.config.xaxis.crosshairs.width === "barWidth"
                ) {
                  var o = parseFloat(r.getAttribute("barWidth"));
                  i.xcrosshairsWidth = o;
                } else if (e.config.xaxis.crosshairs.width === "tickWidth") {
                  var l = e.globals.labels.length;
                  i.xcrosshairsWidth = e.globals.gridWidth / l;
                }
              } else if (e.config.xaxis.crosshairs.width === "tickWidth") {
                var h = e.globals.labels.length;
                i.xcrosshairsWidth = e.globals.gridWidth / h;
              } else if (e.config.xaxis.crosshairs.width === "barWidth") {
                var d = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area"
                );
                if (d !== null) {
                  var g = parseFloat(d.getAttribute("barWidth"));
                  i.xcrosshairsWidth = g;
                } else i.xcrosshairsWidth = 1;
              }
              e.globals.isBarHorizontal && (i.xcrosshairsWidth = 0),
                n !== null &&
                  i.xcrosshairsWidth > 0 &&
                  n.setAttribute("width", i.xcrosshairsWidth);
            },
          },
          {
            key: "handleYCrosshair",
            value: function () {
              var e = this.w,
                i = this.ttCtx;
              (i.ycrosshairs = e.globals.dom.baseEl.querySelector(
                ".apexcharts-ycrosshairs"
              )),
                (i.ycrosshairsHidden = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-ycrosshairs-hidden"
                ));
            },
          },
          {
            key: "drawYaxisTooltipText",
            value: function (e, i, n) {
              var r = this.ttCtx,
                o = this.w,
                l = o.globals.yLabelFormatters[e];
              if (r.yaxisTooltips[e]) {
                var h = r.getElGrid().getBoundingClientRect(),
                  d = (i - h.top) * n.yRatio[e],
                  g = o.globals.maxYArr[e] - o.globals.minYArr[e],
                  m = o.globals.minYArr[e] + (g - d);
                r.tooltipPosition.moveYCrosshairs(i - h.top),
                  (r.yaxisTooltipText[e].innerHTML = l(m)),
                  r.tooltipPosition.moveYAxisTooltip(e);
              }
            },
          },
        ]),
        T
      );
    })(),
    ge = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
        var i = this.w;
        (this.tConfig = i.config.tooltip),
          (this.tooltipUtil = new ei(this)),
          (this.tooltipLabels = new Pt(this)),
          (this.tooltipPosition = new Ve(this)),
          (this.marker = new ne(this)),
          (this.intersect = new Q(this)),
          (this.axesTooltip = new le(this)),
          (this.showOnIntersect = this.tConfig.intersect),
          (this.showTooltipTitle = this.tConfig.x.show),
          (this.fixedTooltip = this.tConfig.fixed.enabled),
          (this.xaxisTooltip = null),
          (this.yaxisTTEls = null),
          (this.isBarShared =
            !i.globals.isBarHorizontal && this.tConfig.shared),
          (this.lastHoverTime = Date.now());
      }
      return (
        S(T, [
          {
            key: "getElTooltip",
            value: function (e) {
              return (
                e || (e = this),
                e.w.globals.dom.baseEl
                  ? e.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")
                  : null
              );
            },
          },
          {
            key: "getElXCrosshairs",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-xcrosshairs"
              );
            },
          },
          {
            key: "getElGrid",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-grid"
              );
            },
          },
          {
            key: "drawTooltip",
            value: function (e) {
              var i = this.w;
              (this.xyRatios = e),
                (this.isXAxisTooltipEnabled =
                  i.config.xaxis.tooltip.enabled && i.globals.axisCharts),
                (this.yaxisTooltips = i.config.yaxis.map(function (l, h) {
                  return !!(
                    l.show &&
                    l.tooltip.enabled &&
                    i.globals.axisCharts
                  );
                })),
                (this.allTooltipSeriesGroups = []),
                i.globals.axisCharts || (this.showTooltipTitle = !1);
              var n = document.createElement("div");
              if (
                (n.classList.add("apexcharts-tooltip"),
                i.config.tooltip.cssClass &&
                  n.classList.add(i.config.tooltip.cssClass),
                n.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),
                i.globals.dom.elWrap.appendChild(n),
                i.globals.axisCharts)
              ) {
                this.axesTooltip.drawXaxisTooltip(),
                  this.axesTooltip.drawYaxisTooltip(),
                  this.axesTooltip.setXCrosshairWidth(),
                  this.axesTooltip.handleYCrosshair();
                var r = new Tt(this.ctx);
                this.xAxisTicksPositions = r.getXAxisTicksPositions();
              }
              if (
                ((!i.globals.comboCharts &&
                  !this.tConfig.intersect &&
                  i.config.chart.type !== "rangeBar") ||
                  this.tConfig.shared ||
                  (this.showOnIntersect = !0),
                (i.config.markers.size !== 0 &&
                  i.globals.markers.largestSize !== 0) ||
                  this.marker.drawDynamicPoints(this),
                i.globals.collapsedSeries.length !== i.globals.series.length)
              ) {
                (this.dataPointsDividedHeight =
                  i.globals.gridHeight / i.globals.dataPoints),
                  (this.dataPointsDividedWidth =
                    i.globals.gridWidth / i.globals.dataPoints),
                  this.showTooltipTitle &&
                    ((this.tooltipTitle = document.createElement("div")),
                    this.tooltipTitle.classList.add("apexcharts-tooltip-title"),
                    (this.tooltipTitle.style.fontFamily =
                      this.tConfig.style.fontFamily ||
                      i.config.chart.fontFamily),
                    (this.tooltipTitle.style.fontSize =
                      this.tConfig.style.fontSize),
                    n.appendChild(this.tooltipTitle));
                var o = i.globals.series.length;
                (i.globals.xyCharts || i.globals.comboCharts) &&
                  this.tConfig.shared &&
                  (o = this.showOnIntersect ? 1 : i.globals.series.length),
                  (this.legendLabels = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-legend-text"
                  )),
                  (this.ttItems = this.createTTElements(o)),
                  this.addSVGEvents();
              }
            },
          },
          {
            key: "createTTElements",
            value: function (e) {
              for (
                var i = this,
                  n = this.w,
                  r = [],
                  o = this.getElTooltip(),
                  l = function (d) {
                    var g = document.createElement("div");
                    g.classList.add("apexcharts-tooltip-series-group"),
                      (g.style.order = n.config.tooltip.inverseOrder
                        ? e - d
                        : d + 1),
                      i.tConfig.shared &&
                        i.tConfig.enabledOnSeries &&
                        Array.isArray(i.tConfig.enabledOnSeries) &&
                        i.tConfig.enabledOnSeries.indexOf(d) < 0 &&
                        g.classList.add(
                          "apexcharts-tooltip-series-group-hidden"
                        );
                    var m = document.createElement("span");
                    m.classList.add("apexcharts-tooltip-marker"),
                      (m.style.backgroundColor = n.globals.colors[d]),
                      g.appendChild(m);
                    var x = document.createElement("div");
                    x.classList.add("apexcharts-tooltip-text"),
                      (x.style.fontFamily =
                        i.tConfig.style.fontFamily ||
                        n.config.chart.fontFamily),
                      (x.style.fontSize = i.tConfig.style.fontSize),
                      ["y", "goals", "z"].forEach(function (v) {
                        var w = document.createElement("div");
                        w.classList.add(
                          "apexcharts-tooltip-".concat(v, "-group")
                        );
                        var C = document.createElement("span");
                        C.classList.add(
                          "apexcharts-tooltip-text-".concat(v, "-label")
                        ),
                          w.appendChild(C);
                        var P = document.createElement("span");
                        P.classList.add(
                          "apexcharts-tooltip-text-".concat(v, "-value")
                        ),
                          w.appendChild(P),
                          x.appendChild(w);
                      }),
                      g.appendChild(x),
                      o.appendChild(g),
                      r.push(g);
                  },
                  h = 0;
                h < e;
                h++
              )
                l(h);
              return r;
            },
          },
          {
            key: "addSVGEvents",
            value: function () {
              var e = this.w,
                i = e.config.chart.type,
                n = this.getElTooltip(),
                r = !(
                  i !== "bar" &&
                  i !== "candlestick" &&
                  i !== "boxPlot" &&
                  i !== "rangeBar"
                ),
                o =
                  i === "area" ||
                  i === "line" ||
                  i === "scatter" ||
                  i === "bubble" ||
                  i === "radar",
                l = e.globals.dom.Paper.node,
                h = this.getElGrid();
              h && (this.seriesBound = h.getBoundingClientRect());
              var d,
                g = [],
                m = [],
                x = {
                  hoverArea: l,
                  elGrid: h,
                  tooltipEl: n,
                  tooltipY: g,
                  tooltipX: m,
                  ttItems: this.ttItems,
                };
              if (
                e.globals.axisCharts &&
                (o
                  ? (d = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                    ))
                  : r
                  ? (d = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"
                    ))
                  : (i !== "heatmap" && i !== "treemap") ||
                    (d = e.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap"
                    )),
                d && d.length)
              )
                for (var v = 0; v < d.length; v++)
                  g.push(d[v].getAttribute("cy")),
                    m.push(d[v].getAttribute("cx"));
              if (
                (e.globals.xyCharts && !this.showOnIntersect) ||
                (e.globals.comboCharts && !this.showOnIntersect) ||
                (r && this.tooltipUtil.hasBars() && this.tConfig.shared)
              )
                this.addPathsEventListeners([l], x);
              else if (
                (r && !e.globals.comboCharts) ||
                (o && this.showOnIntersect)
              )
                this.addDatapointEventsListeners(x);
              else if (
                !e.globals.axisCharts ||
                i === "heatmap" ||
                i === "treemap"
              ) {
                var w =
                  e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                this.addPathsEventListeners(w, x);
              }
              if (this.showOnIntersect) {
                var C = e.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker"
                );
                C.length > 0 && this.addPathsEventListeners(C, x),
                  this.tooltipUtil.hasBars() &&
                    !this.tConfig.shared &&
                    this.addDatapointEventsListeners(x);
              }
            },
          },
          {
            key: "drawFixedTooltipRect",
            value: function () {
              var e = this.w,
                i = this.getElTooltip(),
                n = i.getBoundingClientRect(),
                r = n.width + 10,
                o = n.height + 10,
                l = this.tConfig.fixed.offsetX,
                h = this.tConfig.fixed.offsetY,
                d = this.tConfig.fixed.position.toLowerCase();
              return (
                d.indexOf("right") > -1 &&
                  (l = l + e.globals.svgWidth - r + 10),
                d.indexOf("bottom") > -1 &&
                  (h = h + e.globals.svgHeight - o - 10),
                (i.style.left = l + "px"),
                (i.style.top = h + "px"),
                { x: l, y: h, ttWidth: r, ttHeight: o }
              );
            },
          },
          {
            key: "addDatapointEventsListeners",
            value: function (e) {
              var i = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area"
              );
              this.addPathsEventListeners(i, e);
            },
          },
          {
            key: "addPathsEventListeners",
            value: function (e, i) {
              for (
                var n = this,
                  r = function (l) {
                    var h = {
                      paths: e[l],
                      tooltipEl: i.tooltipEl,
                      tooltipY: i.tooltipY,
                      tooltipX: i.tooltipX,
                      elGrid: i.elGrid,
                      hoverArea: i.hoverArea,
                      ttItems: i.ttItems,
                    };
                    [
                      "mousemove",
                      "mouseup",
                      "touchmove",
                      "mouseout",
                      "touchend",
                    ].map(function (d) {
                      return e[l].addEventListener(
                        d,
                        n.onSeriesHover.bind(n, h),
                        { capture: !1, passive: !0 }
                      );
                    });
                  },
                  o = 0;
                o < e.length;
                o++
              )
                r(o);
            },
          },
          {
            key: "onSeriesHover",
            value: function (e, i) {
              var n = this,
                r = Date.now() - this.lastHoverTime;
              r >= 100
                ? this.seriesHover(e, i)
                : (clearTimeout(this.seriesHoverTimeout),
                  (this.seriesHoverTimeout = setTimeout(function () {
                    n.seriesHover(e, i);
                  }, 100 - r)));
            },
          },
          {
            key: "seriesHover",
            value: function (e, i) {
              var n = this;
              this.lastHoverTime = Date.now();
              var r = [],
                o = this.w;
              o.config.chart.group && (r = this.ctx.getGroupedCharts()),
                (o.globals.axisCharts &&
                  ((o.globals.minX === -1 / 0 && o.globals.maxX === 1 / 0) ||
                    o.globals.dataPoints === 0)) ||
                  (r.length
                    ? r.forEach(function (l) {
                        var h = n.getElTooltip(l),
                          d = {
                            paths: e.paths,
                            tooltipEl: h,
                            tooltipY: e.tooltipY,
                            tooltipX: e.tooltipX,
                            elGrid: e.elGrid,
                            hoverArea: e.hoverArea,
                            ttItems: l.w.globals.tooltip.ttItems,
                          };
                        l.w.globals.minX === n.w.globals.minX &&
                          l.w.globals.maxX === n.w.globals.maxX &&
                          l.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: l,
                            ttCtx: l.w.globals.tooltip,
                            opt: d,
                            e: i,
                          });
                      })
                    : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: e,
                        e: i,
                      }));
            },
          },
          {
            key: "seriesHoverByContext",
            value: function (e) {
              var i = e.chartCtx,
                n = e.ttCtx,
                r = e.opt,
                o = e.e,
                l = i.w,
                h = this.getElTooltip();
              h &&
                ((n.tooltipRect = {
                  x: 0,
                  y: 0,
                  ttWidth: h.getBoundingClientRect().width,
                  ttHeight: h.getBoundingClientRect().height,
                }),
                (n.e = o),
                n.tooltipUtil.hasBars() &&
                  !l.globals.comboCharts &&
                  !n.isBarShared &&
                  this.tConfig.onDatasetHover.highlightDataSeries &&
                  new je(i).toggleSeriesOnHover(o, o.target.parentNode),
                n.fixedTooltip && n.drawFixedTooltipRect(),
                l.globals.axisCharts
                  ? n.axisChartsTooltips({
                      e: o,
                      opt: r,
                      tooltipRect: n.tooltipRect,
                    })
                  : n.nonAxisChartsTooltips({
                      e: o,
                      opt: r,
                      tooltipRect: n.tooltipRect,
                    }));
            },
          },
          {
            key: "axisChartsTooltips",
            value: function (e) {
              var i,
                n,
                r = e.e,
                o = e.opt,
                l = this.w,
                h = o.elGrid.getBoundingClientRect(),
                d = r.type === "touchmove" ? r.touches[0].clientX : r.clientX,
                g = r.type === "touchmove" ? r.touches[0].clientY : r.clientY;
              if (
                ((this.clientY = g),
                (this.clientX = d),
                (l.globals.capturedSeriesIndex = -1),
                (l.globals.capturedDataPointIndex = -1),
                g < h.top || g > h.top + h.height)
              )
                this.handleMouseOut(o);
              else {
                if (
                  Array.isArray(this.tConfig.enabledOnSeries) &&
                  !l.config.tooltip.shared
                ) {
                  var m = parseInt(o.paths.getAttribute("index"), 10);
                  if (this.tConfig.enabledOnSeries.indexOf(m) < 0)
                    return void this.handleMouseOut(o);
                }
                var x = this.getElTooltip(),
                  v = this.getElXCrosshairs(),
                  w =
                    l.globals.xyCharts ||
                    (l.config.chart.type === "bar" &&
                      !l.globals.isBarHorizontal &&
                      this.tooltipUtil.hasBars() &&
                      this.tConfig.shared) ||
                    (l.globals.comboCharts && this.tooltipUtil.hasBars());
                if (
                  r.type === "mousemove" ||
                  r.type === "touchmove" ||
                  r.type === "mouseup"
                ) {
                  if (
                    l.globals.collapsedSeries.length +
                      l.globals.ancillaryCollapsedSeries.length ===
                    l.globals.series.length
                  )
                    return;
                  v !== null && v.classList.add("apexcharts-active");
                  var C = this.yaxisTooltips.filter(function (I) {
                    return I === !0;
                  });
                  if (
                    (this.ycrosshairs !== null &&
                      C.length &&
                      this.ycrosshairs.classList.add("apexcharts-active"),
                    w && !this.showOnIntersect)
                  )
                    this.handleStickyTooltip(r, d, g, o);
                  else if (
                    l.config.chart.type === "heatmap" ||
                    l.config.chart.type === "treemap"
                  ) {
                    var P = this.intersect.handleHeatTreeTooltip({
                      e: r,
                      opt: o,
                      x: i,
                      y: n,
                      type: l.config.chart.type,
                    });
                    (i = P.x),
                      (n = P.y),
                      (x.style.left = i + "px"),
                      (x.style.top = n + "px");
                  } else
                    this.tooltipUtil.hasBars() &&
                      this.intersect.handleBarTooltip({ e: r, opt: o }),
                      this.tooltipUtil.hasMarkers() &&
                        this.intersect.handleMarkerTooltip({
                          e: r,
                          opt: o,
                          x: i,
                          y: n,
                        });
                  if (this.yaxisTooltips.length)
                    for (var M = 0; M < l.config.yaxis.length; M++)
                      this.axesTooltip.drawYaxisTooltipText(
                        M,
                        g,
                        this.xyRatios
                      );
                  o.tooltipEl.classList.add("apexcharts-active");
                } else
                  (r.type !== "mouseout" && r.type !== "touchend") ||
                    this.handleMouseOut(o);
              }
            },
          },
          {
            key: "nonAxisChartsTooltips",
            value: function (e) {
              var i = e.e,
                n = e.opt,
                r = e.tooltipRect,
                o = this.w,
                l = n.paths.getAttribute("rel"),
                h = this.getElTooltip(),
                d = o.globals.dom.elWrap.getBoundingClientRect();
              if (i.type === "mousemove" || i.type === "touchmove") {
                h.classList.add("apexcharts-active"),
                  this.tooltipLabels.drawSeriesTexts({
                    ttItems: n.ttItems,
                    i: parseInt(l, 10) - 1,
                    shared: !1,
                  });
                var g = o.globals.clientX - d.left - r.ttWidth / 2,
                  m = o.globals.clientY - d.top - r.ttHeight - 10;
                if (
                  ((h.style.left = g + "px"),
                  (h.style.top = m + "px"),
                  o.config.legend.tooltipHoverFormatter)
                ) {
                  var x = l - 1,
                    v = (0, o.config.legend.tooltipHoverFormatter)(
                      this.legendLabels[x].getAttribute("data:default-text"),
                      { seriesIndex: x, dataPointIndex: x, w: o }
                    );
                  this.legendLabels[x].innerHTML = v;
                }
              } else
                (i.type !== "mouseout" && i.type !== "touchend") ||
                  (h.classList.remove("apexcharts-active"),
                  o.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (w) {
                      var C = w.getAttribute("data:default-text");
                      w.innerHTML = decodeURIComponent(C);
                    }));
            },
          },
          {
            key: "handleStickyTooltip",
            value: function (e, i, n, r) {
              var o = this.w,
                l = this.tooltipUtil.getNearestValues({
                  context: this,
                  hoverArea: r.hoverArea,
                  elGrid: r.elGrid,
                  clientX: i,
                  clientY: n,
                }),
                h = l.j,
                d = l.capturedSeries;
              o.globals.collapsedSeriesIndices.includes(d) && (d = null);
              var g = r.elGrid.getBoundingClientRect();
              if (l.hoverX < 0 || l.hoverX > g.width) this.handleMouseOut(r);
              else if (d !== null) this.handleStickyCapturedSeries(e, d, r, h);
              else if (
                this.tooltipUtil.isXoverlap(h) ||
                o.globals.isBarHorizontal
              ) {
                var m = o.globals.series.findIndex(function (x, v) {
                  return !o.globals.collapsedSeriesIndices.includes(v);
                });
                this.create(e, this, m, h, r.ttItems);
              }
            },
          },
          {
            key: "handleStickyCapturedSeries",
            value: function (e, i, n, r) {
              var o = this.w;
              if (!this.tConfig.shared && o.globals.series[i][r] === null)
                return void this.handleMouseOut(n);
              if (o.globals.series[i][r] !== void 0)
                this.tConfig.shared &&
                this.tooltipUtil.isXoverlap(r) &&
                this.tooltipUtil.isInitialSeriesSameLen()
                  ? this.create(e, this, i, r, n.ttItems)
                  : this.create(e, this, i, r, n.ttItems, !1);
              else if (this.tooltipUtil.isXoverlap(r)) {
                var l = o.globals.series.findIndex(function (h, d) {
                  return !o.globals.collapsedSeriesIndices.includes(d);
                });
                this.create(e, this, l, r, n.ttItems);
              }
            },
          },
          {
            key: "deactivateHoverFilter",
            value: function () {
              for (
                var e = this.w,
                  i = new X(this.ctx),
                  n = e.globals.dom.Paper.select(".apexcharts-bar-area"),
                  r = 0;
                r < n.length;
                r++
              )
                i.pathMouseLeave(n[r]);
            },
          },
          {
            key: "handleMouseOut",
            value: function (e) {
              var i = this.w,
                n = this.getElXCrosshairs();
              if (
                (e.tooltipEl.classList.remove("apexcharts-active"),
                this.deactivateHoverFilter(),
                i.config.chart.type !== "bubble" &&
                  this.marker.resetPointsSize(),
                n !== null && n.classList.remove("apexcharts-active"),
                this.ycrosshairs !== null &&
                  this.ycrosshairs.classList.remove("apexcharts-active"),
                this.isXAxisTooltipEnabled &&
                  this.xaxisTooltip.classList.remove("apexcharts-active"),
                this.yaxisTooltips.length)
              ) {
                this.yaxisTTEls === null &&
                  (this.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxistooltip"
                  ));
                for (var r = 0; r < this.yaxisTTEls.length; r++)
                  this.yaxisTTEls[r].classList.remove("apexcharts-active");
              }
              i.config.legend.tooltipHoverFormatter &&
                this.legendLabels.forEach(function (o) {
                  var l = o.getAttribute("data:default-text");
                  o.innerHTML = decodeURIComponent(l);
                });
            },
          },
          {
            key: "markerClick",
            value: function (e, i, n) {
              var r = this.w;
              typeof r.config.chart.events.markerClick == "function" &&
                r.config.chart.events.markerClick(e, this.ctx, {
                  seriesIndex: i,
                  dataPointIndex: n,
                  w: r,
                }),
                this.ctx.events.fireEvent("markerClick", [
                  e,
                  this.ctx,
                  { seriesIndex: i, dataPointIndex: n, w: r },
                ]);
            },
          },
          {
            key: "create",
            value: function (e, i, n, r, o) {
              var l,
                h,
                d,
                g,
                m,
                x,
                v,
                w,
                C,
                P,
                M,
                I,
                D,
                f,
                y,
                A,
                _ =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : null,
                z = this.w,
                B = i;
              e.type === "mouseup" && this.markerClick(e, n, r),
                _ === null && (_ = this.tConfig.shared);
              var $ = this.tooltipUtil.hasMarkers(n),
                Z = this.tooltipUtil.getElBars();
              if (z.config.legend.tooltipHoverFormatter) {
                var re = z.config.legend.tooltipHoverFormatter,
                  ce = Array.from(this.legendLabels);
                ce.forEach(function (aa) {
                  var Ta = aa.getAttribute("data:default-text");
                  aa.innerHTML = decodeURIComponent(Ta);
                });
                for (var oe = 0; oe < ce.length; oe++) {
                  var de = ce[oe],
                    Pe = parseInt(de.getAttribute("i"), 10),
                    Re = decodeURIComponent(
                      de.getAttribute("data:default-text")
                    ),
                    Oe = re(Re, {
                      seriesIndex: _ ? Pe : n,
                      dataPointIndex: r,
                      w: z,
                    });
                  if (_)
                    de.innerHTML =
                      z.globals.collapsedSeriesIndices.indexOf(Pe) < 0
                        ? Oe
                        : Re;
                  else if (((de.innerHTML = Pe === n ? Oe : Re), n === Pe))
                    break;
                }
              }
              var Xe = c(
                c(
                  { ttItems: o, i: n, j: r },
                  ((l = z.globals.seriesRange) === null ||
                  l === void 0 ||
                  (h = l[n]) === null ||
                  h === void 0 ||
                  (d = h[r]) === null ||
                  d === void 0 ||
                  (g = d.y[0]) === null ||
                  g === void 0
                    ? void 0
                    : g.y1) !== void 0 && {
                    y1:
                      (m = z.globals.seriesRange) === null ||
                      m === void 0 ||
                      (x = m[n]) === null ||
                      x === void 0 ||
                      (v = x[r]) === null ||
                      v === void 0 ||
                      (w = v.y[0]) === null ||
                      w === void 0
                        ? void 0
                        : w.y1,
                  }
                ),
                ((C = z.globals.seriesRange) === null ||
                C === void 0 ||
                (P = C[n]) === null ||
                P === void 0 ||
                (M = P[r]) === null ||
                M === void 0 ||
                (I = M.y[0]) === null ||
                I === void 0
                  ? void 0
                  : I.y2) !== void 0 && {
                  y2:
                    (D = z.globals.seriesRange) === null ||
                    D === void 0 ||
                    (f = D[n]) === null ||
                    f === void 0 ||
                    (y = f[r]) === null ||
                    y === void 0 ||
                    (A = y.y[0]) === null ||
                    A === void 0
                      ? void 0
                      : A.y2,
                }
              );
              if (_) {
                if (
                  (B.tooltipLabels.drawSeriesTexts(
                    c(
                      c({}, Xe),
                      {},
                      { shared: !this.showOnIntersect && this.tConfig.shared }
                    )
                  ),
                  $)
                )
                  z.globals.markers.largestSize > 0
                    ? B.marker.enlargePoints(r)
                    : B.tooltipPosition.moveDynamicPointsOnHover(r);
                else if (
                  this.tooltipUtil.hasBars() &&
                  ((this.barSeriesHeight = this.tooltipUtil.getBarsHeight(Z)),
                  this.barSeriesHeight > 0)
                ) {
                  var ut = new X(this.ctx),
                    at = z.globals.dom.Paper.select(
                      ".apexcharts-bar-area[j='".concat(r, "']")
                    );
                  this.deactivateHoverFilter(),
                    this.tooltipPosition.moveStickyTooltipOverBars(r, n);
                  for (var mt = 0; mt < at.length; mt++)
                    ut.pathMouseEnter(at[mt]);
                }
              } else
                B.tooltipLabels.drawSeriesTexts(c({ shared: !1 }, Xe)),
                  this.tooltipUtil.hasBars() &&
                    B.tooltipPosition.moveStickyTooltipOverBars(r, n),
                  $ && B.tooltipPosition.moveMarkers(n, r);
            },
          },
        ]),
        T
      );
    })(),
    me = (function () {
      function T(e) {
        p(this, T),
          (this.w = e.w),
          (this.barCtx = e),
          (this.totalFormatter =
            this.w.config.plotOptions.bar.dataLabels.total.formatter),
          this.totalFormatter ||
            (this.totalFormatter = this.w.config.dataLabels.formatter);
      }
      return (
        S(T, [
          {
            key: "handleBarDataLabels",
            value: function (e) {
              var i = e.x,
                n = e.y,
                r = e.y1,
                o = e.y2,
                l = e.i,
                h = e.j,
                d = e.realIndex,
                g = e.groupIndex,
                m = e.series,
                x = e.barHeight,
                v = e.barWidth,
                w = e.barXPosition,
                C = e.barYPosition,
                P = e.visibleSeries,
                M = e.renderedPath,
                I = this.w,
                D = new X(this.barCtx.ctx),
                f = Array.isArray(this.barCtx.strokeWidth)
                  ? this.barCtx.strokeWidth[d]
                  : this.barCtx.strokeWidth,
                y = i + parseFloat(v * P),
                A = n + parseFloat(x * P);
              I.globals.isXNumeric &&
                !I.globals.isBarHorizontal &&
                ((y = i + parseFloat(v * (P + 1))),
                (A = n + parseFloat(x * (P + 1)) - f));
              var _,
                z = null,
                B = i,
                $ = n,
                Z = {},
                re = I.config.dataLabels,
                ce = this.barCtx.barOptions.dataLabels,
                oe = this.barCtx.barOptions.dataLabels.total;
              C !== void 0 && this.barCtx.isRangeBar && ((A = C), ($ = C)),
                w !== void 0 &&
                  this.barCtx.isVerticalGroupedRangeBar &&
                  ((y = w), (B = w));
              var de = re.offsetX,
                Pe = re.offsetY,
                Re = { width: 0, height: 0 };
              if (I.config.dataLabels.enabled) {
                var Oe = this.barCtx.series[l][h];
                Re = D.getTextRects(
                  I.globals.yLabelFormatters[0](Oe),
                  parseFloat(re.style.fontSize)
                );
              }
              var Xe = {
                x: i,
                y: n,
                i: l,
                j: h,
                realIndex: d,
                groupIndex: g || -1,
                renderedPath: M,
                bcx: y,
                bcy: A,
                barHeight: x,
                barWidth: v,
                textRects: Re,
                strokeWidth: f,
                dataLabelsX: B,
                dataLabelsY: $,
                dataLabelsConfig: re,
                barDataLabelsConfig: ce,
                barTotalDataLabelsConfig: oe,
                offX: de,
                offY: Pe,
              };
              return (
                (Z = this.barCtx.isHorizontal
                  ? this.calculateBarsDataLabelsPosition(Xe)
                  : this.calculateColumnsDataLabelsPosition(Xe)),
                M.attr({
                  cy: Z.bcy,
                  cx: Z.bcx,
                  j: h,
                  val: m[l][h],
                  barHeight: x,
                  barWidth: v,
                }),
                (_ = this.drawCalculatedDataLabels({
                  x: Z.dataLabelsX,
                  y: Z.dataLabelsY,
                  val: this.barCtx.isRangeBar ? [r, o] : m[l][h],
                  i: d,
                  j: h,
                  barWidth: v,
                  barHeight: x,
                  textRects: Re,
                  dataLabelsConfig: re,
                })),
                I.config.chart.stacked &&
                  oe.enabled &&
                  (z = this.drawTotalDataLabels({
                    x: Z.totalDataLabelsX,
                    y: Z.totalDataLabelsY,
                    realIndex: d,
                    textAnchor: Z.totalDataLabelsAnchor,
                    val: this.getStackedTotalDataLabel({ realIndex: d, j: h }),
                    dataLabelsConfig: re,
                    barTotalDataLabelsConfig: oe,
                  })),
                { dataLabels: _, totalDataLabels: z }
              );
            },
          },
          {
            key: "getStackedTotalDataLabel",
            value: function (e) {
              var i = e.realIndex,
                n = e.j,
                r = this.w,
                o = this.barCtx.stackedSeriesTotals[n];
              return (
                this.totalFormatter &&
                  (o = this.totalFormatter(
                    o,
                    c(c({}, r), {}, { seriesIndex: i, dataPointIndex: n, w: r })
                  )),
                o
              );
            },
          },
          {
            key: "calculateColumnsDataLabelsPosition",
            value: function (e) {
              var i,
                n,
                r = this.w,
                o = e.i,
                l = e.j,
                h = e.realIndex,
                d = e.groupIndex,
                g = e.y,
                m = e.bcx,
                x = e.barWidth,
                v = e.barHeight,
                w = e.textRects,
                C = e.dataLabelsX,
                P = e.dataLabelsY,
                M = e.dataLabelsConfig,
                I = e.barDataLabelsConfig,
                D = e.barTotalDataLabelsConfig,
                f = e.strokeWidth,
                y = e.offX,
                A = e.offY;
              v = Math.abs(v);
              var _ =
                r.config.plotOptions.bar.dataLabels.orientation === "vertical";
              m = m - f / 2 + (d !== -1 ? d * x : 0);
              var z = r.globals.gridWidth / r.globals.dataPoints;
              this.barCtx.isVerticalGroupedRangeBar
                ? (C += x / 2)
                : (C = r.globals.isXNumeric
                    ? m - x / 2 + y
                    : m - z + x / 2 + y),
                _ && (C = C + w.height / 2 - f / 2 - 2);
              var B = this.barCtx.series[o][l] < 0,
                $ = g;
              switch (
                (this.barCtx.isReversed &&
                  (($ = g - v + (B ? 2 * v : 0)), (g -= v)),
                I.position)
              ) {
                case "center":
                  P = _
                    ? B
                      ? $ + v / 2 + A
                      : $ + v / 2 - A
                    : B
                    ? $ - v / 2 + w.height / 2 + A
                    : $ + v / 2 + w.height / 2 - A;
                  break;
                case "bottom":
                  P = _
                    ? B
                      ? $ + v + A
                      : $ + v - A
                    : B
                    ? $ - v + w.height + f + A
                    : $ + v - w.height / 2 + f - A;
                  break;
                case "top":
                  P = _
                    ? B
                      ? $ + A
                      : $ - A
                    : B
                    ? $ - w.height / 2 - A
                    : $ + w.height + A;
              }
              if (this.barCtx.lastActiveBarSerieIndex === h && D.enabled) {
                var Z = new X(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: h, j: l }),
                  M.fontSize
                );
                (i = B
                  ? $ - Z.height / 2 - A - D.offsetY + 18
                  : $ + Z.height + A + D.offsetY - 18),
                  (n = C + D.offsetX);
              }
              return (
                r.config.chart.stacked ||
                  (P < 0
                    ? (P = 0 + f)
                    : P + w.height / 3 > r.globals.gridHeight &&
                      (P = r.globals.gridHeight - f)),
                {
                  bcx: m,
                  bcy: g,
                  dataLabelsX: C,
                  dataLabelsY: P,
                  totalDataLabelsX: n,
                  totalDataLabelsY: i,
                  totalDataLabelsAnchor: "middle",
                }
              );
            },
          },
          {
            key: "calculateBarsDataLabelsPosition",
            value: function (e) {
              var i = this.w,
                n = e.x,
                r = e.i,
                o = e.j,
                l = e.realIndex,
                h = e.groupIndex,
                d = e.bcy,
                g = e.barHeight,
                m = e.barWidth,
                x = e.textRects,
                v = e.dataLabelsX,
                w = e.strokeWidth,
                C = e.dataLabelsConfig,
                P = e.barDataLabelsConfig,
                M = e.barTotalDataLabelsConfig,
                I = e.offX,
                D = e.offY,
                f = i.globals.gridHeight / i.globals.dataPoints;
              m = Math.abs(m);
              var y,
                A,
                _ =
                  (d += h !== -1 ? h * g : 0) -
                  (this.barCtx.isRangeBar ? 0 : f) +
                  g / 2 +
                  x.height / 2 +
                  D -
                  3,
                z = "start",
                B = this.barCtx.series[r][o] < 0,
                $ = n;
              switch (
                (this.barCtx.isReversed &&
                  (($ = n + m - (B ? 2 * m : 0)),
                  (n = i.globals.gridWidth - m)),
                P.position)
              ) {
                case "center":
                  v = B ? $ + m / 2 - I : Math.max(x.width / 2, $ - m / 2) + I;
                  break;
                case "bottom":
                  v = B
                    ? $ + m - w - Math.round(x.width / 2) - I
                    : $ - m + w + Math.round(x.width / 2) + I;
                  break;
                case "top":
                  v = B
                    ? $ - w + Math.round(x.width / 2) - I
                    : $ - w - Math.round(x.width / 2) + I;
              }
              if (this.barCtx.lastActiveBarSerieIndex === l && M.enabled) {
                var Z = new X(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: l, j: o }),
                  C.fontSize
                );
                B
                  ? ((y = $ - w + Math.round(Z.width / 2) - I - M.offsetX - 15),
                    (z = "end"))
                  : (y = $ - w - Math.round(Z.width / 2) + I + M.offsetX + 15),
                  (A = _ + M.offsetY);
              }
              return (
                i.config.chart.stacked ||
                  (v < 0
                    ? (v = v + x.width + w)
                    : v + x.width / 2 > i.globals.gridWidth &&
                      (v = i.globals.gridWidth - x.width - w)),
                {
                  bcx: n,
                  bcy: d,
                  dataLabelsX: v,
                  dataLabelsY: _,
                  totalDataLabelsX: y,
                  totalDataLabelsY: A,
                  totalDataLabelsAnchor: z,
                }
              );
            },
          },
          {
            key: "drawCalculatedDataLabels",
            value: function (e) {
              var i = e.x,
                n = e.y,
                r = e.val,
                o = e.i,
                l = e.j,
                h = e.textRects,
                d = e.barHeight,
                g = e.barWidth,
                m = e.dataLabelsConfig,
                x = this.w,
                v = "rotate(0)";
              x.config.plotOptions.bar.dataLabels.orientation === "vertical" &&
                (v = "rotate(-90, ".concat(i, ", ").concat(n, ")"));
              var w = new Ke(this.barCtx.ctx),
                C = new X(this.barCtx.ctx),
                P = m.formatter,
                M = null,
                I = x.globals.collapsedSeriesIndices.indexOf(o) > -1;
              if (m.enabled && !I) {
                M = C.group({ class: "apexcharts-data-labels", transform: v });
                var D = "";
                r !== void 0 &&
                  (D = P(
                    r,
                    c(c({}, x), {}, { seriesIndex: o, dataPointIndex: l, w: x })
                  )),
                  !r &&
                    x.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (D = "");
                var f = x.globals.series[o][l] < 0,
                  y = x.config.plotOptions.bar.dataLabels.position;
                x.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical" &&
                  (y === "top" && (m.textAnchor = f ? "end" : "start"),
                  y === "center" && (m.textAnchor = "middle"),
                  y === "bottom" && (m.textAnchor = f ? "end" : "start")),
                  this.barCtx.isRangeBar &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    g < C.getTextRects(D, parseFloat(m.style.fontSize)).width &&
                    (D = ""),
                  x.config.chart.stacked &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    (this.barCtx.isHorizontal
                      ? h.width / 1.6 > Math.abs(g) && (D = "")
                      : h.height / 1.6 > Math.abs(d) && (D = ""));
                var A = c({}, m);
                this.barCtx.isHorizontal &&
                  r < 0 &&
                  (m.textAnchor === "start"
                    ? (A.textAnchor = "end")
                    : m.textAnchor === "end" && (A.textAnchor = "start")),
                  w.plotDataLabelsText({
                    x: i,
                    y: n,
                    text: D,
                    i: o,
                    j: l,
                    parent: M,
                    dataLabelsConfig: A,
                    alwaysDrawDataLabel: !0,
                    offsetCorrection: !0,
                  });
              }
              return M;
            },
          },
          {
            key: "drawTotalDataLabels",
            value: function (e) {
              var i,
                n = e.x,
                r = e.y,
                o = e.val,
                l = e.realIndex,
                h = e.textAnchor,
                d = e.barTotalDataLabelsConfig,
                g = new X(this.barCtx.ctx);
              return (
                d.enabled &&
                  n !== void 0 &&
                  r !== void 0 &&
                  this.barCtx.lastActiveBarSerieIndex === l &&
                  (i = g.drawText({
                    x: n,
                    y: r,
                    foreColor: d.style.color,
                    text: o,
                    textAnchor: h,
                    fontFamily: d.style.fontFamily,
                    fontSize: d.style.fontSize,
                    fontWeight: d.style.fontWeight,
                  })),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Ee = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.barCtx = e);
      }
      return (
        S(T, [
          {
            key: "initVariables",
            value: function (e) {
              var i = this.w;
              (this.barCtx.series = e),
                (this.barCtx.totalItems = 0),
                (this.barCtx.seriesLen = 0),
                (this.barCtx.visibleI = -1),
                (this.barCtx.visibleItems = 1);
              for (var n = 0; n < e.length; n++)
                if (
                  (e[n].length > 0 &&
                    ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                    (this.barCtx.totalItems += e[n].length)),
                  i.globals.isXNumeric)
                )
                  for (var r = 0; r < e[n].length; r++)
                    i.globals.seriesX[n][r] > i.globals.minX &&
                      i.globals.seriesX[n][r] < i.globals.maxX &&
                      this.barCtx.visibleItems++;
                else this.barCtx.visibleItems = i.globals.dataPoints;
              this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                (this.barCtx.zeroSerieses = []),
                i.globals.comboCharts || this.checkZeroSeries({ series: e });
            },
          },
          {
            key: "initialPositions",
            value: function () {
              var e,
                i,
                n,
                r,
                o,
                l,
                h,
                d,
                g = this.w,
                m = g.globals.dataPoints;
              this.barCtx.isRangeBar && (m = g.globals.labels.length);
              var x = this.barCtx.seriesLen;
              if (
                (g.config.plotOptions.bar.rangeBarGroupRows && (x = 1),
                this.barCtx.isHorizontal)
              )
                (o = (n = g.globals.gridHeight / m) / x),
                  g.globals.isXNumeric &&
                    (o =
                      (n = g.globals.gridHeight / this.barCtx.totalItems) /
                      this.barCtx.seriesLen),
                  (o =
                    (o * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100),
                  String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                    -1 && (o = parseInt(this.barCtx.barOptions.barHeight, 10)),
                  (d =
                    this.barCtx.baseLineInvertedY +
                    g.globals.padHorizontal +
                    (this.barCtx.isReversed ? g.globals.gridWidth : 0) -
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineInvertedY
                      : 0)),
                  this.barCtx.isFunnel && (d = g.globals.gridWidth / 2),
                  (i = (n - o * this.barCtx.seriesLen) / 2);
              else {
                if (
                  ((r = g.globals.gridWidth / this.barCtx.visibleItems),
                  g.config.xaxis.convertedCatToNumeric &&
                    (r = g.globals.gridWidth / g.globals.dataPoints),
                  (l =
                    ((r / x) *
                      parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                    100),
                  g.globals.isXNumeric)
                ) {
                  var v = this.barCtx.xRatio;
                  g.config.xaxis.convertedCatToNumeric &&
                    (v = this.barCtx.initialXRatio),
                    g.globals.minXDiff &&
                      g.globals.minXDiff !== 0.5 &&
                      g.globals.minXDiff / v > 0 &&
                      (r = g.globals.minXDiff / v),
                    (l =
                      ((r / x) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100) < 1 && (l = 1);
                }
                String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                  -1 && (l = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                  (h =
                    g.globals.gridHeight -
                    this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                    (this.barCtx.isReversed ? g.globals.gridHeight : 0) +
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                      : 0)),
                  (e =
                    g.globals.padHorizontal +
                    (r - l * this.barCtx.seriesLen) / 2);
              }
              return {
                x: e,
                y: i,
                yDivision: n,
                xDivision: r,
                barHeight: o,
                barWidth: l,
                zeroH: h,
                zeroW: d,
              };
            },
          },
          {
            key: "initializeStackedPrevVars",
            value: function (e) {
              var i = e.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (n) {
                    e[n] || (e[n] = {}),
                      (e[n].prevY = []),
                      (e[n].prevX = []),
                      (e[n].prevYF = []),
                      (e[n].prevXF = []),
                      (e[n].prevYVal = []),
                      (e[n].prevXVal = []);
                  })
                : ((e.prevY = []),
                  (e.prevX = []),
                  (e.prevYF = []),
                  (e.prevXF = []),
                  (e.prevYVal = []),
                  (e.prevXVal = []));
            },
          },
          {
            key: "initializeStackedXYVars",
            value: function (e) {
              var i = e.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (n) {
                    e[n] || (e[n] = {}),
                      (e[n].xArrj = []),
                      (e[n].xArrjF = []),
                      (e[n].xArrjVal = []),
                      (e[n].yArrj = []),
                      (e[n].yArrjF = []),
                      (e[n].yArrjVal = []);
                  })
                : ((e.xArrj = []),
                  (e.xArrjF = []),
                  (e.xArrjVal = []),
                  (e.yArrj = []),
                  (e.yArrjF = []),
                  (e.yArrjVal = []));
            },
          },
          {
            key: "getPathFillColor",
            value: function (e, i, n, r) {
              var o,
                l,
                h,
                d,
                g = this.w,
                m = new Te(this.barCtx.ctx),
                x = null,
                v = this.barCtx.barOptions.distributed ? n : i;
              return (
                this.barCtx.barOptions.colors.ranges.length > 0 &&
                  this.barCtx.barOptions.colors.ranges.map(function (w) {
                    e[i][n] >= w.from && e[i][n] <= w.to && (x = w.color);
                  }),
                g.config.series[i].data[n] &&
                  g.config.series[i].data[n].fillColor &&
                  (x = g.config.series[i].data[n].fillColor),
                m.fillPath({
                  seriesNumber: this.barCtx.barOptions.distributed ? v : r,
                  dataPointIndex: n,
                  color: x,
                  value: e[i][n],
                  fillConfig:
                    (o = g.config.series[i].data[n]) === null || o === void 0
                      ? void 0
                      : o.fill,
                  fillType:
                    (l = g.config.series[i].data[n]) !== null &&
                    l !== void 0 &&
                    (h = l.fill) !== null &&
                    h !== void 0 &&
                    h.type
                      ? (d = g.config.series[i].data[n]) === null ||
                        d === void 0
                        ? void 0
                        : d.fill.type
                      : g.config.fill.type,
                })
              );
            },
          },
          {
            key: "getStrokeWidth",
            value: function (e, i, n) {
              var r = 0,
                o = this.w;
              return (
                this.barCtx.series[e][i]
                  ? (this.barCtx.isNullValue = !1)
                  : (this.barCtx.isNullValue = !0),
                o.config.stroke.show &&
                  (this.barCtx.isNullValue ||
                    (r = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[n]
                      : this.barCtx.strokeWidth)),
                r
              );
            },
          },
          {
            key: "shouldApplyRadius",
            value: function (e) {
              var i = this.w,
                n = !1;
              return (
                i.config.plotOptions.bar.borderRadius > 0 &&
                  (i.config.chart.stacked &&
                  i.config.plotOptions.bar.borderRadiusWhenStacked === "last"
                    ? this.barCtx.lastActiveBarSerieIndex === e && (n = !0)
                    : (n = !0)),
                n
              );
            },
          },
          {
            key: "barBackground",
            value: function (e) {
              var i = e.j,
                n = e.i,
                r = e.x1,
                o = e.x2,
                l = e.y1,
                h = e.y2,
                d = e.elSeries,
                g = this.w,
                m = new X(this.barCtx.ctx),
                x = new je(this.barCtx.ctx).getActiveConfigSeriesIndex();
              if (
                this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&
                x === n
              ) {
                i >= this.barCtx.barOptions.colors.backgroundBarColors.length &&
                  (i %=
                    this.barCtx.barOptions.colors.backgroundBarColors.length);
                var v = this.barCtx.barOptions.colors.backgroundBarColors[i],
                  w = m.drawRect(
                    r !== void 0 ? r : 0,
                    l !== void 0 ? l : 0,
                    o !== void 0 ? o : g.globals.gridWidth,
                    h !== void 0 ? h : g.globals.gridHeight,
                    this.barCtx.barOptions.colors.backgroundBarRadius,
                    v,
                    this.barCtx.barOptions.colors.backgroundBarOpacity
                  );
                d.add(w), w.node.classList.add("apexcharts-backgroundBar");
              }
            },
          },
          {
            key: "getColumnPaths",
            value: function (e) {
              var i,
                n = e.barWidth,
                r = e.barXPosition,
                o = e.y1,
                l = e.y2,
                h = e.strokeWidth,
                d = e.seriesGroup,
                g = e.realIndex,
                m = e.i,
                x = e.j,
                v = e.w,
                w = new X(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[g] : h) || (h = 0);
              var C = n,
                P = r;
              (i = v.config.series[g].data[x]) !== null &&
                i !== void 0 &&
                i.columnWidthOffset &&
                ((P = r - v.config.series[g].data[x].columnWidthOffset / 2),
                (C = n + v.config.series[g].data[x].columnWidthOffset));
              var M = P,
                I = P + C;
              (o += 0.001), (l += 0.001);
              var D = w.move(M, o),
                f = w.move(M, o),
                y = w.line(I - h, o);
              if (
                (v.globals.previousPaths.length > 0 &&
                  (f = this.barCtx.getPreviousPath(g, x, !1)),
                (D =
                  D +
                  w.line(M, l) +
                  w.line(I - h, l) +
                  w.line(I - h, o) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (f =
                  f +
                  w.line(M, o) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  w.line(M, o) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(g) &&
                  (D = w.roundPathCorners(
                    D,
                    v.config.plotOptions.bar.borderRadius
                  )),
                v.config.chart.stacked)
              ) {
                var A = this.barCtx;
                v.globals.hasSeriesGroups && d && (A = this.barCtx[d]),
                  A.yArrj.push(l),
                  A.yArrjF.push(Math.abs(o - l)),
                  A.yArrjVal.push(this.barCtx.series[m][x]);
              }
              return { pathTo: D, pathFrom: f };
            },
          },
          {
            key: "getBarpaths",
            value: function (e) {
              var i,
                n = e.barYPosition,
                r = e.barHeight,
                o = e.x1,
                l = e.x2,
                h = e.strokeWidth,
                d = e.seriesGroup,
                g = e.realIndex,
                m = e.i,
                x = e.j,
                v = e.w,
                w = new X(this.barCtx.ctx);
              (h = Array.isArray(h) ? h[g] : h) || (h = 0);
              var C = n,
                P = r;
              (i = v.config.series[g].data[x]) !== null &&
                i !== void 0 &&
                i.barHeightOffset &&
                ((C = n - v.config.series[g].data[x].barHeightOffset / 2),
                (P = r + v.config.series[g].data[x].barHeightOffset));
              var M = C,
                I = C + P;
              (o += 0.001), (l += 0.001);
              var D = w.move(o, M),
                f = w.move(o, M);
              v.globals.previousPaths.length > 0 &&
                (f = this.barCtx.getPreviousPath(g, x, !1));
              var y = w.line(o, I - h);
              if (
                ((D =
                  D +
                  w.line(l, M) +
                  w.line(l, I - h) +
                  y +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (f =
                  f +
                  w.line(o, M) +
                  y +
                  y +
                  y +
                  y +
                  y +
                  w.line(o, M) +
                  (v.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(g) &&
                  (D = w.roundPathCorners(
                    D,
                    v.config.plotOptions.bar.borderRadius
                  )),
                v.config.chart.stacked)
              ) {
                var A = this.barCtx;
                v.globals.hasSeriesGroups && d && (A = this.barCtx[d]),
                  A.xArrj.push(l),
                  A.xArrjF.push(Math.abs(o - l)),
                  A.xArrjVal.push(this.barCtx.series[m][x]);
              }
              return { pathTo: D, pathFrom: f };
            },
          },
          {
            key: "checkZeroSeries",
            value: function (e) {
              for (var i = e.series, n = this.w, r = 0; r < i.length; r++) {
                for (
                  var o = 0, l = 0;
                  l < i[n.globals.maxValsInArrayIndex].length;
                  l++
                )
                  o += i[r][l];
                o === 0 && this.barCtx.zeroSerieses.push(r);
              }
            },
          },
          {
            key: "getXForValue",
            value: function (e, i) {
              var n =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                e != null &&
                  (n =
                    i +
                    e / this.barCtx.invertedYRatio -
                    2 *
                      (this.barCtx.isReversed
                        ? e / this.barCtx.invertedYRatio
                        : 0)),
                n
              );
            },
          },
          {
            key: "getYForValue",
            value: function (e, i) {
              var n =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                e != null &&
                  (n =
                    i -
                    e / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                    2 *
                      (this.barCtx.isReversed
                        ? e / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                        : 0)),
                n
              );
            },
          },
          {
            key: "getGoalValues",
            value: function (e, i, n, r, o) {
              var l = this,
                h = this.w,
                d = [],
                g = function (v, w) {
                  var C;
                  d.push(
                    (E(
                      (C = {}),
                      e,
                      e === "x"
                        ? l.getXForValue(v, i, !1)
                        : l.getYForValue(v, n, !1)
                    ),
                    E(C, "attrs", w),
                    C)
                  );
                };
              if (
                (h.globals.seriesGoals[r] &&
                  h.globals.seriesGoals[r][o] &&
                  Array.isArray(h.globals.seriesGoals[r][o]) &&
                  h.globals.seriesGoals[r][o].forEach(function (v) {
                    g(v.value, v);
                  }),
                this.barCtx.barOptions.isDumbbell &&
                  h.globals.seriesRange.length)
              ) {
                var m = this.barCtx.barOptions.dumbbellColors
                    ? this.barCtx.barOptions.dumbbellColors
                    : h.globals.colors,
                  x = {
                    strokeHeight: e === "x" ? 0 : h.globals.markers.size[r],
                    strokeWidth: e === "x" ? h.globals.markers.size[r] : 0,
                    strokeDashArray: 0,
                    strokeLineCap: "round",
                    strokeColor: Array.isArray(m[r]) ? m[r][0] : m[r],
                  };
                g(h.globals.seriesRangeStart[r][o], x),
                  g(
                    h.globals.seriesRangeEnd[r][o],
                    c(
                      c({}, x),
                      {},
                      { strokeColor: Array.isArray(m[r]) ? m[r][1] : m[r] }
                    )
                  );
              }
              return d;
            },
          },
          {
            key: "drawGoalLine",
            value: function (e) {
              var i = e.barXPosition,
                n = e.barYPosition,
                r = e.goalX,
                o = e.goalY,
                l = e.barWidth,
                h = e.barHeight,
                d = new X(this.barCtx.ctx),
                g = d.group({ className: "apexcharts-bar-goals-groups" });
              g.node.classList.add("apexcharts-element-hidden"),
                this.barCtx.w.globals.delayedElements.push({ el: g.node }),
                g.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(
                    this.barCtx.w.globals.cuid,
                    ")"
                  )
                );
              var m = null;
              return (
                this.barCtx.isHorizontal
                  ? Array.isArray(r) &&
                    r.forEach(function (x) {
                      var v =
                          x.attrs.strokeHeight !== void 0
                            ? x.attrs.strokeHeight
                            : h / 2,
                        w = n + v + h / 2;
                      (m = d.drawLine(
                        x.x,
                        w - 2 * v,
                        x.x,
                        w,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeWidth ? x.attrs.strokeWidth : 2,
                        x.attrs.strokeLineCap
                      )),
                        g.add(m);
                    })
                  : Array.isArray(o) &&
                    o.forEach(function (x) {
                      var v =
                          x.attrs.strokeWidth !== void 0
                            ? x.attrs.strokeWidth
                            : l / 2,
                        w = i + v + l / 2;
                      (m = d.drawLine(
                        w - 2 * v,
                        x.y,
                        w,
                        x.y,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeHeight ? x.attrs.strokeHeight : 2,
                        x.attrs.strokeLineCap
                      )),
                        g.add(m);
                    }),
                g
              );
            },
          },
          {
            key: "drawBarShadow",
            value: function (e) {
              var i = e.prevPaths,
                n = e.currPaths,
                r = e.color,
                o = this.w,
                l = i.x,
                h = i.x1,
                d = i.barYPosition,
                g = n.x,
                m = n.x1,
                x = n.barYPosition,
                v = d + n.barHeight,
                w = new X(this.barCtx.ctx),
                C = new L(),
                P =
                  w.move(h, v) +
                  w.line(l, v) +
                  w.line(g, x) +
                  w.line(m, x) +
                  w.line(h, v) +
                  (o.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z");
              return w.drawPath({
                d: P,
                fill: C.shadeColor(0.5, L.rgb2hex(r)),
                stroke: "none",
                strokeWidth: 0,
                fillOpacity: 1,
                classes: "apexcharts-bar-shadows",
              });
            },
          },
        ]),
        T
      );
    })(),
    ve = (function () {
      function T(e, i) {
        p(this, T), (this.ctx = e), (this.w = e.w);
        var n = this.w;
        (this.barOptions = n.config.plotOptions.bar),
          (this.isHorizontal = this.barOptions.horizontal),
          (this.strokeWidth = n.config.stroke.width),
          (this.isNullValue = !1),
          (this.isRangeBar = n.globals.seriesRange.length && this.isHorizontal),
          (this.isVerticalGroupedRangeBar =
            !n.globals.isBarHorizontal &&
            n.globals.seriesRange.length &&
            n.config.plotOptions.bar.rangeBarGroupRows),
          (this.isFunnel = this.barOptions.isFunnel),
          (this.xyRatios = i),
          this.xyRatios !== null &&
            ((this.xRatio = i.xRatio),
            (this.initialXRatio = i.initialXRatio),
            (this.yRatio = i.yRatio),
            (this.invertedXRatio = i.invertedXRatio),
            (this.invertedYRatio = i.invertedYRatio),
            (this.baseLineY = i.baseLineY),
            (this.baseLineInvertedY = i.baseLineInvertedY)),
          (this.yaxisIndex = 0),
          (this.seriesLen = 0),
          (this.pathArr = []);
        var r = new je(this.ctx);
        this.lastActiveBarSerieIndex = r.getActiveConfigSeriesIndex("desc", [
          "bar",
          "column",
        ]);
        var o = r.getBarSeriesIndices(),
          l = new W(this.ctx);
        (this.stackedSeriesTotals = l.getStackedSeriesTotals(
          this.w.config.series
            .map(function (h, d) {
              return o.indexOf(d) === -1 ? d : -1;
            })
            .filter(function (h) {
              return h !== -1;
            })
        )),
          (this.barHelpers = new Ee(this));
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e, i) {
              var n = this.w,
                r = new X(this.ctx),
                o = new W(this.ctx, n);
              (e = o.getLogSeries(e)),
                (this.series = e),
                (this.yRatio = o.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(e);
              var l = r.group({
                class: "apexcharts-bar-series apexcharts-plot-series",
              });
              n.config.dataLabels.enabled &&
                this.totalItems > this.barOptions.dataLabels.maxItems &&
                console.warn(
                  "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering."
                );
              for (var h = 0, d = 0; h < e.length; h++, d++) {
                var g,
                  m,
                  x,
                  v,
                  w = void 0,
                  C = void 0,
                  P = [],
                  M = [],
                  I = n.globals.comboCharts ? i[h] : h,
                  D = r.group({
                    class: "apexcharts-series",
                    rel: h + 1,
                    seriesName: L.escapeString(n.globals.seriesNames[I]),
                    "data:realIndex": I,
                  });
                this.ctx.series.addCollapsedClassToSeries(D, I),
                  e[h].length > 0 && (this.visibleI = this.visibleI + 1);
                var f = 0,
                  y = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = I),
                  (this.isReversed =
                    n.config.yaxis[this.yaxisIndex] &&
                    n.config.yaxis[this.yaxisIndex].reversed);
                var A = this.barHelpers.initialPositions();
                (C = A.y),
                  (f = A.barHeight),
                  (m = A.yDivision),
                  (v = A.zeroW),
                  (w = A.x),
                  (y = A.barWidth),
                  (g = A.xDivision),
                  (x = A.zeroH),
                  this.horizontal || M.push(w + y / 2);
                var _ = r.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": I,
                });
                n.globals.delayedElements.push({ el: _.node }),
                  _.node.classList.add("apexcharts-element-hidden");
                var z = r.group({ class: "apexcharts-bar-goals-markers" }),
                  B = r.group({ class: "apexcharts-bar-shadows" });
                n.globals.delayedElements.push({ el: B.node }),
                  B.node.classList.add("apexcharts-element-hidden");
                for (var $ = 0; $ < n.globals.dataPoints; $++) {
                  var Z = this.barHelpers.getStrokeWidth(h, $, I),
                    re = null,
                    ce = {
                      indexes: { i: h, j: $, realIndex: I, bc: d },
                      x: w,
                      y: C,
                      strokeWidth: Z,
                      elSeries: D,
                    };
                  this.isHorizontal
                    ? ((re = this.drawBarPaths(
                        c(
                          c({}, ce),
                          {},
                          { barHeight: f, zeroW: v, yDivision: m }
                        )
                      )),
                      (y = this.series[h][$] / this.invertedYRatio))
                    : ((re = this.drawColumnPaths(
                        c(
                          c({}, ce),
                          {},
                          { xDivision: g, barWidth: y, zeroH: x }
                        )
                      )),
                      (f = this.series[h][$] / this.yRatio[this.yaxisIndex]));
                  var oe = this.barHelpers.getPathFillColor(e, h, $, I);
                  if (
                    this.isFunnel &&
                    this.barOptions.isFunnel3d &&
                    this.pathArr.length &&
                    $ > 0
                  ) {
                    var de = this.barHelpers.drawBarShadow({
                      color:
                        typeof oe == "string" &&
                        (oe == null ? void 0 : oe.indexOf("url")) === -1
                          ? oe
                          : L.hexToRgba(n.globals.colors[h]),
                      prevPaths: this.pathArr[this.pathArr.length - 1],
                      currPaths: re,
                    });
                    de && B.add(de);
                  }
                  this.pathArr.push(re);
                  var Pe = this.barHelpers.drawGoalLine({
                    barXPosition: re.barXPosition,
                    barYPosition: re.barYPosition,
                    goalX: re.goalX,
                    goalY: re.goalY,
                    barHeight: f,
                    barWidth: y,
                  });
                  Pe && z.add(Pe),
                    (C = re.y),
                    (w = re.x),
                    $ > 0 && M.push(w + y / 2),
                    P.push(C),
                    this.renderSeries({
                      realIndex: I,
                      pathFill: oe,
                      j: $,
                      i: h,
                      pathFrom: re.pathFrom,
                      pathTo: re.pathTo,
                      strokeWidth: Z,
                      elSeries: D,
                      x: w,
                      y: C,
                      series: e,
                      barHeight: re.barHeight ? re.barHeight : f,
                      barWidth: re.barWidth ? re.barWidth : y,
                      elDataLabelsWrap: _,
                      elGoalsMarkers: z,
                      elBarShadows: B,
                      visibleSeries: this.visibleI,
                      type: "bar",
                    });
                }
                (n.globals.seriesXvalues[I] = M),
                  (n.globals.seriesYvalues[I] = P),
                  l.add(D);
              }
              return l;
            },
          },
          {
            key: "renderSeries",
            value: function (e) {
              var i = e.realIndex,
                n = e.pathFill,
                r = e.lineFill,
                o = e.j,
                l = e.i,
                h = e.groupIndex,
                d = e.pathFrom,
                g = e.pathTo,
                m = e.strokeWidth,
                x = e.elSeries,
                v = e.x,
                w = e.y,
                C = e.y1,
                P = e.y2,
                M = e.series,
                I = e.barHeight,
                D = e.barWidth,
                f = e.barXPosition,
                y = e.barYPosition,
                A = e.elDataLabelsWrap,
                _ = e.elGoalsMarkers,
                z = e.elBarShadows,
                B = e.visibleSeries,
                $ = e.type,
                Z = this.w,
                re = new X(this.ctx);
              r ||
                (r = this.barOptions.distributed
                  ? Z.globals.stroke.colors[o]
                  : Z.globals.stroke.colors[i]),
                Z.config.series[l].data[o] &&
                  Z.config.series[l].data[o].strokeColor &&
                  (r = Z.config.series[l].data[o].strokeColor),
                this.isNullValue && (n = "none");
              var ce =
                  ((o / Z.config.chart.animations.animateGradually.delay) *
                    (Z.config.chart.animations.speed / Z.globals.dataPoints)) /
                  2.4,
                oe = re.renderPaths({
                  i: l,
                  j: o,
                  realIndex: i,
                  pathFrom: d,
                  pathTo: g,
                  stroke: r,
                  strokeWidth: m,
                  strokeLineCap: Z.config.stroke.lineCap,
                  fill: n,
                  animationDelay: ce,
                  initialSpeed: Z.config.chart.animations.speed,
                  dataChangeSpeed:
                    Z.config.chart.animations.dynamicAnimation.speed,
                  className: "apexcharts-".concat($, "-area"),
                });
              oe.attr(
                "clip-path",
                "url(#gridRectMask".concat(Z.globals.cuid, ")")
              );
              var de = Z.config.forecastDataPoints;
              de.count > 0 &&
                o >= Z.globals.dataPoints - de.count &&
                (oe.node.setAttribute("stroke-dasharray", de.dashArray),
                oe.node.setAttribute("stroke-width", de.strokeWidth),
                oe.node.setAttribute("fill-opacity", de.fillOpacity)),
                C !== void 0 &&
                  P !== void 0 &&
                  (oe.attr("data-range-y1", C), oe.attr("data-range-y2", P)),
                new O(this.ctx).setSelectionFilter(oe, i, o),
                x.add(oe);
              var Pe = new me(this).handleBarDataLabels({
                x: v,
                y: w,
                y1: C,
                y2: P,
                i: l,
                j: o,
                series: M,
                realIndex: i,
                groupIndex: h,
                barHeight: I,
                barWidth: D,
                barXPosition: f,
                barYPosition: y,
                renderedPath: oe,
                visibleSeries: B,
              });
              return (
                Pe.dataLabels !== null && A.add(Pe.dataLabels),
                Pe.totalDataLabels && A.add(Pe.totalDataLabels),
                x.add(A),
                _ && x.add(_),
                z && x.add(z),
                x
              );
            },
          },
          {
            key: "drawBarPaths",
            value: function (e) {
              var i,
                n = e.indexes,
                r = e.barHeight,
                o = e.strokeWidth,
                l = e.zeroW,
                h = e.x,
                d = e.y,
                g = e.yDivision,
                m = e.elSeries,
                x = this.w,
                v = n.i,
                w = n.j;
              if (x.globals.isXNumeric)
                i =
                  (d =
                    (x.globals.seriesX[v][w] - x.globals.minX) /
                      this.invertedXRatio -
                    r) +
                  r * this.visibleI;
              else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var C = 0,
                  P = 0;
                x.globals.seriesPercent.forEach(function (I, D) {
                  I[w] && C++, D < v && I[w] === 0 && P++;
                }),
                  C > 0 && (r = (this.seriesLen * r) / C),
                  (i = d + r * this.visibleI),
                  (i -= r * P);
              } else i = d + r * this.visibleI;
              this.isFunnel &&
                (l -=
                  (this.barHelpers.getXForValue(this.series[v][w], l) - l) / 2),
                (h = this.barHelpers.getXForValue(this.series[v][w], l));
              var M = this.barHelpers.getBarpaths({
                barYPosition: i,
                barHeight: r,
                x1: l,
                x2: h,
                strokeWidth: o,
                series: this.series,
                realIndex: n.realIndex,
                i: v,
                j: w,
                w: x,
              });
              return (
                x.globals.isXNumeric || (d += g),
                this.barHelpers.barBackground({
                  j: w,
                  i: v,
                  y1: i - r * this.visibleI,
                  y2: r * this.seriesLen,
                  elSeries: m,
                }),
                {
                  pathTo: M.pathTo,
                  pathFrom: M.pathFrom,
                  x1: l,
                  x: h,
                  y: d,
                  goalX: this.barHelpers.getGoalValues("x", l, null, v, w),
                  barYPosition: i,
                  barHeight: r,
                }
              );
            },
          },
          {
            key: "drawColumnPaths",
            value: function (e) {
              var i,
                n = e.indexes,
                r = e.x,
                o = e.y,
                l = e.xDivision,
                h = e.barWidth,
                d = e.zeroH,
                g = e.strokeWidth,
                m = e.elSeries,
                x = this.w,
                v = n.realIndex,
                w = n.i,
                C = n.j,
                P = n.bc;
              if (x.globals.isXNumeric) {
                var M = v;
                x.globals.seriesX[v].length ||
                  (M = x.globals.maxValsInArrayIndex),
                  x.globals.seriesX[M][C] &&
                    (r =
                      (x.globals.seriesX[M][C] - x.globals.minX) / this.xRatio -
                      (h * this.seriesLen) / 2),
                  (i = r + h * this.visibleI);
              } else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var I = 0,
                  D = 0;
                x.globals.seriesPercent.forEach(function (y, A) {
                  y[C] && I++, A < w && y[C] === 0 && D++;
                }),
                  I > 0 && (h = (this.seriesLen * h) / I),
                  (i = r + h * this.visibleI),
                  (i -= h * D);
              } else i = r + h * this.visibleI;
              o = this.barHelpers.getYForValue(this.series[w][C], d);
              var f = this.barHelpers.getColumnPaths({
                barXPosition: i,
                barWidth: h,
                y1: d,
                y2: o,
                strokeWidth: g,
                series: this.series,
                realIndex: n.realIndex,
                i: w,
                j: C,
                w: x,
              });
              return (
                x.globals.isXNumeric || (r += l),
                this.barHelpers.barBackground({
                  bc: P,
                  j: C,
                  i: w,
                  x1: i - g / 2 - h * this.visibleI,
                  x2: h * this.seriesLen + g / 2,
                  elSeries: m,
                }),
                {
                  pathTo: f.pathTo,
                  pathFrom: f.pathFrom,
                  x: r,
                  y: o,
                  goalY: this.barHelpers.getGoalValues("y", null, d, w, C),
                  barXPosition: i,
                  barWidth: h,
                }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (e, i) {
              for (
                var n, r = this.w, o = 0;
                o < r.globals.previousPaths.length;
                o++
              ) {
                var l = r.globals.previousPaths[o];
                l.paths &&
                  l.paths.length > 0 &&
                  parseInt(l.realIndex, 10) === parseInt(e, 10) &&
                  r.globals.previousPaths[o].paths[i] !== void 0 &&
                  (n = r.globals.previousPaths[o].paths[i].d);
              }
              return n;
            },
          },
        ]),
        T
      );
    })(),
    Ne = (function (T) {
      N(i, ve);
      var e = V(i);
      function i() {
        return p(this, i), e.apply(this, arguments);
      }
      return (
        S(i, [
          {
            key: "draw",
            value: function (n, r) {
              var o = this,
                l = this.w;
              (this.graphics = new X(this.ctx)),
                (this.bar = new ve(this.ctx, this.xyRatios));
              var h = new W(this.ctx, l);
              (n = h.getLogSeries(n)),
                (this.yRatio = h.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(n),
                l.config.chart.stackType === "100%" &&
                  (n = l.globals.seriesPercent.slice()),
                (this.series = n),
                this.barHelpers.initializeStackedPrevVars(this);
              for (
                var d = this.graphics.group({
                    class: "apexcharts-bar-series apexcharts-plot-series",
                  }),
                  g = 0,
                  m = 0,
                  x = function (C, P) {
                    var M = void 0,
                      I = void 0,
                      D = void 0,
                      f = void 0,
                      y = -1;
                    (o.groupCtx = o),
                      l.globals.seriesGroups.forEach(function (at, mt) {
                        at.indexOf(l.config.series[C].name) > -1 && (y = mt);
                      }),
                      y !== -1 && (o.groupCtx = o[l.globals.seriesGroups[y]]);
                    var A = [],
                      _ = [],
                      z = l.globals.comboCharts ? r[C] : C;
                    o.yRatio.length > 1 && (o.yaxisIndex = z),
                      (o.isReversed =
                        l.config.yaxis[o.yaxisIndex] &&
                        l.config.yaxis[o.yaxisIndex].reversed);
                    var B = o.graphics.group({
                      class: "apexcharts-series",
                      seriesName: L.escapeString(l.globals.seriesNames[z]),
                      rel: C + 1,
                      "data:realIndex": z,
                    });
                    o.ctx.series.addCollapsedClassToSeries(B, z);
                    var $ = o.graphics.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": z,
                      }),
                      Z = o.graphics.group({
                        class: "apexcharts-bar-goals-markers",
                      }),
                      re = 0,
                      ce = 0,
                      oe = o.initialPositions(g, m, M, I, D, f);
                    (m = oe.y),
                      (re = oe.barHeight),
                      (I = oe.yDivision),
                      (f = oe.zeroW),
                      (g = oe.x),
                      (ce = oe.barWidth),
                      (M = oe.xDivision),
                      (D = oe.zeroH),
                      o.barHelpers.initializeStackedXYVars(o),
                      o.groupCtx.prevY.length === 1 &&
                        o.groupCtx.prevY[0].every(function (at) {
                          return isNaN(at);
                        }) &&
                        ((o.groupCtx.prevY[0] = o.groupCtx.prevY[0].map(
                          function (at) {
                            return D;
                          }
                        )),
                        (o.groupCtx.prevYF[0] = o.groupCtx.prevYF[0].map(
                          function (at) {
                            return 0;
                          }
                        )));
                    for (var de = 0; de < l.globals.dataPoints; de++) {
                      var Pe = o.barHelpers.getStrokeWidth(C, de, z),
                        Re = {
                          indexes: { i: C, j: de, realIndex: z, bc: P },
                          strokeWidth: Pe,
                          x: g,
                          y: m,
                          elSeries: B,
                          groupIndex: y,
                          seriesGroup: l.globals.seriesGroups[y],
                        },
                        Oe = null;
                      o.isHorizontal
                        ? ((Oe = o.drawStackedBarPaths(
                            c(
                              c({}, Re),
                              {},
                              { zeroW: f, barHeight: re, yDivision: I }
                            )
                          )),
                          (ce = o.series[C][de] / o.invertedYRatio))
                        : ((Oe = o.drawStackedColumnPaths(
                            c(
                              c({}, Re),
                              {},
                              { xDivision: M, barWidth: ce, zeroH: D }
                            )
                          )),
                          (re = o.series[C][de] / o.yRatio[o.yaxisIndex]));
                      var Xe = o.barHelpers.drawGoalLine({
                        barXPosition: Oe.barXPosition,
                        barYPosition: Oe.barYPosition,
                        goalX: Oe.goalX,
                        goalY: Oe.goalY,
                        barHeight: re,
                        barWidth: ce,
                      });
                      Xe && Z.add(Xe),
                        (m = Oe.y),
                        (g = Oe.x),
                        A.push(g),
                        _.push(m);
                      var ut = o.barHelpers.getPathFillColor(n, C, de, z);
                      B = o.renderSeries({
                        realIndex: z,
                        pathFill: ut,
                        j: de,
                        i: C,
                        groupIndex: y,
                        pathFrom: Oe.pathFrom,
                        pathTo: Oe.pathTo,
                        strokeWidth: Pe,
                        elSeries: B,
                        x: g,
                        y: m,
                        series: n,
                        barHeight: re,
                        barWidth: ce,
                        elDataLabelsWrap: $,
                        elGoalsMarkers: Z,
                        type: "bar",
                        visibleSeries: 0,
                      });
                    }
                    (l.globals.seriesXvalues[z] = A),
                      (l.globals.seriesYvalues[z] = _),
                      o.groupCtx.prevY.push(o.groupCtx.yArrj),
                      o.groupCtx.prevYF.push(o.groupCtx.yArrjF),
                      o.groupCtx.prevYVal.push(o.groupCtx.yArrjVal),
                      o.groupCtx.prevX.push(o.groupCtx.xArrj),
                      o.groupCtx.prevXF.push(o.groupCtx.xArrjF),
                      o.groupCtx.prevXVal.push(o.groupCtx.xArrjVal),
                      d.add(B);
                  },
                  v = 0,
                  w = 0;
                v < n.length;
                v++, w++
              )
                x(v, w);
              return d;
            },
          },
          {
            key: "initialPositions",
            value: function (n, r, o, l, h, d) {
              var g,
                m,
                x,
                v,
                w = this.w;
              return (
                this.isHorizontal
                  ? ((x =
                      ((x = l = w.globals.gridHeight / w.globals.dataPoints) *
                        parseInt(w.config.plotOptions.bar.barHeight, 10)) /
                      100),
                    String(w.config.plotOptions.bar.barHeight).indexOf("%") ===
                      -1 &&
                      (x = parseInt(w.config.plotOptions.bar.barHeight, 10)),
                    (d =
                      this.baseLineInvertedY +
                      w.globals.padHorizontal +
                      (this.isReversed ? w.globals.gridWidth : 0) -
                      (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                    (r = (l - x) / 2))
                  : ((v = o = w.globals.gridWidth / w.globals.dataPoints),
                    (v =
                      w.globals.isXNumeric && w.globals.dataPoints > 1
                        ? ((o = w.globals.minXDiff / this.xRatio) *
                            parseInt(this.barOptions.columnWidth, 10)) /
                          100
                        : (v *
                            parseInt(
                              w.config.plotOptions.bar.columnWidth,
                              10
                            )) /
                          100),
                    String(w.config.plotOptions.bar.columnWidth).indexOf(
                      "%"
                    ) === -1 &&
                      (v = parseInt(w.config.plotOptions.bar.columnWidth, 10)),
                    (h =
                      w.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? w.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (n = w.globals.padHorizontal + (o - v) / 2)),
                {
                  x: n,
                  y: r,
                  yDivision: l,
                  xDivision: o,
                  barHeight:
                    (g = w.globals.seriesGroups) !== null &&
                    g !== void 0 &&
                    g.length
                      ? x / w.globals.seriesGroups.length
                      : x,
                  barWidth:
                    (m = w.globals.seriesGroups) !== null &&
                    m !== void 0 &&
                    m.length
                      ? v / w.globals.seriesGroups.length
                      : v,
                  zeroH: h,
                  zeroW: d,
                }
              );
            },
          },
          {
            key: "drawStackedBarPaths",
            value: function (n) {
              for (
                var r,
                  o = n.indexes,
                  l = n.barHeight,
                  h = n.strokeWidth,
                  d = n.zeroW,
                  g = n.x,
                  m = n.y,
                  x = n.groupIndex,
                  v = n.seriesGroup,
                  w = n.yDivision,
                  C = n.elSeries,
                  P = this.w,
                  M = m + (x !== -1 ? x * l : 0),
                  I = o.i,
                  D = o.j,
                  f = 0,
                  y = 0;
                y < this.groupCtx.prevXF.length;
                y++
              )
                f += this.groupCtx.prevXF[y][D];
              var A = I;
              if ((v && (A = v.indexOf(P.config.series[I].name)), A > 0)) {
                var _ = d;
                this.groupCtx.prevXVal[A - 1][D] < 0
                  ? (_ =
                      this.series[I][D] >= 0
                        ? this.groupCtx.prevX[A - 1][D] +
                          f -
                          2 * (this.isReversed ? f : 0)
                        : this.groupCtx.prevX[A - 1][D])
                  : this.groupCtx.prevXVal[A - 1][D] >= 0 &&
                    (_ =
                      this.series[I][D] >= 0
                        ? this.groupCtx.prevX[A - 1][D]
                        : this.groupCtx.prevX[A - 1][D] -
                          f +
                          2 * (this.isReversed ? f : 0)),
                  (r = _);
              } else r = d;
              g =
                this.series[I][D] === null
                  ? r
                  : r +
                    this.series[I][D] / this.invertedYRatio -
                    2 *
                      (this.isReversed
                        ? this.series[I][D] / this.invertedYRatio
                        : 0);
              var z = this.barHelpers.getBarpaths({
                barYPosition: M,
                barHeight: l,
                x1: r,
                x2: g,
                strokeWidth: h,
                series: this.series,
                realIndex: o.realIndex,
                seriesGroup: v,
                i: I,
                j: D,
                w: P,
              });
              return (
                this.barHelpers.barBackground({
                  j: D,
                  i: I,
                  y1: M,
                  y2: l,
                  elSeries: C,
                }),
                (m += w),
                {
                  pathTo: z.pathTo,
                  pathFrom: z.pathFrom,
                  goalX: this.barHelpers.getGoalValues("x", d, null, I, D),
                  barYPosition: M,
                  x: g,
                  y: m,
                }
              );
            },
          },
          {
            key: "drawStackedColumnPaths",
            value: function (n) {
              var r = n.indexes,
                o = n.x,
                l = n.y,
                h = n.xDivision,
                d = n.barWidth,
                g = n.zeroH,
                m = n.groupIndex,
                x = n.seriesGroup,
                v = n.elSeries,
                w = this.w,
                C = r.i,
                P = r.j,
                M = r.bc;
              if (w.globals.isXNumeric) {
                var I = w.globals.seriesX[C][P];
                I || (I = 0),
                  (o = (I - w.globals.minX) / this.xRatio - d / 2),
                  w.globals.seriesGroups.length &&
                    (o =
                      (I - w.globals.minX) / this.xRatio -
                      (d / 2) * w.globals.seriesGroups.length);
              }
              for (
                var D, f = o + (m !== -1 ? m * d : 0), y = 0, A = 0;
                A < this.groupCtx.prevYF.length;
                A++
              )
                y += isNaN(this.groupCtx.prevYF[A][P])
                  ? 0
                  : this.groupCtx.prevYF[A][P];
              var _ = C;
              if (
                (x && (_ = x.indexOf(w.config.series[C].name)),
                (_ > 0 && !w.globals.isXNumeric) ||
                  (_ > 0 &&
                    w.globals.isXNumeric &&
                    w.globals.seriesX[C - 1][P] === w.globals.seriesX[C][P]))
              ) {
                var z,
                  B,
                  $,
                  Z = Math.min(this.yRatio.length + 1, C + 1);
                if (
                  this.groupCtx.prevY[_ - 1] !== void 0 &&
                  this.groupCtx.prevY[_ - 1].length
                )
                  for (var re = 1; re < Z; re++) {
                    var ce;
                    if (
                      !isNaN(
                        (ce = this.groupCtx.prevY[_ - re]) === null ||
                          ce === void 0
                          ? void 0
                          : ce[P]
                      )
                    ) {
                      $ = this.groupCtx.prevY[_ - re][P];
                      break;
                    }
                  }
                for (var oe = 1; oe < Z; oe++) {
                  var de, Pe;
                  if (
                    ((de = this.groupCtx.prevYVal[_ - oe]) === null ||
                    de === void 0
                      ? void 0
                      : de[P]) < 0
                  ) {
                    B =
                      this.series[C][P] >= 0
                        ? $ - y + 2 * (this.isReversed ? y : 0)
                        : $;
                    break;
                  }
                  if (
                    ((Pe = this.groupCtx.prevYVal[_ - oe]) === null ||
                    Pe === void 0
                      ? void 0
                      : Pe[P]) >= 0
                  ) {
                    B =
                      this.series[C][P] >= 0
                        ? $
                        : $ + y - 2 * (this.isReversed ? y : 0);
                    break;
                  }
                }
                B === void 0 && (B = w.globals.gridHeight),
                  (D =
                    (z = this.groupCtx.prevYF[0]) !== null &&
                    z !== void 0 &&
                    z.every(function (Oe) {
                      return Oe === 0;
                    }) &&
                    this.groupCtx.prevYF.slice(1, _).every(function (Oe) {
                      return Oe.every(function (Xe) {
                        return isNaN(Xe);
                      });
                    })
                      ? g
                      : B);
              } else D = g;
              l = this.series[C][P]
                ? D -
                  this.series[C][P] / this.yRatio[this.yaxisIndex] +
                  2 *
                    (this.isReversed
                      ? this.series[C][P] / this.yRatio[this.yaxisIndex]
                      : 0)
                : D;
              var Re = this.barHelpers.getColumnPaths({
                barXPosition: f,
                barWidth: d,
                y1: D,
                y2: l,
                yRatio: this.yRatio[this.yaxisIndex],
                strokeWidth: this.strokeWidth,
                series: this.series,
                seriesGroup: x,
                realIndex: r.realIndex,
                i: C,
                j: P,
                w,
              });
              return (
                this.barHelpers.barBackground({
                  bc: M,
                  j: P,
                  i: C,
                  x1: f,
                  x2: d,
                  elSeries: v,
                }),
                (o += h),
                {
                  pathTo: Re.pathTo,
                  pathFrom: Re.pathFrom,
                  goalY: this.barHelpers.getGoalValues("y", null, g, C, P),
                  barXPosition: f,
                  x: w.globals.isXNumeric ? o - h : o,
                  y: l,
                }
              );
            },
          },
        ]),
        i
      );
    })(),
    we = (function (T) {
      N(i, ve);
      var e = V(i);
      function i() {
        return p(this, i), e.apply(this, arguments);
      }
      return (
        S(i, [
          {
            key: "draw",
            value: function (n, r, o) {
              var l = this,
                h = this.w,
                d = new X(this.ctx),
                g = h.globals.comboCharts ? r : h.config.chart.type,
                m = new Te(this.ctx);
              (this.candlestickOptions = this.w.config.plotOptions.candlestick),
                (this.boxOptions = this.w.config.plotOptions.boxPlot),
                (this.isHorizontal = h.config.plotOptions.bar.horizontal);
              var x = new W(this.ctx, h);
              (n = x.getLogSeries(n)),
                (this.series = n),
                (this.yRatio = x.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(n);
              for (
                var v = d.group({
                    class: "apexcharts-".concat(
                      g,
                      "-series apexcharts-plot-series"
                    ),
                  }),
                  w = function (P) {
                    l.isBoxPlot =
                      h.config.chart.type === "boxPlot" ||
                      h.config.series[P].type === "boxPlot";
                    var M,
                      I,
                      D,
                      f,
                      y = void 0,
                      A = void 0,
                      _ = [],
                      z = [],
                      B = h.globals.comboCharts ? o[P] : P,
                      $ = d.group({
                        class: "apexcharts-series",
                        seriesName: L.escapeString(h.globals.seriesNames[B]),
                        rel: P + 1,
                        "data:realIndex": B,
                      });
                    l.ctx.series.addCollapsedClassToSeries($, B),
                      n[P].length > 0 && (l.visibleI = l.visibleI + 1);
                    var Z, re;
                    l.yRatio.length > 1 && (l.yaxisIndex = B);
                    var ce = l.barHelpers.initialPositions();
                    (A = ce.y),
                      (Z = ce.barHeight),
                      (I = ce.yDivision),
                      (f = ce.zeroW),
                      (y = ce.x),
                      (re = ce.barWidth),
                      (M = ce.xDivision),
                      (D = ce.zeroH),
                      z.push(y + re / 2);
                    for (
                      var oe = d.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": B,
                        }),
                        de = function (Re) {
                          var Oe = l.barHelpers.getStrokeWidth(P, Re, B),
                            Xe = null,
                            ut = {
                              indexes: { i: P, j: Re, realIndex: B },
                              x: y,
                              y: A,
                              strokeWidth: Oe,
                              elSeries: $,
                            };
                          (Xe = l.isHorizontal
                            ? l.drawHorizontalBoxPaths(
                                c(
                                  c({}, ut),
                                  {},
                                  { yDivision: I, barHeight: Z, zeroW: f }
                                )
                              )
                            : l.drawVerticalBoxPaths(
                                c(
                                  c({}, ut),
                                  {},
                                  { xDivision: M, barWidth: re, zeroH: D }
                                )
                              )),
                            (A = Xe.y),
                            (y = Xe.x),
                            Re > 0 && z.push(y + re / 2),
                            _.push(A),
                            Xe.pathTo.forEach(function (at, mt) {
                              var aa =
                                  !l.isBoxPlot &&
                                  l.candlestickOptions.wick.useFillColor
                                    ? Xe.color[mt]
                                    : h.globals.stroke.colors[P],
                                Ta = m.fillPath({
                                  seriesNumber: B,
                                  dataPointIndex: Re,
                                  color: Xe.color[mt],
                                  value: n[P][Re],
                                });
                              l.renderSeries({
                                realIndex: B,
                                pathFill: Ta,
                                lineFill: aa,
                                j: Re,
                                i: P,
                                pathFrom: Xe.pathFrom,
                                pathTo: at,
                                strokeWidth: Oe,
                                elSeries: $,
                                x: y,
                                y: A,
                                series: n,
                                barHeight: Z,
                                barWidth: re,
                                elDataLabelsWrap: oe,
                                visibleSeries: l.visibleI,
                                type: h.config.chart.type,
                              });
                            });
                        },
                        Pe = 0;
                      Pe < h.globals.dataPoints;
                      Pe++
                    )
                      de(Pe);
                    (h.globals.seriesXvalues[B] = z),
                      (h.globals.seriesYvalues[B] = _),
                      v.add($);
                  },
                  C = 0;
                C < n.length;
                C++
              )
                w(C);
              return v;
            },
          },
          {
            key: "drawVerticalBoxPaths",
            value: function (n) {
              var r = n.indexes,
                o = n.x;
              n.y;
              var l = n.xDivision,
                h = n.barWidth,
                d = n.zeroH,
                g = n.strokeWidth,
                m = this.w,
                x = new X(this.ctx),
                v = r.i,
                w = r.j,
                C = !0,
                P = m.config.plotOptions.candlestick.colors.upward,
                M = m.config.plotOptions.candlestick.colors.downward,
                I = "";
              this.isBoxPlot &&
                (I = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var D = this.yRatio[this.yaxisIndex],
                f = r.realIndex,
                y = this.getOHLCValue(f, w),
                A = d,
                _ = d;
              y.o > y.c && (C = !1);
              var z = Math.min(y.o, y.c),
                B = Math.max(y.o, y.c),
                $ = y.m;
              m.globals.isXNumeric &&
                (o =
                  (m.globals.seriesX[f][w] - m.globals.minX) / this.xRatio -
                  h / 2);
              var Z = o + h * this.visibleI;
              this.series[v][w] === void 0 || this.series[v][w] === null
                ? ((z = d), (B = d))
                : ((z = d - z / D),
                  (B = d - B / D),
                  (A = d - y.h / D),
                  (_ = d - y.l / D),
                  ($ = d - y.m / D));
              var re = x.move(Z, d),
                ce = x.move(Z + h / 2, z);
              return (
                m.globals.previousPaths.length > 0 &&
                  (ce = this.getPreviousPath(f, w, !0)),
                (re = this.isBoxPlot
                  ? [
                      x.move(Z, z) +
                        x.line(Z + h / 2, z) +
                        x.line(Z + h / 2, A) +
                        x.line(Z + h / 4, A) +
                        x.line(Z + h - h / 4, A) +
                        x.line(Z + h / 2, A) +
                        x.line(Z + h / 2, z) +
                        x.line(Z + h, z) +
                        x.line(Z + h, $) +
                        x.line(Z, $) +
                        x.line(Z, z + g / 2),
                      x.move(Z, $) +
                        x.line(Z + h, $) +
                        x.line(Z + h, B) +
                        x.line(Z + h / 2, B) +
                        x.line(Z + h / 2, _) +
                        x.line(Z + h - h / 4, _) +
                        x.line(Z + h / 4, _) +
                        x.line(Z + h / 2, _) +
                        x.line(Z + h / 2, B) +
                        x.line(Z, B) +
                        x.line(Z, $) +
                        "z",
                    ]
                  : [
                      x.move(Z, B) +
                        x.line(Z + h / 2, B) +
                        x.line(Z + h / 2, A) +
                        x.line(Z + h / 2, B) +
                        x.line(Z + h, B) +
                        x.line(Z + h, z) +
                        x.line(Z + h / 2, z) +
                        x.line(Z + h / 2, _) +
                        x.line(Z + h / 2, z) +
                        x.line(Z, z) +
                        x.line(Z, B - g / 2),
                    ]),
                (ce += x.move(Z, z)),
                m.globals.isXNumeric || (o += l),
                {
                  pathTo: re,
                  pathFrom: ce,
                  x: o,
                  y: B,
                  barXPosition: Z,
                  color: this.isBoxPlot ? I : C ? [P] : [M],
                }
              );
            },
          },
          {
            key: "drawHorizontalBoxPaths",
            value: function (n) {
              var r = n.indexes;
              n.x;
              var o = n.y,
                l = n.yDivision,
                h = n.barHeight,
                d = n.zeroW,
                g = n.strokeWidth,
                m = this.w,
                x = new X(this.ctx),
                v = r.i,
                w = r.j,
                C = this.boxOptions.colors.lower;
              this.isBoxPlot &&
                (C = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var P = this.invertedYRatio,
                M = r.realIndex,
                I = this.getOHLCValue(M, w),
                D = d,
                f = d,
                y = Math.min(I.o, I.c),
                A = Math.max(I.o, I.c),
                _ = I.m;
              m.globals.isXNumeric &&
                (o =
                  (m.globals.seriesX[M][w] - m.globals.minX) /
                    this.invertedXRatio -
                  h / 2);
              var z = o + h * this.visibleI;
              this.series[v][w] === void 0 || this.series[v][w] === null
                ? ((y = d), (A = d))
                : ((y = d + y / P),
                  (A = d + A / P),
                  (D = d + I.h / P),
                  (f = d + I.l / P),
                  (_ = d + I.m / P));
              var B = x.move(d, z),
                $ = x.move(y, z + h / 2);
              return (
                m.globals.previousPaths.length > 0 &&
                  ($ = this.getPreviousPath(M, w, !0)),
                (B = [
                  x.move(y, z) +
                    x.line(y, z + h / 2) +
                    x.line(D, z + h / 2) +
                    x.line(D, z + h / 2 - h / 4) +
                    x.line(D, z + h / 2 + h / 4) +
                    x.line(D, z + h / 2) +
                    x.line(y, z + h / 2) +
                    x.line(y, z + h) +
                    x.line(_, z + h) +
                    x.line(_, z) +
                    x.line(y + g / 2, z),
                  x.move(_, z) +
                    x.line(_, z + h) +
                    x.line(A, z + h) +
                    x.line(A, z + h / 2) +
                    x.line(f, z + h / 2) +
                    x.line(f, z + h - h / 4) +
                    x.line(f, z + h / 4) +
                    x.line(f, z + h / 2) +
                    x.line(A, z + h / 2) +
                    x.line(A, z) +
                    x.line(_, z) +
                    "z",
                ]),
                ($ += x.move(y, z)),
                m.globals.isXNumeric || (o += l),
                {
                  pathTo: B,
                  pathFrom: $,
                  x: A,
                  y: o,
                  barYPosition: z,
                  color: C,
                }
              );
            },
          },
          {
            key: "getOHLCValue",
            value: function (n, r) {
              var o = this.w;
              return {
                o: this.isBoxPlot
                  ? o.globals.seriesCandleH[n][r]
                  : o.globals.seriesCandleO[n][r],
                h: this.isBoxPlot
                  ? o.globals.seriesCandleO[n][r]
                  : o.globals.seriesCandleH[n][r],
                m: o.globals.seriesCandleM[n][r],
                l: this.isBoxPlot
                  ? o.globals.seriesCandleC[n][r]
                  : o.globals.seriesCandleL[n][r],
                c: this.isBoxPlot
                  ? o.globals.seriesCandleL[n][r]
                  : o.globals.seriesCandleC[n][r],
              };
            },
          },
        ]),
        i
      );
    })(),
    Ge = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "checkColorRange",
            value: function () {
              var e = this.w,
                i = !1,
                n = e.config.plotOptions[e.config.chart.type];
              return (
                n.colorScale.ranges.length > 0 &&
                  n.colorScale.ranges.map(function (r, o) {
                    r.from <= 0 && (i = !0);
                  }),
                i
              );
            },
          },
          {
            key: "getShadeColor",
            value: function (e, i, n, r) {
              var o = this.w,
                l = 1,
                h = o.config.plotOptions[e].shadeIntensity,
                d = this.determineColor(e, i, n);
              o.globals.hasNegs || r
                ? (l = o.config.plotOptions[e].reverseNegativeShade
                    ? d.percent < 0
                      ? (d.percent / 100) * (1.25 * h)
                      : (1 - d.percent / 100) * (1.25 * h)
                    : d.percent <= 0
                    ? 1 - (1 + d.percent / 100) * h
                    : (1 - d.percent / 100) * h)
                : ((l = 1 - d.percent / 100),
                  e === "treemap" && (l = (1 - d.percent / 100) * (1.25 * h)));
              var g = d.color,
                m = new L();
              return (
                o.config.plotOptions[e].enableShades &&
                  (g =
                    this.w.config.theme.mode === "dark"
                      ? L.hexToRgba(
                          m.shadeColor(-1 * l, d.color),
                          o.config.fill.opacity
                        )
                      : L.hexToRgba(
                          m.shadeColor(l, d.color),
                          o.config.fill.opacity
                        )),
                { color: g, colorProps: d }
              );
            },
          },
          {
            key: "determineColor",
            value: function (e, i, n) {
              var r = this.w,
                o = r.globals.series[i][n],
                l = r.config.plotOptions[e],
                h = l.colorScale.inverse ? n : i;
              l.distributed && r.config.chart.type === "treemap" && (h = n);
              var d = r.globals.colors[h],
                g = null,
                m = Math.min.apply(Math, K(r.globals.series[i])),
                x = Math.max.apply(Math, K(r.globals.series[i]));
              l.distributed ||
                e !== "heatmap" ||
                ((m = r.globals.minY), (x = r.globals.maxY)),
                l.colorScale.min !== void 0 &&
                  ((m =
                    l.colorScale.min < r.globals.minY
                      ? l.colorScale.min
                      : r.globals.minY),
                  (x =
                    l.colorScale.max > r.globals.maxY
                      ? l.colorScale.max
                      : r.globals.maxY));
              var v = Math.abs(x) + Math.abs(m),
                w = (100 * o) / (v === 0 ? v - 1e-6 : v);
              return (
                l.colorScale.ranges.length > 0 &&
                  l.colorScale.ranges.map(function (C, P) {
                    if (o >= C.from && o <= C.to) {
                      (d = C.color),
                        (g = C.foreColor ? C.foreColor : null),
                        (m = C.from),
                        (x = C.to);
                      var M = Math.abs(x) + Math.abs(m);
                      w = (100 * o) / (M === 0 ? M - 1e-6 : M);
                    }
                  }),
                { color: d, foreColor: g, percent: w }
              );
            },
          },
          {
            key: "calculateDataLabels",
            value: function (e) {
              var i = e.text,
                n = e.x,
                r = e.y,
                o = e.i,
                l = e.j,
                h = e.colorProps,
                d = e.fontSize,
                g = this.w.config.dataLabels,
                m = new X(this.ctx),
                x = new Ke(this.ctx),
                v = null;
              if (g.enabled) {
                v = m.group({ class: "apexcharts-data-labels" });
                var w = g.offsetX,
                  C = g.offsetY,
                  P = n + w,
                  M = r + parseFloat(g.style.fontSize) / 3 + C;
                x.plotDataLabelsText({
                  x: P,
                  y: M,
                  text: i,
                  i: o,
                  j: l,
                  color: h.foreColor,
                  parent: v,
                  fontSize: d,
                  dataLabelsConfig: g,
                });
              }
              return v;
            },
          },
          {
            key: "addListeners",
            value: function (e) {
              var i = new X(this.ctx);
              e.node.addEventListener(
                "mouseenter",
                i.pathMouseEnter.bind(this, e)
              ),
                e.node.addEventListener(
                  "mouseleave",
                  i.pathMouseLeave.bind(this, e)
                ),
                e.node.addEventListener(
                  "mousedown",
                  i.pathMouseDown.bind(this, e)
                );
            },
          },
        ]),
        T
      );
    })(),
    Ye = (function () {
      function T(e, i) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.xRatio = i.xRatio),
          (this.yRatio = i.yRatio),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.helpers = new Ge(e)),
          (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
          (this.strokeWidth = this.w.config.stroke.show
            ? this.w.config.stroke.width
            : 0);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e) {
              var i = this.w,
                n = new X(this.ctx),
                r = n.group({ class: "apexcharts-heatmap" });
              r.attr(
                "clip-path",
                "url(#gridRectMask".concat(i.globals.cuid, ")")
              );
              var o = i.globals.gridWidth / i.globals.dataPoints,
                l = i.globals.gridHeight / i.globals.series.length,
                h = 0,
                d = !1;
              this.negRange = this.helpers.checkColorRange();
              var g = e.slice();
              i.config.yaxis[0].reversed && ((d = !0), g.reverse());
              for (
                var m = d ? 0 : g.length - 1;
                d ? m < g.length : m >= 0;
                d ? m++ : m--
              ) {
                var x = n.group({
                  class: "apexcharts-series apexcharts-heatmap-series",
                  seriesName: L.escapeString(i.globals.seriesNames[m]),
                  rel: m + 1,
                  "data:realIndex": m,
                });
                if (
                  (this.ctx.series.addCollapsedClassToSeries(x, m),
                  i.config.chart.dropShadow.enabled)
                ) {
                  var v = i.config.chart.dropShadow;
                  new O(this.ctx).dropShadow(x, v, m);
                }
                for (
                  var w = 0,
                    C = i.config.plotOptions.heatmap.shadeIntensity,
                    P = 0;
                  P < g[m].length;
                  P++
                ) {
                  var M = this.helpers.getShadeColor(
                      i.config.chart.type,
                      m,
                      P,
                      this.negRange
                    ),
                    I = M.color,
                    D = M.colorProps;
                  i.config.fill.type === "image" &&
                    (I = new Te(this.ctx).fillPath({
                      seriesNumber: m,
                      dataPointIndex: P,
                      opacity: i.globals.hasNegs
                        ? D.percent < 0
                          ? 1 - (1 + D.percent / 100)
                          : C + D.percent / 100
                        : D.percent / 100,
                      patternID: L.randomId(),
                      width: i.config.fill.image.width
                        ? i.config.fill.image.width
                        : o,
                      height: i.config.fill.image.height
                        ? i.config.fill.image.height
                        : l,
                    }));
                  var f = this.rectRadius,
                    y = n.drawRect(w, h, o, l, f);
                  if (
                    (y.attr({ cx: w, cy: h }),
                    y.node.classList.add("apexcharts-heatmap-rect"),
                    x.add(y),
                    y.attr({
                      fill: I,
                      i: m,
                      index: m,
                      j: P,
                      val: g[m][P],
                      "stroke-width": this.strokeWidth,
                      stroke: i.config.plotOptions.heatmap.useFillColorAsStroke
                        ? I
                        : i.globals.stroke.colors[0],
                      color: I,
                    }),
                    this.helpers.addListeners(y),
                    i.config.chart.animations.enabled && !i.globals.dataChanged)
                  ) {
                    var A = 1;
                    i.globals.resized || (A = i.config.chart.animations.speed),
                      this.animateHeatMap(y, w, h, o, l, A);
                  }
                  if (i.globals.dataChanged) {
                    var _ = 1;
                    if (this.dynamicAnim.enabled && i.globals.shouldAnimate) {
                      _ = this.dynamicAnim.speed;
                      var z =
                        i.globals.previousPaths[m] &&
                        i.globals.previousPaths[m][P] &&
                        i.globals.previousPaths[m][P].color;
                      z || (z = "rgba(255, 255, 255, 0)"),
                        this.animateHeatColor(
                          y,
                          L.isColorHex(z) ? z : L.rgb2hex(z),
                          L.isColorHex(I) ? I : L.rgb2hex(I),
                          _
                        );
                    }
                  }
                  var B = (0, i.config.dataLabels.formatter)(
                      i.globals.series[m][P],
                      {
                        value: i.globals.series[m][P],
                        seriesIndex: m,
                        dataPointIndex: P,
                        w: i,
                      }
                    ),
                    $ = this.helpers.calculateDataLabels({
                      text: B,
                      x: w + o / 2,
                      y: h + l / 2,
                      i: m,
                      j: P,
                      colorProps: D,
                      series: g,
                    });
                  $ !== null && x.add($), (w += o);
                }
                (h += l), r.add(x);
              }
              var Z = i.globals.yAxisScale[0].result.slice();
              i.config.yaxis[0].reversed ? Z.unshift("") : Z.push(""),
                (i.globals.yAxisScale[0].result = Z);
              var re = i.globals.gridHeight / i.globals.series.length;
              return (i.config.yaxis[0].labels.offsetY = -re / 2), r;
            },
          },
          {
            key: "animateHeatMap",
            value: function (e, i, n, r, o, l) {
              var h = new R(this.ctx);
              h.animateRect(
                e,
                { x: i + r / 2, y: n + o / 2, width: 0, height: 0 },
                { x: i, y: n, width: r, height: o },
                l,
                function () {
                  h.animationCompleted(e);
                }
              );
            },
          },
          {
            key: "animateHeatColor",
            value: function (e, i, n, r) {
              e.attr({ fill: i }).animate(r).attr({ fill: n });
            },
          },
        ]),
        T
      );
    })(),
    Lt = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "drawYAxisTexts",
            value: function (e, i, n, r) {
              var o = this.w,
                l = o.config.yaxis[0],
                h = o.globals.yLabelFormatters[0];
              return new X(this.ctx).drawText({
                x: e + l.labels.offsetX,
                y: i + l.labels.offsetY,
                text: h(r, n),
                textAnchor: "middle",
                fontSize: l.labels.style.fontSize,
                fontFamily: l.labels.style.fontFamily,
                foreColor: Array.isArray(l.labels.style.colors)
                  ? l.labels.style.colors[n]
                  : l.labels.style.colors,
              });
            },
          },
        ]),
        T
      );
    })(),
    it = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
        var i = this.w;
        (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animBeginArr = [0]),
          (this.animDur = 0),
          (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize = Math.min(
            i.globals.gridWidth,
            i.globals.gridHeight
          )),
          (this.centerY = this.defaultSize / 2),
          (this.centerX = i.globals.gridWidth / 2),
          i.config.chart.type === "radialBar"
            ? (this.fullAngle = 360)
            : (this.fullAngle = Math.abs(
                i.config.plotOptions.pie.endAngle -
                  i.config.plotOptions.pie.startAngle
              )),
          (this.initialAngle =
            i.config.plotOptions.pie.startAngle % this.fullAngle),
          (i.globals.radialSize =
            this.defaultSize / 2.05 -
            i.config.stroke.width -
            (i.config.chart.sparkline.enabled
              ? 0
              : i.config.chart.dropShadow.blur)),
          (this.donutSize =
            (i.globals.radialSize *
              parseInt(i.config.plotOptions.pie.donut.size, 10)) /
            100),
          (this.maxY = 0),
          (this.sliceLabels = []),
          (this.sliceSizes = []),
          (this.prevSectorAngleArr = []);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e) {
              var i = this,
                n = this.w,
                r = new X(this.ctx);
              if (
                ((this.ret = r.group({ class: "apexcharts-pie" })),
                n.globals.noData)
              )
                return this.ret;
              for (var o = 0, l = 0; l < e.length; l++) o += L.negToZero(e[l]);
              var h = [],
                d = r.group();
              o === 0 && (o = 1e-5),
                e.forEach(function (z) {
                  i.maxY = Math.max(i.maxY, z);
                }),
                n.config.yaxis[0].max && (this.maxY = n.config.yaxis[0].max),
                n.config.grid.position === "back" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret);
              for (var g = 0; g < e.length; g++) {
                var m = (this.fullAngle * L.negToZero(e[g])) / o;
                h.push(m),
                  this.chartType === "polarArea"
                    ? ((h[g] = this.fullAngle / e.length),
                      this.sliceSizes.push(
                        (n.globals.radialSize * e[g]) / this.maxY
                      ))
                    : this.sliceSizes.push(n.globals.radialSize);
              }
              if (n.globals.dataChanged) {
                for (
                  var x, v = 0, w = 0;
                  w < n.globals.previousPaths.length;
                  w++
                )
                  v += L.negToZero(n.globals.previousPaths[w]);
                for (var C = 0; C < n.globals.previousPaths.length; C++)
                  (x =
                    (this.fullAngle * L.negToZero(n.globals.previousPaths[C])) /
                    v),
                    this.prevSectorAngleArr.push(x);
              }
              this.donutSize < 0 && (this.donutSize = 0);
              var P = n.config.plotOptions.pie.customScale,
                M = n.globals.gridWidth / 2,
                I = n.globals.gridHeight / 2,
                D = M - (n.globals.gridWidth / 2) * P,
                f = I - (n.globals.gridHeight / 2) * P;
              if (this.chartType === "donut") {
                var y = r.drawCircle(this.donutSize);
                y.attr({
                  cx: this.centerX,
                  cy: this.centerY,
                  fill: n.config.plotOptions.pie.donut.background
                    ? n.config.plotOptions.pie.donut.background
                    : "transparent",
                }),
                  d.add(y);
              }
              var A = this.drawArcs(h, e);
              if (
                (this.sliceLabels.forEach(function (z) {
                  A.add(z);
                }),
                d.attr({
                  transform: "translate("
                    .concat(D, ", ")
                    .concat(f, ") scale(")
                    .concat(P, ")"),
                }),
                d.add(A),
                this.ret.add(d),
                this.donutDataLabels.show)
              ) {
                var _ = this.renderInnerDataLabels(this.donutDataLabels, {
                  hollowSize: this.donutSize,
                  centerX: this.centerX,
                  centerY: this.centerY,
                  opacity: this.donutDataLabels.show,
                  translateX: D,
                  translateY: f,
                });
                this.ret.add(_);
              }
              return (
                n.config.grid.position === "front" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret),
                this.ret
              );
            },
          },
          {
            key: "drawArcs",
            value: function (e, i) {
              var n = this.w,
                r = new O(this.ctx),
                o = new X(this.ctx),
                l = new Te(this.ctx),
                h = o.group({ class: "apexcharts-slices" }),
                d = this.initialAngle,
                g = this.initialAngle,
                m = this.initialAngle,
                x = this.initialAngle;
              this.strokeWidth = n.config.stroke.show
                ? n.config.stroke.width
                : 0;
              for (var v = 0; v < e.length; v++) {
                var w = o.group({
                  class: "apexcharts-series apexcharts-pie-series",
                  seriesName: L.escapeString(n.globals.seriesNames[v]),
                  rel: v + 1,
                  "data:realIndex": v,
                });
                h.add(w),
                  (g = x),
                  (m = (d = m) + e[v]),
                  (x = g + this.prevSectorAngleArr[v]);
                var C = m < d ? this.fullAngle + m - d : m - d,
                  P = l.fillPath({
                    seriesNumber: v,
                    size: this.sliceSizes[v],
                    value: i[v],
                  }),
                  M = this.getChangedPath(g, x),
                  I = o.drawPath({
                    d: M,
                    stroke: Array.isArray(this.lineColorArr)
                      ? this.lineColorArr[v]
                      : this.lineColorArr,
                    strokeWidth: 0,
                    fill: P,
                    fillOpacity: n.config.fill.opacity,
                    classes: "apexcharts-pie-area apexcharts-"
                      .concat(this.chartType.toLowerCase(), "-slice-")
                      .concat(v),
                  });
                if (
                  (I.attr({ index: 0, j: v }),
                  r.setSelectionFilter(I, 0, v),
                  n.config.chart.dropShadow.enabled)
                ) {
                  var D = n.config.chart.dropShadow;
                  r.dropShadow(I, D, v);
                }
                this.addListeners(I, this.donutDataLabels),
                  X.setAttrs(I.node, {
                    "data:angle": C,
                    "data:startAngle": d,
                    "data:strokeWidth": this.strokeWidth,
                    "data:value": i[v],
                  });
                var f = { x: 0, y: 0 };
                this.chartType === "pie" || this.chartType === "polarArea"
                  ? (f = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      n.globals.radialSize / 1.25 +
                        n.config.plotOptions.pie.dataLabels.offset,
                      (d + C / 2) % this.fullAngle
                    ))
                  : this.chartType === "donut" &&
                    (f = L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      (n.globals.radialSize + this.donutSize) / 2 +
                        n.config.plotOptions.pie.dataLabels.offset,
                      (d + C / 2) % this.fullAngle
                    )),
                  w.add(I);
                var y = 0;
                if (
                  (!this.initialAnim ||
                  n.globals.resized ||
                  n.globals.dataChanged
                    ? this.animBeginArr.push(0)
                    : ((y =
                        (C / this.fullAngle) *
                        n.config.chart.animations.speed) === 0 && (y = 1),
                      (this.animDur = y + this.animDur),
                      this.animBeginArr.push(this.animDur)),
                  this.dynamicAnim && n.globals.dataChanged
                    ? this.animatePaths(I, {
                        size: this.sliceSizes[v],
                        endAngle: m,
                        startAngle: d,
                        prevStartAngle: g,
                        prevEndAngle: x,
                        animateStartingPos: !0,
                        i: v,
                        animBeginArr: this.animBeginArr,
                        shouldSetPrevPaths: !0,
                        dur: n.config.chart.animations.dynamicAnimation.speed,
                      })
                    : this.animatePaths(I, {
                        size: this.sliceSizes[v],
                        endAngle: m,
                        startAngle: d,
                        i: v,
                        totalItems: e.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: y,
                      }),
                  n.config.plotOptions.pie.expandOnClick &&
                    this.chartType !== "polarArea" &&
                    I.click(this.pieClicked.bind(this, v)),
                  n.globals.selectedDataPoints[0] !== void 0 &&
                    n.globals.selectedDataPoints[0].indexOf(v) > -1 &&
                    this.pieClicked(v),
                  n.config.dataLabels.enabled)
                ) {
                  var A = f.x,
                    _ = f.y,
                    z = (100 * C) / this.fullAngle + "%";
                  if (
                    C !== 0 &&
                    n.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                      e[v]
                  ) {
                    var B = n.config.dataLabels.formatter;
                    B !== void 0 &&
                      (z = B(n.globals.seriesPercent[v][0], {
                        seriesIndex: v,
                        w: n,
                      }));
                    var $ = n.globals.dataLabels.style.colors[v],
                      Z = o.group({ class: "apexcharts-datalabels" }),
                      re = o.drawText({
                        x: A,
                        y: _,
                        text: z,
                        textAnchor: "middle",
                        fontSize: n.config.dataLabels.style.fontSize,
                        fontFamily: n.config.dataLabels.style.fontFamily,
                        fontWeight: n.config.dataLabels.style.fontWeight,
                        foreColor: $,
                      });
                    if ((Z.add(re), n.config.dataLabels.dropShadow.enabled)) {
                      var ce = n.config.dataLabels.dropShadow;
                      r.dropShadow(re, ce);
                    }
                    re.node.classList.add("apexcharts-pie-label"),
                      n.config.chart.animations.animate &&
                        n.globals.resized === !1 &&
                        (re.node.classList.add("apexcharts-pie-label-delay"),
                        (re.node.style.animationDelay =
                          n.config.chart.animations.speed / 940 + "s")),
                      this.sliceLabels.push(Z);
                  }
                }
              }
              return h;
            },
          },
          {
            key: "addListeners",
            value: function (e, i) {
              var n = new X(this.ctx);
              e.node.addEventListener(
                "mouseenter",
                n.pathMouseEnter.bind(this, e)
              ),
                e.node.addEventListener(
                  "mouseleave",
                  n.pathMouseLeave.bind(this, e)
                ),
                e.node.addEventListener(
                  "mouseleave",
                  this.revertDataLabelsInner.bind(this, e.node, i)
                ),
                e.node.addEventListener(
                  "mousedown",
                  n.pathMouseDown.bind(this, e)
                ),
                this.donutDataLabels.total.showAlways ||
                  (e.node.addEventListener(
                    "mouseenter",
                    this.printDataLabelsInner.bind(this, e.node, i)
                  ),
                  e.node.addEventListener(
                    "mousedown",
                    this.printDataLabelsInner.bind(this, e.node, i)
                  ));
            },
          },
          {
            key: "animatePaths",
            value: function (e, i) {
              var n = this.w,
                r =
                  i.endAngle < i.startAngle
                    ? this.fullAngle + i.endAngle - i.startAngle
                    : i.endAngle - i.startAngle,
                o = r,
                l = i.startAngle,
                h = i.startAngle;
              i.prevStartAngle !== void 0 &&
                i.prevEndAngle !== void 0 &&
                ((l = i.prevEndAngle),
                (o =
                  i.prevEndAngle < i.prevStartAngle
                    ? this.fullAngle + i.prevEndAngle - i.prevStartAngle
                    : i.prevEndAngle - i.prevStartAngle)),
                i.i === n.config.series.length - 1 &&
                  (r + h > this.fullAngle
                    ? (i.endAngle = i.endAngle - (r + h))
                    : r + h < this.fullAngle &&
                      (i.endAngle = i.endAngle + (this.fullAngle - (r + h)))),
                r === this.fullAngle && (r = this.fullAngle - 0.01),
                this.animateArc(e, l, h, r, o, i);
            },
          },
          {
            key: "animateArc",
            value: function (e, i, n, r, o, l) {
              var h,
                d = this,
                g = this.w,
                m = new R(this.ctx),
                x = l.size;
              (isNaN(i) || isNaN(o)) && ((i = n), (o = r), (l.dur = 0));
              var v = r,
                w = n,
                C = i < n ? this.fullAngle + i - n : i - n;
              g.globals.dataChanged &&
                l.shouldSetPrevPaths &&
                l.prevEndAngle &&
                ((h = d.getPiePath({
                  me: d,
                  startAngle: l.prevStartAngle,
                  angle:
                    l.prevEndAngle < l.prevStartAngle
                      ? this.fullAngle + l.prevEndAngle - l.prevStartAngle
                      : l.prevEndAngle - l.prevStartAngle,
                  size: x,
                })),
                e.attr({ d: h })),
                l.dur !== 0
                  ? e
                      .animate(l.dur, g.globals.easing, l.animBeginArr[l.i])
                      .afterAll(function () {
                        (d.chartType !== "pie" &&
                          d.chartType !== "donut" &&
                          d.chartType !== "polarArea") ||
                          this.animate(
                            g.config.chart.animations.dynamicAnimation.speed
                          ).attr({ "stroke-width": d.strokeWidth }),
                          l.i === g.config.series.length - 1 &&
                            m.animationCompleted(e);
                      })
                      .during(function (P) {
                        (v = C + (r - C) * P),
                          l.animateStartingPos &&
                            ((v = o + (r - o) * P),
                            (w = i - o + (n - (i - o)) * P)),
                          (h = d.getPiePath({
                            me: d,
                            startAngle: w,
                            angle: v,
                            size: x,
                          })),
                          e.node.setAttribute("data:pathOrig", h),
                          e.attr({ d: h });
                      })
                  : ((h = d.getPiePath({
                      me: d,
                      startAngle: w,
                      angle: r,
                      size: x,
                    })),
                    l.isTrack || (g.globals.animationEnded = !0),
                    e.node.setAttribute("data:pathOrig", h),
                    e.attr({ d: h, "stroke-width": d.strokeWidth }));
            },
          },
          {
            key: "pieClicked",
            value: function (e) {
              var i,
                n = this.w,
                r = this,
                o =
                  r.sliceSizes[e] +
                  (n.config.plotOptions.pie.expandOnClick ? 4 : 0),
                l = n.globals.dom.Paper.select(
                  ".apexcharts-"
                    .concat(r.chartType.toLowerCase(), "-slice-")
                    .concat(e)
                ).members[0];
              if (l.attr("data:pieClicked") !== "true") {
                var h = n.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area"
                );
                Array.prototype.forEach.call(h, function (x) {
                  x.setAttribute("data:pieClicked", "false");
                  var v = x.getAttribute("data:pathOrig");
                  v && x.setAttribute("d", v);
                }),
                  l.attr("data:pieClicked", "true");
                var d = parseInt(l.attr("data:startAngle"), 10),
                  g = parseInt(l.attr("data:angle"), 10);
                (i = r.getPiePath({ me: r, startAngle: d, angle: g, size: o })),
                  g !== 360 && l.plot(i);
              } else {
                l.attr({ "data:pieClicked": "false" }),
                  this.revertDataLabelsInner(l.node, this.donutDataLabels);
                var m = l.attr("data:pathOrig");
                l.attr({ d: m });
              }
            },
          },
          {
            key: "getChangedPath",
            value: function (e, i) {
              var n = "";
              return (
                this.dynamicAnim &&
                  this.w.globals.dataChanged &&
                  (n = this.getPiePath({
                    me: this,
                    startAngle: e,
                    angle: i - e,
                    size: this.size,
                  })),
                n
              );
            },
          },
          {
            key: "getPiePath",
            value: function (e) {
              var i = e.me,
                n = e.startAngle,
                r = e.angle,
                o = e.size,
                l = n,
                h = (Math.PI * (l - 90)) / 180,
                d = r + n;
              Math.ceil(d) >=
                this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) &&
                (d =
                  this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -
                  0.01),
                Math.ceil(d) > this.fullAngle && (d -= this.fullAngle);
              var g = (Math.PI * (d - 90)) / 180,
                m = i.centerX + o * Math.cos(h),
                x = i.centerY + o * Math.sin(h),
                v = i.centerX + o * Math.cos(g),
                w = i.centerY + o * Math.sin(g),
                C = L.polarToCartesian(i.centerX, i.centerY, i.donutSize, d),
                P = L.polarToCartesian(i.centerX, i.centerY, i.donutSize, l),
                M = r > 180 ? 1 : 0,
                I = ["M", m, x, "A", o, o, 0, M, 1, v, w];
              return i.chartType === "donut"
                ? []
                    .concat(I, [
                      "L",
                      C.x,
                      C.y,
                      "A",
                      i.donutSize,
                      i.donutSize,
                      0,
                      M,
                      0,
                      P.x,
                      P.y,
                      "L",
                      m,
                      x,
                      "z",
                    ])
                    .join(" ")
                : i.chartType === "pie" || i.chartType === "polarArea"
                ? [].concat(I, ["L", i.centerX, i.centerY, "L", m, x]).join(" ")
                : [].concat(I).join(" ");
            },
          },
          {
            key: "drawPolarElements",
            value: function (e) {
              var i = this.w,
                n = new _t(this.ctx),
                r = new X(this.ctx),
                o = new Lt(this.ctx),
                l = r.group(),
                h = r.group(),
                d = n.niceScale(
                  0,
                  Math.ceil(this.maxY),
                  i.config.yaxis[0].tickAmount,
                  0,
                  !0
                ),
                g = d.result.reverse(),
                m = d.result.length;
              this.maxY = d.niceMax;
              for (
                var x = i.globals.radialSize, v = x / (m - 1), w = 0;
                w < m - 1;
                w++
              ) {
                var C = r.drawCircle(x);
                if (
                  (C.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: "none",
                    "stroke-width":
                      i.config.plotOptions.polarArea.rings.strokeWidth,
                    stroke: i.config.plotOptions.polarArea.rings.strokeColor,
                  }),
                  i.config.yaxis[0].show)
                ) {
                  var P = o.drawYAxisTexts(
                    this.centerX,
                    this.centerY -
                      x +
                      parseInt(i.config.yaxis[0].labels.style.fontSize, 10) / 2,
                    w,
                    g[w]
                  );
                  h.add(P);
                }
                l.add(C), (x -= v);
              }
              this.drawSpokes(e), e.add(l), e.add(h);
            },
          },
          {
            key: "renderInnerDataLabels",
            value: function (e, i) {
              var n = this.w,
                r = new X(this.ctx),
                o = r.group({
                  class: "apexcharts-datalabels-group",
                  transform: "translate("
                    .concat(i.translateX ? i.translateX : 0, ", ")
                    .concat(i.translateY ? i.translateY : 0, ") scale(")
                    .concat(n.config.plotOptions.pie.customScale, ")"),
                }),
                l = e.total.show;
              o.node.style.opacity = i.opacity;
              var h,
                d,
                g = i.centerX,
                m = i.centerY;
              h = e.name.color === void 0 ? n.globals.colors[0] : e.name.color;
              var x = e.name.fontSize,
                v = e.name.fontFamily,
                w = e.name.fontWeight;
              d =
                e.value.color === void 0
                  ? n.config.chart.foreColor
                  : e.value.color;
              var C = e.value.formatter,
                P = "",
                M = "";
              if (
                (l
                  ? ((h = e.total.color),
                    (x = e.total.fontSize),
                    (v = e.total.fontFamily),
                    (w = e.total.fontWeight),
                    (M = e.total.label),
                    (P = e.total.formatter(n)))
                  : n.globals.series.length === 1 &&
                    ((P = C(n.globals.series[0], n)),
                    (M = n.globals.seriesNames[0])),
                M && (M = e.name.formatter(M, e.total.show, n)),
                e.name.show)
              ) {
                var I = r.drawText({
                  x: g,
                  y: m + parseFloat(e.name.offsetY),
                  text: M,
                  textAnchor: "middle",
                  foreColor: h,
                  fontSize: x,
                  fontWeight: w,
                  fontFamily: v,
                });
                I.node.classList.add("apexcharts-datalabel-label"), o.add(I);
              }
              if (e.value.show) {
                var D = e.name.show
                    ? parseFloat(e.value.offsetY) + 16
                    : e.value.offsetY,
                  f = r.drawText({
                    x: g,
                    y: m + D,
                    text: P,
                    textAnchor: "middle",
                    foreColor: d,
                    fontWeight: e.value.fontWeight,
                    fontSize: e.value.fontSize,
                    fontFamily: e.value.fontFamily,
                  });
                f.node.classList.add("apexcharts-datalabel-value"), o.add(f);
              }
              return o;
            },
          },
          {
            key: "printInnerLabels",
            value: function (e, i, n, r) {
              var o,
                l = this.w;
              r
                ? (o =
                    e.name.color === void 0
                      ? l.globals.colors[
                          parseInt(r.parentNode.getAttribute("rel"), 10) - 1
                        ]
                      : e.name.color)
                : l.globals.series.length > 1 &&
                  e.total.show &&
                  (o = e.total.color);
              var h = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-label"
                ),
                d = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-value"
                );
              (n = (0, e.value.formatter)(n, l)),
                r ||
                  typeof e.total.formatter != "function" ||
                  (n = e.total.formatter(l));
              var g = i === e.total.label;
              (i = e.name.formatter(i, g, l)),
                h !== null && (h.textContent = i),
                d !== null && (d.textContent = n),
                h !== null && (h.style.fill = o);
            },
          },
          {
            key: "printDataLabelsInner",
            value: function (e, i) {
              var n = this.w,
                r = e.getAttribute("data:value"),
                o =
                  n.globals.seriesNames[
                    parseInt(e.parentNode.getAttribute("rel"), 10) - 1
                  ];
              n.globals.series.length > 1 && this.printInnerLabels(i, o, r, e);
              var l = n.globals.dom.baseEl.querySelector(
                ".apexcharts-datalabels-group"
              );
              l !== null && (l.style.opacity = 1);
            },
          },
          {
            key: "drawSpokes",
            value: function (e) {
              var i = this,
                n = this.w,
                r = new X(this.ctx),
                o = n.config.plotOptions.polarArea.spokes;
              if (o.strokeWidth !== 0) {
                for (
                  var l = [], h = 360 / n.globals.series.length, d = 0;
                  d < n.globals.series.length;
                  d++
                )
                  l.push(
                    L.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      n.globals.radialSize,
                      n.config.plotOptions.pie.startAngle + h * d
                    )
                  );
                l.forEach(function (g, m) {
                  var x = r.drawLine(
                    g.x,
                    g.y,
                    i.centerX,
                    i.centerY,
                    Array.isArray(o.connectorColors)
                      ? o.connectorColors[m]
                      : o.connectorColors
                  );
                  e.add(x);
                });
              }
            },
          },
          {
            key: "revertDataLabelsInner",
            value: function (e, i, n) {
              var r = this,
                o = this.w,
                l = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabels-group"
                ),
                h = !1,
                d = o.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area"
                ),
                g = function (v) {
                  var w = v.makeSliceOut,
                    C = v.printLabel;
                  Array.prototype.forEach.call(d, function (P) {
                    P.getAttribute("data:pieClicked") === "true" &&
                      (w && (h = !0), C && r.printDataLabelsInner(P, i));
                  });
                };
              if (
                (g({ makeSliceOut: !0, printLabel: !1 }),
                i.total.show && o.globals.series.length > 1)
              )
                h && !i.total.showAlways
                  ? g({ makeSliceOut: !1, printLabel: !0 })
                  : this.printInnerLabels(
                      i,
                      i.total.label,
                      i.total.formatter(o)
                    );
              else if ((g({ makeSliceOut: !1, printLabel: !0 }), !h))
                if (
                  o.globals.selectedDataPoints.length &&
                  o.globals.series.length > 1
                )
                  if (o.globals.selectedDataPoints[0].length > 0) {
                    var m = o.globals.selectedDataPoints[0],
                      x = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(this.chartType.toLowerCase(), "-slice-")
                          .concat(m)
                      );
                    this.printDataLabelsInner(x, i);
                  } else
                    l &&
                      o.globals.selectedDataPoints.length &&
                      o.globals.selectedDataPoints[0].length === 0 &&
                      (l.style.opacity = 0);
                else l && o.globals.series.length > 1 && (l.style.opacity = 0);
            },
          },
        ]),
        T
      );
    })(),
    wt = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animDur = 0);
        var i = this.w;
        (this.graphics = new X(this.ctx)),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize =
            i.globals.svgHeight < i.globals.svgWidth
              ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding
              : i.globals.gridWidth),
          (this.isLog = i.config.yaxis[0].logarithmic),
          (this.coreUtils = new W(this.ctx)),
          (this.maxValue = this.isLog
            ? this.coreUtils.getLogVal(i.globals.maxY, 0)
            : i.globals.maxY),
          (this.minValue = this.isLog
            ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
            : i.globals.minY),
          (this.polygons = i.config.plotOptions.radar.polygons),
          (this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0),
          (this.size =
            this.defaultSize / 2.1 -
            this.strokeWidth -
            i.config.chart.dropShadow.blur),
          i.config.xaxis.labels.show &&
            (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75),
          i.config.plotOptions.radar.size !== void 0 &&
            (this.size = i.config.plotOptions.radar.size),
          (this.dataRadiusOfPercent = []),
          (this.dataRadius = []),
          (this.angleArr = []),
          (this.yaxisLabelsTextsPos = []);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e) {
              var i = this,
                n = this.w,
                r = new Te(this.ctx),
                o = [],
                l = new Ke(this.ctx);
              e.length &&
                (this.dataPointsLen = e[n.globals.maxValsInArrayIndex].length),
                (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
              var h = n.globals.gridWidth / 2,
                d = n.globals.gridHeight / 2,
                g = h + n.config.plotOptions.radar.offsetX,
                m = d + n.config.plotOptions.radar.offsetY,
                x = this.graphics.group({
                  class: "apexcharts-radar-series apexcharts-plot-series",
                  transform: "translate("
                    .concat(g || 0, ", ")
                    .concat(m || 0, ")"),
                }),
                v = [],
                w = null,
                C = null;
              if (
                ((this.yaxisLabels = this.graphics.group({
                  class: "apexcharts-yaxis",
                })),
                e.forEach(function (M, I) {
                  var D = M.length === n.globals.dataPoints,
                    f = i.graphics
                      .group()
                      .attr({
                        class: "apexcharts-series",
                        "data:longestSeries": D,
                        seriesName: L.escapeString(n.globals.seriesNames[I]),
                        rel: I + 1,
                        "data:realIndex": I,
                      });
                  (i.dataRadiusOfPercent[I] = []),
                    (i.dataRadius[I] = []),
                    (i.angleArr[I] = []),
                    M.forEach(function (oe, de) {
                      var Pe = Math.abs(i.maxValue - i.minValue);
                      (oe += Math.abs(i.minValue)),
                        i.isLog && (oe = i.coreUtils.getLogVal(oe, 0)),
                        (i.dataRadiusOfPercent[I][de] = oe / Pe),
                        (i.dataRadius[I][de] =
                          i.dataRadiusOfPercent[I][de] * i.size),
                        (i.angleArr[I][de] = de * i.disAngle);
                    }),
                    (v = i.getDataPointsPos(i.dataRadius[I], i.angleArr[I]));
                  var y = i.createPaths(v, { x: 0, y: 0 });
                  (w = i.graphics.group({
                    class:
                      "apexcharts-series-markers-wrap apexcharts-element-hidden",
                  })),
                    (C = i.graphics.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": I,
                    })),
                    n.globals.delayedElements.push({ el: w.node, index: I });
                  var A = {
                      i: I,
                      realIndex: I,
                      animationDelay: I,
                      initialSpeed: n.config.chart.animations.speed,
                      dataChangeSpeed:
                        n.config.chart.animations.dynamicAnimation.speed,
                      className: "apexcharts-radar",
                      shouldClipToGrid: !1,
                      bindEventsOnPaths: !1,
                      stroke: n.globals.stroke.colors[I],
                      strokeLineCap: n.config.stroke.lineCap,
                    },
                    _ = null;
                  n.globals.previousPaths.length > 0 &&
                    (_ = i.getPreviousPath(I));
                  for (var z = 0; z < y.linePathsTo.length; z++) {
                    var B = i.graphics.renderPaths(
                      c(
                        c({}, A),
                        {},
                        {
                          pathFrom: _ === null ? y.linePathsFrom[z] : _,
                          pathTo: y.linePathsTo[z],
                          strokeWidth: Array.isArray(i.strokeWidth)
                            ? i.strokeWidth[I]
                            : i.strokeWidth,
                          fill: "none",
                          drawShadow: !1,
                        }
                      )
                    );
                    f.add(B);
                    var $ = r.fillPath({ seriesNumber: I }),
                      Z = i.graphics.renderPaths(
                        c(
                          c({}, A),
                          {},
                          {
                            pathFrom: _ === null ? y.areaPathsFrom[z] : _,
                            pathTo: y.areaPathsTo[z],
                            strokeWidth: 0,
                            fill: $,
                            drawShadow: !1,
                          }
                        )
                      );
                    if (n.config.chart.dropShadow.enabled) {
                      var re = new O(i.ctx),
                        ce = n.config.chart.dropShadow;
                      re.dropShadow(
                        Z,
                        Object.assign({}, ce, { noUserSpaceOnUse: !0 }),
                        I
                      );
                    }
                    f.add(Z);
                  }
                  M.forEach(function (oe, de) {
                    var Pe = new He(i.ctx).getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: I,
                        dataPointIndex: de,
                      }),
                      Re = i.graphics.drawMarker(v[de].x, v[de].y, Pe);
                    Re.attr("rel", de),
                      Re.attr("j", de),
                      Re.attr("index", I),
                      Re.node.setAttribute("default-marker-size", Pe.pSize);
                    var Oe = i.graphics.group({
                      class: "apexcharts-series-markers",
                    });
                    Oe && Oe.add(Re), w.add(Oe), f.add(w);
                    var Xe = n.config.dataLabels;
                    if (Xe.enabled) {
                      var ut = Xe.formatter(n.globals.series[I][de], {
                        seriesIndex: I,
                        dataPointIndex: de,
                        w: n,
                      });
                      l.plotDataLabelsText({
                        x: v[de].x,
                        y: v[de].y,
                        text: ut,
                        textAnchor: "middle",
                        i: I,
                        j: I,
                        parent: C,
                        offsetCorrection: !1,
                        dataLabelsConfig: c({}, Xe),
                      });
                    }
                    f.add(C);
                  }),
                    o.push(f);
                }),
                this.drawPolygons({ parent: x }),
                n.config.xaxis.labels.show)
              ) {
                var P = this.drawXAxisTexts();
                x.add(P);
              }
              return (
                o.forEach(function (M) {
                  x.add(M);
                }),
                x.add(this.yaxisLabels),
                x
              );
            },
          },
          {
            key: "drawPolygons",
            value: function (e) {
              for (
                var i = this,
                  n = this.w,
                  r = e.parent,
                  o = new Lt(this.ctx),
                  l = n.globals.yAxisScale[0].result.reverse(),
                  h = l.length,
                  d = [],
                  g = this.size / (h - 1),
                  m = 0;
                m < h;
                m++
              )
                d[m] = g * m;
              d.reverse();
              var x = [],
                v = [];
              d.forEach(function (w, C) {
                var P = L.getPolygonPos(w, i.dataPointsLen),
                  M = "";
                P.forEach(function (I, D) {
                  if (C === 0) {
                    var f = i.graphics.drawLine(
                      I.x,
                      I.y,
                      0,
                      0,
                      Array.isArray(i.polygons.connectorColors)
                        ? i.polygons.connectorColors[D]
                        : i.polygons.connectorColors
                    );
                    v.push(f);
                  }
                  D === 0 && i.yaxisLabelsTextsPos.push({ x: I.x, y: I.y }),
                    (M += I.x + "," + I.y + " ");
                }),
                  x.push(M);
              }),
                x.forEach(function (w, C) {
                  var P = i.polygons.strokeColors,
                    M = i.polygons.strokeWidth,
                    I = i.graphics.drawPolygon(
                      w,
                      Array.isArray(P) ? P[C] : P,
                      Array.isArray(M) ? M[C] : M,
                      n.globals.radarPolygons.fill.colors[C]
                    );
                  r.add(I);
                }),
                v.forEach(function (w) {
                  r.add(w);
                }),
                n.config.yaxis[0].show &&
                  this.yaxisLabelsTextsPos.forEach(function (w, C) {
                    var P = o.drawYAxisTexts(w.x, w.y, C, l[C]);
                    i.yaxisLabels.add(P);
                  });
            },
          },
          {
            key: "drawXAxisTexts",
            value: function () {
              var e = this,
                i = this.w,
                n = i.config.xaxis.labels,
                r = this.graphics.group({ class: "apexcharts-xaxis" }),
                o = L.getPolygonPos(this.size, this.dataPointsLen);
              return (
                i.globals.labels.forEach(function (l, h) {
                  var d = i.config.xaxis.labels.formatter,
                    g = new Ke(e.ctx);
                  if (o[h]) {
                    var m = e.getTextPos(o[h], e.size),
                      x = d(l, { seriesIndex: -1, dataPointIndex: h, w: i });
                    g.plotDataLabelsText({
                      x: m.newX,
                      y: m.newY,
                      text: x,
                      textAnchor: m.textAnchor,
                      i: h,
                      j: h,
                      parent: r,
                      color:
                        Array.isArray(n.style.colors) && n.style.colors[h]
                          ? n.style.colors[h]
                          : "#a8a8a8",
                      dataLabelsConfig: c(
                        {
                          textAnchor: m.textAnchor,
                          dropShadow: { enabled: !1 },
                        },
                        n
                      ),
                      offsetCorrection: !1,
                    });
                  }
                }),
                r
              );
            },
          },
          {
            key: "createPaths",
            value: function (e, i) {
              var n = this,
                r = [],
                o = [],
                l = [],
                h = [];
              if (e.length) {
                (o = [this.graphics.move(i.x, i.y)]),
                  (h = [this.graphics.move(i.x, i.y)]);
                var d = this.graphics.move(e[0].x, e[0].y),
                  g = this.graphics.move(e[0].x, e[0].y);
                e.forEach(function (m, x) {
                  (d += n.graphics.line(m.x, m.y)),
                    (g += n.graphics.line(m.x, m.y)),
                    x === e.length - 1 && ((d += "Z"), (g += "Z"));
                }),
                  r.push(d),
                  l.push(g);
              }
              return {
                linePathsFrom: o,
                linePathsTo: r,
                areaPathsFrom: h,
                areaPathsTo: l,
              };
            },
          },
          {
            key: "getTextPos",
            value: function (e, i) {
              var n = "middle",
                r = e.x,
                o = e.y;
              return (
                Math.abs(e.x) >= 10
                  ? e.x > 0
                    ? ((n = "start"), (r += 10))
                    : e.x < 0 && ((n = "end"), (r -= 10))
                  : (n = "middle"),
                Math.abs(e.y) >= i - 10 &&
                  (e.y < 0 ? (o -= 10) : e.y > 0 && (o += 10)),
                { textAnchor: n, newX: r, newY: o }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (e) {
              for (
                var i = this.w, n = null, r = 0;
                r < i.globals.previousPaths.length;
                r++
              ) {
                var o = i.globals.previousPaths[r];
                o.paths.length > 0 &&
                  parseInt(o.realIndex, 10) === parseInt(e, 10) &&
                  i.globals.previousPaths[r].paths[0] !== void 0 &&
                  (n = i.globals.previousPaths[r].paths[0].d);
              }
              return n;
            },
          },
          {
            key: "getDataPointsPos",
            value: function (e, i) {
              var n =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : this.dataPointsLen;
              (e = e || []), (i = i || []);
              for (var r = [], o = 0; o < n; o++) {
                var l = {};
                (l.x = e[o] * Math.sin(i[o])),
                  (l.y = -e[o] * Math.cos(i[o])),
                  r.push(l);
              }
              return r;
            },
          },
        ]),
        T
      );
    })(),
    Vt = (function (T) {
      N(i, it);
      var e = V(i);
      function i(n) {
        var r;
        p(this, i),
          ((r = e.call(this, n)).ctx = n),
          (r.w = n.w),
          (r.animBeginArr = [0]),
          (r.animDur = 0);
        var o = r.w;
        return (
          (r.startAngle = o.config.plotOptions.radialBar.startAngle),
          (r.endAngle = o.config.plotOptions.radialBar.endAngle),
          (r.totalAngle = Math.abs(
            o.config.plotOptions.radialBar.endAngle -
              o.config.plotOptions.radialBar.startAngle
          )),
          (r.trackStartAngle = o.config.plotOptions.radialBar.track.startAngle),
          (r.trackEndAngle = o.config.plotOptions.radialBar.track.endAngle),
          (r.donutDataLabels = r.w.config.plotOptions.radialBar.dataLabels),
          (r.radialDataLabels = r.donutDataLabels),
          r.trackStartAngle || (r.trackStartAngle = r.startAngle),
          r.trackEndAngle || (r.trackEndAngle = r.endAngle),
          r.endAngle === 360 && (r.endAngle = 359.99),
          (r.margin = parseInt(
            o.config.plotOptions.radialBar.track.margin,
            10
          )),
          r
        );
      }
      return (
        S(i, [
          {
            key: "draw",
            value: function (n) {
              var r = this.w,
                o = new X(this.ctx),
                l = o.group({ class: "apexcharts-radialbar" });
              if (r.globals.noData) return l;
              var h = o.group(),
                d = this.defaultSize / 2,
                g = r.globals.gridWidth / 2,
                m = this.defaultSize / 2.05;
              r.config.chart.sparkline.enabled ||
                (m =
                  m - r.config.stroke.width - r.config.chart.dropShadow.blur);
              var x = r.globals.fill.colors;
              if (r.config.plotOptions.radialBar.track.show) {
                var v = this.drawTracks({
                  size: m,
                  centerX: g,
                  centerY: d,
                  colorArr: x,
                  series: n,
                });
                h.add(v);
              }
              var w = this.drawArcs({
                  size: m,
                  centerX: g,
                  centerY: d,
                  colorArr: x,
                  series: n,
                }),
                C = 360;
              r.config.plotOptions.radialBar.startAngle < 0 &&
                (C = this.totalAngle);
              var P = (360 - C) / 360;
              if (
                ((r.globals.radialSize = m - m * P),
                this.radialDataLabels.value.show)
              ) {
                var M = Math.max(
                  this.radialDataLabels.value.offsetY,
                  this.radialDataLabels.name.offsetY
                );
                r.globals.radialSize += M * P;
              }
              return (
                h.add(w.g),
                r.config.plotOptions.radialBar.hollow.position === "front" &&
                  (w.g.add(w.elHollow), w.dataLabels && w.g.add(w.dataLabels)),
                l.add(h),
                l
              );
            },
          },
          {
            key: "drawTracks",
            value: function (n) {
              var r = this.w,
                o = new X(this.ctx),
                l = o.group({ class: "apexcharts-tracks" }),
                h = new O(this.ctx),
                d = new Te(this.ctx),
                g = this.getStrokeWidth(n);
              n.size = n.size - g / 2;
              for (var m = 0; m < n.series.length; m++) {
                var x = o.group({
                  class: "apexcharts-radialbar-track apexcharts-track",
                });
                l.add(x),
                  x.attr({ rel: m + 1 }),
                  (n.size = n.size - g - this.margin);
                var v = r.config.plotOptions.radialBar.track,
                  w = d.fillPath({
                    seriesNumber: 0,
                    size: n.size,
                    fillColors: Array.isArray(v.background)
                      ? v.background[m]
                      : v.background,
                    solid: !0,
                  }),
                  C = this.trackStartAngle,
                  P = this.trackEndAngle;
                Math.abs(P) + Math.abs(C) >= 360 &&
                  (P = 360 - Math.abs(this.startAngle) - 0.1);
                var M = o.drawPath({
                  d: "",
                  stroke: w,
                  strokeWidth: (g * parseInt(v.strokeWidth, 10)) / 100,
                  fill: "none",
                  strokeOpacity: v.opacity,
                  classes: "apexcharts-radialbar-area",
                });
                if (v.dropShadow.enabled) {
                  var I = v.dropShadow;
                  h.dropShadow(M, I);
                }
                x.add(M),
                  M.attr("id", "apexcharts-radialbarTrack-" + m),
                  this.animatePaths(M, {
                    centerX: n.centerX,
                    centerY: n.centerY,
                    endAngle: P,
                    startAngle: C,
                    size: n.size,
                    i: m,
                    totalItems: 2,
                    animBeginArr: 0,
                    dur: 0,
                    isTrack: !0,
                    easing: r.globals.easing,
                  });
              }
              return l;
            },
          },
          {
            key: "drawArcs",
            value: function (n) {
              var r = this.w,
                o = new X(this.ctx),
                l = new Te(this.ctx),
                h = new O(this.ctx),
                d = o.group(),
                g = this.getStrokeWidth(n);
              n.size = n.size - g / 2;
              var m = r.config.plotOptions.radialBar.hollow.background,
                x =
                  n.size -
                  g * n.series.length -
                  this.margin * n.series.length -
                  (g *
                    parseInt(
                      r.config.plotOptions.radialBar.track.strokeWidth,
                      10
                    )) /
                    100 /
                    2,
                v = x - r.config.plotOptions.radialBar.hollow.margin;
              r.config.plotOptions.radialBar.hollow.image !== void 0 &&
                (m = this.drawHollowImage(n, d, x, m));
              var w = this.drawHollow({
                size: v,
                centerX: n.centerX,
                centerY: n.centerY,
                fill: m || "transparent",
              });
              if (r.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                var C = r.config.plotOptions.radialBar.hollow.dropShadow;
                h.dropShadow(w, C);
              }
              var P = 1;
              !this.radialDataLabels.total.show &&
                r.globals.series.length > 1 &&
                (P = 0);
              var M = null;
              this.radialDataLabels.show &&
                (M = this.renderInnerDataLabels(this.radialDataLabels, {
                  hollowSize: x,
                  centerX: n.centerX,
                  centerY: n.centerY,
                  opacity: P,
                })),
                r.config.plotOptions.radialBar.hollow.position === "back" &&
                  (d.add(w), M && d.add(M));
              var I = !1;
              r.config.plotOptions.radialBar.inverseOrder && (I = !0);
              for (
                var D = I ? n.series.length - 1 : 0;
                I ? D >= 0 : D < n.series.length;
                I ? D-- : D++
              ) {
                var f = o.group({
                  class: "apexcharts-series apexcharts-radial-series",
                  seriesName: L.escapeString(r.globals.seriesNames[D]),
                });
                d.add(f),
                  f.attr({ rel: D + 1, "data:realIndex": D }),
                  this.ctx.series.addCollapsedClassToSeries(f, D),
                  (n.size = n.size - g - this.margin);
                var y = l.fillPath({
                    seriesNumber: D,
                    size: n.size,
                    value: n.series[D],
                  }),
                  A = this.startAngle,
                  _ = void 0,
                  z = L.negToZero(n.series[D] > 100 ? 100 : n.series[D]) / 100,
                  B = Math.round(this.totalAngle * z) + this.startAngle,
                  $ = void 0;
                r.globals.dataChanged &&
                  ((_ = this.startAngle),
                  ($ =
                    Math.round(
                      (this.totalAngle *
                        L.negToZero(r.globals.previousPaths[D])) /
                        100
                    ) + _)),
                  Math.abs(B) + Math.abs(A) >= 360 && (B -= 0.01),
                  Math.abs($) + Math.abs(_) >= 360 && ($ -= 0.01);
                var Z = B - A,
                  re = Array.isArray(r.config.stroke.dashArray)
                    ? r.config.stroke.dashArray[D]
                    : r.config.stroke.dashArray,
                  ce = o.drawPath({
                    d: "",
                    stroke: y,
                    strokeWidth: g,
                    fill: "none",
                    fillOpacity: r.config.fill.opacity,
                    classes:
                      "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                      D,
                    strokeDashArray: re,
                  });
                if (
                  (X.setAttrs(ce.node, {
                    "data:angle": Z,
                    "data:value": n.series[D],
                  }),
                  r.config.chart.dropShadow.enabled)
                ) {
                  var oe = r.config.chart.dropShadow;
                  h.dropShadow(ce, oe, D);
                }
                h.setSelectionFilter(ce, 0, D),
                  this.addListeners(ce, this.radialDataLabels),
                  f.add(ce),
                  ce.attr({ index: 0, j: D });
                var de = 0;
                !this.initialAnim ||
                  r.globals.resized ||
                  r.globals.dataChanged ||
                  (de = r.config.chart.animations.speed),
                  r.globals.dataChanged &&
                    (de = r.config.chart.animations.dynamicAnimation.speed),
                  (this.animDur = de / (1.2 * n.series.length) + this.animDur),
                  this.animBeginArr.push(this.animDur),
                  this.animatePaths(ce, {
                    centerX: n.centerX,
                    centerY: n.centerY,
                    endAngle: B,
                    startAngle: A,
                    prevEndAngle: $,
                    prevStartAngle: _,
                    size: n.size,
                    i: D,
                    totalItems: 2,
                    animBeginArr: this.animBeginArr,
                    dur: de,
                    shouldSetPrevPaths: !0,
                    easing: r.globals.easing,
                  });
              }
              return { g: d, elHollow: w, dataLabels: M };
            },
          },
          {
            key: "drawHollow",
            value: function (n) {
              var r = new X(this.ctx).drawCircle(2 * n.size);
              return (
                r.attr({
                  class: "apexcharts-radialbar-hollow",
                  cx: n.centerX,
                  cy: n.centerY,
                  r: n.size,
                  fill: n.fill,
                }),
                r
              );
            },
          },
          {
            key: "drawHollowImage",
            value: function (n, r, o, l) {
              var h = this.w,
                d = new Te(this.ctx),
                g = L.randomId(),
                m = h.config.plotOptions.radialBar.hollow.image;
              if (h.config.plotOptions.radialBar.hollow.imageClipped)
                d.clippedImgArea({
                  width: o,
                  height: o,
                  image: m,
                  patternID: "pattern".concat(h.globals.cuid).concat(g),
                }),
                  (l = "url(#pattern".concat(h.globals.cuid).concat(g, ")"));
              else {
                var x = h.config.plotOptions.radialBar.hollow.imageWidth,
                  v = h.config.plotOptions.radialBar.hollow.imageHeight;
                if (x === void 0 && v === void 0) {
                  var w = h.globals.dom.Paper.image(m).loaded(function (P) {
                    this.move(
                      n.centerX -
                        P.width / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      n.centerY -
                        P.height / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY
                    );
                  });
                  r.add(w);
                } else {
                  var C = h.globals.dom.Paper.image(m).loaded(function (P) {
                    this.move(
                      n.centerX -
                        x / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetX,
                      n.centerY -
                        v / 2 +
                        h.config.plotOptions.radialBar.hollow.imageOffsetY
                    ),
                      this.size(x, v);
                  });
                  r.add(C);
                }
              }
              return l;
            },
          },
          {
            key: "getStrokeWidth",
            value: function (n) {
              var r = this.w;
              return (
                (n.size *
                  (100 -
                    parseInt(r.config.plotOptions.radialBar.hollow.size, 10))) /
                  100 /
                  (n.series.length + 1) -
                this.margin
              );
            },
          },
        ]),
        i
      );
    })(),
    Fi = (function (T) {
      N(i, ve);
      var e = V(i);
      function i() {
        return p(this, i), e.apply(this, arguments);
      }
      return (
        S(i, [
          {
            key: "draw",
            value: function (n, r) {
              var o = this.w,
                l = new X(this.ctx);
              (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                (this.series = n),
                (this.seriesRangeStart = o.globals.seriesRangeStart),
                (this.seriesRangeEnd = o.globals.seriesRangeEnd),
                this.barHelpers.initVariables(n);
              for (
                var h = l.group({
                    class: "apexcharts-rangebar-series apexcharts-plot-series",
                  }),
                  d = 0;
                d < n.length;
                d++
              ) {
                var g,
                  m,
                  x,
                  v,
                  w = void 0,
                  C = void 0,
                  P = o.globals.comboCharts ? r[d] : d,
                  M = l.group({
                    class: "apexcharts-series",
                    seriesName: L.escapeString(o.globals.seriesNames[P]),
                    rel: d + 1,
                    "data:realIndex": P,
                  });
                this.ctx.series.addCollapsedClassToSeries(M, P),
                  n[d].length > 0 && (this.visibleI = this.visibleI + 1);
                var I = 0,
                  D = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = P);
                var f = this.barHelpers.initialPositions();
                (C = f.y),
                  (v = f.zeroW),
                  (w = f.x),
                  (D = f.barWidth),
                  (I = f.barHeight),
                  (g = f.xDivision),
                  (m = f.yDivision),
                  (x = f.zeroH);
                for (
                  var y = l.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": P,
                    }),
                    A = l.group({ class: "apexcharts-rangebar-goals-markers" }),
                    _ = 0;
                  _ < o.globals.dataPoints;
                  _++
                ) {
                  var z,
                    B = this.barHelpers.getStrokeWidth(d, _, P),
                    $ = this.seriesRangeStart[d][_],
                    Z = this.seriesRangeEnd[d][_],
                    re = null,
                    ce = null,
                    oe = null,
                    de = { x: w, y: C, strokeWidth: B, elSeries: M },
                    Pe = this.seriesLen;
                  if (
                    (o.config.plotOptions.bar.rangeBarGroupRows && (Pe = 1),
                    o.config.series[d].data[_] === void 0)
                  )
                    break;
                  if (this.isHorizontal) {
                    oe = C + I * this.visibleI;
                    var Re = (m - I * Pe) / 2;
                    if (o.config.series[d].data[_].x) {
                      var Oe = this.detectOverlappingBars({
                        i: d,
                        j: _,
                        barYPosition: oe,
                        srty: Re,
                        barHeight: I,
                        yDivision: m,
                        initPositions: f,
                      });
                      (I = Oe.barHeight), (oe = Oe.barYPosition);
                    }
                    D = (re = this.drawRangeBarPaths(
                      c(
                        {
                          indexes: { i: d, j: _, realIndex: P },
                          barHeight: I,
                          barYPosition: oe,
                          zeroW: v,
                          yDivision: m,
                          y1: $,
                          y2: Z,
                        },
                        de
                      )
                    )).barWidth;
                  } else {
                    o.globals.isXNumeric &&
                      (w =
                        (o.globals.seriesX[d][_] - o.globals.minX) /
                          this.xRatio -
                        D / 2),
                      (ce = w + D * this.visibleI);
                    var Xe = (g - D * Pe) / 2;
                    if (o.config.series[d].data[_].x) {
                      var ut = this.detectOverlappingBars({
                        i: d,
                        j: _,
                        barXPosition: ce,
                        srtx: Xe,
                        barWidth: D,
                        xDivision: g,
                        initPositions: f,
                      });
                      (D = ut.barWidth), (ce = ut.barXPosition);
                    }
                    I = (re = this.drawRangeColumnPaths(
                      c(
                        {
                          indexes: { i: d, j: _, realIndex: P },
                          barWidth: D,
                          barXPosition: ce,
                          zeroH: x,
                          xDivision: g,
                        },
                        de
                      )
                    )).barHeight;
                  }
                  var at = this.barHelpers.drawGoalLine({
                    barXPosition: re.barXPosition,
                    barYPosition: oe,
                    goalX: re.goalX,
                    goalY: re.goalY,
                    barHeight: I,
                    barWidth: D,
                  });
                  at && A.add(at), (C = re.y), (w = re.x);
                  var mt = this.barHelpers.getPathFillColor(n, d, _, P),
                    aa = o.globals.stroke.colors[P];
                  this.renderSeries(
                    (E(
                      (z = {
                        realIndex: P,
                        pathFill: mt,
                        lineFill: aa,
                        j: _,
                        i: d,
                        x: w,
                        y: C,
                        y1: $,
                        y2: Z,
                        pathFrom: re.pathFrom,
                        pathTo: re.pathTo,
                        strokeWidth: B,
                        elSeries: M,
                        series: n,
                        barHeight: I,
                        barWidth: D,
                        barXPosition: ce,
                        barYPosition: oe,
                      }),
                      "barWidth",
                      D
                    ),
                    E(z, "elDataLabelsWrap", y),
                    E(z, "elGoalsMarkers", A),
                    E(z, "visibleSeries", this.visibleI),
                    E(z, "type", "rangebar"),
                    z)
                  );
                }
                h.add(M);
              }
              return h;
            },
          },
          {
            key: "detectOverlappingBars",
            value: function (n) {
              var r = n.i,
                o = n.j,
                l = n.barYPosition,
                h = n.barXPosition,
                d = n.srty,
                g = n.srtx,
                m = n.barHeight,
                x = n.barWidth,
                v = n.yDivision,
                w = n.xDivision,
                C = n.initPositions,
                P = this.w,
                M = [],
                I = P.config.series[r].data[o].rangeName,
                D = P.config.series[r].data[o].x,
                f = Array.isArray(D) ? D.join(" ") : D,
                y = P.globals.labels
                  .map(function (_) {
                    return Array.isArray(_) ? _.join(" ") : _;
                  })
                  .indexOf(f),
                A = P.globals.seriesRange[r].findIndex(function (_) {
                  return _.x === f && _.overlaps.length > 0;
                });
              return (
                this.isHorizontal
                  ? ((l = P.config.plotOptions.bar.rangeBarGroupRows
                      ? d + v * y
                      : d + m * this.visibleI + v * y),
                    A > -1 &&
                      !P.config.plotOptions.bar.rangeBarOverlap &&
                      (M = P.globals.seriesRange[r][A].overlaps).indexOf(I) >
                        -1 &&
                      (l =
                        (m = C.barHeight / M.length) * this.visibleI +
                        (v * (100 - parseInt(this.barOptions.barHeight, 10))) /
                          100 /
                          2 +
                        m * (this.visibleI + M.indexOf(I)) +
                        v * y))
                  : (y > -1 &&
                      (h = P.config.plotOptions.bar.rangeBarGroupRows
                        ? g + w * y
                        : g + x * this.visibleI + w * y),
                    A > -1 &&
                      !P.config.plotOptions.bar.rangeBarOverlap &&
                      (M = P.globals.seriesRange[r][A].overlaps).indexOf(I) >
                        -1 &&
                      (h =
                        (x = C.barWidth / M.length) * this.visibleI +
                        (w * (100 - parseInt(this.barOptions.barWidth, 10))) /
                          100 /
                          2 +
                        x * (this.visibleI + M.indexOf(I)) +
                        w * y)),
                { barYPosition: l, barXPosition: h, barHeight: m, barWidth: x }
              );
            },
          },
          {
            key: "drawRangeColumnPaths",
            value: function (n) {
              var r = n.indexes,
                o = n.x,
                l = n.xDivision,
                h = n.barWidth,
                d = n.barXPosition,
                g = n.zeroH,
                m = this.w,
                x = r.i,
                v = r.j,
                w = this.yRatio[this.yaxisIndex],
                C = r.realIndex,
                P = this.getRangeValue(C, v),
                M = Math.min(P.start, P.end),
                I = Math.max(P.start, P.end);
              this.series[x][v] === void 0 || this.series[x][v] === null
                ? (M = g)
                : ((M = g - M / w), (I = g - I / w));
              var D = Math.abs(I - M),
                f = this.barHelpers.getColumnPaths({
                  barXPosition: d,
                  barWidth: h,
                  y1: M,
                  y2: I,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  realIndex: r.realIndex,
                  i: C,
                  j: v,
                  w: m,
                });
              return (
                m.globals.isXNumeric || (o += l),
                {
                  pathTo: f.pathTo,
                  pathFrom: f.pathFrom,
                  barHeight: D,
                  x: o,
                  y: I,
                  goalY: this.barHelpers.getGoalValues("y", null, g, x, v),
                  barXPosition: d,
                }
              );
            },
          },
          {
            key: "drawRangeBarPaths",
            value: function (n) {
              var r = n.indexes,
                o = n.y,
                l = n.y1,
                h = n.y2,
                d = n.yDivision,
                g = n.barHeight,
                m = n.barYPosition,
                x = n.zeroW,
                v = this.w,
                w = x + l / this.invertedYRatio,
                C = x + h / this.invertedYRatio,
                P = Math.abs(C - w),
                M = this.barHelpers.getBarpaths({
                  barYPosition: m,
                  barHeight: g,
                  x1: w,
                  x2: C,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  i: r.realIndex,
                  realIndex: r.realIndex,
                  j: r.j,
                  w: v,
                });
              return (
                v.globals.isXNumeric || (o += d),
                {
                  pathTo: M.pathTo,
                  pathFrom: M.pathFrom,
                  barWidth: P,
                  x: C,
                  goalX: this.barHelpers.getGoalValues(
                    "x",
                    x,
                    null,
                    r.realIndex,
                    r.j
                  ),
                  y: o,
                }
              );
            },
          },
          {
            key: "getRangeValue",
            value: function (n, r) {
              var o = this.w;
              return {
                start: o.globals.seriesRangeStart[n][r],
                end: o.globals.seriesRangeEnd[n][r],
              };
            },
          },
        ]),
        i
      );
    })(),
    Ma = (function () {
      function T(e) {
        p(this, T), (this.w = e.w), (this.lineCtx = e);
      }
      return (
        S(T, [
          {
            key: "sameValueSeriesFix",
            value: function (e, i) {
              var n = this.w;
              if (
                (n.config.fill.type === "gradient" ||
                  n.config.fill.type[e] === "gradient") &&
                new W(this.lineCtx.ctx, n).seriesHaveSameValues(e)
              ) {
                var r = i[e].slice();
                (r[r.length - 1] = r[r.length - 1] + 1e-6), (i[e] = r);
              }
              return i;
            },
          },
          {
            key: "calculatePoints",
            value: function (e) {
              var i = e.series,
                n = e.realIndex,
                r = e.x,
                o = e.y,
                l = e.i,
                h = e.j,
                d = e.prevY,
                g = this.w,
                m = [],
                x = [];
              if (h === 0) {
                var v =
                  this.lineCtx.categoryAxisCorrection +
                  g.config.markers.offsetX;
                g.globals.isXNumeric &&
                  (v =
                    (g.globals.seriesX[n][0] - g.globals.minX) /
                      this.lineCtx.xRatio +
                    g.config.markers.offsetX),
                  m.push(v),
                  x.push(
                    L.isNumber(i[l][0]) ? d + g.config.markers.offsetY : null
                  ),
                  m.push(r + g.config.markers.offsetX),
                  x.push(
                    L.isNumber(i[l][h + 1])
                      ? o + g.config.markers.offsetY
                      : null
                  );
              } else
                m.push(r + g.config.markers.offsetX),
                  x.push(
                    L.isNumber(i[l][h + 1])
                      ? o + g.config.markers.offsetY
                      : null
                  );
              return { x: m, y: x };
            },
          },
          {
            key: "checkPreviousPaths",
            value: function (e) {
              for (
                var i = e.pathFromLine,
                  n = e.pathFromArea,
                  r = e.realIndex,
                  o = this.w,
                  l = 0;
                l < o.globals.previousPaths.length;
                l++
              ) {
                var h = o.globals.previousPaths[l];
                (h.type === "line" || h.type === "area") &&
                  h.paths.length > 0 &&
                  parseInt(h.realIndex, 10) === parseInt(r, 10) &&
                  (h.type === "line"
                    ? ((this.lineCtx.appendPathFrom = !1),
                      (i = o.globals.previousPaths[l].paths[0].d))
                    : h.type === "area" &&
                      ((this.lineCtx.appendPathFrom = !1),
                      (n = o.globals.previousPaths[l].paths[0].d),
                      o.config.stroke.show &&
                        o.globals.previousPaths[l].paths[1] &&
                        (i = o.globals.previousPaths[l].paths[1].d)));
              }
              return { pathFromLine: i, pathFromArea: n };
            },
          },
          {
            key: "determineFirstPrevY",
            value: function (e) {
              var i,
                n = e.i,
                r = e.series,
                o = e.prevY,
                l = e.lineYPosition,
                h = this.w;
              if (
                ((i = r[n]) === null || i === void 0 ? void 0 : i[0]) !== void 0
              )
                o =
                  (l =
                    h.config.chart.stacked && n > 0
                      ? this.lineCtx.prevSeriesY[n - 1][0]
                      : this.lineCtx.zeroY) -
                  r[n][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                  2 *
                    (this.lineCtx.isReversed
                      ? r[n][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                      : 0);
              else if (h.config.chart.stacked && n > 0 && r[n][0] === void 0) {
                for (var d = n - 1; d >= 0; d--)
                  if (r[d][0] !== null && r[d][0] !== void 0) {
                    o = l = this.lineCtx.prevSeriesY[d][0];
                    break;
                  }
              }
              return { prevY: o, lineYPosition: l };
            },
          },
        ]),
        T
      );
    })(),
    Ue = (function () {
      function T(e, i, n) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.xyRatios = i),
          (this.pointsChart =
            !(
              this.w.config.chart.type !== "bubble" &&
              this.w.config.chart.type !== "scatter"
            ) || n),
          (this.scatter = new De(this.ctx)),
          (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
          (this.lineHelpers = new Ma(this)),
          (this.markers = new He(this.ctx)),
          (this.prevSeriesY = []),
          (this.categoryAxisCorrection = 0),
          (this.yaxisIndex = 0);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e, i, n, r) {
              var o = this.w,
                l = new X(this.ctx),
                h = o.globals.comboCharts ? i : o.config.chart.type,
                d = l.group({
                  class: "apexcharts-".concat(
                    h,
                    "-series apexcharts-plot-series"
                  ),
                }),
                g = new W(this.ctx, o);
              (this.yRatio = this.xyRatios.yRatio),
                (this.zRatio = this.xyRatios.zRatio),
                (this.xRatio = this.xyRatios.xRatio),
                (this.baseLineY = this.xyRatios.baseLineY),
                (e = g.getLogSeries(e)),
                (this.yRatio = g.getLogYRatios(this.yRatio));
              for (var m = [], x = 0; x < e.length; x++) {
                e = this.lineHelpers.sameValueSeriesFix(x, e);
                var v = o.globals.comboCharts ? n[x] : x;
                this._initSerieVariables(e, x, v);
                var w = [],
                  C = [],
                  P = o.globals.padHorizontal + this.categoryAxisCorrection;
                this.ctx.series.addCollapsedClassToSeries(this.elSeries, v),
                  o.globals.isXNumeric &&
                    o.globals.seriesX.length > 0 &&
                    (P =
                      (o.globals.seriesX[v][0] - o.globals.minX) / this.xRatio),
                  C.push(P);
                var M,
                  I = P,
                  D = void 0,
                  f = I,
                  y = this.zeroY,
                  A = this.zeroY;
                (y = this.lineHelpers.determineFirstPrevY({
                  i: x,
                  series: e,
                  prevY: y,
                  lineYPosition: 0,
                }).prevY),
                  w.push(y),
                  (M = y),
                  h === "rangeArea" &&
                    (D = A =
                      this.lineHelpers.determineFirstPrevY({
                        i: x,
                        series: r,
                        prevY: A,
                        lineYPosition: 0,
                      }).prevY);
                var _ = {
                    type: h,
                    series: e,
                    realIndex: v,
                    i: x,
                    x: P,
                    y: 1,
                    pX: I,
                    pY: M,
                    pathsFrom: this._calculatePathsFrom({
                      type: h,
                      series: e,
                      i: x,
                      realIndex: v,
                      prevX: f,
                      prevY: y,
                      prevY2: A,
                    }),
                    linePaths: [],
                    areaPaths: [],
                    seriesIndex: n,
                    lineYPosition: 0,
                    xArrj: C,
                    yArrj: w,
                    seriesRangeEnd: r,
                  },
                  z = this._iterateOverDataPoints(
                    c(
                      c({}, _),
                      {},
                      {
                        iterations:
                          h === "rangeArea" ? e[x].length - 1 : void 0,
                        isRangeStart: !0,
                      }
                    )
                  );
                if (h === "rangeArea") {
                  var B = this._calculatePathsFrom({
                      series: r,
                      i: x,
                      realIndex: v,
                      prevX: f,
                      prevY: A,
                    }),
                    $ = this._iterateOverDataPoints(
                      c(
                        c({}, _),
                        {},
                        {
                          series: r,
                          pY: D,
                          pathsFrom: B,
                          iterations: r[x].length - 1,
                          isRangeStart: !1,
                        }
                      )
                    );
                  (z.linePaths[0] = $.linePath + z.linePath),
                    (z.pathFromLine = $.pathFromLine + z.pathFromLine);
                }
                this._handlePaths({ type: h, realIndex: v, i: x, paths: z }),
                  this.elSeries.add(this.elPointsMain),
                  this.elSeries.add(this.elDataLabelsWrap),
                  m.push(this.elSeries);
              }
              if (o.config.chart.stacked)
                for (var Z = m.length; Z > 0; Z--) d.add(m[Z - 1]);
              else for (var re = 0; re < m.length; re++) d.add(m[re]);
              return d;
            },
          },
          {
            key: "_initSerieVariables",
            value: function (e, i, n) {
              var r = this.w,
                o = new X(this.ctx);
              (this.xDivision =
                r.globals.gridWidth /
                (r.globals.dataPoints -
                  (r.config.xaxis.tickPlacement === "on" ? 1 : 0))),
                (this.strokeWidth = Array.isArray(r.config.stroke.width)
                  ? r.config.stroke.width[n]
                  : r.config.stroke.width),
                this.yRatio.length > 1 && (this.yaxisIndex = n),
                (this.isReversed =
                  r.config.yaxis[this.yaxisIndex] &&
                  r.config.yaxis[this.yaxisIndex].reversed),
                (this.zeroY =
                  r.globals.gridHeight -
                  this.baseLineY[this.yaxisIndex] -
                  (this.isReversed ? r.globals.gridHeight : 0) +
                  (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
                (this.areaBottomY = this.zeroY),
                (this.zeroY > r.globals.gridHeight ||
                  r.config.plotOptions.area.fillTo === "end") &&
                  (this.areaBottomY = r.globals.gridHeight),
                (this.categoryAxisCorrection = this.xDivision / 2),
                (this.elSeries = o.group({
                  class: "apexcharts-series",
                  seriesName: L.escapeString(r.globals.seriesNames[n]),
                })),
                (this.elPointsMain = o.group({
                  class: "apexcharts-series-markers-wrap",
                  "data:realIndex": n,
                })),
                (this.elDataLabelsWrap = o.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": n,
                }));
              var l = e[i].length === r.globals.dataPoints;
              this.elSeries.attr({
                "data:longestSeries": l,
                rel: i + 1,
                "data:realIndex": n,
              }),
                (this.appendPathFrom = !0);
            },
          },
          {
            key: "_calculatePathsFrom",
            value: function (e) {
              var i,
                n,
                r,
                o,
                l = e.type,
                h = e.series,
                d = e.i,
                g = e.realIndex,
                m = e.prevX,
                x = e.prevY,
                v = e.prevY2,
                w = this.w,
                C = new X(this.ctx);
              if (h[d][0] === null) {
                for (var P = 0; P < h[d].length; P++)
                  if (h[d][P] !== null) {
                    (m = this.xDivision * P),
                      (x = this.zeroY - h[d][P] / this.yRatio[this.yaxisIndex]),
                      (i = C.move(m, x)),
                      (n = C.move(m, this.areaBottomY));
                    break;
                  }
              } else
                (i = C.move(m, x)),
                  l === "rangeArea" && (i = C.move(m, v) + C.line(m, x)),
                  (n = C.move(m, this.areaBottomY) + C.line(m, x));
              if (
                ((r = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
                (o = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
                w.globals.previousPaths.length > 0)
              ) {
                var M = this.lineHelpers.checkPreviousPaths({
                  pathFromLine: r,
                  pathFromArea: o,
                  realIndex: g,
                });
                (r = M.pathFromLine), (o = M.pathFromArea);
              }
              return {
                prevX: m,
                prevY: x,
                linePath: i,
                areaPath: n,
                pathFromLine: r,
                pathFromArea: o,
              };
            },
          },
          {
            key: "_handlePaths",
            value: function (e) {
              var i = e.type,
                n = e.realIndex,
                r = e.i,
                o = e.paths,
                l = this.w,
                h = new X(this.ctx),
                d = new Te(this.ctx);
              this.prevSeriesY.push(o.yArrj),
                (l.globals.seriesXvalues[n] = o.xArrj),
                (l.globals.seriesYvalues[n] = o.yArrj);
              var g = l.config.forecastDataPoints;
              if (g.count > 0 && i !== "rangeArea") {
                var m =
                    l.globals.seriesXvalues[n][
                      l.globals.seriesXvalues[n].length - g.count - 1
                    ],
                  x = h.drawRect(
                    m,
                    0,
                    l.globals.gridWidth,
                    l.globals.gridHeight,
                    0
                  );
                l.globals.dom.elForecastMask.appendChild(x.node);
                var v = h.drawRect(0, 0, m, l.globals.gridHeight, 0);
                l.globals.dom.elNonForecastMask.appendChild(v.node);
              }
              this.pointsChart ||
                l.globals.delayedElements.push({
                  el: this.elPointsMain.node,
                  index: n,
                });
              var w = {
                i: r,
                realIndex: n,
                animationDelay: r,
                initialSpeed: l.config.chart.animations.speed,
                dataChangeSpeed:
                  l.config.chart.animations.dynamicAnimation.speed,
                className: "apexcharts-".concat(i),
              };
              if (i === "area")
                for (
                  var C = d.fillPath({ seriesNumber: n }), P = 0;
                  P < o.areaPaths.length;
                  P++
                ) {
                  var M = h.renderPaths(
                    c(
                      c({}, w),
                      {},
                      {
                        pathFrom: o.pathFromArea,
                        pathTo: o.areaPaths[P],
                        stroke: "none",
                        strokeWidth: 0,
                        strokeLineCap: null,
                        fill: C,
                      }
                    )
                  );
                  this.elSeries.add(M);
                }
              if (l.config.stroke.show && !this.pointsChart) {
                var I = null;
                if (i === "line") I = d.fillPath({ seriesNumber: n, i: r });
                else if (l.config.stroke.fill.type === "solid")
                  I = l.globals.stroke.colors[n];
                else {
                  var D = l.config.fill;
                  (l.config.fill = l.config.stroke.fill),
                    (I = d.fillPath({ seriesNumber: n, i: r })),
                    (l.config.fill = D);
                }
                for (var f = 0; f < o.linePaths.length; f++) {
                  var y = I;
                  i === "rangeArea" && (y = d.fillPath({ seriesNumber: n }));
                  var A = c(
                      c({}, w),
                      {},
                      {
                        pathFrom: o.pathFromLine,
                        pathTo: o.linePaths[f],
                        stroke: I,
                        strokeWidth: this.strokeWidth,
                        strokeLineCap: l.config.stroke.lineCap,
                        fill: i === "rangeArea" ? y : "none",
                      }
                    ),
                    _ = h.renderPaths(A);
                  if (
                    (this.elSeries.add(_),
                    _.attr("fill-rule", "evenodd"),
                    g.count > 0 && i !== "rangeArea")
                  ) {
                    var z = h.renderPaths(A);
                    z.node.setAttribute("stroke-dasharray", g.dashArray),
                      g.strokeWidth &&
                        z.node.setAttribute("stroke-width", g.strokeWidth),
                      this.elSeries.add(z),
                      z.attr(
                        "clip-path",
                        "url(#forecastMask".concat(l.globals.cuid, ")")
                      ),
                      _.attr(
                        "clip-path",
                        "url(#nonForecastMask".concat(l.globals.cuid, ")")
                      );
                  }
                }
              }
            },
          },
          {
            key: "_iterateOverDataPoints",
            value: function (e) {
              var i = e.type,
                n = e.series,
                r = e.iterations,
                o = e.realIndex,
                l = e.i,
                h = e.x,
                d = e.y,
                g = e.pX,
                m = e.pY,
                x = e.pathsFrom,
                v = e.linePaths,
                w = e.areaPaths,
                C = e.seriesIndex,
                P = e.lineYPosition,
                M = e.xArrj,
                I = e.yArrj,
                D = e.isRangeStart,
                f = e.seriesRangeEnd,
                y = this.w,
                A = new X(this.ctx),
                _ = this.yRatio,
                z = x.prevY,
                B = x.linePath,
                $ = x.areaPath,
                Z = x.pathFromLine,
                re = x.pathFromArea,
                ce = L.isNumber(y.globals.minYArr[o])
                  ? y.globals.minYArr[o]
                  : y.globals.minY;
              r ||
                (r =
                  y.globals.dataPoints > 1
                    ? y.globals.dataPoints - 1
                    : y.globals.dataPoints);
              for (var oe = d, de = 0; de < r; de++) {
                var Pe = n[l][de + 1] === void 0 || n[l][de + 1] === null;
                if (y.globals.isXNumeric) {
                  var Re = y.globals.seriesX[o][de + 1];
                  y.globals.seriesX[o][de + 1] === void 0 &&
                    (Re = y.globals.seriesX[o][r - 1]),
                    (h = (Re - y.globals.minX) / this.xRatio);
                } else h += this.xDivision;
                y.config.chart.stacked
                  ? l > 0 &&
                    y.globals.collapsedSeries.length <
                      y.config.series.length - 1
                    ? (P =
                        this.prevSeriesY[
                          (function (ut) {
                            for (
                              var at = ut, mt = 0;
                              mt < y.globals.series.length;
                              mt++
                            )
                              if (
                                y.globals.collapsedSeriesIndices.indexOf(ut) >
                                -1
                              ) {
                                at--;
                                break;
                              }
                            return at >= 0 ? at : 0;
                          })(l - 1)
                        ][de + 1])
                    : (P = this.zeroY)
                  : (P = this.zeroY),
                  Pe
                    ? (d =
                        P -
                        ce / _[this.yaxisIndex] +
                        2 * (this.isReversed ? ce / _[this.yaxisIndex] : 0))
                    : ((d =
                        P -
                        n[l][de + 1] / _[this.yaxisIndex] +
                        2 *
                          (this.isReversed
                            ? n[l][de + 1] / _[this.yaxisIndex]
                            : 0)),
                      i === "rangeArea" &&
                        (oe =
                          P -
                          f[l][de + 1] / _[this.yaxisIndex] +
                          2 *
                            (this.isReversed
                              ? f[l][de + 1] / _[this.yaxisIndex]
                              : 0))),
                  M.push(h),
                  I.push(d);
                var Oe = this.lineHelpers.calculatePoints({
                    series: n,
                    x: h,
                    y: d,
                    realIndex: o,
                    i: l,
                    j: de,
                    prevY: z,
                  }),
                  Xe = this._createPaths({
                    type: i,
                    series: n,
                    i: l,
                    realIndex: o,
                    j: de,
                    x: h,
                    y: d,
                    y2: oe,
                    pX: g,
                    pY: m,
                    linePath: B,
                    areaPath: $,
                    linePaths: v,
                    areaPaths: w,
                    seriesIndex: C,
                    isRangeStart: D,
                  });
                (w = Xe.areaPaths),
                  (v = Xe.linePaths),
                  (g = Xe.pX),
                  (m = Xe.pY),
                  ($ = Xe.areaPath),
                  (B = Xe.linePath),
                  this.appendPathFrom &&
                    ((Z += A.line(h, this.zeroY)),
                    (re += A.line(h, this.zeroY))),
                  this.handleNullDataPoints(n, Oe, l, de, o),
                  this._handleMarkersAndLabels({
                    type: i,
                    pointsPos: Oe,
                    i: l,
                    j: de,
                    realIndex: o,
                    isRangeStart: D,
                  });
              }
              return {
                yArrj: I,
                xArrj: M,
                pathFromArea: re,
                areaPaths: w,
                pathFromLine: Z,
                linePaths: v,
                linePath: B,
                areaPath: $,
              };
            },
          },
          {
            key: "_handleMarkersAndLabels",
            value: function (e) {
              var i = e.type,
                n = e.pointsPos,
                r = e.isRangeStart,
                o = e.i,
                l = e.j,
                h = e.realIndex,
                d = this.w,
                g = new Ke(this.ctx);
              if (this.pointsChart)
                this.scatter.draw(this.elSeries, l, {
                  realIndex: h,
                  pointsPos: n,
                  zRatio: this.zRatio,
                  elParent: this.elPointsMain,
                });
              else {
                d.globals.series[o].length > 1 &&
                  this.elPointsMain.node.classList.add(
                    "apexcharts-element-hidden"
                  );
                var m = this.markers.plotChartMarkers(n, h, l + 1);
                m !== null && this.elPointsMain.add(m);
              }
              var x = g.drawDataLabel({
                type: i,
                isRangeStart: r,
                pos: n,
                i: h,
                j: l + 1,
              });
              x !== null && this.elDataLabelsWrap.add(x);
            },
          },
          {
            key: "_createPaths",
            value: function (e) {
              var i = e.type,
                n = e.series,
                r = e.i,
                o = e.realIndex,
                l = e.j,
                h = e.x,
                d = e.y,
                g = e.y2,
                m = e.pX,
                x = e.pY,
                v = e.linePath,
                w = e.areaPath,
                C = e.linePaths,
                P = e.areaPaths,
                M = e.seriesIndex,
                I = e.isRangeStart,
                D = this.w,
                f = new X(this.ctx),
                y = D.config.stroke.curve,
                A = this.areaBottomY;
              if (
                (Array.isArray(D.config.stroke.curve) &&
                  (y = Array.isArray(M)
                    ? D.config.stroke.curve[M[r]]
                    : D.config.stroke.curve[r]),
                y === "smooth")
              ) {
                var _ = 0.35 * (h - m);
                D.globals.hasNullValues
                  ? (n[r][l] !== null &&
                      (n[r][l + 1] !== null
                        ? ((v =
                            f.move(m, x) +
                            f.curve(m + _, x, h - _, d, h + 1, d)),
                          (w =
                            f.move(m + 1, x) +
                            f.curve(m + _, x, h - _, d, h + 1, d) +
                            f.line(h, A) +
                            f.line(m, A) +
                            "z"))
                        : ((v = f.move(m, x)), (w = f.move(m, x) + "z"))),
                    C.push(v),
                    P.push(w))
                  : ((v += f.curve(m + _, x, h - _, d, h, d)),
                    (w += f.curve(m + _, x, h - _, d, h, d))),
                  (m = h),
                  (x = d),
                  l === n[r].length - 2 &&
                    ((w = w + f.curve(m, x, h, d, h, A) + f.move(h, d) + "z"),
                    i === "rangeArea" && I
                      ? (v = v + f.curve(m, x, h, d, h, g) + f.move(h, g) + "z")
                      : D.globals.hasNullValues || (C.push(v), P.push(w)));
              } else {
                if (n[r][l + 1] === null) {
                  v += f.move(h, d);
                  var z = D.globals.isXNumeric
                    ? (D.globals.seriesX[o][l] - D.globals.minX) / this.xRatio
                    : h - this.xDivision;
                  w = w + f.line(z, A) + f.move(h, d) + "z";
                }
                n[r][l] === null && ((v += f.move(h, d)), (w += f.move(h, A))),
                  y === "stepline"
                    ? ((v = v + f.line(h, null, "H") + f.line(null, d, "V")),
                      (w = w + f.line(h, null, "H") + f.line(null, d, "V")))
                    : y === "straight" &&
                      ((v += f.line(h, d)), (w += f.line(h, d))),
                  l === n[r].length - 2 &&
                    ((w = w + f.line(h, A) + f.move(h, d) + "z"),
                    i === "rangeArea" && I
                      ? (v = v + f.line(h, g) + f.move(h, g) + "z")
                      : (C.push(v), P.push(w)));
              }
              return {
                linePaths: C,
                areaPaths: P,
                pX: m,
                pY: x,
                linePath: v,
                areaPath: w,
              };
            },
          },
          {
            key: "handleNullDataPoints",
            value: function (e, i, n, r, o) {
              var l = this.w;
              if (
                (e[n][r] === null && l.config.markers.showNullDataPoints) ||
                e[n].length === 1
              ) {
                var h = this.markers.plotChartMarkers(
                  i,
                  o,
                  r + 1,
                  this.strokeWidth - l.config.markers.strokeWidth / 2,
                  !0
                );
                h !== null && this.elPointsMain.add(h);
              }
            },
          },
        ]),
        T
      );
    })();
  (window.TreemapSquared = {}),
    (window.TreemapSquared.generate = (function () {
      function T(h, d, g, m) {
        (this.xoffset = h),
          (this.yoffset = d),
          (this.height = m),
          (this.width = g),
          (this.shortestEdge = function () {
            return Math.min(this.height, this.width);
          }),
          (this.getCoordinates = function (x) {
            var v,
              w = [],
              C = this.xoffset,
              P = this.yoffset,
              M = o(x) / this.height,
              I = o(x) / this.width;
            if (this.width >= this.height)
              for (v = 0; v < x.length; v++)
                w.push([C, P, C + M, P + x[v] / M]), (P += x[v] / M);
            else
              for (v = 0; v < x.length; v++)
                w.push([C, P, C + x[v] / I, P + I]), (C += x[v] / I);
            return w;
          }),
          (this.cutArea = function (x) {
            var v;
            if (this.width >= this.height) {
              var w = x / this.height,
                C = this.width - w;
              v = new T(this.xoffset + w, this.yoffset, C, this.height);
            } else {
              var P = x / this.width,
                M = this.height - P;
              v = new T(this.xoffset, this.yoffset + P, this.width, M);
            }
            return v;
          });
      }
      function e(h, d, g, m, x) {
        (m = m === void 0 ? 0 : m), (x = x === void 0 ? 0 : x);
        var v = i(
          (function (w, C) {
            var P,
              M = [],
              I = C / o(w);
            for (P = 0; P < w.length; P++) M[P] = w[P] * I;
            return M;
          })(h, d * g),
          [],
          new T(m, x, d, g),
          []
        );
        return (function (w) {
          var C,
            P,
            M = [];
          for (C = 0; C < w.length; C++)
            for (P = 0; P < w[C].length; P++) M.push(w[C][P]);
          return M;
        })(v);
      }
      function i(h, d, g, m) {
        var x, v, w;
        if (h.length !== 0)
          return (
            (x = g.shortestEdge()),
            (function (C, P, M) {
              var I;
              if (C.length === 0) return !0;
              (I = C.slice()).push(P);
              var D = n(C, M),
                f = n(I, M);
              return D >= f;
            })(d, (v = h[0]), x)
              ? (d.push(v), i(h.slice(1), d, g, m))
              : ((w = g.cutArea(o(d), m)),
                m.push(g.getCoordinates(d)),
                i(h, [], w, m)),
            m
          );
        m.push(g.getCoordinates(d));
      }
      function n(h, d) {
        var g = Math.min.apply(Math, h),
          m = Math.max.apply(Math, h),
          x = o(h);
        return Math.max(
          (Math.pow(d, 2) * m) / Math.pow(x, 2),
          Math.pow(x, 2) / (Math.pow(d, 2) * g)
        );
      }
      function r(h) {
        return h && h.constructor === Array;
      }
      function o(h) {
        var d,
          g = 0;
        for (d = 0; d < h.length; d++) g += h[d];
        return g;
      }
      function l(h) {
        var d,
          g = 0;
        if (r(h[0])) for (d = 0; d < h.length; d++) g += l(h[d]);
        else g = o(h);
        return g;
      }
      return function h(d, g, m, x, v) {
        (x = x === void 0 ? 0 : x), (v = v === void 0 ? 0 : v);
        var w,
          C,
          P = [],
          M = [];
        if (r(d[0])) {
          for (C = 0; C < d.length; C++) P[C] = l(d[C]);
          for (w = e(P, g, m, x, v), C = 0; C < d.length; C++)
            M.push(
              h(d[C], w[C][2] - w[C][0], w[C][3] - w[C][1], w[C][0], w[C][1])
            );
        } else M = e(d, g, m, x, v);
        return M;
      };
    })());
  var Qe,
    Bi,
    Bn = (function () {
      function T(e, i) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.strokeWidth = this.w.config.stroke.width),
          (this.helpers = new Ge(e)),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.labels = []);
      }
      return (
        S(T, [
          {
            key: "draw",
            value: function (e) {
              var i = this,
                n = this.w,
                r = new X(this.ctx),
                o = new Te(this.ctx),
                l = r.group({ class: "apexcharts-treemap" });
              if (n.globals.noData) return l;
              var h = [];
              return (
                e.forEach(function (d) {
                  var g = d.map(function (m) {
                    return Math.abs(m);
                  });
                  h.push(g);
                }),
                (this.negRange = this.helpers.checkColorRange()),
                n.config.series.forEach(function (d, g) {
                  d.data.forEach(function (m) {
                    Array.isArray(i.labels[g]) || (i.labels[g] = []),
                      i.labels[g].push(m.x);
                  });
                }),
                window.TreemapSquared.generate(
                  h,
                  n.globals.gridWidth,
                  n.globals.gridHeight
                ).forEach(function (d, g) {
                  var m = r.group({
                    class: "apexcharts-series apexcharts-treemap-series",
                    seriesName: L.escapeString(n.globals.seriesNames[g]),
                    rel: g + 1,
                    "data:realIndex": g,
                  });
                  if (n.config.chart.dropShadow.enabled) {
                    var x = n.config.chart.dropShadow;
                    new O(i.ctx).dropShadow(l, x, g);
                  }
                  var v = r.group({ class: "apexcharts-data-labels" });
                  d.forEach(function (w, C) {
                    var P = w[0],
                      M = w[1],
                      I = w[2],
                      D = w[3],
                      f = r.drawRect(
                        P,
                        M,
                        I - P,
                        D - M,
                        0,
                        "#fff",
                        1,
                        i.strokeWidth,
                        n.config.plotOptions.treemap.useFillColorAsStroke
                          ? A
                          : n.globals.stroke.colors[g]
                      );
                    f.attr({
                      cx: P,
                      cy: M,
                      index: g,
                      i: g,
                      j: C,
                      width: I - P,
                      height: D - M,
                    });
                    var y = i.helpers.getShadeColor(
                        n.config.chart.type,
                        g,
                        C,
                        i.negRange
                      ),
                      A = y.color;
                    n.config.series[g].data[C] !== void 0 &&
                      n.config.series[g].data[C].fillColor &&
                      (A = n.config.series[g].data[C].fillColor);
                    var _ = o.fillPath({
                      color: A,
                      seriesNumber: g,
                      dataPointIndex: C,
                    });
                    f.node.classList.add("apexcharts-treemap-rect"),
                      f.attr({ fill: _ }),
                      i.helpers.addListeners(f);
                    var z = {
                        x: P + (I - P) / 2,
                        y: M + (D - M) / 2,
                        width: 0,
                        height: 0,
                      },
                      B = { x: P, y: M, width: I - P, height: D - M };
                    if (
                      n.config.chart.animations.enabled &&
                      !n.globals.dataChanged
                    ) {
                      var $ = 1;
                      n.globals.resized ||
                        ($ = n.config.chart.animations.speed),
                        i.animateTreemap(f, z, B, $);
                    }
                    if (n.globals.dataChanged) {
                      var Z = 1;
                      i.dynamicAnim.enabled &&
                        n.globals.shouldAnimate &&
                        ((Z = i.dynamicAnim.speed),
                        n.globals.previousPaths[g] &&
                          n.globals.previousPaths[g][C] &&
                          n.globals.previousPaths[g][C].rect &&
                          (z = n.globals.previousPaths[g][C].rect),
                        i.animateTreemap(f, z, B, Z));
                    }
                    var re = i.getFontSize(w),
                      ce = n.config.dataLabels.formatter(i.labels[g][C], {
                        value: n.globals.series[g][C],
                        seriesIndex: g,
                        dataPointIndex: C,
                        w: n,
                      });
                    n.config.plotOptions.treemap.dataLabels.format ===
                      "truncate" &&
                      ((re = parseInt(n.config.dataLabels.style.fontSize, 10)),
                      (ce = i.truncateLabels(ce, re, P, M, I, D)));
                    var oe = i.helpers.calculateDataLabels({
                      text: ce,
                      x: (P + I) / 2,
                      y: (M + D) / 2 + i.strokeWidth / 2 + re / 3,
                      i: g,
                      j: C,
                      colorProps: y,
                      fontSize: re,
                      series: e,
                    });
                    n.config.dataLabels.enabled &&
                      oe &&
                      i.rotateToFitLabel(oe, re, ce, P, M, I, D),
                      m.add(f),
                      oe !== null && m.add(oe);
                  }),
                    m.add(v),
                    l.add(m);
                }),
                l
              );
            },
          },
          {
            key: "getFontSize",
            value: function (e) {
              var i = this.w,
                n,
                r,
                o,
                l,
                h =
                  (function d(g) {
                    var m,
                      x = 0;
                    if (Array.isArray(g[0]))
                      for (m = 0; m < g.length; m++) x += d(g[m]);
                    else for (m = 0; m < g.length; m++) x += g[m].length;
                    return x;
                  })(this.labels) /
                  (function d(g) {
                    var m,
                      x = 0;
                    if (Array.isArray(g[0]))
                      for (m = 0; m < g.length; m++) x += d(g[m]);
                    else for (m = 0; m < g.length; m++) x += 1;
                    return x;
                  })(this.labels);
              return (
                (n = e[2] - e[0]),
                (r = e[3] - e[1]),
                (o = n * r),
                (l = Math.pow(o, 0.5)),
                Math.min(
                  l / h,
                  parseInt(i.config.dataLabels.style.fontSize, 10)
                )
              );
            },
          },
          {
            key: "rotateToFitLabel",
            value: function (e, i, n, r, o, l, h) {
              var d = new X(this.ctx),
                g = d.getTextRects(n, i);
              if (
                g.width + this.w.config.stroke.width + 5 > l - r &&
                g.width <= h - o
              ) {
                var m = d.rotateAroundCenter(e.node);
                e.node.setAttribute(
                  "transform",
                  "rotate(-90 "
                    .concat(m.x, " ")
                    .concat(m.y, ") translate(")
                    .concat(g.height / 3, ")")
                );
              }
            },
          },
          {
            key: "truncateLabels",
            value: function (e, i, n, r, o, l) {
              var h = new X(this.ctx),
                d =
                  h.getTextRects(e, i).width + this.w.config.stroke.width + 5 >
                    o - n && l - r > o - n
                    ? l - r
                    : o - n,
                g = h.getTextBasedOnMaxWidth({
                  text: e,
                  maxWidth: d,
                  fontSize: i,
                });
              return e.length !== g.length && d / i < 5 ? "" : g;
            },
          },
          {
            key: "animateTreemap",
            value: function (e, i, n, r) {
              var o = new R(this.ctx);
              o.animateRect(
                e,
                { x: i.x, y: i.y, width: i.width, height: i.height },
                { x: n.x, y: n.y, width: n.width, height: n.height },
                r,
                function () {
                  o.animationCompleted(e);
                }
              );
            },
          },
        ]),
        T
      );
    })(),
    Hn = 86400,
    Xn = (function () {
      function T(e) {
        p(this, T),
          (this.ctx = e),
          (this.w = e.w),
          (this.timeScaleArray = []),
          (this.utc = this.w.config.xaxis.labels.datetimeUTC);
      }
      return (
        S(T, [
          {
            key: "calculateTimeScaleTicks",
            value: function (e, i) {
              var n = this,
                r = this.w;
              if (r.globals.allSeriesCollapsed)
                return (
                  (r.globals.labels = []), (r.globals.timescaleLabels = []), []
                );
              var o = new ie(this.ctx),
                l = (i - e) / 864e5;
              this.determineInterval(l),
                (r.globals.disableZoomIn = !1),
                (r.globals.disableZoomOut = !1),
                l < 0.00011574074074074075
                  ? (r.globals.disableZoomIn = !0)
                  : l > 5e4 && (r.globals.disableZoomOut = !0);
              var h = o.getTimeUnitsfromTimestamp(e, i, this.utc),
                d = r.globals.gridWidth / l,
                g = d / 24,
                m = g / 60,
                x = m / 60,
                v = Math.floor(24 * l),
                w = Math.floor(1440 * l),
                C = Math.floor(l * Hn),
                P = Math.floor(l),
                M = Math.floor(l / 30),
                I = Math.floor(l / 365),
                D = {
                  minMillisecond: h.minMillisecond,
                  minSecond: h.minSecond,
                  minMinute: h.minMinute,
                  minHour: h.minHour,
                  minDate: h.minDate,
                  minMonth: h.minMonth,
                  minYear: h.minYear,
                },
                f = {
                  firstVal: D,
                  currentMillisecond: D.minMillisecond,
                  currentSecond: D.minSecond,
                  currentMinute: D.minMinute,
                  currentHour: D.minHour,
                  currentMonthDate: D.minDate,
                  currentDate: D.minDate,
                  currentMonth: D.minMonth,
                  currentYear: D.minYear,
                  daysWidthOnXAxis: d,
                  hoursWidthOnXAxis: g,
                  minutesWidthOnXAxis: m,
                  secondsWidthOnXAxis: x,
                  numberOfSeconds: C,
                  numberOfMinutes: w,
                  numberOfHours: v,
                  numberOfDays: P,
                  numberOfMonths: M,
                  numberOfYears: I,
                };
              switch (this.tickInterval) {
                case "years":
                  this.generateYearScale(f);
                  break;
                case "months":
                case "half_year":
                  this.generateMonthScale(f);
                  break;
                case "months_days":
                case "months_fortnight":
                case "days":
                case "week_days":
                  this.generateDayScale(f);
                  break;
                case "hours":
                  this.generateHourScale(f);
                  break;
                case "minutes_fives":
                case "minutes":
                  this.generateMinuteScale(f);
                  break;
                case "seconds_tens":
                case "seconds_fives":
                case "seconds":
                  this.generateSecondScale(f);
              }
              var y = this.timeScaleArray.map(function (A) {
                var _ = {
                  position: A.position,
                  unit: A.unit,
                  year: A.year,
                  day: A.day ? A.day : 1,
                  hour: A.hour ? A.hour : 0,
                  month: A.month + 1,
                };
                return A.unit === "month"
                  ? c(c({}, _), {}, { day: 1, value: A.value + 1 })
                  : A.unit === "day" || A.unit === "hour"
                  ? c(c({}, _), {}, { value: A.value })
                  : A.unit === "minute"
                  ? c(c({}, _), {}, { value: A.value, minute: A.value })
                  : A.unit === "second"
                  ? c(
                      c({}, _),
                      {},
                      { value: A.value, minute: A.minute, second: A.second }
                    )
                  : A;
              });
              return y.filter(function (A) {
                var _ = 1,
                  z = Math.ceil(r.globals.gridWidth / 120),
                  B = A.value;
                r.config.xaxis.tickAmount !== void 0 &&
                  (z = r.config.xaxis.tickAmount),
                  y.length > z && (_ = Math.floor(y.length / z));
                var $ = !1,
                  Z = !1;
                switch (n.tickInterval) {
                  case "years":
                    A.unit === "year" && ($ = !0);
                    break;
                  case "half_year":
                    (_ = 7), A.unit === "year" && ($ = !0);
                    break;
                  case "months":
                    (_ = 1), A.unit === "year" && ($ = !0);
                    break;
                  case "months_fortnight":
                    (_ = 15),
                      (A.unit !== "year" && A.unit !== "month") || ($ = !0),
                      B === 30 && (Z = !0);
                    break;
                  case "months_days":
                    (_ = 10),
                      A.unit === "month" && ($ = !0),
                      B === 30 && (Z = !0);
                    break;
                  case "week_days":
                    (_ = 8), A.unit === "month" && ($ = !0);
                    break;
                  case "days":
                    (_ = 1), A.unit === "month" && ($ = !0);
                    break;
                  case "hours":
                    A.unit === "day" && ($ = !0);
                    break;
                  case "minutes_fives":
                  case "seconds_fives":
                    B % 5 != 0 && (Z = !0);
                    break;
                  case "seconds_tens":
                    B % 10 != 0 && (Z = !0);
                }
                if (
                  n.tickInterval === "hours" ||
                  n.tickInterval === "minutes_fives" ||
                  n.tickInterval === "seconds_tens" ||
                  n.tickInterval === "seconds_fives"
                ) {
                  if (!Z) return !0;
                } else if ((B % _ == 0 || $) && !Z) return !0;
              });
            },
          },
          {
            key: "recalcDimensionsBasedOnFormat",
            value: function (e, i) {
              var n = this.w,
                r = this.formatDates(e),
                o = this.removeOverlappingTS(r);
              (n.globals.timescaleLabels = o.slice()),
                new Gt(this.ctx).plotCoords();
            },
          },
          {
            key: "determineInterval",
            value: function (e) {
              var i = 24 * e,
                n = 60 * i;
              switch (!0) {
                case e / 365 > 5:
                  this.tickInterval = "years";
                  break;
                case e > 800:
                  this.tickInterval = "half_year";
                  break;
                case e > 180:
                  this.tickInterval = "months";
                  break;
                case e > 90:
                  this.tickInterval = "months_fortnight";
                  break;
                case e > 60:
                  this.tickInterval = "months_days";
                  break;
                case e > 30:
                  this.tickInterval = "week_days";
                  break;
                case e > 2:
                  this.tickInterval = "days";
                  break;
                case i > 2.4:
                  this.tickInterval = "hours";
                  break;
                case n > 15:
                  this.tickInterval = "minutes_fives";
                  break;
                case n > 5:
                  this.tickInterval = "minutes";
                  break;
                case n > 1:
                  this.tickInterval = "seconds_tens";
                  break;
                case 60 * n > 20:
                  this.tickInterval = "seconds_fives";
                  break;
                default:
                  this.tickInterval = "seconds";
              }
            },
          },
          {
            key: "generateYearScale",
            value: function (e) {
              var i = e.firstVal,
                n = e.currentMonth,
                r = e.currentYear,
                o = e.daysWidthOnXAxis,
                l = e.numberOfYears,
                h = i.minYear,
                d = 0,
                g = new ie(this.ctx),
                m = "year";
              if (i.minDate > 1 || i.minMonth > 0) {
                var x = g.determineRemainingDaysOfYear(
                  i.minYear,
                  i.minMonth,
                  i.minDate
                );
                (d = (g.determineDaysOfYear(i.minYear) - x + 1) * o),
                  (h = i.minYear + 1),
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: m,
                    year: h,
                    month: L.monthMod(n + 1),
                  });
              } else
                i.minDate === 1 &&
                  i.minMonth === 0 &&
                  this.timeScaleArray.push({
                    position: d,
                    value: h,
                    unit: m,
                    year: r,
                    month: L.monthMod(n + 1),
                  });
              for (var v = h, w = d, C = 0; C < l; C++)
                v++,
                  (w = g.determineDaysOfYear(v - 1) * o + w),
                  this.timeScaleArray.push({
                    position: w,
                    value: v,
                    unit: m,
                    year: v,
                    month: 1,
                  });
            },
          },
          {
            key: "generateMonthScale",
            value: function (e) {
              var i = e.firstVal,
                n = e.currentMonthDate,
                r = e.currentMonth,
                o = e.currentYear,
                l = e.daysWidthOnXAxis,
                h = e.numberOfMonths,
                d = r,
                g = 0,
                m = new ie(this.ctx),
                x = "month",
                v = 0;
              if (i.minDate > 1) {
                (g = (m.determineDaysOfMonths(r + 1, i.minYear) - n + 1) * l),
                  (d = L.monthMod(r + 1));
                var w = o + v,
                  C = L.monthMod(d),
                  P = d;
                d === 0 && ((x = "year"), (P = w), (C = 1), (w += v += 1)),
                  this.timeScaleArray.push({
                    position: g,
                    value: P,
                    unit: x,
                    year: w,
                    month: C,
                  });
              } else
                this.timeScaleArray.push({
                  position: g,
                  value: d,
                  unit: x,
                  year: o,
                  month: L.monthMod(r),
                });
              for (var M = d + 1, I = g, D = 0, f = 1; D < h; D++, f++) {
                (M = L.monthMod(M)) === 0
                  ? ((x = "year"), (v += 1))
                  : (x = "month");
                var y = this._getYear(o, M, v);
                I = m.determineDaysOfMonths(M, y) * l + I;
                var A = M === 0 ? y : M;
                this.timeScaleArray.push({
                  position: I,
                  value: A,
                  unit: x,
                  year: y,
                  month: M === 0 ? 1 : M,
                }),
                  M++;
              }
            },
          },
          {
            key: "generateDayScale",
            value: function (e) {
              var i = e.firstVal,
                n = e.currentMonth,
                r = e.currentYear,
                o = e.hoursWidthOnXAxis,
                l = e.numberOfDays,
                h = new ie(this.ctx),
                d = "day",
                g = i.minDate + 1,
                m = g,
                x = function (f, y, A) {
                  return (
                    f > h.determineDaysOfMonths(y + 1, A) &&
                      ((m = 1), (d = "month"), (w = y += 1)),
                    y
                  );
                },
                v = (24 - i.minHour) * o,
                w = g,
                C = x(m, n, r);
              i.minHour === 0 && i.minDate === 1
                ? ((v = 0),
                  (w = L.monthMod(i.minMonth)),
                  (d = "month"),
                  (m = i.minDate),
                  l++)
                : i.minDate !== 1 &&
                  i.minHour === 0 &&
                  i.minMinute === 0 &&
                  ((v = 0), (g = i.minDate), (w = g), (C = x((m = g), n, r))),
                this.timeScaleArray.push({
                  position: v,
                  value: w,
                  unit: d,
                  year: this._getYear(r, C, 0),
                  month: L.monthMod(C),
                  day: m,
                });
              for (var P = v, M = 0; M < l; M++) {
                (d = "day"), (C = x((m += 1), C, this._getYear(r, C, 0)));
                var I = this._getYear(r, C, 0);
                P = 24 * o + P;
                var D = m === 1 ? L.monthMod(C) : m;
                this.timeScaleArray.push({
                  position: P,
                  value: D,
                  unit: d,
                  year: I,
                  month: L.monthMod(C),
                  day: D,
                });
              }
            },
          },
          {
            key: "generateHourScale",
            value: function (e) {
              var i = e.firstVal,
                n = e.currentDate,
                r = e.currentMonth,
                o = e.currentYear,
                l = e.minutesWidthOnXAxis,
                h = e.numberOfHours,
                d = new ie(this.ctx),
                g = "hour",
                m = function (_, z) {
                  return (
                    _ > d.determineDaysOfMonths(z + 1, o) &&
                      ((M = 1), (z += 1)),
                    { month: z, date: M }
                  );
                },
                x = function (_, z) {
                  return _ > d.determineDaysOfMonths(z + 1, o) ? (z += 1) : z;
                },
                v = 60 - (i.minMinute + i.minSecond / 60),
                w = v * l,
                C = i.minHour + 1,
                P = C + 1;
              v === 60 && ((w = 0), (P = (C = i.minHour) + 1));
              var M = n,
                I = x(M, r);
              this.timeScaleArray.push({
                position: w,
                value: C,
                unit: g,
                day: M,
                hour: P,
                year: o,
                month: L.monthMod(I),
              });
              for (var D = w, f = 0; f < h; f++) {
                (g = "hour"),
                  P >= 24 &&
                    ((P = 0),
                    (g = "day"),
                    (I = m((M += 1), I).month),
                    (I = x(M, I)));
                var y = this._getYear(o, I, 0);
                D = 60 * l + D;
                var A = P === 0 ? M : P;
                this.timeScaleArray.push({
                  position: D,
                  value: A,
                  unit: g,
                  hour: P,
                  day: M,
                  year: y,
                  month: L.monthMod(I),
                }),
                  P++;
              }
            },
          },
          {
            key: "generateMinuteScale",
            value: function (e) {
              for (
                var i = e.currentMillisecond,
                  n = e.currentSecond,
                  r = e.currentMinute,
                  o = e.currentHour,
                  l = e.currentDate,
                  h = e.currentMonth,
                  d = e.currentYear,
                  g = e.minutesWidthOnXAxis,
                  m = e.secondsWidthOnXAxis,
                  x = e.numberOfMinutes,
                  v = r + 1,
                  w = l,
                  C = h,
                  P = d,
                  M = o,
                  I = (60 - n - i / 1e3) * m,
                  D = 0;
                D < x;
                D++
              )
                v >= 60 && ((v = 0), (M += 1) === 24 && (M = 0)),
                  this.timeScaleArray.push({
                    position: I,
                    value: v,
                    unit: "minute",
                    hour: M,
                    minute: v,
                    day: w,
                    year: this._getYear(P, C, 0),
                    month: L.monthMod(C),
                  }),
                  (I += g),
                  v++;
            },
          },
          {
            key: "generateSecondScale",
            value: function (e) {
              for (
                var i = e.currentMillisecond,
                  n = e.currentSecond,
                  r = e.currentMinute,
                  o = e.currentHour,
                  l = e.currentDate,
                  h = e.currentMonth,
                  d = e.currentYear,
                  g = e.secondsWidthOnXAxis,
                  m = e.numberOfSeconds,
                  x = n + 1,
                  v = r,
                  w = l,
                  C = h,
                  P = d,
                  M = o,
                  I = ((1e3 - i) / 1e3) * g,
                  D = 0;
                D < m;
                D++
              )
                x >= 60 &&
                  ((x = 0), ++v >= 60 && ((v = 0), ++M === 24 && (M = 0))),
                  this.timeScaleArray.push({
                    position: I,
                    value: x,
                    unit: "second",
                    hour: M,
                    minute: v,
                    second: x,
                    day: w,
                    year: this._getYear(P, C, 0),
                    month: L.monthMod(C),
                  }),
                  (I += g),
                  x++;
            },
          },
          {
            key: "createRawDateString",
            value: function (e, i) {
              var n = e.year;
              return (
                e.month === 0 && (e.month = 1),
                (n += "-" + ("0" + e.month.toString()).slice(-2)),
                e.unit === "day"
                  ? (n += e.unit === "day" ? "-" + ("0" + i).slice(-2) : "-01")
                  : (n += "-" + ("0" + (e.day ? e.day : "1")).slice(-2)),
                e.unit === "hour"
                  ? (n += e.unit === "hour" ? "T" + ("0" + i).slice(-2) : "T00")
                  : (n += "T" + ("0" + (e.hour ? e.hour : "0")).slice(-2)),
                e.unit === "minute"
                  ? (n += ":" + ("0" + i).slice(-2))
                  : (n += ":" + (e.minute ? ("0" + e.minute).slice(-2) : "00")),
                e.unit === "second"
                  ? (n += ":" + ("0" + i).slice(-2))
                  : (n += ":00"),
                this.utc && (n += ".000Z"),
                n
              );
            },
          },
          {
            key: "formatDates",
            value: function (e) {
              var i = this,
                n = this.w;
              return e.map(function (r) {
                var o = r.value.toString(),
                  l = new ie(i.ctx),
                  h = i.createRawDateString(r, o),
                  d = l.getDate(l.parseDate(h));
                if (
                  (i.utc || (d = l.getDate(l.parseDateWithTimezone(h))),
                  n.config.xaxis.labels.format === void 0)
                ) {
                  var g = "dd MMM",
                    m = n.config.xaxis.labels.datetimeFormatter;
                  r.unit === "year" && (g = m.year),
                    r.unit === "month" && (g = m.month),
                    r.unit === "day" && (g = m.day),
                    r.unit === "hour" && (g = m.hour),
                    r.unit === "minute" && (g = m.minute),
                    r.unit === "second" && (g = m.second),
                    (o = l.formatDate(d, g));
                } else o = l.formatDate(d, n.config.xaxis.labels.format);
                return {
                  dateString: h,
                  position: r.position,
                  value: o,
                  unit: r.unit,
                  year: r.year,
                  month: r.month,
                };
              });
            },
          },
          {
            key: "removeOverlappingTS",
            value: function (e) {
              var i,
                n = this,
                r = new X(this.ctx),
                o = !1;
              e.length > 0 &&
                e[0].value &&
                e.every(function (d) {
                  return d.value.length === e[0].value.length;
                }) &&
                ((o = !0), (i = r.getTextRects(e[0].value).width));
              var l = 0,
                h = e.map(function (d, g) {
                  if (g > 0 && n.w.config.xaxis.labels.hideOverlappingLabels) {
                    var m = o ? i : r.getTextRects(e[l].value).width,
                      x = e[l].position;
                    return d.position > x + m + 10 ? ((l = g), d) : null;
                  }
                  return d;
                });
              return (h = h.filter(function (d) {
                return d !== null;
              }));
            },
          },
          {
            key: "_getYear",
            value: function (e, i, n) {
              return e + Math.floor(i / 12) + n;
            },
          },
        ]),
        T
      );
    })(),
    tn = (function () {
      function T(e, i) {
        p(this, T), (this.ctx = i), (this.w = i.w), (this.el = e);
      }
      return (
        S(T, [
          {
            key: "setupElements",
            value: function () {
              var e = this.w.globals,
                i = this.w.config,
                n = i.chart.type;
              (e.axisCharts =
                [
                  "line",
                  "area",
                  "bar",
                  "rangeBar",
                  "rangeArea",
                  "candlestick",
                  "boxPlot",
                  "scatter",
                  "bubble",
                  "radar",
                  "heatmap",
                  "treemap",
                ].indexOf(n) > -1),
                (e.xyCharts =
                  [
                    "line",
                    "area",
                    "bar",
                    "rangeBar",
                    "rangeArea",
                    "candlestick",
                    "boxPlot",
                    "scatter",
                    "bubble",
                  ].indexOf(n) > -1),
                (e.isBarHorizontal =
                  (i.chart.type === "bar" ||
                    i.chart.type === "rangeBar" ||
                    i.chart.type === "boxPlot") &&
                  i.plotOptions.bar.horizontal),
                (e.chartClass = ".apexcharts" + e.chartID),
                (e.dom.baseEl = this.el),
                (e.dom.elWrap = document.createElement("div")),
                X.setAttrs(e.dom.elWrap, {
                  id: e.chartClass.substring(1),
                  class: "apexcharts-canvas " + e.chartClass.substring(1),
                }),
                this.el.appendChild(e.dom.elWrap),
                (e.dom.Paper = new window.SVG.Doc(e.dom.elWrap)),
                e.dom.Paper.attr({
                  class: "apexcharts-svg",
                  "xmlns:data": "ApexChartsNS",
                  transform: "translate("
                    .concat(i.chart.offsetX, ", ")
                    .concat(i.chart.offsetY, ")"),
                }),
                (e.dom.Paper.node.style.background = i.chart.background),
                this.setSVGDimensions(),
                (e.dom.elLegendForeign = document.createElementNS(
                  e.SVGNS,
                  "foreignObject"
                )),
                X.setAttrs(e.dom.elLegendForeign, {
                  x: 0,
                  y: 0,
                  width: e.svgWidth,
                  height: e.svgHeight,
                }),
                (e.dom.elLegendWrap = document.createElement("div")),
                e.dom.elLegendWrap.classList.add("apexcharts-legend"),
                e.dom.elLegendWrap.setAttribute(
                  "xmlns",
                  "http://www.w3.org/1999/xhtml"
                ),
                e.dom.elLegendForeign.appendChild(e.dom.elLegendWrap),
                e.dom.Paper.node.appendChild(e.dom.elLegendForeign),
                (e.dom.elGraphical = e.dom.Paper.group().attr({
                  class: "apexcharts-inner apexcharts-graphical",
                })),
                (e.dom.elDefs = e.dom.Paper.defs()),
                e.dom.Paper.add(e.dom.elGraphical),
                e.dom.elGraphical.add(e.dom.elDefs);
            },
          },
          {
            key: "plotChartType",
            value: function (e, i) {
              var n = this.w,
                r = n.config,
                o = n.globals,
                l = { series: [], i: [] },
                h = { series: [], i: [] },
                d = { series: [], i: [] },
                g = { series: [], i: [] },
                m = { series: [], i: [] },
                x = { series: [], i: [] },
                v = { series: [], i: [] },
                w = { series: [], i: [] },
                C = { series: [], seriesRangeEnd: [], i: [] };
              o.series.map(function (z, B) {
                var $ = 0;
                e[B].type !== void 0
                  ? (e[B].type === "column" || e[B].type === "bar"
                      ? (o.series.length > 1 &&
                          r.plotOptions.bar.horizontal &&
                          console.warn(
                            "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"
                          ),
                        m.series.push(z),
                        m.i.push(B),
                        $++,
                        (n.globals.columnSeries = m.series))
                      : e[B].type === "area"
                      ? (h.series.push(z), h.i.push(B), $++)
                      : e[B].type === "line"
                      ? (l.series.push(z), l.i.push(B), $++)
                      : e[B].type === "scatter"
                      ? (d.series.push(z), d.i.push(B))
                      : e[B].type === "bubble"
                      ? (g.series.push(z), g.i.push(B), $++)
                      : e[B].type === "candlestick"
                      ? (x.series.push(z), x.i.push(B), $++)
                      : e[B].type === "boxPlot"
                      ? (v.series.push(z), v.i.push(B), $++)
                      : e[B].type === "rangeBar"
                      ? (w.series.push(z), w.i.push(B), $++)
                      : e[B].type === "rangeArea"
                      ? (C.series.push(o.seriesRangeStart[B]),
                        C.seriesRangeEnd.push(o.seriesRangeEnd[B]),
                        C.i.push(B),
                        $++)
                      : console.warn(
                          "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"
                        ),
                    $ > 1 && (o.comboCharts = !0))
                  : (l.series.push(z), l.i.push(B));
              });
              var P = new Ue(this.ctx, i),
                M = new we(this.ctx, i);
              this.ctx.pie = new it(this.ctx);
              var I = new Vt(this.ctx);
              this.ctx.rangeBar = new Fi(this.ctx, i);
              var D = new wt(this.ctx),
                f = [];
              if (o.comboCharts) {
                if (
                  (h.series.length > 0 && f.push(P.draw(h.series, "area", h.i)),
                  m.series.length > 0)
                )
                  if (n.config.chart.stacked) {
                    var y = new Ne(this.ctx, i);
                    f.push(y.draw(m.series, m.i));
                  } else
                    (this.ctx.bar = new ve(this.ctx, i)),
                      f.push(this.ctx.bar.draw(m.series, m.i));
                if (
                  (C.series.length > 0 &&
                    f.push(
                      P.draw(C.series, "rangeArea", C.i, C.seriesRangeEnd)
                    ),
                  l.series.length > 0 && f.push(P.draw(l.series, "line", l.i)),
                  x.series.length > 0 &&
                    f.push(M.draw(x.series, "candlestick", x.i)),
                  v.series.length > 0 &&
                    f.push(M.draw(v.series, "boxPlot", v.i)),
                  w.series.length > 0 &&
                    f.push(this.ctx.rangeBar.draw(w.series, w.i)),
                  d.series.length > 0)
                ) {
                  var A = new Ue(this.ctx, i, !0);
                  f.push(A.draw(d.series, "scatter", d.i));
                }
                if (g.series.length > 0) {
                  var _ = new Ue(this.ctx, i, !0);
                  f.push(_.draw(g.series, "bubble", g.i));
                }
              } else
                switch (r.chart.type) {
                  case "line":
                    f = P.draw(o.series, "line");
                    break;
                  case "area":
                    f = P.draw(o.series, "area");
                    break;
                  case "bar":
                    r.chart.stacked
                      ? (f = new Ne(this.ctx, i).draw(o.series))
                      : ((this.ctx.bar = new ve(this.ctx, i)),
                        (f = this.ctx.bar.draw(o.series)));
                    break;
                  case "candlestick":
                    f = new we(this.ctx, i).draw(o.series, "candlestick");
                    break;
                  case "boxPlot":
                    f = new we(this.ctx, i).draw(o.series, r.chart.type);
                    break;
                  case "rangeBar":
                    f = this.ctx.rangeBar.draw(o.series);
                    break;
                  case "rangeArea":
                    f = P.draw(
                      o.seriesRangeStart,
                      "rangeArea",
                      void 0,
                      o.seriesRangeEnd
                    );
                    break;
                  case "heatmap":
                    f = new Ye(this.ctx, i).draw(o.series);
                    break;
                  case "treemap":
                    f = new Bn(this.ctx, i).draw(o.series);
                    break;
                  case "pie":
                  case "donut":
                  case "polarArea":
                    f = this.ctx.pie.draw(o.series);
                    break;
                  case "radialBar":
                    f = I.draw(o.series);
                    break;
                  case "radar":
                    f = D.draw(o.series);
                    break;
                  default:
                    f = P.draw(o.series);
                }
              return f;
            },
          },
          {
            key: "setSVGDimensions",
            value: function () {
              var e = this.w.globals,
                i = this.w.config;
              (e.svgWidth = i.chart.width), (e.svgHeight = i.chart.height);
              var n = L.getDimensions(this.el),
                r = i.chart.width
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
              r === "%"
                ? L.isNumber(n[0]) &&
                  (n[0].width === 0 &&
                    (n = L.getDimensions(this.el.parentNode)),
                  (e.svgWidth = (n[0] * parseInt(i.chart.width, 10)) / 100))
                : (r !== "px" && r !== "") ||
                  (e.svgWidth = parseInt(i.chart.width, 10));
              var o = i.chart.height
                .toString()
                .split(/[0-9]+/g)
                .pop();
              if (e.svgHeight !== "auto" && e.svgHeight !== "")
                if (o === "%") {
                  var l = L.getDimensions(this.el.parentNode);
                  e.svgHeight = (l[1] * parseInt(i.chart.height, 10)) / 100;
                } else e.svgHeight = parseInt(i.chart.height, 10);
              else
                e.axisCharts
                  ? (e.svgHeight = e.svgWidth / 1.61)
                  : (e.svgHeight = e.svgWidth / 1.2);
              if (
                (e.svgWidth < 0 && (e.svgWidth = 0),
                e.svgHeight < 0 && (e.svgHeight = 0),
                X.setAttrs(e.dom.Paper.node, {
                  width: e.svgWidth,
                  height: e.svgHeight,
                }),
                o !== "%")
              ) {
                var h = i.chart.sparkline.enabled
                  ? 0
                  : e.axisCharts
                  ? i.chart.parentHeightOffset
                  : 0;
                e.dom.Paper.node.parentNode.parentNode.style.minHeight =
                  e.svgHeight + h + "px";
              }
              (e.dom.elWrap.style.width = e.svgWidth + "px"),
                (e.dom.elWrap.style.height = e.svgHeight + "px");
            },
          },
          {
            key: "shiftGraphPosition",
            value: function () {
              var e = this.w.globals,
                i = e.translateY,
                n = { transform: "translate(" + e.translateX + ", " + i + ")" };
              X.setAttrs(e.dom.elGraphical.node, n);
            },
          },
          {
            key: "resizeNonAxisCharts",
            value: function () {
              var e = this.w,
                i = e.globals,
                n = 0,
                r = e.config.chart.sparkline.enabled ? 1 : 15;
              (r += e.config.grid.padding.bottom),
                (e.config.legend.position !== "top" &&
                  e.config.legend.position !== "bottom") ||
                  !e.config.legend.show ||
                  e.config.legend.floating ||
                  (n =
                    new Si(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
              var o = e.globals.dom.baseEl.querySelector(
                  ".apexcharts-radialbar, .apexcharts-pie"
                ),
                l = 2.05 * e.globals.radialSize;
              if (
                o &&
                !e.config.chart.sparkline.enabled &&
                e.config.plotOptions.radialBar.startAngle !== 0
              ) {
                var h = L.getBoundingClientRect(o);
                l = h.bottom;
                var d = h.bottom - h.top;
                l = Math.max(2.05 * e.globals.radialSize, d);
              }
              var g = l + i.translateY + n + r;
              i.dom.elLegendForeign &&
                i.dom.elLegendForeign.setAttribute("height", g),
                (e.config.chart.height &&
                  String(e.config.chart.height).indexOf("%") > 0) ||
                  ((i.dom.elWrap.style.height = g + "px"),
                  X.setAttrs(i.dom.Paper.node, { height: g }),
                  (i.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    g + "px"));
            },
          },
          {
            key: "coreCalculations",
            value: function () {
              new li(this.ctx).init();
            },
          },
          {
            key: "resetGlobals",
            value: function () {
              var e = this,
                i = function () {
                  return e.w.config.series.map(function (o) {
                    return [];
                  });
                },
                n = new be(),
                r = this.w.globals;
              n.initGlobalVars(r),
                (r.seriesXvalues = i()),
                (r.seriesYvalues = i());
            },
          },
          {
            key: "isMultipleY",
            value: function () {
              if (
                this.w.config.yaxis.constructor === Array &&
                this.w.config.yaxis.length > 1
              )
                return (this.w.globals.isMultipleYAxis = !0), !0;
            },
          },
          {
            key: "xySettings",
            value: function () {
              var e = null,
                i = this.w;
              if (i.globals.axisCharts) {
                if (
                  (i.config.xaxis.crosshairs.position === "back" &&
                    new Ce(this.ctx).drawXCrosshairs(),
                  i.config.yaxis[0].crosshairs.position === "back" &&
                    new Ce(this.ctx).drawYCrosshairs(),
                  i.config.xaxis.type === "datetime" &&
                    i.config.xaxis.labels.formatter === void 0)
                ) {
                  this.ctx.timeScale = new Xn(this.ctx);
                  var n = [];
                  isFinite(i.globals.minX) &&
                  isFinite(i.globals.maxX) &&
                  !i.globals.isBarHorizontal
                    ? (n = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minX,
                        i.globals.maxX
                      ))
                    : i.globals.isBarHorizontal &&
                      (n = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minY,
                        i.globals.maxY
                      )),
                    this.ctx.timeScale.recalcDimensionsBasedOnFormat(n);
                }
                e = new W(this.ctx).getCalculatedRatios();
              }
              return e;
            },
          },
          {
            key: "updateSourceChart",
            value: function (e) {
              (this.ctx.w.globals.selection = void 0),
                this.ctx.updateHelpers._updateOptions(
                  {
                    chart: {
                      selection: {
                        xaxis: { min: e.w.globals.minX, max: e.w.globals.maxX },
                      },
                    },
                  },
                  !1,
                  !1
                );
            },
          },
          {
            key: "setupBrushHandler",
            value: function () {
              var e = this,
                i = this.w;
              if (
                i.config.chart.brush.enabled &&
                typeof i.config.chart.events.selection != "function"
              ) {
                var n = Array.isArray(i.config.chart.brush.targets) || [
                  i.config.chart.brush.target,
                ];
                n.forEach(function (r) {
                  var o = ApexCharts.getChartByID(r);
                  (o.w.globals.brushSource = e.ctx),
                    typeof o.w.config.chart.events.zoomed != "function" &&
                      (o.w.config.chart.events.zoomed = function () {
                        e.updateSourceChart(o);
                      }),
                    typeof o.w.config.chart.events.scrolled != "function" &&
                      (o.w.config.chart.events.scrolled = function () {
                        e.updateSourceChart(o);
                      });
                }),
                  (i.config.chart.events.selection = function (r, o) {
                    n.forEach(function (l) {
                      var h = ApexCharts.getChartByID(l),
                        d = L.clone(i.config.yaxis);
                      if (
                        i.config.chart.brush.autoScaleYaxis &&
                        h.w.globals.series.length === 1
                      ) {
                        var g = new _t(h);
                        d = g.autoScaleY(h, d, o);
                      }
                      var m = h.w.config.yaxis.reduce(function (x, v, w) {
                        return [].concat(K(x), [
                          c(
                            c({}, h.w.config.yaxis[w]),
                            {},
                            { min: d[0].min, max: d[0].max }
                          ),
                        ]);
                      }, []);
                      h.ctx.updateHelpers._updateOptions(
                        {
                          xaxis: { min: o.xaxis.min, max: o.xaxis.max },
                          yaxis: m,
                        },
                        !1,
                        !1,
                        !1,
                        !1
                      );
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    qe = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "_updateOptions",
            value: function (e) {
              var i = this,
                n =
                  arguments.length > 1 &&
                  arguments[1] !== void 0 &&
                  arguments[1],
                r =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                o =
                  !(arguments.length > 3 && arguments[3] !== void 0) ||
                  arguments[3],
                l =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4];
              return new Promise(function (h) {
                var d = [i.ctx];
                o && (d = i.ctx.getSyncedCharts()),
                  i.ctx.w.globals.isExecCalled &&
                    ((d = [i.ctx]), (i.ctx.w.globals.isExecCalled = !1)),
                  d.forEach(function (g, m) {
                    var x = g.w;
                    if (
                      ((x.globals.shouldAnimate = r),
                      n ||
                        ((x.globals.resized = !0),
                        (x.globals.dataChanged = !0),
                        r && g.series.getPreviousPaths()),
                      e &&
                        u(e) === "object" &&
                        ((g.config = new xe(e)),
                        (e = W.extendArrayProps(g.config, e, x)),
                        g.w.globals.chartID !== i.ctx.w.globals.chartID &&
                          delete e.series,
                        (x.config = L.extend(x.config, e)),
                        l &&
                          ((x.globals.lastXAxis = e.xaxis
                            ? L.clone(e.xaxis)
                            : []),
                          (x.globals.lastYAxis = e.yaxis
                            ? L.clone(e.yaxis)
                            : []),
                          (x.globals.initialConfig = L.extend({}, x.config)),
                          (x.globals.initialSeries = L.clone(x.config.series)),
                          e.series)))
                    ) {
                      for (
                        var v = 0;
                        v < x.globals.collapsedSeriesIndices.length;
                        v++
                      ) {
                        var w =
                          x.config.series[x.globals.collapsedSeriesIndices[v]];
                        x.globals.collapsedSeries[v].data = x.globals.axisCharts
                          ? w.data.slice()
                          : w;
                      }
                      for (
                        var C = 0;
                        C < x.globals.ancillaryCollapsedSeriesIndices.length;
                        C++
                      ) {
                        var P =
                          x.config.series[
                            x.globals.ancillaryCollapsedSeriesIndices[C]
                          ];
                        x.globals.ancillaryCollapsedSeries[C].data = x.globals
                          .axisCharts
                          ? P.data.slice()
                          : P;
                      }
                      g.series.emptyCollapsedSeries(x.config.series);
                    }
                    return g.update(e).then(function () {
                      m === d.length - 1 && h(g);
                    });
                  });
              });
            },
          },
          {
            key: "_updateSeries",
            value: function (e, i) {
              var n = this,
                r =
                  arguments.length > 2 &&
                  arguments[2] !== void 0 &&
                  arguments[2];
              return new Promise(function (o) {
                var l,
                  h = n.w;
                return (
                  (h.globals.shouldAnimate = i),
                  (h.globals.dataChanged = !0),
                  i && n.ctx.series.getPreviousPaths(),
                  h.globals.axisCharts
                    ? ((l = e.map(function (d, g) {
                        return n._extendSeries(d, g);
                      })).length === 0 && (l = [{ data: [] }]),
                      (h.config.series = l))
                    : (h.config.series = e.slice()),
                  r &&
                    ((h.globals.initialConfig.series = L.clone(
                      h.config.series
                    )),
                    (h.globals.initialSeries = L.clone(h.config.series))),
                  n.ctx.update().then(function () {
                    o(n.ctx);
                  })
                );
              });
            },
          },
          {
            key: "_extendSeries",
            value: function (e, i) {
              var n = this.w,
                r = n.config.series[i];
              return c(
                c({}, n.config.series[i]),
                {},
                {
                  name: e.name ? e.name : r && r.name,
                  color: e.color ? e.color : r && r.color,
                  type: e.type ? e.type : r && r.type,
                  group: e.group ? e.group : r && r.group,
                  data: e.data ? e.data : r && r.data,
                }
              );
            },
          },
          {
            key: "toggleDataPointSelection",
            value: function (e, i) {
              var n = this.w,
                r = null,
                o = ".apexcharts-series[data\\:realIndex='".concat(e, "']");
              return (
                n.globals.axisCharts
                  ? (r = n.globals.dom.Paper.select(
                      ""
                        .concat(o, " path[j='")
                        .concat(i, "'], ")
                        .concat(o, " circle[j='")
                        .concat(i, "'], ")
                        .concat(o, " rect[j='")
                        .concat(i, "']")
                    ).members[0])
                  : i === void 0 &&
                    ((r = n.globals.dom.Paper.select(
                      "".concat(o, " path[j='").concat(e, "']")
                    ).members[0]),
                    (n.config.chart.type !== "pie" &&
                      n.config.chart.type !== "polarArea" &&
                      n.config.chart.type !== "donut") ||
                      this.ctx.pie.pieClicked(e)),
                r
                  ? (new X(this.ctx).pathMouseDown(r, null),
                    r.node ? r.node : null)
                  : (console.warn(
                      "toggleDataPointSelection: Element not found"
                    ),
                    null)
              );
            },
          },
          {
            key: "forceXAxisUpdate",
            value: function (e) {
              var i = this.w;
              if (
                (["min", "max"].forEach(function (r) {
                  e.xaxis[r] !== void 0 &&
                    ((i.config.xaxis[r] = e.xaxis[r]),
                    (i.globals.lastXAxis[r] = e.xaxis[r]));
                }),
                e.xaxis.categories &&
                  e.xaxis.categories.length &&
                  (i.config.xaxis.categories = e.xaxis.categories),
                i.config.xaxis.convertedCatToNumeric)
              ) {
                var n = new ue(e);
                e = n.convertCatToNumericXaxis(e, this.ctx);
              }
              return e;
            },
          },
          {
            key: "forceYAxisUpdate",
            value: function (e) {
              return (
                e.chart &&
                  e.chart.stacked &&
                  e.chart.stackType === "100%" &&
                  (Array.isArray(e.yaxis)
                    ? e.yaxis.forEach(function (i, n) {
                        (e.yaxis[n].min = 0), (e.yaxis[n].max = 100);
                      })
                    : ((e.yaxis.min = 0), (e.yaxis.max = 100))),
                e
              );
            },
          },
          {
            key: "revertDefaultAxisMinMax",
            value: function (e) {
              var i = this,
                n = this.w,
                r = n.globals.lastXAxis,
                o = n.globals.lastYAxis;
              e && e.xaxis && (r = e.xaxis),
                e && e.yaxis && (o = e.yaxis),
                (n.config.xaxis.min = r.min),
                (n.config.xaxis.max = r.max);
              var l = function (h) {
                o[h] !== void 0 &&
                  ((n.config.yaxis[h].min = o[h].min),
                  (n.config.yaxis[h].max = o[h].max));
              };
              n.config.yaxis.map(function (h, d) {
                n.globals.zoomed || o[d] !== void 0
                  ? l(d)
                  : i.ctx.opts.yaxis[d] !== void 0 &&
                    ((h.min = i.ctx.opts.yaxis[d].min),
                    (h.max = i.ctx.opts.yaxis[d].max));
              });
            },
          },
        ]),
        T
      );
    })();
  (Qe = typeof window < "u" ? window : void 0),
    (Bi = function (T, e) {
      var i = ((this !== void 0 ? this : T).SVG = function (f) {
        if (i.supported)
          return (f = new i.Doc(f)), i.parser.draw || i.prepare(), f;
      });
      if (
        ((i.ns = "http://www.w3.org/2000/svg"),
        (i.xmlns = "http://www.w3.org/2000/xmlns/"),
        (i.xlink = "http://www.w3.org/1999/xlink"),
        (i.svgjs = "http://svgjs.dev"),
        (i.supported = !0),
        !i.supported)
      )
        return !1;
      (i.did = 1e3),
        (i.eid = function (f) {
          return "Svgjs" + m(f) + i.did++;
        }),
        (i.create = function (f) {
          var y = e.createElementNS(this.ns, f);
          return y.setAttribute("id", this.eid(f)), y;
        }),
        (i.extend = function () {
          var f, y;
          y = (f = [].slice.call(arguments)).pop();
          for (var A = f.length - 1; A >= 0; A--)
            if (f[A]) for (var _ in y) f[A].prototype[_] = y[_];
          i.Set && i.Set.inherit && i.Set.inherit();
        }),
        (i.invent = function (f) {
          var y =
            typeof f.create == "function"
              ? f.create
              : function () {
                  this.constructor.call(this, i.create(f.create));
                };
          return (
            f.inherit && (y.prototype = new f.inherit()),
            f.extend && i.extend(y, f.extend),
            f.construct && i.extend(f.parent || i.Container, f.construct),
            y
          );
        }),
        (i.adopt = function (f) {
          return f
            ? f.instance
              ? f.instance
              : (((y =
                  f.nodeName == "svg"
                    ? f.parentNode instanceof T.SVGElement
                      ? new i.Nested()
                      : new i.Doc()
                    : f.nodeName == "linearGradient"
                    ? new i.Gradient("linear")
                    : f.nodeName == "radialGradient"
                    ? new i.Gradient("radial")
                    : i[m(f.nodeName)]
                    ? new i[m(f.nodeName)]()
                    : new i.Element(f)).type = f.nodeName),
                (y.node = f),
                (f.instance = y),
                y instanceof i.Doc && y.namespace().defs(),
                y.setData(JSON.parse(f.getAttribute("svgjs:data")) || {}),
                y)
            : null;
          var y;
        }),
        (i.prepare = function () {
          var f = e.getElementsByTagName("body")[0],
            y = (f ? new i.Doc(f) : i.adopt(e.documentElement).nested()).size(
              2,
              0
            );
          i.parser = {
            body: f || e.documentElement,
            draw: y.style(
              "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden"
            ).node,
            poly: y.polyline().node,
            path: y.path().node,
            native: i.create("svg"),
          };
        }),
        (i.parser = { native: i.create("svg") }),
        e.addEventListener(
          "DOMContentLoaded",
          function () {
            i.parser.draw || i.prepare();
          },
          !1
        ),
        (i.regex = {
          numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
          hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
          rgb: /rgb\((\d+),(\d+),(\d+)\)/,
          reference: /#([a-z0-9\-_]+)/i,
          transforms: /\)\s*,?\s*/,
          whitespace: /\s/g,
          isHex: /^#[a-f0-9]{3,6}$/i,
          isRgb: /^rgb\(/,
          isCss: /[^:]+:[^;]+;?/,
          isBlank: /^(\s+)?$/,
          isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          isPercent: /^-?[\d\.]+%$/,
          isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
          delimiter: /[\s,]+/,
          hyphen: /([^e])\-/gi,
          pathLetters: /[MLHVCSQTAZ]/gi,
          isPathLetter: /[MLHVCSQTAZ]/i,
          numbersWithDots:
            /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
          dots: /\./g,
        }),
        (i.utils = {
          map: function (f, y) {
            for (var A = f.length, _ = [], z = 0; z < A; z++) _.push(y(f[z]));
            return _;
          },
          filter: function (f, y) {
            for (var A = f.length, _ = [], z = 0; z < A; z++)
              y(f[z]) && _.push(f[z]);
            return _;
          },
          filterSVGElements: function (f) {
            return this.filter(f, function (y) {
              return y instanceof T.SVGElement;
            });
          },
        }),
        (i.defaults = {
          attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start",
          },
        }),
        (i.Color = function (f) {
          var y, A;
          (this.r = 0),
            (this.g = 0),
            (this.b = 0),
            f &&
              (typeof f == "string"
                ? i.regex.isRgb.test(f)
                  ? ((y = i.regex.rgb.exec(f.replace(i.regex.whitespace, ""))),
                    (this.r = parseInt(y[1])),
                    (this.g = parseInt(y[2])),
                    (this.b = parseInt(y[3])))
                  : i.regex.isHex.test(f) &&
                    ((y = i.regex.hex.exec(
                      (A = f).length == 4
                        ? [
                            "#",
                            A.substring(1, 2),
                            A.substring(1, 2),
                            A.substring(2, 3),
                            A.substring(2, 3),
                            A.substring(3, 4),
                            A.substring(3, 4),
                          ].join("")
                        : A
                    )),
                    (this.r = parseInt(y[1], 16)),
                    (this.g = parseInt(y[2], 16)),
                    (this.b = parseInt(y[3], 16)))
                : u(f) === "object" &&
                  ((this.r = f.r), (this.g = f.g), (this.b = f.b)));
        }),
        i.extend(i.Color, {
          toString: function () {
            return this.toHex();
          },
          toHex: function () {
            return "#" + x(this.r) + x(this.g) + x(this.b);
          },
          toRgb: function () {
            return "rgb(" + [this.r, this.g, this.b].join() + ")";
          },
          brightness: function () {
            return (
              (this.r / 255) * 0.3 +
              (this.g / 255) * 0.59 +
              (this.b / 255) * 0.11
            );
          },
          morph: function (f) {
            return (this.destination = new i.Color(f)), this;
          },
          at: function (f) {
            return this.destination
              ? ((f = f < 0 ? 0 : f > 1 ? 1 : f),
                new i.Color({
                  r: ~~(this.r + (this.destination.r - this.r) * f),
                  g: ~~(this.g + (this.destination.g - this.g) * f),
                  b: ~~(this.b + (this.destination.b - this.b) * f),
                }))
              : this;
          },
        }),
        (i.Color.test = function (f) {
          return (f += ""), i.regex.isHex.test(f) || i.regex.isRgb.test(f);
        }),
        (i.Color.isRgb = function (f) {
          return (
            f &&
            typeof f.r == "number" &&
            typeof f.g == "number" &&
            typeof f.b == "number"
          );
        }),
        (i.Color.isColor = function (f) {
          return i.Color.isRgb(f) || i.Color.test(f);
        }),
        (i.Array = function (f, y) {
          (f = (f || []).valueOf()).length == 0 && y && (f = y.valueOf()),
            (this.value = this.parse(f));
        }),
        i.extend(i.Array, {
          toString: function () {
            return this.value.join(" ");
          },
          valueOf: function () {
            return this.value;
          },
          parse: function (f) {
            return (f = f.valueOf()), Array.isArray(f) ? f : this.split(f);
          },
        }),
        (i.PointArray = function (f, y) {
          i.Array.call(this, f, y || [[0, 0]]);
        }),
        (i.PointArray.prototype = new i.Array()),
        (i.PointArray.prototype.constructor = i.PointArray);
      for (
        var n = {
            M: function (f, y, A) {
              return (y.x = A.x = f[0]), (y.y = A.y = f[1]), ["M", y.x, y.y];
            },
            L: function (f, y) {
              return (y.x = f[0]), (y.y = f[1]), ["L", f[0], f[1]];
            },
            H: function (f, y) {
              return (y.x = f[0]), ["H", f[0]];
            },
            V: function (f, y) {
              return (y.y = f[0]), ["V", f[0]];
            },
            C: function (f, y) {
              return (
                (y.x = f[4]),
                (y.y = f[5]),
                ["C", f[0], f[1], f[2], f[3], f[4], f[5]]
              );
            },
            Q: function (f, y) {
              return (y.x = f[2]), (y.y = f[3]), ["Q", f[0], f[1], f[2], f[3]];
            },
            Z: function (f, y, A) {
              return (y.x = A.x), (y.y = A.y), ["Z"];
            },
          },
          r = "mlhvqtcsaz".split(""),
          o = 0,
          l = r.length;
        o < l;
        ++o
      )
        n[r[o]] = (function (f) {
          return function (y, A, _) {
            if (f == "H") y[0] = y[0] + A.x;
            else if (f == "V") y[0] = y[0] + A.y;
            else if (f == "A") (y[5] = y[5] + A.x), (y[6] = y[6] + A.y);
            else
              for (var z = 0, B = y.length; z < B; ++z)
                y[z] = y[z] + (z % 2 ? A.y : A.x);
            if (n && typeof n[f] == "function") return n[f](y, A, _);
          };
        })(r[o].toUpperCase());
      (i.PathArray = function (f, y) {
        i.Array.call(this, f, y || [["M", 0, 0]]);
      }),
        (i.PathArray.prototype = new i.Array()),
        (i.PathArray.prototype.constructor = i.PathArray),
        i.extend(i.PathArray, {
          toString: function () {
            return (function (f) {
              for (var y = 0, A = f.length, _ = ""; y < A; y++)
                (_ += f[y][0]),
                  f[y][1] != null &&
                    ((_ += f[y][1]),
                    f[y][2] != null &&
                      ((_ += " "),
                      (_ += f[y][2]),
                      f[y][3] != null &&
                        ((_ += " "),
                        (_ += f[y][3]),
                        (_ += " "),
                        (_ += f[y][4]),
                        f[y][5] != null &&
                          ((_ += " "),
                          (_ += f[y][5]),
                          (_ += " "),
                          (_ += f[y][6]),
                          f[y][7] != null && ((_ += " "), (_ += f[y][7]))))));
              return _ + " ";
            })(this.value);
          },
          move: function (f, y) {
            var A = this.bbox();
            return A.x, A.y, this;
          },
          at: function (f) {
            if (!this.destination) return this;
            for (
              var y = this.value,
                A = this.destination.value,
                _ = [],
                z = new i.PathArray(),
                B = 0,
                $ = y.length;
              B < $;
              B++
            ) {
              _[B] = [y[B][0]];
              for (var Z = 1, re = y[B].length; Z < re; Z++)
                _[B][Z] = y[B][Z] + (A[B][Z] - y[B][Z]) * f;
              _[B][0] === "A" &&
                ((_[B][4] = +(_[B][4] != 0)), (_[B][5] = +(_[B][5] != 0)));
            }
            return (z.value = _), z;
          },
          parse: function (f) {
            if (f instanceof i.PathArray) return f.valueOf();
            var y,
              A = {
                M: 2,
                L: 2,
                H: 1,
                V: 1,
                C: 6,
                S: 4,
                Q: 4,
                T: 2,
                A: 7,
                Z: 0,
              };
            f =
              typeof f == "string"
                ? f
                    .replace(i.regex.numbersWithDots, d)
                    .replace(i.regex.pathLetters, " $& ")
                    .replace(i.regex.hyphen, "$1 -")
                    .trim()
                    .split(i.regex.delimiter)
                : f.reduce(function (re, ce) {
                    return [].concat.call(re, ce);
                  }, []);
            var _ = [],
              z = new i.Point(),
              B = new i.Point(),
              $ = 0,
              Z = f.length;
            do
              i.regex.isPathLetter.test(f[$])
                ? ((y = f[$]), ++$)
                : y == "M"
                ? (y = "L")
                : y == "m" && (y = "l"),
                _.push(
                  n[y].call(
                    null,
                    f.slice($, ($ += A[y.toUpperCase()])).map(parseFloat),
                    z,
                    B
                  )
                );
            while (Z > $);
            return _;
          },
          bbox: function () {
            return (
              i.parser.draw || i.prepare(),
              i.parser.path.setAttribute("d", this.toString()),
              i.parser.path.getBBox()
            );
          },
        }),
        (i.Number = i.invent({
          create: function (f, y) {
            (this.value = 0),
              (this.unit = y || ""),
              typeof f == "number"
                ? (this.value = isNaN(f)
                    ? 0
                    : isFinite(f)
                    ? f
                    : f < 0
                    ? -34e37
                    : 34e37)
                : typeof f == "string"
                ? (y = f.match(i.regex.numberAndUnit)) &&
                  ((this.value = parseFloat(y[1])),
                  y[5] == "%"
                    ? (this.value /= 100)
                    : y[5] == "s" && (this.value *= 1e3),
                  (this.unit = y[5]))
                : f instanceof i.Number &&
                  ((this.value = f.valueOf()), (this.unit = f.unit));
          },
          extend: {
            toString: function () {
              return (
                (this.unit == "%"
                  ? ~~(1e8 * this.value) / 1e6
                  : this.unit == "s"
                  ? this.value / 1e3
                  : this.value) + this.unit
              );
            },
            toJSON: function () {
              return this.toString();
            },
            valueOf: function () {
              return this.value;
            },
            plus: function (f) {
              return (
                (f = new i.Number(f)),
                new i.Number(this + f, this.unit || f.unit)
              );
            },
            minus: function (f) {
              return (
                (f = new i.Number(f)),
                new i.Number(this - f, this.unit || f.unit)
              );
            },
            times: function (f) {
              return (
                (f = new i.Number(f)),
                new i.Number(this * f, this.unit || f.unit)
              );
            },
            divide: function (f) {
              return (
                (f = new i.Number(f)),
                new i.Number(this / f, this.unit || f.unit)
              );
            },
            to: function (f) {
              var y = new i.Number(this);
              return typeof f == "string" && (y.unit = f), y;
            },
            morph: function (f) {
              return (
                (this.destination = new i.Number(f)),
                f.relative && (this.destination.value += this.value),
                this
              );
            },
            at: function (f) {
              return this.destination
                ? new i.Number(this.destination).minus(this).times(f).plus(this)
                : this;
            },
          },
        })),
        (i.Element = i.invent({
          create: function (f) {
            (this._stroke = i.defaults.attrs.stroke),
              (this._event = null),
              (this.dom = {}),
              (this.node = f) &&
                ((this.type = f.nodeName),
                (this.node.instance = this),
                (this._stroke = f.getAttribute("stroke") || this._stroke));
          },
          extend: {
            x: function (f) {
              return this.attr("x", f);
            },
            y: function (f) {
              return this.attr("y", f);
            },
            cx: function (f) {
              return f == null
                ? this.x() + this.width() / 2
                : this.x(f - this.width() / 2);
            },
            cy: function (f) {
              return f == null
                ? this.y() + this.height() / 2
                : this.y(f - this.height() / 2);
            },
            move: function (f, y) {
              return this.x(f).y(y);
            },
            center: function (f, y) {
              return this.cx(f).cy(y);
            },
            width: function (f) {
              return this.attr("width", f);
            },
            height: function (f) {
              return this.attr("height", f);
            },
            size: function (f, y) {
              var A = v(this, f, y);
              return this.width(new i.Number(A.width)).height(
                new i.Number(A.height)
              );
            },
            clone: function (f) {
              this.writeDataToDom();
              var y = P(this.node.cloneNode(!0));
              return f ? f.add(y) : this.after(y), y;
            },
            remove: function () {
              return this.parent() && this.parent().removeElement(this), this;
            },
            replace: function (f) {
              return this.after(f).remove(), f;
            },
            addTo: function (f) {
              return f.put(this);
            },
            putIn: function (f) {
              return f.add(this);
            },
            id: function (f) {
              return this.attr("id", f);
            },
            show: function () {
              return this.style("display", "");
            },
            hide: function () {
              return this.style("display", "none");
            },
            visible: function () {
              return this.style("display") != "none";
            },
            toString: function () {
              return this.attr("id");
            },
            classes: function () {
              var f = this.attr("class");
              return f == null ? [] : f.trim().split(i.regex.delimiter);
            },
            hasClass: function (f) {
              return this.classes().indexOf(f) != -1;
            },
            addClass: function (f) {
              if (!this.hasClass(f)) {
                var y = this.classes();
                y.push(f), this.attr("class", y.join(" "));
              }
              return this;
            },
            removeClass: function (f) {
              return (
                this.hasClass(f) &&
                  this.attr(
                    "class",
                    this.classes()
                      .filter(function (y) {
                        return y != f;
                      })
                      .join(" ")
                  ),
                this
              );
            },
            toggleClass: function (f) {
              return this.hasClass(f) ? this.removeClass(f) : this.addClass(f);
            },
            reference: function (f) {
              return i.get(this.attr(f));
            },
            parent: function (f) {
              var y = this;
              if (!y.node.parentNode) return null;
              if (((y = i.adopt(y.node.parentNode)), !f)) return y;
              for (; y && y.node instanceof T.SVGElement; ) {
                if (typeof f == "string" ? y.matches(f) : y instanceof f)
                  return y;
                if (
                  !y.node.parentNode ||
                  y.node.parentNode.nodeName == "#document"
                )
                  return null;
                y = i.adopt(y.node.parentNode);
              }
            },
            doc: function () {
              return this instanceof i.Doc ? this : this.parent(i.Doc);
            },
            parents: function (f) {
              var y = [],
                A = this;
              do {
                if (!(A = A.parent(f)) || !A.node) break;
                y.push(A);
              } while (A.parent);
              return y;
            },
            matches: function (f) {
              return (function (y, A) {
                return (
                  y.matches ||
                  y.matchesSelector ||
                  y.msMatchesSelector ||
                  y.mozMatchesSelector ||
                  y.webkitMatchesSelector ||
                  y.oMatchesSelector
                ).call(y, A);
              })(this.node, f);
            },
            native: function () {
              return this.node;
            },
            svg: function (f) {
              var y = e.createElement("svg");
              if (!(f && this instanceof i.Parent))
                return (
                  y.appendChild((f = e.createElement("svg"))),
                  this.writeDataToDom(),
                  f.appendChild(this.node.cloneNode(!0)),
                  y.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                );
              y.innerHTML =
                "<svg>" +
                f
                  .replace(/\n/, "")
                  .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                "</svg>";
              for (var A = 0, _ = y.firstChild.childNodes.length; A < _; A++)
                this.node.appendChild(y.firstChild.firstChild);
              return this;
            },
            writeDataToDom: function () {
              return (
                (this.each || this.lines) &&
                  (this.each ? this : this.lines()).each(function () {
                    this.writeDataToDom();
                  }),
                this.node.removeAttribute("svgjs:data"),
                Object.keys(this.dom).length &&
                  this.node.setAttribute(
                    "svgjs:data",
                    JSON.stringify(this.dom)
                  ),
                this
              );
            },
            setData: function (f) {
              return (this.dom = f), this;
            },
            is: function (f) {
              return (function (y, A) {
                return y instanceof A;
              })(this, f);
            },
          },
        })),
        (i.easing = {
          "-": function (f) {
            return f;
          },
          "<>": function (f) {
            return -Math.cos(f * Math.PI) / 2 + 0.5;
          },
          ">": function (f) {
            return Math.sin((f * Math.PI) / 2);
          },
          "<": function (f) {
            return 1 - Math.cos((f * Math.PI) / 2);
          },
        }),
        (i.morph = function (f) {
          return function (y, A) {
            return new i.MorphObj(y, A).at(f);
          };
        }),
        (i.Situation = i.invent({
          create: function (f) {
            (this.init = !1),
              (this.reversed = !1),
              (this.reversing = !1),
              (this.duration = new i.Number(f.duration).valueOf()),
              (this.delay = new i.Number(f.delay).valueOf()),
              (this.start = +new Date() + this.delay),
              (this.finish = this.start + this.duration),
              (this.ease = f.ease),
              (this.loop = 0),
              (this.loops = !1),
              (this.animations = {}),
              (this.attrs = {}),
              (this.styles = {}),
              (this.transforms = []),
              (this.once = {});
          },
        })),
        (i.FX = i.invent({
          create: function (f) {
            (this._target = f),
              (this.situations = []),
              (this.active = !1),
              (this.situation = null),
              (this.paused = !1),
              (this.lastPos = 0),
              (this.pos = 0),
              (this.absPos = 0),
              (this._speed = 1);
          },
          extend: {
            animate: function (f, y, A) {
              u(f) === "object" &&
                ((y = f.ease), (A = f.delay), (f = f.duration));
              var _ = new i.Situation({
                duration: f || 1e3,
                delay: A || 0,
                ease: i.easing[y || "-"] || y,
              });
              return this.queue(_), this;
            },
            target: function (f) {
              return f && f instanceof i.Element
                ? ((this._target = f), this)
                : this._target;
            },
            timeToAbsPos: function (f) {
              return (
                (f - this.situation.start) /
                (this.situation.duration / this._speed)
              );
            },
            absPosToTime: function (f) {
              return (
                (this.situation.duration / this._speed) * f +
                this.situation.start
              );
            },
            startAnimFrame: function () {
              this.stopAnimFrame(),
                (this.animationFrame = T.requestAnimationFrame(
                  function () {
                    this.step();
                  }.bind(this)
                ));
            },
            stopAnimFrame: function () {
              T.cancelAnimationFrame(this.animationFrame);
            },
            start: function () {
              return (
                !this.active &&
                  this.situation &&
                  ((this.active = !0), this.startCurrent()),
                this
              );
            },
            startCurrent: function () {
              return (
                (this.situation.start =
                  +new Date() + this.situation.delay / this._speed),
                (this.situation.finish =
                  this.situation.start + this.situation.duration / this._speed),
                this.initAnimations().step()
              );
            },
            queue: function (f) {
              return (
                (typeof f == "function" || f instanceof i.Situation) &&
                  this.situations.push(f),
                this.situation || (this.situation = this.situations.shift()),
                this
              );
            },
            dequeue: function () {
              return (
                this.stop(),
                (this.situation = this.situations.shift()),
                this.situation &&
                  (this.situation instanceof i.Situation
                    ? this.start()
                    : this.situation.call(this)),
                this
              );
            },
            initAnimations: function () {
              var f,
                y = this.situation;
              if (y.init) return this;
              for (var A in y.animations) {
                (f = this.target()[A]()),
                  Array.isArray(f) || (f = [f]),
                  Array.isArray(y.animations[A]) ||
                    (y.animations[A] = [y.animations[A]]);
                for (var _ = f.length; _--; )
                  y.animations[A][_] instanceof i.Number &&
                    (f[_] = new i.Number(f[_])),
                    (y.animations[A][_] = f[_].morph(y.animations[A][_]));
              }
              for (var A in y.attrs)
                y.attrs[A] = new i.MorphObj(this.target().attr(A), y.attrs[A]);
              for (var A in y.styles)
                y.styles[A] = new i.MorphObj(
                  this.target().style(A),
                  y.styles[A]
                );
              return (
                (y.initialTransformation = this.target().matrixify()),
                (y.init = !0),
                this
              );
            },
            clearQueue: function () {
              return (this.situations = []), this;
            },
            clearCurrent: function () {
              return (this.situation = null), this;
            },
            stop: function (f, y) {
              var A = this.active;
              return (
                (this.active = !1),
                y && this.clearQueue(),
                f &&
                  this.situation &&
                  (!A && this.startCurrent(), this.atEnd()),
                this.stopAnimFrame(),
                this.clearCurrent()
              );
            },
            after: function (f) {
              var y = this.last();
              return (
                this.target().on("finished.fx", function A(_) {
                  _.detail.situation == y &&
                    (f.call(this, y), this.off("finished.fx", A));
                }),
                this._callStart()
              );
            },
            during: function (f) {
              var y = this.last(),
                A = function (_) {
                  _.detail.situation == y &&
                    f.call(
                      this,
                      _.detail.pos,
                      i.morph(_.detail.pos),
                      _.detail.eased,
                      y
                    );
                };
              return (
                this.target().off("during.fx", A).on("during.fx", A),
                this.after(function () {
                  this.off("during.fx", A);
                }),
                this._callStart()
              );
            },
            afterAll: function (f) {
              var y = function A(_) {
                f.call(this), this.off("allfinished.fx", A);
              };
              return (
                this.target().off("allfinished.fx", y).on("allfinished.fx", y),
                this._callStart()
              );
            },
            last: function () {
              return this.situations.length
                ? this.situations[this.situations.length - 1]
                : this.situation;
            },
            add: function (f, y, A) {
              return (this.last()[A || "animations"][f] = y), this._callStart();
            },
            step: function (f) {
              var y, A, _;
              f || (this.absPos = this.timeToAbsPos(+new Date())),
                this.situation.loops !== !1
                  ? ((y = Math.max(this.absPos, 0)),
                    (A = Math.floor(y)),
                    this.situation.loops === !0 || A < this.situation.loops
                      ? ((this.pos = y - A),
                        (_ = this.situation.loop),
                        (this.situation.loop = A))
                      : ((this.absPos = this.situation.loops),
                        (this.pos = 1),
                        (_ = this.situation.loop - 1),
                        (this.situation.loop = this.situation.loops)),
                    this.situation.reversing &&
                      (this.situation.reversed =
                        this.situation.reversed !=
                        !!((this.situation.loop - _) % 2)))
                  : ((this.absPos = Math.min(this.absPos, 1)),
                    (this.pos = this.absPos)),
                this.pos < 0 && (this.pos = 0),
                this.situation.reversed && (this.pos = 1 - this.pos);
              var z = this.situation.ease(this.pos);
              for (var B in this.situation.once)
                B > this.lastPos &&
                  B <= z &&
                  (this.situation.once[B].call(this.target(), this.pos, z),
                  delete this.situation.once[B]);
              return (
                this.active &&
                  this.target().fire("during", {
                    pos: this.pos,
                    eased: z,
                    fx: this,
                    situation: this.situation,
                  }),
                this.situation
                  ? (this.eachAt(),
                    (this.pos == 1 && !this.situation.reversed) ||
                    (this.situation.reversed && this.pos == 0)
                      ? (this.stopAnimFrame(),
                        this.target().fire("finished", {
                          fx: this,
                          situation: this.situation,
                        }),
                        this.situations.length ||
                          (this.target().fire("allfinished"),
                          this.situations.length ||
                            (this.target().off(".fx"), (this.active = !1))),
                        this.active ? this.dequeue() : this.clearCurrent())
                      : !this.paused && this.active && this.startAnimFrame(),
                    (this.lastPos = z),
                    this)
                  : this
              );
            },
            eachAt: function () {
              var f,
                y = this,
                A = this.target(),
                _ = this.situation;
              for (var z in _.animations)
                (f = [].concat(_.animations[z]).map(function (Z) {
                  return typeof Z != "string" && Z.at
                    ? Z.at(_.ease(y.pos), y.pos)
                    : Z;
                })),
                  A[z].apply(A, f);
              for (var z in _.attrs)
                (f = [z].concat(_.attrs[z]).map(function (re) {
                  return typeof re != "string" && re.at
                    ? re.at(_.ease(y.pos), y.pos)
                    : re;
                })),
                  A.attr.apply(A, f);
              for (var z in _.styles)
                (f = [z].concat(_.styles[z]).map(function (re) {
                  return typeof re != "string" && re.at
                    ? re.at(_.ease(y.pos), y.pos)
                    : re;
                })),
                  A.style.apply(A, f);
              if (_.transforms.length) {
                (f = _.initialTransformation), (z = 0);
                for (var B = _.transforms.length; z < B; z++) {
                  var $ = _.transforms[z];
                  $ instanceof i.Matrix
                    ? (f = $.relative
                        ? f.multiply(
                            new i.Matrix().morph($).at(_.ease(this.pos))
                          )
                        : f.morph($).at(_.ease(this.pos)))
                    : ($.relative || $.undo(f.extract()),
                      (f = f.multiply($.at(_.ease(this.pos)))));
                }
                A.matrix(f);
              }
              return this;
            },
            once: function (f, y, A) {
              var _ = this.last();
              return A || (f = _.ease(f)), (_.once[f] = y), this;
            },
            _callStart: function () {
              return (
                setTimeout(
                  function () {
                    this.start();
                  }.bind(this),
                  0
                ),
                this
              );
            },
          },
          parent: i.Element,
          construct: {
            animate: function (f, y, A) {
              return (this.fx || (this.fx = new i.FX(this))).animate(f, y, A);
            },
            delay: function (f) {
              return (this.fx || (this.fx = new i.FX(this))).delay(f);
            },
            stop: function (f, y) {
              return this.fx && this.fx.stop(f, y), this;
            },
            finish: function () {
              return this.fx && this.fx.finish(), this;
            },
          },
        })),
        (i.MorphObj = i.invent({
          create: function (f, y) {
            return i.Color.isColor(y)
              ? new i.Color(f).morph(y)
              : i.regex.delimiter.test(f)
              ? i.regex.pathLetters.test(f)
                ? new i.PathArray(f).morph(y)
                : new i.Array(f).morph(y)
              : i.regex.numberAndUnit.test(y)
              ? new i.Number(f).morph(y)
              : ((this.value = f), void (this.destination = y));
          },
          extend: {
            at: function (f, y) {
              return y < 1 ? this.value : this.destination;
            },
            valueOf: function () {
              return this.value;
            },
          },
        })),
        i.extend(i.FX, {
          attr: function (f, y, A) {
            if (u(f) === "object") for (var _ in f) this.attr(_, f[_]);
            else this.add(f, y, "attrs");
            return this;
          },
          plot: function (f, y, A, _) {
            return arguments.length == 4
              ? this.plot([f, y, A, _])
              : this.add("plot", new (this.target().morphArray)(f));
          },
        }),
        (i.Box = i.invent({
          create: function (f, y, A, _) {
            if (!(u(f) !== "object" || f instanceof i.Element))
              return i.Box.call(
                this,
                f.left != null ? f.left : f.x,
                f.top != null ? f.top : f.y,
                f.width,
                f.height
              );
            var z;
            arguments.length == 4 &&
              ((this.x = f), (this.y = y), (this.width = A), (this.height = _)),
              (z = this).x == null &&
                ((z.x = 0), (z.y = 0), (z.width = 0), (z.height = 0)),
              (z.w = z.width),
              (z.h = z.height),
              (z.x2 = z.x + z.width),
              (z.y2 = z.y + z.height),
              (z.cx = z.x + z.width / 2),
              (z.cy = z.y + z.height / 2);
          },
        })),
        (i.BBox = i.invent({
          create: function (f) {
            if (
              (i.Box.apply(this, [].slice.call(arguments)),
              f instanceof i.Element)
            ) {
              var y;
              try {
                if (!e.documentElement.contains) {
                  for (var A = f.node; A.parentNode; ) A = A.parentNode;
                  if (A != e) throw new Error("Element not in the dom");
                }
                y = f.node.getBBox();
              } catch {
                if (f instanceof i.Shape) {
                  i.parser.draw || i.prepare();
                  var _ = f.clone(i.parser.draw.instance).show();
                  _ &&
                    _.node &&
                    typeof _.node.getBBox == "function" &&
                    (y = _.node.getBBox()),
                    _ && typeof _.remove == "function" && _.remove();
                } else
                  y = {
                    x: f.node.clientLeft,
                    y: f.node.clientTop,
                    width: f.node.clientWidth,
                    height: f.node.clientHeight,
                  };
              }
              i.Box.call(this, y);
            }
          },
          inherit: i.Box,
          parent: i.Element,
          construct: {
            bbox: function () {
              return new i.BBox(this);
            },
          },
        })),
        (i.BBox.prototype.constructor = i.BBox),
        (i.Matrix = i.invent({
          create: function (f) {
            var y = C([1, 0, 0, 1, 0, 0]);
            f =
              f === null
                ? y
                : f instanceof i.Element
                ? f.matrixify()
                : typeof f == "string"
                ? C(f.split(i.regex.delimiter).map(parseFloat))
                : arguments.length == 6
                ? C([].slice.call(arguments))
                : Array.isArray(f)
                ? C(f)
                : f && u(f) === "object"
                ? f
                : y;
            for (var A = I.length - 1; A >= 0; --A)
              this[I[A]] = f[I[A]] != null ? f[I[A]] : y[I[A]];
          },
          extend: {
            extract: function () {
              var f = w(this, 0, 1);
              w(this, 1, 0);
              var y = (180 / Math.PI) * Math.atan2(f.y, f.x) - 90;
              return {
                x: this.e,
                y: this.f,
                transformedX:
                  (this.e * Math.cos((y * Math.PI) / 180) +
                    this.f * Math.sin((y * Math.PI) / 180)) /
                  Math.sqrt(this.a * this.a + this.b * this.b),
                transformedY:
                  (this.f * Math.cos((y * Math.PI) / 180) +
                    this.e * Math.sin((-y * Math.PI) / 180)) /
                  Math.sqrt(this.c * this.c + this.d * this.d),
                rotation: y,
                a: this.a,
                b: this.b,
                c: this.c,
                d: this.d,
                e: this.e,
                f: this.f,
                matrix: new i.Matrix(this),
              };
            },
            clone: function () {
              return new i.Matrix(this);
            },
            morph: function (f) {
              return (this.destination = new i.Matrix(f)), this;
            },
            multiply: function (f) {
              return new i.Matrix(
                this.native().multiply(
                  (function (y) {
                    return y instanceof i.Matrix || (y = new i.Matrix(y)), y;
                  })(f).native()
                )
              );
            },
            inverse: function () {
              return new i.Matrix(this.native().inverse());
            },
            translate: function (f, y) {
              return new i.Matrix(this.native().translate(f || 0, y || 0));
            },
            native: function () {
              for (
                var f = i.parser.native.createSVGMatrix(), y = I.length - 1;
                y >= 0;
                y--
              )
                f[I[y]] = this[I[y]];
              return f;
            },
            toString: function () {
              return (
                "matrix(" +
                M(this.a) +
                "," +
                M(this.b) +
                "," +
                M(this.c) +
                "," +
                M(this.d) +
                "," +
                M(this.e) +
                "," +
                M(this.f) +
                ")"
              );
            },
          },
          parent: i.Element,
          construct: {
            ctm: function () {
              return new i.Matrix(this.node.getCTM());
            },
            screenCTM: function () {
              if (this instanceof i.Nested) {
                var f = this.rect(1, 1),
                  y = f.node.getScreenCTM();
                return f.remove(), new i.Matrix(y);
              }
              return new i.Matrix(this.node.getScreenCTM());
            },
          },
        })),
        (i.Point = i.invent({
          create: function (f, y) {
            var A;
            (A = Array.isArray(f)
              ? { x: f[0], y: f[1] }
              : u(f) === "object"
              ? { x: f.x, y: f.y }
              : f != null
              ? { x: f, y: y ?? f }
              : { x: 0, y: 0 }),
              (this.x = A.x),
              (this.y = A.y);
          },
          extend: {
            clone: function () {
              return new i.Point(this);
            },
            morph: function (f, y) {
              return (this.destination = new i.Point(f, y)), this;
            },
          },
        })),
        i.extend(i.Element, {
          point: function (f, y) {
            return new i.Point(f, y).transform(this.screenCTM().inverse());
          },
        }),
        i.extend(i.Element, {
          attr: function (f, y, A) {
            if (f == null) {
              for (
                f = {}, A = (y = this.node.attributes).length - 1;
                A >= 0;
                A--
              )
                f[y[A].nodeName] = i.regex.isNumber.test(y[A].nodeValue)
                  ? parseFloat(y[A].nodeValue)
                  : y[A].nodeValue;
              return f;
            }
            if (u(f) === "object") for (var _ in f) this.attr(_, f[_]);
            else if (y === null) this.node.removeAttribute(f);
            else {
              if (y == null)
                return (y = this.node.getAttribute(f)) == null
                  ? i.defaults.attrs[f]
                  : i.regex.isNumber.test(y)
                  ? parseFloat(y)
                  : y;
              f == "stroke-width"
                ? this.attr("stroke", parseFloat(y) > 0 ? this._stroke : null)
                : f == "stroke" && (this._stroke = y),
                (f != "fill" && f != "stroke") ||
                  (i.regex.isImage.test(y) &&
                    (y = this.doc().defs().image(y, 0, 0)),
                  y instanceof i.Image &&
                    (y = this.doc()
                      .defs()
                      .pattern(0, 0, function () {
                        this.add(y);
                      }))),
                typeof y == "number"
                  ? (y = new i.Number(y))
                  : i.Color.isColor(y)
                  ? (y = new i.Color(y))
                  : Array.isArray(y) && (y = new i.Array(y)),
                f == "leading"
                  ? this.leading && this.leading(y)
                  : typeof A == "string"
                  ? this.node.setAttributeNS(A, f, y.toString())
                  : this.node.setAttribute(f, y.toString()),
                !this.rebuild ||
                  (f != "font-size" && f != "x") ||
                  this.rebuild(f, y);
            }
            return this;
          },
        }),
        i.extend(i.Element, {
          transform: function (f, y) {
            var A;
            return u(f) !== "object"
              ? ((A = new i.Matrix(this).extract()),
                typeof f == "string" ? A[f] : A)
              : ((A = new i.Matrix(this)),
                (y = !!y || !!f.relative),
                f.a != null &&
                  (A = y ? A.multiply(new i.Matrix(f)) : new i.Matrix(f)),
                this.attr("transform", A));
          },
        }),
        i.extend(i.Element, {
          untransform: function () {
            return this.attr("transform", null);
          },
          matrixify: function () {
            return (this.attr("transform") || "")
              .split(i.regex.transforms)
              .slice(0, -1)
              .map(function (f) {
                var y = f.trim().split("(");
                return [
                  y[0],
                  y[1].split(i.regex.delimiter).map(function (A) {
                    return parseFloat(A);
                  }),
                ];
              })
              .reduce(function (f, y) {
                return y[0] == "matrix"
                  ? f.multiply(C(y[1]))
                  : f[y[0]].apply(f, y[1]);
              }, new i.Matrix());
          },
          toParent: function (f) {
            if (this == f) return this;
            var y = this.screenCTM(),
              A = f.screenCTM().inverse();
            return this.addTo(f).untransform().transform(A.multiply(y)), this;
          },
          toDoc: function () {
            return this.toParent(this.doc());
          },
        }),
        (i.Transformation = i.invent({
          create: function (f, y) {
            if (arguments.length > 1 && typeof y != "boolean")
              return this.constructor.call(this, [].slice.call(arguments));
            if (Array.isArray(f))
              for (var A = 0, _ = this.arguments.length; A < _; ++A)
                this[this.arguments[A]] = f[A];
            else if (f && u(f) === "object")
              for (A = 0, _ = this.arguments.length; A < _; ++A)
                this[this.arguments[A]] = f[this.arguments[A]];
            (this.inversed = !1), y === !0 && (this.inversed = !0);
          },
        })),
        (i.Translate = i.invent({
          parent: i.Matrix,
          inherit: i.Transformation,
          create: function (f, y) {
            this.constructor.apply(this, [].slice.call(arguments));
          },
          extend: {
            arguments: ["transformedX", "transformedY"],
            method: "translate",
          },
        })),
        i.extend(i.Element, {
          style: function (f, y) {
            if (arguments.length == 0) return this.node.style.cssText || "";
            if (arguments.length < 2)
              if (u(f) === "object") for (var A in f) this.style(A, f[A]);
              else {
                if (!i.regex.isCss.test(f)) return this.node.style[g(f)];
                for (
                  f = f
                    .split(/\s*;\s*/)
                    .filter(function (_) {
                      return !!_;
                    })
                    .map(function (_) {
                      return _.split(/\s*:\s*/);
                    });
                  (y = f.pop());

                )
                  this.style(y[0], y[1]);
              }
            else
              this.node.style[g(f)] =
                y === null || i.regex.isBlank.test(y) ? "" : y;
            return this;
          },
        }),
        (i.Parent = i.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: i.Element,
          extend: {
            children: function () {
              return i.utils.map(
                i.utils.filterSVGElements(this.node.childNodes),
                function (f) {
                  return i.adopt(f);
                }
              );
            },
            add: function (f, y) {
              return (
                y == null
                  ? this.node.appendChild(f.node)
                  : f.node != this.node.childNodes[y] &&
                    this.node.insertBefore(f.node, this.node.childNodes[y]),
                this
              );
            },
            put: function (f, y) {
              return this.add(f, y), f;
            },
            has: function (f) {
              return this.index(f) >= 0;
            },
            index: function (f) {
              return [].slice.call(this.node.childNodes).indexOf(f.node);
            },
            get: function (f) {
              return i.adopt(this.node.childNodes[f]);
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.node.childNodes.length - 1);
            },
            each: function (f, y) {
              for (var A = this.children(), _ = 0, z = A.length; _ < z; _++)
                A[_] instanceof i.Element && f.apply(A[_], [_, A]),
                  y && A[_] instanceof i.Container && A[_].each(f, y);
              return this;
            },
            removeElement: function (f) {
              return this.node.removeChild(f.node), this;
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return delete this._defs, this;
            },
            defs: function () {
              return this.doc().defs();
            },
          },
        })),
        i.extend(i.Parent, {
          ungroup: function (f, y) {
            return (
              y === 0 ||
                this instanceof i.Defs ||
                this.node == i.parser.draw ||
                ((f =
                  f || (this instanceof i.Doc ? this : this.parent(i.Parent))),
                (y = y || 1 / 0),
                this.each(function () {
                  return this instanceof i.Defs
                    ? this
                    : this instanceof i.Parent
                    ? this.ungroup(f, y - 1)
                    : this.toParent(f);
                }),
                this.node.firstChild || this.remove()),
              this
            );
          },
          flatten: function (f, y) {
            return this.ungroup(f, y);
          },
        }),
        (i.Container = i.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: i.Parent,
        })),
        (i.ViewBox = i.invent({ parent: i.Container, construct: {} })),
        [
          "click",
          "dblclick",
          "mousedown",
          "mouseup",
          "mouseover",
          "mouseout",
          "mousemove",
          "touchstart",
          "touchmove",
          "touchleave",
          "touchend",
          "touchcancel",
        ].forEach(function (f) {
          i.Element.prototype[f] = function (y) {
            return i.on(this.node, f, y), this;
          };
        }),
        (i.listeners = []),
        (i.handlerMap = []),
        (i.listenerId = 0),
        (i.on = function (f, y, A, _, z) {
          var B = A.bind(_ || f.instance || f),
            $ = (i.handlerMap.indexOf(f) + 1 || i.handlerMap.push(f)) - 1,
            Z = y.split(".")[0],
            re = y.split(".")[1] || "*";
          (i.listeners[$] = i.listeners[$] || {}),
            (i.listeners[$][Z] = i.listeners[$][Z] || {}),
            (i.listeners[$][Z][re] = i.listeners[$][Z][re] || {}),
            A._svgjsListenerId || (A._svgjsListenerId = ++i.listenerId),
            (i.listeners[$][Z][re][A._svgjsListenerId] = B),
            f.addEventListener(Z, B, z || { passive: !0 });
        }),
        (i.off = function (f, y, A) {
          var _ = i.handlerMap.indexOf(f),
            z = y && y.split(".")[0],
            B = y && y.split(".")[1],
            $ = "";
          if (_ != -1)
            if (A) {
              if ((typeof A == "function" && (A = A._svgjsListenerId), !A))
                return;
              i.listeners[_][z] &&
                i.listeners[_][z][B || "*"] &&
                (f.removeEventListener(z, i.listeners[_][z][B || "*"][A], !1),
                delete i.listeners[_][z][B || "*"][A]);
            } else if (B && z) {
              if (i.listeners[_][z] && i.listeners[_][z][B]) {
                for (var Z in i.listeners[_][z][B])
                  i.off(f, [z, B].join("."), Z);
                delete i.listeners[_][z][B];
              }
            } else if (B)
              for (var re in i.listeners[_])
                for (var $ in i.listeners[_][re])
                  B === $ && i.off(f, [re, B].join("."));
            else if (z) {
              if (i.listeners[_][z]) {
                for (var $ in i.listeners[_][z]) i.off(f, [z, $].join("."));
                delete i.listeners[_][z];
              }
            } else {
              for (var re in i.listeners[_]) i.off(f, re);
              delete i.listeners[_], delete i.handlerMap[_];
            }
        }),
        i.extend(i.Element, {
          on: function (f, y, A, _) {
            return i.on(this.node, f, y, A, _), this;
          },
          off: function (f, y) {
            return i.off(this.node, f, y), this;
          },
          fire: function (f, y) {
            return (
              f instanceof T.Event
                ? this.node.dispatchEvent(f)
                : this.node.dispatchEvent(
                    (f = new i.CustomEvent(f, { detail: y, cancelable: !0 }))
                  ),
              (this._event = f),
              this
            );
          },
          event: function () {
            return this._event;
          },
        }),
        (i.Defs = i.invent({ create: "defs", inherit: i.Container })),
        (i.G = i.invent({
          create: "g",
          inherit: i.Container,
          extend: {
            x: function (f) {
              return f == null
                ? this.transform("x")
                : this.transform({ x: f - this.x() }, !0);
            },
          },
          construct: {
            group: function () {
              return this.put(new i.G());
            },
          },
        })),
        (i.Doc = i.invent({
          create: function (f) {
            f &&
              ((f = typeof f == "string" ? e.getElementById(f) : f).nodeName ==
              "svg"
                ? this.constructor.call(this, f)
                : (this.constructor.call(this, i.create("svg")),
                  f.appendChild(this.node),
                  this.size("100%", "100%")),
              this.namespace().defs());
          },
          inherit: i.Container,
          extend: {
            namespace: function () {
              return this.attr({ xmlns: i.ns, version: "1.1" })
                .attr("xmlns:xlink", i.xlink, i.xmlns)
                .attr("xmlns:svgjs", i.svgjs, i.xmlns);
            },
            defs: function () {
              var f;
              return (
                this._defs ||
                  ((f = this.node.getElementsByTagName("defs")[0])
                    ? (this._defs = i.adopt(f))
                    : (this._defs = new i.Defs()),
                  this.node.appendChild(this._defs.node)),
                this._defs
              );
            },
            parent: function () {
              return this.node.parentNode &&
                this.node.parentNode.nodeName != "#document"
                ? this.node.parentNode
                : null;
            },
            remove: function () {
              return (
                this.parent() && this.parent().removeChild(this.node), this
              );
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return (
                delete this._defs,
                i.parser.draw &&
                  !i.parser.draw.parentNode &&
                  this.node.appendChild(i.parser.draw),
                this
              );
            },
            clone: function (f) {
              this.writeDataToDom();
              var y = this.node,
                A = P(y.cloneNode(!0));
              return (
                f
                  ? (f.node || f).appendChild(A.node)
                  : y.parentNode.insertBefore(A.node, y.nextSibling),
                A
              );
            },
          },
        })),
        i.extend(i.Element, {}),
        (i.Gradient = i.invent({
          create: function (f) {
            this.constructor.call(this, i.create(f + "Gradient")),
              (this.type = f);
          },
          inherit: i.Container,
          extend: {
            at: function (f, y, A) {
              return this.put(new i.Stop()).update(f, y, A);
            },
            update: function (f) {
              return (
                this.clear(), typeof f == "function" && f.call(this, this), this
              );
            },
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            toString: function () {
              return this.fill();
            },
            attr: function (f, y, A) {
              return (
                f == "transform" && (f = "gradientTransform"),
                i.Container.prototype.attr.call(this, f, y, A)
              );
            },
          },
          construct: {
            gradient: function (f, y) {
              return this.defs().gradient(f, y);
            },
          },
        })),
        i.extend(i.Gradient, i.FX, {
          from: function (f, y) {
            return (this._target || this).type == "radial"
              ? this.attr({ fx: new i.Number(f), fy: new i.Number(y) })
              : this.attr({ x1: new i.Number(f), y1: new i.Number(y) });
          },
          to: function (f, y) {
            return (this._target || this).type == "radial"
              ? this.attr({ cx: new i.Number(f), cy: new i.Number(y) })
              : this.attr({ x2: new i.Number(f), y2: new i.Number(y) });
          },
        }),
        i.extend(i.Defs, {
          gradient: function (f, y) {
            return this.put(new i.Gradient(f)).update(y);
          },
        }),
        (i.Stop = i.invent({
          create: "stop",
          inherit: i.Element,
          extend: {
            update: function (f) {
              return (
                (typeof f == "number" || f instanceof i.Number) &&
                  (f = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2],
                  }),
                f.opacity != null && this.attr("stop-opacity", f.opacity),
                f.color != null && this.attr("stop-color", f.color),
                f.offset != null && this.attr("offset", new i.Number(f.offset)),
                this
              );
            },
          },
        })),
        (i.Pattern = i.invent({
          create: "pattern",
          inherit: i.Container,
          extend: {
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            update: function (f) {
              return (
                this.clear(), typeof f == "function" && f.call(this, this), this
              );
            },
            toString: function () {
              return this.fill();
            },
            attr: function (f, y, A) {
              return (
                f == "transform" && (f = "patternTransform"),
                i.Container.prototype.attr.call(this, f, y, A)
              );
            },
          },
          construct: {
            pattern: function (f, y, A) {
              return this.defs().pattern(f, y, A);
            },
          },
        })),
        i.extend(i.Defs, {
          pattern: function (f, y, A) {
            return this.put(new i.Pattern())
              .update(A)
              .attr({
                x: 0,
                y: 0,
                width: f,
                height: y,
                patternUnits: "userSpaceOnUse",
              });
          },
        }),
        (i.Shape = i.invent({
          create: function (f) {
            this.constructor.call(this, f);
          },
          inherit: i.Element,
        })),
        (i.Symbol = i.invent({
          create: "symbol",
          inherit: i.Container,
          construct: {
            symbol: function () {
              return this.put(new i.Symbol());
            },
          },
        })),
        (i.Use = i.invent({
          create: "use",
          inherit: i.Shape,
          extend: {
            element: function (f, y) {
              return this.attr("href", (y || "") + "#" + f, i.xlink);
            },
          },
          construct: {
            use: function (f, y) {
              return this.put(new i.Use()).element(f, y);
            },
          },
        })),
        (i.Rect = i.invent({
          create: "rect",
          inherit: i.Shape,
          construct: {
            rect: function (f, y) {
              return this.put(new i.Rect()).size(f, y);
            },
          },
        })),
        (i.Circle = i.invent({
          create: "circle",
          inherit: i.Shape,
          construct: {
            circle: function (f) {
              return this.put(new i.Circle())
                .rx(new i.Number(f).divide(2))
                .move(0, 0);
            },
          },
        })),
        i.extend(i.Circle, i.FX, {
          rx: function (f) {
            return this.attr("r", f);
          },
          ry: function (f) {
            return this.rx(f);
          },
        }),
        (i.Ellipse = i.invent({
          create: "ellipse",
          inherit: i.Shape,
          construct: {
            ellipse: function (f, y) {
              return this.put(new i.Ellipse()).size(f, y).move(0, 0);
            },
          },
        })),
        i.extend(i.Ellipse, i.Rect, i.FX, {
          rx: function (f) {
            return this.attr("rx", f);
          },
          ry: function (f) {
            return this.attr("ry", f);
          },
        }),
        i.extend(i.Circle, i.Ellipse, {
          x: function (f) {
            return f == null ? this.cx() - this.rx() : this.cx(f + this.rx());
          },
          y: function (f) {
            return f == null ? this.cy() - this.ry() : this.cy(f + this.ry());
          },
          cx: function (f) {
            return f == null ? this.attr("cx") : this.attr("cx", f);
          },
          cy: function (f) {
            return f == null ? this.attr("cy") : this.attr("cy", f);
          },
          width: function (f) {
            return f == null
              ? 2 * this.rx()
              : this.rx(new i.Number(f).divide(2));
          },
          height: function (f) {
            return f == null
              ? 2 * this.ry()
              : this.ry(new i.Number(f).divide(2));
          },
          size: function (f, y) {
            var A = v(this, f, y);
            return this.rx(new i.Number(A.width).divide(2)).ry(
              new i.Number(A.height).divide(2)
            );
          },
        }),
        (i.Line = i.invent({
          create: "line",
          inherit: i.Shape,
          extend: {
            array: function () {
              return new i.PointArray([
                [this.attr("x1"), this.attr("y1")],
                [this.attr("x2"), this.attr("y2")],
              ]);
            },
            plot: function (f, y, A, _) {
              return f == null
                ? this.array()
                : ((f =
                    y !== void 0
                      ? { x1: f, y1: y, x2: A, y2: _ }
                      : new i.PointArray(f).toLine()),
                  this.attr(f));
            },
            move: function (f, y) {
              return this.attr(this.array().move(f, y).toLine());
            },
            size: function (f, y) {
              var A = v(this, f, y);
              return this.attr(this.array().size(A.width, A.height).toLine());
            },
          },
          construct: {
            line: function (f, y, A, _) {
              return i.Line.prototype.plot.apply(
                this.put(new i.Line()),
                f != null ? [f, y, A, _] : [0, 0, 0, 0]
              );
            },
          },
        })),
        (i.Polyline = i.invent({
          create: "polyline",
          inherit: i.Shape,
          construct: {
            polyline: function (f) {
              return this.put(new i.Polyline()).plot(f || new i.PointArray());
            },
          },
        })),
        (i.Polygon = i.invent({
          create: "polygon",
          inherit: i.Shape,
          construct: {
            polygon: function (f) {
              return this.put(new i.Polygon()).plot(f || new i.PointArray());
            },
          },
        })),
        i.extend(i.Polyline, i.Polygon, {
          array: function () {
            return (
              this._array ||
              (this._array = new i.PointArray(this.attr("points")))
            );
          },
          plot: function (f) {
            return f == null
              ? this.array()
              : this.clear().attr(
                  "points",
                  typeof f == "string" ? f : (this._array = new i.PointArray(f))
                );
          },
          clear: function () {
            return delete this._array, this;
          },
          move: function (f, y) {
            return this.attr("points", this.array().move(f, y));
          },
          size: function (f, y) {
            var A = v(this, f, y);
            return this.attr("points", this.array().size(A.width, A.height));
          },
        }),
        i.extend(i.Line, i.Polyline, i.Polygon, {
          morphArray: i.PointArray,
          x: function (f) {
            return f == null ? this.bbox().x : this.move(f, this.bbox().y);
          },
          y: function (f) {
            return f == null ? this.bbox().y : this.move(this.bbox().x, f);
          },
          width: function (f) {
            var y = this.bbox();
            return f == null ? y.width : this.size(f, y.height);
          },
          height: function (f) {
            var y = this.bbox();
            return f == null ? y.height : this.size(y.width, f);
          },
        }),
        (i.Path = i.invent({
          create: "path",
          inherit: i.Shape,
          extend: {
            morphArray: i.PathArray,
            array: function () {
              return (
                this._array || (this._array = new i.PathArray(this.attr("d")))
              );
            },
            plot: function (f) {
              return f == null
                ? this.array()
                : this.clear().attr(
                    "d",
                    typeof f == "string"
                      ? f
                      : (this._array = new i.PathArray(f))
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
          },
          construct: {
            path: function (f) {
              return this.put(new i.Path()).plot(f || new i.PathArray());
            },
          },
        })),
        (i.Image = i.invent({
          create: "image",
          inherit: i.Shape,
          extend: {
            load: function (f) {
              if (!f) return this;
              var y = this,
                A = new T.Image();
              return (
                i.on(A, "load", function () {
                  i.off(A);
                  var _ = y.parent(i.Pattern);
                  _ !== null &&
                    (y.width() == 0 &&
                      y.height() == 0 &&
                      y.size(A.width, A.height),
                    _ &&
                      _.width() == 0 &&
                      _.height() == 0 &&
                      _.size(y.width(), y.height()),
                    typeof y._loaded == "function" &&
                      y._loaded.call(y, {
                        width: A.width,
                        height: A.height,
                        ratio: A.width / A.height,
                        url: f,
                      }));
                }),
                i.on(A, "error", function (_) {
                  i.off(A),
                    typeof y._error == "function" && y._error.call(y, _);
                }),
                this.attr("href", (A.src = this.src = f), i.xlink)
              );
            },
            loaded: function (f) {
              return (this._loaded = f), this;
            },
            error: function (f) {
              return (this._error = f), this;
            },
          },
          construct: {
            image: function (f, y, A) {
              return this.put(new i.Image())
                .load(f)
                .size(y || 0, A || y || 0);
            },
          },
        })),
        (i.Text = i.invent({
          create: function () {
            this.constructor.call(this, i.create("text")),
              (this.dom.leading = new i.Number(1.3)),
              (this._rebuild = !0),
              (this._build = !1),
              this.attr("font-family", i.defaults.attrs["font-family"]);
          },
          inherit: i.Shape,
          extend: {
            x: function (f) {
              return f == null ? this.attr("x") : this.attr("x", f);
            },
            text: function (f) {
              if (f === void 0) {
                f = "";
                for (
                  var y = this.node.childNodes, A = 0, _ = y.length;
                  A < _;
                  ++A
                )
                  A != 0 &&
                    y[A].nodeType != 3 &&
                    i.adopt(y[A]).dom.newLined == 1 &&
                    (f += `
`),
                    (f += y[A].textContent);
                return f;
              }
              if ((this.clear().build(!0), typeof f == "function"))
                f.call(this, this);
              else {
                A = 0;
                for (
                  var z = (f = f.split(`
`)).length;
                  A < z;
                  A++
                )
                  this.tspan(f[A]).newLine();
              }
              return this.build(!1).rebuild();
            },
            size: function (f) {
              return this.attr("font-size", f).rebuild();
            },
            leading: function (f) {
              return f == null
                ? this.dom.leading
                : ((this.dom.leading = new i.Number(f)), this.rebuild());
            },
            lines: function () {
              var f = ((this.textPath && this.textPath()) || this).node,
                y = i.utils.map(
                  i.utils.filterSVGElements(f.childNodes),
                  function (A) {
                    return i.adopt(A);
                  }
                );
              return new i.Set(y);
            },
            rebuild: function (f) {
              if (
                (typeof f == "boolean" && (this._rebuild = f), this._rebuild)
              ) {
                var y = this,
                  A = 0,
                  _ = this.dom.leading * new i.Number(this.attr("font-size"));
                this.lines().each(function () {
                  this.dom.newLined &&
                    (y.textPath() || this.attr("x", y.attr("x")),
                    this.text() ==
                    `
`
                      ? (A += _)
                      : (this.attr("dy", _ + A), (A = 0)));
                }),
                  this.fire("rebuild");
              }
              return this;
            },
            build: function (f) {
              return (this._build = !!f), this;
            },
            setData: function (f) {
              return (
                (this.dom = f),
                (this.dom.leading = new i.Number(f.leading || 1.3)),
                this
              );
            },
          },
          construct: {
            text: function (f) {
              return this.put(new i.Text()).text(f);
            },
            plain: function (f) {
              return this.put(new i.Text()).plain(f);
            },
          },
        })),
        (i.Tspan = i.invent({
          create: "tspan",
          inherit: i.Shape,
          extend: {
            text: function (f) {
              return f == null
                ? this.node.textContent +
                    (this.dom.newLined
                      ? `
`
                      : "")
                : (typeof f == "function" ? f.call(this, this) : this.plain(f),
                  this);
            },
            dx: function (f) {
              return this.attr("dx", f);
            },
            dy: function (f) {
              return this.attr("dy", f);
            },
            newLine: function () {
              var f = this.parent(i.Text);
              return (
                (this.dom.newLined = !0),
                this.dy(f.dom.leading * f.attr("font-size")).attr("x", f.x())
              );
            },
          },
        })),
        i.extend(i.Text, i.Tspan, {
          plain: function (f) {
            return (
              this._build === !1 && this.clear(),
              this.node.appendChild(e.createTextNode(f)),
              this
            );
          },
          tspan: function (f) {
            var y = ((this.textPath && this.textPath()) || this).node,
              A = new i.Tspan();
            return (
              this._build === !1 && this.clear(),
              y.appendChild(A.node),
              A.text(f)
            );
          },
          clear: function () {
            for (
              var f = ((this.textPath && this.textPath()) || this).node;
              f.hasChildNodes();

            )
              f.removeChild(f.lastChild);
            return this;
          },
          length: function () {
            return this.node.getComputedTextLength();
          },
        }),
        (i.TextPath = i.invent({
          create: "textPath",
          inherit: i.Parent,
          parent: i.Text,
          construct: {
            morphArray: i.PathArray,
            array: function () {
              var f = this.track();
              return f ? f.array() : null;
            },
            plot: function (f) {
              var y = this.track(),
                A = null;
              return y && (A = y.plot(f)), f == null ? A : this;
            },
            track: function () {
              var f = this.textPath();
              if (f) return f.reference("href");
            },
            textPath: function () {
              if (
                this.node.firstChild &&
                this.node.firstChild.nodeName == "textPath"
              )
                return i.adopt(this.node.firstChild);
            },
          },
        })),
        (i.Nested = i.invent({
          create: function () {
            this.constructor.call(this, i.create("svg")),
              this.style("overflow", "visible");
          },
          inherit: i.Container,
          construct: {
            nested: function () {
              return this.put(new i.Nested());
            },
          },
        }));
      var h = {
        stroke: [
          "color",
          "width",
          "opacity",
          "linecap",
          "linejoin",
          "miterlimit",
          "dasharray",
          "dashoffset",
        ],
        fill: ["color", "opacity", "rule"],
        prefix: function (f, y) {
          return y == "color" ? f : f + "-" + y;
        },
      };
      function d(f, y, A, _) {
        return A + _.replace(i.regex.dots, " .");
      }
      function g(f) {
        return f.toLowerCase().replace(/-(.)/g, function (y, A) {
          return A.toUpperCase();
        });
      }
      function m(f) {
        return f.charAt(0).toUpperCase() + f.slice(1);
      }
      function x(f) {
        var y = f.toString(16);
        return y.length == 1 ? "0" + y : y;
      }
      function v(f, y, A) {
        if (y == null || A == null) {
          var _ = f.bbox();
          y == null
            ? (y = (_.width / _.height) * A)
            : A == null && (A = (_.height / _.width) * y);
        }
        return { width: y, height: A };
      }
      function w(f, y, A) {
        return { x: y * f.a + A * f.c + 0, y: y * f.b + A * f.d + 0 };
      }
      function C(f) {
        return { a: f[0], b: f[1], c: f[2], d: f[3], e: f[4], f: f[5] };
      }
      function P(f) {
        for (var y = f.childNodes.length - 1; y >= 0; y--)
          f.childNodes[y] instanceof T.SVGElement && P(f.childNodes[y]);
        return i.adopt(f).id(i.eid(f.nodeName));
      }
      function M(f) {
        return Math.abs(f) > 1e-37 ? f : 0;
      }
      ["fill", "stroke"].forEach(function (f) {
        var y = {};
        (y[f] = function (A) {
          if (A === void 0) return this;
          if (
            typeof A == "string" ||
            i.Color.isRgb(A) ||
            (A && typeof A.fill == "function")
          )
            this.attr(f, A);
          else
            for (var _ = h[f].length - 1; _ >= 0; _--)
              A[h[f][_]] != null && this.attr(h.prefix(f, h[f][_]), A[h[f][_]]);
          return this;
        }),
          i.extend(i.Element, i.FX, y);
      }),
        i.extend(i.Element, i.FX, {
          translate: function (f, y) {
            return this.transform({ x: f, y });
          },
          matrix: function (f) {
            return this.attr(
              "transform",
              new i.Matrix(arguments.length == 6 ? [].slice.call(arguments) : f)
            );
          },
          opacity: function (f) {
            return this.attr("opacity", f);
          },
          dx: function (f) {
            return this.x(
              new i.Number(f).plus(this instanceof i.FX ? 0 : this.x()),
              !0
            );
          },
          dy: function (f) {
            return this.y(
              new i.Number(f).plus(this instanceof i.FX ? 0 : this.y()),
              !0
            );
          },
        }),
        i.extend(i.Path, {
          length: function () {
            return this.node.getTotalLength();
          },
          pointAt: function (f) {
            return this.node.getPointAtLength(f);
          },
        }),
        (i.Set = i.invent({
          create: function (f) {
            Array.isArray(f) ? (this.members = f) : this.clear();
          },
          extend: {
            add: function () {
              for (
                var f = [].slice.call(arguments), y = 0, A = f.length;
                y < A;
                y++
              )
                this.members.push(f[y]);
              return this;
            },
            remove: function (f) {
              var y = this.index(f);
              return y > -1 && this.members.splice(y, 1), this;
            },
            each: function (f) {
              for (var y = 0, A = this.members.length; y < A; y++)
                f.apply(this.members[y], [y, this.members]);
              return this;
            },
            clear: function () {
              return (this.members = []), this;
            },
            length: function () {
              return this.members.length;
            },
            has: function (f) {
              return this.index(f) >= 0;
            },
            index: function (f) {
              return this.members.indexOf(f);
            },
            get: function (f) {
              return this.members[f];
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.members.length - 1);
            },
            valueOf: function () {
              return this.members;
            },
          },
          construct: {
            set: function (f) {
              return new i.Set(f);
            },
          },
        })),
        (i.FX.Set = i.invent({
          create: function (f) {
            this.set = f;
          },
        })),
        (i.Set.inherit = function () {
          var f = [];
          for (var y in i.Shape.prototype)
            typeof i.Shape.prototype[y] == "function" &&
              typeof i.Set.prototype[y] != "function" &&
              f.push(y);
          for (var y in (f.forEach(function (_) {
            i.Set.prototype[_] = function () {
              for (var z = 0, B = this.members.length; z < B; z++)
                this.members[z] &&
                  typeof this.members[z][_] == "function" &&
                  this.members[z][_].apply(this.members[z], arguments);
              return _ == "animate"
                ? this.fx || (this.fx = new i.FX.Set(this))
                : this;
            };
          }),
          (f = []),
          i.FX.prototype))
            typeof i.FX.prototype[y] == "function" &&
              typeof i.FX.Set.prototype[y] != "function" &&
              f.push(y);
          f.forEach(function (A) {
            i.FX.Set.prototype[A] = function () {
              for (var _ = 0, z = this.set.members.length; _ < z; _++)
                this.set.members[_].fx[A].apply(
                  this.set.members[_].fx,
                  arguments
                );
              return this;
            };
          });
        }),
        i.extend(i.Element, {}),
        i.extend(i.Element, {
          remember: function (f, y) {
            if (u(arguments[0]) === "object")
              for (var A in f) this.remember(A, f[A]);
            else {
              if (arguments.length == 1) return this.memory()[f];
              this.memory()[f] = y;
            }
            return this;
          },
          forget: function () {
            if (arguments.length == 0) this._memory = {};
            else
              for (var f = arguments.length - 1; f >= 0; f--)
                delete this.memory()[arguments[f]];
            return this;
          },
          memory: function () {
            return this._memory || (this._memory = {});
          },
        }),
        (i.get = function (f) {
          var y = e.getElementById(
            (function (A) {
              var _ = (A || "").toString().match(i.regex.reference);
              if (_) return _[1];
            })(f) || f
          );
          return i.adopt(y);
        }),
        (i.select = function (f, y) {
          return new i.Set(
            i.utils.map((y || e).querySelectorAll(f), function (A) {
              return i.adopt(A);
            })
          );
        }),
        i.extend(i.Parent, {
          select: function (f) {
            return i.select(f, this.node);
          },
        });
      var I = "abcdef".split("");
      if (typeof T.CustomEvent != "function") {
        var D = function (f, y) {
          y = y || { bubbles: !1, cancelable: !1, detail: void 0 };
          var A = e.createEvent("CustomEvent");
          return A.initCustomEvent(f, y.bubbles, y.cancelable, y.detail), A;
        };
        (D.prototype = T.Event.prototype), (i.CustomEvent = D);
      } else i.CustomEvent = T.CustomEvent;
      return i;
    }),
    u(a) === "object"
      ? (t.exports = Qe.document
          ? Bi(Qe, Qe.document)
          : function (T) {
              return Bi(T, T.document);
            })
      : (Qe.SVG = Bi(Qe, Qe.document)),
    function () {
      (SVG.Filter = SVG.invent({
        create: "filter",
        inherit: SVG.Parent,
        extend: {
          source: "SourceGraphic",
          sourceAlpha: "SourceAlpha",
          background: "BackgroundImage",
          backgroundAlpha: "BackgroundAlpha",
          fill: "FillPaint",
          stroke: "StrokePaint",
          autoSetIn: !0,
          put: function (l, h) {
            return (
              this.add(l, h),
              !l.attr("in") && this.autoSetIn && l.attr("in", this.source),
              l.attr("result") || l.attr("result", l),
              l
            );
          },
          blend: function (l, h, d) {
            return this.put(new SVG.BlendEffect(l, h, d));
          },
          colorMatrix: function (l, h) {
            return this.put(new SVG.ColorMatrixEffect(l, h));
          },
          convolveMatrix: function (l) {
            return this.put(new SVG.ConvolveMatrixEffect(l));
          },
          componentTransfer: function (l) {
            return this.put(new SVG.ComponentTransferEffect(l));
          },
          composite: function (l, h, d) {
            return this.put(new SVG.CompositeEffect(l, h, d));
          },
          flood: function (l, h) {
            return this.put(new SVG.FloodEffect(l, h));
          },
          offset: function (l, h) {
            return this.put(new SVG.OffsetEffect(l, h));
          },
          image: function (l) {
            return this.put(new SVG.ImageEffect(l));
          },
          merge: function () {
            var l = [void 0];
            for (var h in arguments) l.push(arguments[h]);
            return this.put(
              new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, l))()
            );
          },
          gaussianBlur: function (l, h) {
            return this.put(new SVG.GaussianBlurEffect(l, h));
          },
          morphology: function (l, h) {
            return this.put(new SVG.MorphologyEffect(l, h));
          },
          diffuseLighting: function (l, h, d) {
            return this.put(new SVG.DiffuseLightingEffect(l, h, d));
          },
          displacementMap: function (l, h, d, g, m) {
            return this.put(new SVG.DisplacementMapEffect(l, h, d, g, m));
          },
          specularLighting: function (l, h, d, g) {
            return this.put(new SVG.SpecularLightingEffect(l, h, d, g));
          },
          tile: function () {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function (l, h, d, g, m) {
            return this.put(new SVG.TurbulenceEffect(l, h, d, g, m));
          },
          toString: function () {
            return "url(#" + this.attr("id") + ")";
          },
        },
      })),
        SVG.extend(SVG.Defs, {
          filter: function (l) {
            var h = this.put(new SVG.Filter());
            return typeof l == "function" && l.call(h, h), h;
          },
        }),
        SVG.extend(SVG.Container, {
          filter: function (l) {
            return this.defs().filter(l);
          },
        }),
        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
          filter: function (l) {
            return (
              (this.filterer =
                l instanceof SVG.Element ? l : this.doc().filter(l)),
              this.doc() &&
                this.filterer.doc() !== this.doc() &&
                this.doc().defs().add(this.filterer),
              this.attr("filter", this.filterer),
              this.filterer
            );
          },
          unfilter: function (l) {
            return (
              this.filterer && l === !0 && this.filterer.remove(),
              delete this.filterer,
              this.attr("filter", null)
            );
          },
        }),
        (SVG.Effect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", l);
            },
            result: function (l) {
              return l == null ? this.attr("result") : this.attr("result", l);
            },
            toString: function () {
              return this.result();
            },
          },
        })),
        (SVG.ParentEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Parent,
          extend: {
            in: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", l);
            },
            result: function (l) {
              return l == null ? this.attr("result") : this.attr("result", l);
            },
            toString: function () {
              return this.result();
            },
          },
        }));
      var T = {
        blend: function (l, h) {
          return this.parent() && this.parent().blend(this, l, h);
        },
        colorMatrix: function (l, h) {
          return this.parent() && this.parent().colorMatrix(l, h).in(this);
        },
        convolveMatrix: function (l) {
          return this.parent() && this.parent().convolveMatrix(l).in(this);
        },
        componentTransfer: function (l) {
          return this.parent() && this.parent().componentTransfer(l).in(this);
        },
        composite: function (l, h) {
          return this.parent() && this.parent().composite(this, l, h);
        },
        flood: function (l, h) {
          return this.parent() && this.parent().flood(l, h);
        },
        offset: function (l, h) {
          return this.parent() && this.parent().offset(l, h).in(this);
        },
        image: function (l) {
          return this.parent() && this.parent().image(l);
        },
        merge: function () {
          return (
            this.parent() &&
            this.parent().merge.apply(this.parent(), [this].concat(arguments))
          );
        },
        gaussianBlur: function (l, h) {
          return this.parent() && this.parent().gaussianBlur(l, h).in(this);
        },
        morphology: function (l, h) {
          return this.parent() && this.parent().morphology(l, h).in(this);
        },
        diffuseLighting: function (l, h, d) {
          return (
            this.parent() && this.parent().diffuseLighting(l, h, d).in(this)
          );
        },
        displacementMap: function (l, h, d, g) {
          return (
            this.parent() && this.parent().displacementMap(this, l, h, d, g)
          );
        },
        specularLighting: function (l, h, d, g) {
          return (
            this.parent() && this.parent().specularLighting(l, h, d, g).in(this)
          );
        },
        tile: function () {
          return this.parent() && this.parent().tile().in(this);
        },
        turbulence: function (l, h, d, g, m) {
          return (
            this.parent() && this.parent().turbulence(l, h, d, g, m).in(this)
          );
        },
      };
      SVG.extend(SVG.Effect, T),
        SVG.extend(SVG.ParentEffect, T),
        (SVG.ChildEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (l) {
              this.attr("in", l);
            },
          },
        }));
      var e = {
          blend: function (l, h, d) {
            this.attr({ in: l, in2: h, mode: d || "normal" });
          },
          colorMatrix: function (l, h) {
            l == "matrix" && (h = r(h)),
              this.attr({ type: l, values: h === void 0 ? null : h });
          },
          convolveMatrix: function (l) {
            (l = r(l)),
              this.attr({
                order: Math.sqrt(l.split(" ").length),
                kernelMatrix: l,
              });
          },
          composite: function (l, h, d) {
            this.attr({ in: l, in2: h, operator: d });
          },
          flood: function (l, h) {
            this.attr("flood-color", l),
              h != null && this.attr("flood-opacity", h);
          },
          offset: function (l, h) {
            this.attr({ dx: l, dy: h });
          },
          image: function (l) {
            this.attr("href", l, SVG.xlink);
          },
          displacementMap: function (l, h, d, g, m) {
            this.attr({
              in: l,
              in2: h,
              scale: d,
              xChannelSelector: g,
              yChannelSelector: m,
            });
          },
          gaussianBlur: function (l, h) {
            l != null || h != null
              ? this.attr(
                  "stdDeviation",
                  (function (d) {
                    if (!Array.isArray(d)) return d;
                    for (var g = 0, m = d.length, x = []; g < m; g++)
                      x.push(d[g]);
                    return x.join(" ");
                  })(Array.prototype.slice.call(arguments))
                )
              : this.attr("stdDeviation", "0 0");
          },
          morphology: function (l, h) {
            this.attr({ operator: l, radius: h });
          },
          tile: function () {},
          turbulence: function (l, h, d, g, m) {
            this.attr({
              numOctaves: h,
              seed: d,
              stitchTiles: g,
              baseFrequency: l,
              type: m,
            });
          },
        },
        i = {
          merge: function () {
            var l;
            if (arguments[0] instanceof SVG.Set) {
              var h = this;
              arguments[0].each(function (g) {
                this instanceof SVG.MergeNode
                  ? h.put(this)
                  : (this instanceof SVG.Effect ||
                      this instanceof SVG.ParentEffect) &&
                    h.put(new SVG.MergeNode(this));
              });
            } else {
              l = Array.isArray(arguments[0]) ? arguments[0] : arguments;
              for (var d = 0; d < l.length; d++)
                l[d] instanceof SVG.MergeNode
                  ? this.put(l[d])
                  : this.put(new SVG.MergeNode(l[d]));
            }
          },
          componentTransfer: function (l) {
            if (
              ((this.rgb = new SVG.Set()),
              ["r", "g", "b", "a"].forEach(
                function (d) {
                  (this[d] = new SVG["Func" + d.toUpperCase()]("identity")),
                    this.rgb.add(this[d]),
                    this.node.appendChild(this[d].node);
                }.bind(this)
              ),
              l)
            )
              for (var h in (l.rgb &&
                (["r", "g", "b"].forEach(
                  function (d) {
                    this[d].attr(l.rgb);
                  }.bind(this)
                ),
                delete l.rgb),
              l))
                this[h].attr(l[h]);
          },
          diffuseLighting: function (l, h, d) {
            this.attr({
              surfaceScale: l,
              diffuseConstant: h,
              kernelUnitLength: d,
            });
          },
          specularLighting: function (l, h, d, g) {
            this.attr({
              surfaceScale: l,
              diffuseConstant: h,
              specularExponent: d,
              kernelUnitLength: g,
            });
          },
        },
        n = {
          distantLight: function (l, h) {
            this.attr({ azimuth: l, elevation: h });
          },
          pointLight: function (l, h, d) {
            this.attr({ x: l, y: h, z: d });
          },
          spotLight: function (l, h, d, g, m, x) {
            this.attr({
              x: l,
              y: h,
              z: d,
              pointsAtX: g,
              pointsAtY: m,
              pointsAtZ: x,
            });
          },
          mergeNode: function (l) {
            this.attr("in", l);
          },
        };
      function r(l) {
        return (
          Array.isArray(l) && (l = new SVG.Array(l)),
          l
            .toString()
            .replace(/^\s+/, "")
            .replace(/\s+$/, "")
            .replace(/\s+/g, " ")
        );
      }
      function o() {
        var l = function () {};
        for (var h in (typeof arguments[arguments.length - 1] == "function" &&
          ((l = arguments[arguments.length - 1]),
          Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
        arguments))
          for (var d in arguments[h]) l(arguments[h][d], d, arguments[h]);
      }
      ["r", "g", "b", "a"].forEach(function (l) {
        n["Func" + l.toUpperCase()] = function (h) {
          switch ((this.attr("type", h), h)) {
            case "table":
              this.attr("tableValues", arguments[1]);
              break;
            case "linear":
              this.attr("slope", arguments[1]),
                this.attr("intercept", arguments[2]);
              break;
            case "gamma":
              this.attr("amplitude", arguments[1]),
                this.attr("exponent", arguments[2]),
                this.attr("offset", arguments[2]);
          }
        };
      }),
        o(e, function (l, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                l.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.Effect,
            extend: {},
          });
        }),
        o(i, function (l, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                l.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.ParentEffect,
            extend: {},
          });
        }),
        o(n, function (l, h) {
          var d = h.charAt(0).toUpperCase() + h.slice(1);
          SVG[d] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + d)),
                l.apply(this, arguments);
            },
            inherit: SVG.ChildEffect,
            extend: {},
          });
        }),
        SVG.extend(SVG.MergeEffect, {
          in: function (l) {
            return (
              l instanceof SVG.MergeNode
                ? this.add(l, 0)
                : this.add(new SVG.MergeNode(l), 0),
              this
            );
          },
        }),
        SVG.extend(
          SVG.CompositeEffect,
          SVG.BlendEffect,
          SVG.DisplacementMapEffect,
          {
            in2: function (l) {
              return l == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in2") + '"]')
                      .get(0)) ||
                    this.attr("in2")
                : this.attr("in2", l);
            },
          }
        ),
        (SVG.filter = {
          sepiatone: [
            0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
            0.111, 0, 0, 0, 0, 0, 1, 0,
          ],
        });
    }.call(void 0),
    (function () {
      function T(o, l, h, d, g, m, x) {
        for (
          var v = o.slice(l, h || x),
            w = d.slice(g, m || x),
            C = 0,
            P = { pos: [0, 0], start: [0, 0] },
            M = { pos: [0, 0], start: [0, 0] };
          (v[C] = e.call(P, v[C])),
            (w[C] = e.call(M, w[C])),
            v[C][0] != w[C][0] ||
            v[C][0] == "M" ||
            (v[C][0] == "A" && (v[C][4] != w[C][4] || v[C][5] != w[C][5]))
              ? (Array.prototype.splice.apply(
                  v,
                  [C, 1].concat(n.call(P, v[C]))
                ),
                Array.prototype.splice.apply(w, [C, 1].concat(n.call(M, w[C]))))
              : ((v[C] = i.call(P, v[C])), (w[C] = i.call(M, w[C]))),
            !(++C == v.length && C == w.length);

        )
          C == v.length &&
            v.push([
              "C",
              P.pos[0],
              P.pos[1],
              P.pos[0],
              P.pos[1],
              P.pos[0],
              P.pos[1],
            ]),
            C == w.length &&
              w.push([
                "C",
                M.pos[0],
                M.pos[1],
                M.pos[0],
                M.pos[1],
                M.pos[0],
                M.pos[1],
              ]);
        return { start: v, dest: w };
      }
      function e(o) {
        switch (o[0]) {
          case "z":
          case "Z":
            (o[0] = "L"), (o[1] = this.start[0]), (o[2] = this.start[1]);
            break;
          case "H":
            (o[0] = "L"), (o[2] = this.pos[1]);
            break;
          case "V":
            (o[0] = "L"), (o[2] = o[1]), (o[1] = this.pos[0]);
            break;
          case "T":
            (o[0] = "Q"),
              (o[3] = o[1]),
              (o[4] = o[2]),
              (o[1] = this.reflection[1]),
              (o[2] = this.reflection[0]);
            break;
          case "S":
            (o[0] = "C"),
              (o[6] = o[4]),
              (o[5] = o[3]),
              (o[4] = o[2]),
              (o[3] = o[1]),
              (o[2] = this.reflection[1]),
              (o[1] = this.reflection[0]);
        }
        return o;
      }
      function i(o) {
        var l = o.length;
        return (
          (this.pos = [o[l - 2], o[l - 1]]),
          "SCQT".indexOf(o[0]) != -1 &&
            (this.reflection = [
              2 * this.pos[0] - o[l - 4],
              2 * this.pos[1] - o[l - 3],
            ]),
          o
        );
      }
      function n(o) {
        var l = [o];
        switch (o[0]) {
          case "M":
            return (this.pos = this.start = [o[1], o[2]]), l;
          case "L":
            (o[5] = o[3] = o[1]),
              (o[6] = o[4] = o[2]),
              (o[1] = this.pos[0]),
              (o[2] = this.pos[1]);
            break;
          case "Q":
            (o[6] = o[4]),
              (o[5] = o[3]),
              (o[4] = (1 * o[4]) / 3 + (2 * o[2]) / 3),
              (o[3] = (1 * o[3]) / 3 + (2 * o[1]) / 3),
              (o[2] = (1 * this.pos[1]) / 3 + (2 * o[2]) / 3),
              (o[1] = (1 * this.pos[0]) / 3 + (2 * o[1]) / 3);
            break;
          case "A":
            (l = (function (h, d) {
              var g,
                m,
                x,
                v,
                w,
                C,
                P,
                M,
                I,
                D,
                f,
                y,
                A,
                _,
                z,
                B,
                $,
                Z,
                re,
                ce,
                oe,
                de,
                Pe,
                Re,
                Oe,
                Xe,
                ut = Math.abs(d[1]),
                at = Math.abs(d[2]),
                mt = d[3] % 360,
                aa = d[4],
                Ta = d[5],
                Lo = d[6],
                Eo = d[7],
                Ut = new SVG.Point(h),
                It = new SVG.Point(Lo, Eo),
                mh = [];
              if (ut === 0 || at === 0 || (Ut.x === It.x && Ut.y === It.y))
                return [["C", Ut.x, Ut.y, It.x, It.y, It.x, It.y]];
              for (
                g = new SVG.Point(
                  (Ut.x - It.x) / 2,
                  (Ut.y - It.y) / 2
                ).transform(new SVG.Matrix().rotate(mt)),
                  (m = (g.x * g.x) / (ut * ut) + (g.y * g.y) / (at * at)) > 1 &&
                    ((ut *= m = Math.sqrt(m)), (at *= m)),
                  x = new SVG.Matrix()
                    .rotate(mt)
                    .scale(1 / ut, 1 / at)
                    .rotate(-mt),
                  Ut = Ut.transform(x),
                  It = It.transform(x),
                  v = [It.x - Ut.x, It.y - Ut.y],
                  C = v[0] * v[0] + v[1] * v[1],
                  w = Math.sqrt(C),
                  v[0] /= w,
                  v[1] /= w,
                  P = C < 4 ? Math.sqrt(1 - C / 4) : 0,
                  aa === Ta && (P *= -1),
                  M = new SVG.Point(
                    (It.x + Ut.x) / 2 + P * -v[1],
                    (It.y + Ut.y) / 2 + P * v[0]
                  ),
                  I = new SVG.Point(Ut.x - M.x, Ut.y - M.y),
                  D = new SVG.Point(It.x - M.x, It.y - M.y),
                  f = Math.acos(I.x / Math.sqrt(I.x * I.x + I.y * I.y)),
                  I.y < 0 && (f *= -1),
                  y = Math.acos(D.x / Math.sqrt(D.x * D.x + D.y * D.y)),
                  D.y < 0 && (y *= -1),
                  Ta && f > y && (y += 2 * Math.PI),
                  !Ta && f < y && (y -= 2 * Math.PI),
                  _ = Math.ceil((2 * Math.abs(f - y)) / Math.PI),
                  B = [],
                  $ = f,
                  A = (y - f) / _,
                  z = (4 * Math.tan(A / 4)) / 3,
                  oe = 0;
                oe <= _;
                oe++
              )
                (re = Math.cos($)),
                  (Z = Math.sin($)),
                  (ce = new SVG.Point(M.x + re, M.y + Z)),
                  (B[oe] = [
                    new SVG.Point(ce.x + z * Z, ce.y - z * re),
                    ce,
                    new SVG.Point(ce.x - z * Z, ce.y + z * re),
                  ]),
                  ($ += A);
              for (
                B[0][0] = B[0][1].clone(),
                  B[B.length - 1][2] = B[B.length - 1][1].clone(),
                  x = new SVG.Matrix().rotate(mt).scale(ut, at).rotate(-mt),
                  oe = 0,
                  de = B.length;
                oe < de;
                oe++
              )
                (B[oe][0] = B[oe][0].transform(x)),
                  (B[oe][1] = B[oe][1].transform(x)),
                  (B[oe][2] = B[oe][2].transform(x));
              for (oe = 1, de = B.length; oe < de; oe++)
                (Pe = (ce = B[oe - 1][2]).x),
                  (Re = ce.y),
                  (Oe = (ce = B[oe][0]).x),
                  (Xe = ce.y),
                  (Lo = (ce = B[oe][1]).x),
                  (Eo = ce.y),
                  mh.push(["C", Pe, Re, Oe, Xe, Lo, Eo]);
              return mh;
            })(this.pos, o)),
              (o = l[0]);
        }
        return (
          (o[0] = "C"),
          (this.pos = [o[5], o[6]]),
          (this.reflection = [2 * o[5] - o[3], 2 * o[6] - o[4]]),
          l
        );
      }
      function r(o, l) {
        if (l === !1) return !1;
        for (var h = l, d = o.length; h < d; ++h) if (o[h][0] == "M") return h;
        return !1;
      }
      SVG.extend(SVG.PathArray, {
        morph: function (o) {
          for (
            var l = this.value, h = this.parse(o), d = 0, g = 0, m = !1, x = !1;
            d !== !1 || g !== !1;

          ) {
            var v;
            (m = r(l, d !== !1 && d + 1)),
              (x = r(h, g !== !1 && g + 1)),
              d === !1 &&
                (d =
                  (v = new SVG.PathArray(w.start).bbox()).height == 0 ||
                  v.width == 0
                    ? l.push(l[0]) - 1
                    : l.push(["M", v.x + v.width / 2, v.y + v.height / 2]) - 1),
              g === !1 &&
                (g =
                  (v = new SVG.PathArray(w.dest).bbox()).height == 0 ||
                  v.width == 0
                    ? h.push(h[0]) - 1
                    : h.push(["M", v.x + v.width / 2, v.y + v.height / 2]) - 1);
            var w = T(l, d, m, h, g, x);
            (l = l.slice(0, d).concat(w.start, m === !1 ? [] : l.slice(m))),
              (h = h.slice(0, g).concat(w.dest, x === !1 ? [] : h.slice(x))),
              (d = m !== !1 && d + w.start.length),
              (g = x !== !1 && g + w.dest.length);
          }
          return (
            (this.value = l),
            (this.destination = new SVG.PathArray()),
            (this.destination.value = h),
            this
          );
        },
      });
    })(),
    function () {
      function T(e) {
        e.remember("_draggable", this), (this.el = e);
      }
      (T.prototype.init = function (e, i) {
        var n = this;
        (this.constraint = e),
          (this.value = i),
          this.el.on("mousedown.drag", function (r) {
            n.start(r);
          }),
          this.el.on("touchstart.drag", function (r) {
            n.start(r);
          });
      }),
        (T.prototype.transformPoint = function (e, i) {
          var n =
            ((e = e || window.event).changedTouches && e.changedTouches[0]) ||
            e;
          return (
            (this.p.x = n.clientX - (i || 0)),
            (this.p.y = n.clientY),
            this.p.matrixTransform(this.m)
          );
        }),
        (T.prototype.getBBox = function () {
          var e = this.el.bbox();
          return (
            this.el instanceof SVG.Nested && (e = this.el.rbox()),
            (this.el instanceof SVG.G ||
              this.el instanceof SVG.Use ||
              this.el instanceof SVG.Nested) &&
              ((e.x = this.el.x()), (e.y = this.el.y())),
            e
          );
        }),
        (T.prototype.start = function (e) {
          if (
            (e.type != "click" &&
              e.type != "mousedown" &&
              e.type != "mousemove") ||
            (e.which || e.buttons) == 1
          ) {
            var i = this;
            if (
              (this.el.fire("beforedrag", { event: e, handler: this }),
              !this.el.event().defaultPrevented)
            ) {
              e.preventDefault(),
                e.stopPropagation(),
                (this.parent =
                  this.parent ||
                  this.el.parent(SVG.Nested) ||
                  this.el.parent(SVG.Doc)),
                (this.p = this.parent.node.createSVGPoint()),
                (this.m = this.el.node.getScreenCTM().inverse());
              var n,
                r = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (
                  ((n = this.el.node.getComputedTextLength()),
                  this.el.attr("text-anchor"))
                ) {
                  case "middle":
                    n /= 2;
                    break;
                  case "start":
                    n = 0;
                }
              (this.startPoints = {
                point: this.transformPoint(e, n),
                box: r,
                transform: this.el.transform(),
              }),
                SVG.on(window, "mousemove.drag", function (o) {
                  i.drag(o);
                }),
                SVG.on(window, "touchmove.drag", function (o) {
                  i.drag(o);
                }),
                SVG.on(window, "mouseup.drag", function (o) {
                  i.end(o);
                }),
                SVG.on(window, "touchend.drag", function (o) {
                  i.end(o);
                }),
                this.el.fire("dragstart", {
                  event: e,
                  p: this.startPoints.point,
                  m: this.m,
                  handler: this,
                });
            }
          }
        }),
        (T.prototype.drag = function (e) {
          var i = this.getBBox(),
            n = this.transformPoint(e),
            r = this.startPoints.box.x + n.x - this.startPoints.point.x,
            o = this.startPoints.box.y + n.y - this.startPoints.point.y,
            l = this.constraint,
            h = n.x - this.startPoints.point.x,
            d = n.y - this.startPoints.point.y;
          if (
            (this.el.fire("dragmove", {
              event: e,
              p: n,
              m: this.m,
              handler: this,
            }),
            this.el.event().defaultPrevented)
          )
            return n;
          if (typeof l == "function") {
            var g = l.call(this.el, r, o, this.m);
            typeof g == "boolean" && (g = { x: g, y: g }),
              g.x === !0 ? this.el.x(r) : g.x !== !1 && this.el.x(g.x),
              g.y === !0 ? this.el.y(o) : g.y !== !1 && this.el.y(g.y);
          } else
            typeof l == "object" &&
              (l.minX != null && r < l.minX
                ? (h = (r = l.minX) - this.startPoints.box.x)
                : l.maxX != null &&
                  r > l.maxX - i.width &&
                  (h = (r = l.maxX - i.width) - this.startPoints.box.x),
              l.minY != null && o < l.minY
                ? (d = (o = l.minY) - this.startPoints.box.y)
                : l.maxY != null &&
                  o > l.maxY - i.height &&
                  (d = (o = l.maxY - i.height) - this.startPoints.box.y),
              l.snapToGrid != null &&
                ((r -= r % l.snapToGrid),
                (o -= o % l.snapToGrid),
                (h -= h % l.snapToGrid),
                (d -= d % l.snapToGrid)),
              this.el instanceof SVG.G
                ? this.el
                    .matrix(this.startPoints.transform)
                    .transform({ x: h, y: d }, !0)
                : this.el.move(r, o));
          return n;
        }),
        (T.prototype.end = function (e) {
          var i = this.drag(e);
          this.el.fire("dragend", { event: e, p: i, m: this.m, handler: this }),
            SVG.off(window, "mousemove.drag"),
            SVG.off(window, "touchmove.drag"),
            SVG.off(window, "mouseup.drag"),
            SVG.off(window, "touchend.drag");
        }),
        SVG.extend(SVG.Element, {
          draggable: function (e, i) {
            (typeof e != "function" && typeof e != "object") ||
              ((i = e), (e = !0));
            var n = this.remember("_draggable") || new T(this);
            return (
              (e = e === void 0 || e)
                ? n.init(i || {}, e)
                : (this.off("mousedown.drag"), this.off("touchstart.drag")),
              this
            );
          },
        });
    }.call(void 0),
    (function () {
      function T(e) {
        (this.el = e),
          e.remember("_selectHandler", this),
          (this.pointSelection = { isSelected: !1 }),
          (this.rectSelection = { isSelected: !1 }),
          (this.pointsList = {
            lt: [0, 0],
            rt: ["width", 0],
            rb: ["width", "height"],
            lb: [0, "height"],
            t: ["width", 0],
            r: ["width", "height"],
            b: ["width", "height"],
            l: [0, "height"],
          }),
          (this.pointCoord = function (i, n, r) {
            var o = typeof i != "string" ? i : n[i];
            return r ? o / 2 : o;
          }),
          (this.pointCoords = function (i, n) {
            var r = this.pointsList[i];
            return {
              x: this.pointCoord(r[0], n, i === "t" || i === "b"),
              y: this.pointCoord(r[1], n, i === "r" || i === "l"),
            };
          });
      }
      (T.prototype.init = function (e, i) {
        var n = this.el.bbox();
        this.options = {};
        var r = this.el.selectize.defaults.points;
        for (var o in this.el.selectize.defaults)
          (this.options[o] = this.el.selectize.defaults[o]),
            i[o] !== void 0 && (this.options[o] = i[o]);
        var l = ["points", "pointsExclude"];
        for (var o in l) {
          var h = this.options[l[o]];
          typeof h == "string"
            ? (h = h.length > 0 ? h.split(/\s*,\s*/i) : [])
            : typeof h == "boolean" && l[o] === "points" && (h = h ? r : []),
            (this.options[l[o]] = h);
        }
        (this.options.points = [r, this.options.points].reduce(function (d, g) {
          return d.filter(function (m) {
            return g.indexOf(m) > -1;
          });
        })),
          (this.options.points = [
            this.options.points,
            this.options.pointsExclude,
          ].reduce(function (d, g) {
            return d.filter(function (m) {
              return g.indexOf(m) < 0;
            });
          })),
          (this.parent = this.el.parent()),
          (this.nested = this.nested || this.parent.group()),
          this.nested.matrix(new SVG.Matrix(this.el).translate(n.x, n.y)),
          this.options.deepSelect &&
          ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
            ? this.selectPoints(e)
            : this.selectRect(e),
          this.observe(),
          this.cleanup();
      }),
        (T.prototype.selectPoints = function (e) {
          return (
            (this.pointSelection.isSelected = e),
            this.pointSelection.set ||
              ((this.pointSelection.set = this.parent.set()),
              this.drawPoints()),
            this
          );
        }),
        (T.prototype.getPointArray = function () {
          var e = this.el.bbox();
          return this.el
            .array()
            .valueOf()
            .map(function (i) {
              return [i[0] - e.x, i[1] - e.y];
            });
        }),
        (T.prototype.drawPoints = function () {
          for (
            var e = this, i = this.getPointArray(), n = 0, r = i.length;
            n < r;
            ++n
          ) {
            var o = (function (h) {
                return function (d) {
                  (d = d || window.event).preventDefault
                    ? d.preventDefault()
                    : (d.returnValue = !1),
                    d.stopPropagation();
                  var g = d.pageX || d.touches[0].pageX,
                    m = d.pageY || d.touches[0].pageY;
                  e.el.fire("point", { x: g, y: m, i: h, event: d });
                };
              })(n),
              l = this.drawPoint(i[n][0], i[n][1])
                .addClass(this.options.classPoints)
                .addClass(this.options.classPoints + "_point")
                .on("touchstart", o)
                .on("mousedown", o);
            this.pointSelection.set.add(l);
          }
        }),
        (T.prototype.drawPoint = function (e, i) {
          var n = this.options.pointType;
          switch (n) {
            case "circle":
              return this.drawCircle(e, i);
            case "rect":
              return this.drawRect(e, i);
            default:
              if (typeof n == "function") return n.call(this, e, i);
              throw new Error("Unknown " + n + " point type!");
          }
        }),
        (T.prototype.drawCircle = function (e, i) {
          return this.nested.circle(this.options.pointSize).center(e, i);
        }),
        (T.prototype.drawRect = function (e, i) {
          return this.nested
            .rect(this.options.pointSize, this.options.pointSize)
            .center(e, i);
        }),
        (T.prototype.updatePointSelection = function () {
          var e = this.getPointArray();
          this.pointSelection.set.each(function (i) {
            (this.cx() === e[i][0] && this.cy() === e[i][1]) ||
              this.center(e[i][0], e[i][1]);
          });
        }),
        (T.prototype.updateRectSelection = function () {
          var e = this,
            i = this.el.bbox();
          if (
            (this.rectSelection.set
              .get(0)
              .attr({ width: i.width, height: i.height }),
            this.options.points.length &&
              this.options.points.map(function (r, o) {
                var l = e.pointCoords(r, i);
                e.rectSelection.set.get(o + 1).center(l.x, l.y);
              }),
            this.options.rotationPoint)
          ) {
            var n = this.rectSelection.set.length();
            this.rectSelection.set.get(n - 1).center(i.width / 2, 20);
          }
        }),
        (T.prototype.selectRect = function (e) {
          var i = this,
            n = this.el.bbox();
          function r(h) {
            return function (d) {
              (d = d || window.event).preventDefault
                ? d.preventDefault()
                : (d.returnValue = !1),
                d.stopPropagation();
              var g = d.pageX || d.touches[0].pageX,
                m = d.pageY || d.touches[0].pageY;
              i.el.fire(h, { x: g, y: m, event: d });
            };
          }
          if (
            ((this.rectSelection.isSelected = e),
            (this.rectSelection.set =
              this.rectSelection.set || this.parent.set()),
            this.rectSelection.set.get(0) ||
              this.rectSelection.set.add(
                this.nested
                  .rect(n.width, n.height)
                  .addClass(this.options.classRect)
              ),
            this.options.points.length &&
              this.rectSelection.set.length() < 2 &&
              (this.options.points.map(function (h, d) {
                var g = i.pointCoords(h, n),
                  m = i
                    .drawPoint(g.x, g.y)
                    .attr("class", i.options.classPoints + "_" + h)
                    .on("mousedown", r(h))
                    .on("touchstart", r(h));
                i.rectSelection.set.add(m);
              }),
              this.rectSelection.set.each(function () {
                this.addClass(i.options.classPoints);
              })),
            this.options.rotationPoint &&
              ((this.options.points && !this.rectSelection.set.get(9)) ||
                (!this.options.points && !this.rectSelection.set.get(1))))
          ) {
            var o = function (h) {
                (h = h || window.event).preventDefault
                  ? h.preventDefault()
                  : (h.returnValue = !1),
                  h.stopPropagation();
                var d = h.pageX || h.touches[0].pageX,
                  g = h.pageY || h.touches[0].pageY;
                i.el.fire("rot", { x: d, y: g, event: h });
              },
              l = this.drawPoint(n.width / 2, 20)
                .attr("class", this.options.classPoints + "_rot")
                .on("touchstart", o)
                .on("mousedown", o);
            this.rectSelection.set.add(l);
          }
        }),
        (T.prototype.handler = function () {
          var e = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(e.x, e.y)),
            this.rectSelection.isSelected && this.updateRectSelection(),
            this.pointSelection.isSelected && this.updatePointSelection();
        }),
        (T.prototype.observe = function () {
          var e = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              (this.observerInst =
                this.observerInst ||
                new MutationObserver(function () {
                  e.handler();
                })),
                this.observerInst.observe(this.el.node, { attributes: !0 });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch {}
          else
            this.el.off("DOMAttrModified.select"),
              (this.rectSelection.isSelected ||
                this.pointSelection.isSelected) &&
                this.el.on("DOMAttrModified.select", function () {
                  e.handler();
                });
        }),
        (T.prototype.cleanup = function () {
          !this.rectSelection.isSelected &&
            this.rectSelection.set &&
            (this.rectSelection.set.each(function () {
              this.remove();
            }),
            this.rectSelection.set.clear(),
            delete this.rectSelection.set),
            !this.pointSelection.isSelected &&
              this.pointSelection.set &&
              (this.pointSelection.set.each(function () {
                this.remove();
              }),
              this.pointSelection.set.clear(),
              delete this.pointSelection.set),
            this.pointSelection.isSelected ||
              this.rectSelection.isSelected ||
              (this.nested.remove(), delete this.nested);
        }),
        SVG.extend(SVG.Element, {
          selectize: function (e, i) {
            return (
              typeof e == "object" && ((i = e), (e = !0)),
              (this.remember("_selectHandler") || new T(this)).init(
                e === void 0 || e,
                i || {}
              ),
              this
            );
          },
        }),
        (SVG.Element.prototype.selectize.defaults = {
          points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
          pointsExclude: [],
          classRect: "svg_select_boundingRect",
          classPoints: "svg_select_points",
          pointSize: 7,
          rotationPoint: !0,
          deepSelect: !1,
          pointType: "circle",
        });
    })(),
    (function () {
      (function () {
        function T(e) {
          e.remember("_resizeHandler", this),
            (this.el = e),
            (this.parameters = {}),
            (this.lastUpdateCall = null),
            (this.p = e.doc().node.createSVGPoint());
        }
        (T.prototype.transformPoint = function (e, i, n) {
          return (
            (this.p.x = e - (this.offset.x - window.pageXOffset)),
            (this.p.y = i - (this.offset.y - window.pageYOffset)),
            this.p.matrixTransform(n || this.m)
          );
        }),
          (T.prototype._extractPosition = function (e) {
            return {
              x: e.clientX != null ? e.clientX : e.touches[0].clientX,
              y: e.clientY != null ? e.clientY : e.touches[0].clientY,
            };
          }),
          (T.prototype.init = function (e) {
            var i = this;
            if ((this.stop(), e !== "stop")) {
              for (var n in ((this.options = {}), this.el.resize.defaults))
                (this.options[n] = this.el.resize.defaults[n]),
                  e[n] !== void 0 && (this.options[n] = e[n]);
              this.el.on("lt.resize", function (r) {
                i.resize(r || window.event);
              }),
                this.el.on("rt.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("rb.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("lb.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("t.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("r.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("b.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("l.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("rot.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.el.on("point.resize", function (r) {
                  i.resize(r || window.event);
                }),
                this.update();
            }
          }),
          (T.prototype.stop = function () {
            return (
              this.el.off("lt.resize"),
              this.el.off("rt.resize"),
              this.el.off("rb.resize"),
              this.el.off("lb.resize"),
              this.el.off("t.resize"),
              this.el.off("r.resize"),
              this.el.off("b.resize"),
              this.el.off("l.resize"),
              this.el.off("rot.resize"),
              this.el.off("point.resize"),
              this
            );
          }),
          (T.prototype.resize = function (e) {
            var i = this;
            (this.m = this.el.node.getScreenCTM().inverse()),
              (this.offset = { x: window.pageXOffset, y: window.pageYOffset });
            var n = this._extractPosition(e.detail.event);
            if (
              ((this.parameters = {
                type: this.el.type,
                p: this.transformPoint(n.x, n.y),
                x: e.detail.x,
                y: e.detail.y,
                box: this.el.bbox(),
                rotation: this.el.transform().rotation,
              }),
              this.el.type === "text" &&
                (this.parameters.fontSize = this.el.attr()["font-size"]),
              e.detail.i !== void 0)
            ) {
              var r = this.el.array().valueOf();
              (this.parameters.i = e.detail.i),
                (this.parameters.pointCoords = [
                  r[e.detail.i][0],
                  r[e.detail.i][1],
                ]);
            }
            switch (e.type) {
              case "lt":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y + h[1]
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height - h[1]
                        );
                  }
                };
                break;
              case "rt":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 2);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height - h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + h[1]
                        )
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height - h[1]
                        );
                  }
                };
                break;
              case "rb":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 0);
                  if (
                    this.parameters.box.width + h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h)),
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .size(
                          this.parameters.box.width + h[0],
                          this.parameters.box.height + h[1]
                        );
                  }
                };
                break;
              case "lb":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 1);
                  if (
                    this.parameters.box.width - h[0] > 0 &&
                    this.parameters.box.height + h[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - h[0]
                        )
                      );
                    (h = this.checkAspectRatio(h, !0)),
                      this.el
                        .move(
                          this.parameters.box.x + h[0],
                          this.parameters.box.y
                        )
                        .size(
                          this.parameters.box.width - h[0],
                          this.parameters.box.height + h[1]
                        );
                  }
                };
                break;
              case "t":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 2);
                  if (this.parameters.box.height - h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y + h[1])
                      .height(this.parameters.box.height - h[1]);
                  }
                };
                break;
              case "r":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 0);
                  if (this.parameters.box.width + h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .width(this.parameters.box.width + h[0]);
                  }
                };
                break;
              case "b":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 0);
                  if (this.parameters.box.height + h[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .height(this.parameters.box.height + h[1]);
                  }
                };
                break;
              case "l":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(o, l, 1);
                  if (this.parameters.box.width - h[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x + h[0], this.parameters.box.y)
                      .width(this.parameters.box.width - h[0]);
                  }
                };
                break;
              case "rot":
                this.calc = function (o, l) {
                  var h = o + this.parameters.p.x,
                    d = l + this.parameters.p.y,
                    g = Math.atan2(
                      this.parameters.p.y -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      this.parameters.p.x -
                        this.parameters.box.x -
                        this.parameters.box.width / 2
                    ),
                    m = Math.atan2(
                      d -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      h - this.parameters.box.x - this.parameters.box.width / 2
                    ),
                    x =
                      this.parameters.rotation +
                      (180 * (m - g)) / Math.PI +
                      this.options.snapToAngle / 2;
                  this.el
                    .center(this.parameters.box.cx, this.parameters.box.cy)
                    .rotate(
                      x - (x % this.options.snapToAngle),
                      this.parameters.box.cx,
                      this.parameters.box.cy
                    );
                };
                break;
              case "point":
                this.calc = function (o, l) {
                  var h = this.snapToGrid(
                      o,
                      l,
                      this.parameters.pointCoords[0],
                      this.parameters.pointCoords[1]
                    ),
                    d = this.el.array().valueOf();
                  (d[this.parameters.i][0] =
                    this.parameters.pointCoords[0] + h[0]),
                    (d[this.parameters.i][1] =
                      this.parameters.pointCoords[1] + h[1]),
                    this.el.plot(d);
                };
            }
            this.el.fire("resizestart", {
              dx: this.parameters.x,
              dy: this.parameters.y,
              event: e,
            }),
              SVG.on(window, "touchmove.resize", function (o) {
                i.update(o || window.event);
              }),
              SVG.on(window, "touchend.resize", function () {
                i.done();
              }),
              SVG.on(window, "mousemove.resize", function (o) {
                i.update(o || window.event);
              }),
              SVG.on(window, "mouseup.resize", function () {
                i.done();
              });
          }),
          (T.prototype.update = function (e) {
            if (e) {
              var i = this._extractPosition(e),
                n = this.transformPoint(i.x, i.y),
                r = n.x - this.parameters.p.x,
                o = n.y - this.parameters.p.y;
              (this.lastUpdateCall = [r, o]),
                this.calc(r, o),
                this.el.fire("resizing", { dx: r, dy: o, event: e });
            } else
              this.lastUpdateCall &&
                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }),
          (T.prototype.done = function () {
            (this.lastUpdateCall = null),
              SVG.off(window, "mousemove.resize"),
              SVG.off(window, "mouseup.resize"),
              SVG.off(window, "touchmove.resize"),
              SVG.off(window, "touchend.resize"),
              this.el.fire("resizedone");
          }),
          (T.prototype.snapToGrid = function (e, i, n, r) {
            var o;
            return (
              r !== void 0
                ? (o = [
                    (n + e) % this.options.snapToGrid,
                    (r + i) % this.options.snapToGrid,
                  ])
                : ((n = n ?? 3),
                  (o = [
                    (this.parameters.box.x +
                      e +
                      (1 & n ? 0 : this.parameters.box.width)) %
                      this.options.snapToGrid,
                    (this.parameters.box.y +
                      i +
                      (2 & n ? 0 : this.parameters.box.height)) %
                      this.options.snapToGrid,
                  ])),
              e < 0 && (o[0] -= this.options.snapToGrid),
              i < 0 && (o[1] -= this.options.snapToGrid),
              (e -=
                Math.abs(o[0]) < this.options.snapToGrid / 2
                  ? o[0]
                  : o[0] -
                    (e < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              (i -=
                Math.abs(o[1]) < this.options.snapToGrid / 2
                  ? o[1]
                  : o[1] -
                    (i < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              this.constraintToBox(e, i, n, r)
            );
          }),
          (T.prototype.constraintToBox = function (e, i, n, r) {
            var o,
              l,
              h = this.options.constraint || {};
            return (
              r !== void 0
                ? ((o = n), (l = r))
                : ((o =
                    this.parameters.box.x +
                    (1 & n ? 0 : this.parameters.box.width)),
                  (l =
                    this.parameters.box.y +
                    (2 & n ? 0 : this.parameters.box.height))),
              h.minX !== void 0 && o + e < h.minX && (e = h.minX - o),
              h.maxX !== void 0 && o + e > h.maxX && (e = h.maxX - o),
              h.minY !== void 0 && l + i < h.minY && (i = h.minY - l),
              h.maxY !== void 0 && l + i > h.maxY && (i = h.maxY - l),
              [e, i]
            );
          }),
          (T.prototype.checkAspectRatio = function (e, i) {
            if (!this.options.saveAspectRatio) return e;
            var n = e.slice(),
              r = this.parameters.box.width / this.parameters.box.height,
              o = this.parameters.box.width + e[0],
              l = this.parameters.box.height - e[1],
              h = o / l;
            return (
              h < r
                ? ((n[1] = o / r - this.parameters.box.height),
                  i && (n[1] = -n[1]))
                : h > r &&
                  ((n[0] = this.parameters.box.width - l * r),
                  i && (n[0] = -n[0])),
              n
            );
          }),
          SVG.extend(SVG.Element, {
            resize: function (e) {
              return (
                (this.remember("_resizeHandler") || new T(this)).init(e || {}),
                this
              );
            },
          }),
          (SVG.Element.prototype.resize.defaults = {
            snapToAngle: 0.1,
            snapToGrid: 1,
            constraint: {},
            saveAspectRatio: !1,
          });
      }).call(this);
    })(),
    window.Apex === void 0 && (window.Apex = {});
  var Ft = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "initModules",
            value: function () {
              (this.ctx.publicMethods = [
                "updateOptions",
                "updateSeries",
                "appendData",
                "appendSeries",
                "toggleSeries",
                "showSeries",
                "hideSeries",
                "setLocale",
                "resetSeries",
                "zoomX",
                "toggleDataPointSelection",
                "dataURI",
                "exportToCSV",
                "addXaxisAnnotation",
                "addYaxisAnnotation",
                "addPointAnnotation",
                "clearAnnotations",
                "removeAnnotation",
                "paper",
                "destroy",
              ]),
                (this.ctx.eventList = [
                  "click",
                  "mousedown",
                  "mousemove",
                  "mouseleave",
                  "touchstart",
                  "touchmove",
                  "touchleave",
                  "mouseup",
                  "touchend",
                ]),
                (this.ctx.animations = new R(this.ctx)),
                (this.ctx.axes = new Se(this.ctx)),
                (this.ctx.core = new tn(this.ctx.el, this.ctx)),
                (this.ctx.config = new xe({})),
                (this.ctx.data = new pt(this.ctx)),
                (this.ctx.grid = new oi(this.ctx)),
                (this.ctx.graphics = new X(this.ctx)),
                (this.ctx.coreUtils = new W(this.ctx)),
                (this.ctx.crosshairs = new Ce(this.ctx)),
                (this.ctx.events = new Wt(this.ctx)),
                (this.ctx.exports = new Ot(this.ctx)),
                (this.ctx.localization = new ci(this.ctx)),
                (this.ctx.options = new se()),
                (this.ctx.responsive = new ze(this.ctx)),
                (this.ctx.series = new je(this.ctx)),
                (this.ctx.theme = new Ie(this.ctx)),
                (this.ctx.formatters = new ke(this.ctx)),
                (this.ctx.titleSubtitle = new bi(this.ctx)),
                (this.ctx.legend = new Si(this.ctx)),
                (this.ctx.toolbar = new ia(this.ctx)),
                (this.ctx.tooltip = new ge(this.ctx)),
                (this.ctx.dimensions = new Gt(this.ctx)),
                (this.ctx.updateHelpers = new qe(this.ctx)),
                (this.ctx.zoomPanSelection = new At(this.ctx)),
                (this.ctx.w.globals.tooltip = new ge(this.ctx));
            },
          },
        ]),
        T
      );
    })(),
    Hi = (function () {
      function T(e) {
        p(this, T), (this.ctx = e), (this.w = e.w);
      }
      return (
        S(T, [
          {
            key: "clear",
            value: function (e) {
              var i = e.isUpdating;
              this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                this.ctx.toolbar && this.ctx.toolbar.destroy(),
                (this.ctx.animations = null),
                (this.ctx.axes = null),
                (this.ctx.annotations = null),
                (this.ctx.core = null),
                (this.ctx.data = null),
                (this.ctx.grid = null),
                (this.ctx.series = null),
                (this.ctx.responsive = null),
                (this.ctx.theme = null),
                (this.ctx.formatters = null),
                (this.ctx.titleSubtitle = null),
                (this.ctx.legend = null),
                (this.ctx.dimensions = null),
                (this.ctx.options = null),
                (this.ctx.crosshairs = null),
                (this.ctx.zoomPanSelection = null),
                (this.ctx.updateHelpers = null),
                (this.ctx.toolbar = null),
                (this.ctx.localization = null),
                (this.ctx.w.globals.tooltip = null),
                this.clearDomElements({ isUpdating: i });
            },
          },
          {
            key: "killSVG",
            value: function (e) {
              e.each(function (i, n) {
                this.removeClass("*"), this.off(), this.stop();
              }, !0),
                e.ungroup(),
                e.clear();
            },
          },
          {
            key: "clearDomElements",
            value: function (e) {
              var i = this,
                n = e.isUpdating,
                r = this.w.globals.dom.Paper.node;
              r.parentNode &&
                r.parentNode.parentNode &&
                !n &&
                (r.parentNode.parentNode.style.minHeight = "unset");
              var o = this.w.globals.dom.baseEl;
              o &&
                this.ctx.eventList.forEach(function (h) {
                  o.removeEventListener(h, i.ctx.events.documentEvent);
                });
              var l = this.w.globals.dom;
              if (this.ctx.el !== null)
                for (; this.ctx.el.firstChild; )
                  this.ctx.el.removeChild(this.ctx.el.firstChild);
              this.killSVG(l.Paper),
                l.Paper.remove(),
                (l.elWrap = null),
                (l.elGraphical = null),
                (l.elLegendWrap = null),
                (l.elLegendForeign = null),
                (l.baseEl = null),
                (l.elGridRect = null),
                (l.elGridRectMask = null),
                (l.elGridRectMarkerMask = null),
                (l.elForecastMask = null),
                (l.elNonForecastMask = null),
                (l.elDefs = null);
            },
          },
        ]),
        T
      );
    })(),
    ht = new WeakMap(),
    Na = (function () {
      function T(e, i) {
        p(this, T),
          (this.opts = i),
          (this.ctx = this),
          (this.w = new Me(i).init()),
          (this.el = e),
          (this.w.globals.cuid = L.randomId()),
          (this.w.globals.chartID = this.w.config.chart.id
            ? L.escapeString(this.w.config.chart.id)
            : this.w.globals.cuid),
          new Ft(this).initModules(),
          (this.create = L.bind(this.create, this)),
          (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
          (this.parentResizeHandler = this._parentResizeCallback.bind(this));
      }
      return (
        S(
          T,
          [
            {
              key: "render",
              value: function () {
                var e = this;
                return new Promise(function (i, n) {
                  if (e.el !== null) {
                    Apex._chartInstances === void 0 &&
                      (Apex._chartInstances = []),
                      e.w.config.chart.id &&
                        Apex._chartInstances.push({
                          id: e.w.globals.chartID,
                          group: e.w.config.chart.group,
                          chart: e,
                        }),
                      e.setLocale(e.w.config.chart.defaultLocale);
                    var r = e.w.config.chart.events.beforeMount;
                    if (
                      (typeof r == "function" && r(e, e.w),
                      e.events.fireEvent("beforeMount", [e, e.w]),
                      window.addEventListener("resize", e.windowResizeHandler),
                      (function (m, x) {
                        var v = !1;
                        if (m.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                          var w = m.getBoundingClientRect();
                          (m.style.display !== "none" && w.width !== 0) ||
                            (v = !0);
                        }
                        var C = new ResizeObserver(function (P) {
                          v && x.call(m, P), (v = !0);
                        });
                        m.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                          ? Array.from(m.children).forEach(function (P) {
                              return C.observe(P);
                            })
                          : C.observe(m),
                          ht.set(x, C);
                      })(e.el.parentNode, e.parentResizeHandler),
                      !e.css)
                    ) {
                      var o = e.el.getRootNode && e.el.getRootNode(),
                        l = L.is("ShadowRoot", o),
                        h = e.el.ownerDocument,
                        d = h.getElementById("apexcharts-css");
                      (!l && d) ||
                        ((e.css = document.createElement("style")),
                        (e.css.id = "apexcharts-css"),
                        (e.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`),
                        l ? o.prepend(e.css) : h.head.appendChild(e.css));
                    }
                    var g = e.create(e.w.config.series, {});
                    if (!g) return i(e);
                    e.mount(g)
                      .then(function () {
                        typeof e.w.config.chart.events.mounted == "function" &&
                          e.w.config.chart.events.mounted(e, e.w),
                          e.events.fireEvent("mounted", [e, e.w]),
                          i(g);
                      })
                      .catch(function (m) {
                        n(m);
                      });
                  } else n(new Error("Element not found"));
                });
              },
            },
            {
              key: "create",
              value: function (e, i) {
                var n = this.w;
                new Ft(this).initModules();
                var r = this.w.globals;
                if (
                  ((r.noData = !1),
                  (r.animationEnded = !1),
                  this.responsive.checkResponsiveConfig(i),
                  n.config.xaxis.convertedCatToNumeric &&
                    new ue(n.config).convertCatToNumericXaxis(
                      n.config,
                      this.ctx
                    ),
                  this.el === null ||
                    (this.core.setupElements(),
                    n.config.chart.type === "treemap" &&
                      ((n.config.grid.show = !1),
                      (n.config.yaxis[0].show = !1)),
                    r.svgWidth === 0))
                )
                  return (r.animationEnded = !0), null;
                var o = W.checkComboSeries(e);
                (r.comboCharts = o.comboCharts),
                  (r.comboBarCount = o.comboBarCount);
                var l = e.every(function (m) {
                  return m.data && m.data.length === 0;
                });
                (e.length === 0 || l) && this.series.handleNoData(),
                  this.events.setupEventHandlers(),
                  this.data.parseData(e),
                  this.theme.init(),
                  new He(this).setGlobalMarkerSize(),
                  this.formatters.setLabelFormatters(),
                  this.titleSubtitle.draw(),
                  (r.noData &&
                    r.collapsedSeries.length !== r.series.length &&
                    !n.config.legend.showForSingleSeries) ||
                    this.legend.init(),
                  this.series.hasAllSeriesEqualX(),
                  r.axisCharts &&
                    (this.core.coreCalculations(),
                    n.config.xaxis.type !== "category" &&
                      this.formatters.setLabelFormatters(),
                    (this.ctx.toolbar.minX = n.globals.minX),
                    (this.ctx.toolbar.maxX = n.globals.maxX)),
                  this.formatters.heatmapLabelFormatters(),
                  new W(this).getLargestMarkerSize(),
                  this.dimensions.plotCoords();
                var h = this.core.xySettings();
                this.grid.createGridMask();
                var d = this.core.plotChartType(e, h),
                  g = new Ke(this);
                return (
                  g.bringForward(),
                  n.config.dataLabels.background.enabled &&
                    g.dataLabelsBackground(),
                  this.core.shiftGraphPosition(),
                  {
                    elGraph: d,
                    xyRatios: h,
                    dimensions: {
                      plot: {
                        left: n.globals.translateX,
                        top: n.globals.translateY,
                        width: n.globals.gridWidth,
                        height: n.globals.gridHeight,
                      },
                    },
                  }
                );
              },
            },
            {
              key: "mount",
              value: function () {
                var e = this,
                  i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  n = this,
                  r = n.w;
                return new Promise(function (o, l) {
                  if (n.el === null)
                    return l(
                      new Error(
                        "Not enough data to display or target element not found"
                      )
                    );
                  (i === null || r.globals.allSeriesCollapsed) &&
                    n.series.handleNoData(),
                    (n.grid = new oi(n));
                  var h,
                    d,
                    g = n.grid.drawGrid();
                  if (
                    ((n.annotations = new fe(n)),
                    n.annotations.drawImageAnnos(),
                    n.annotations.drawTextAnnos(),
                    r.config.grid.position === "back" &&
                      (g && r.globals.dom.elGraphical.add(g.el),
                      g != null &&
                        (h = g.elGridBorders) !== null &&
                        h !== void 0 &&
                        h.node &&
                        r.globals.dom.elGraphical.add(g.elGridBorders)),
                    Array.isArray(i.elGraph))
                  )
                    for (var m = 0; m < i.elGraph.length; m++)
                      r.globals.dom.elGraphical.add(i.elGraph[m]);
                  else r.globals.dom.elGraphical.add(i.elGraph);
                  r.config.grid.position === "front" &&
                    (g && r.globals.dom.elGraphical.add(g.el),
                    g != null &&
                      (d = g.elGridBorders) !== null &&
                      d !== void 0 &&
                      d.node &&
                      r.globals.dom.elGraphical.add(g.elGridBorders)),
                    r.config.xaxis.crosshairs.position === "front" &&
                      n.crosshairs.drawXCrosshairs(),
                    r.config.yaxis[0].crosshairs.position === "front" &&
                      n.crosshairs.drawYCrosshairs(),
                    r.config.chart.type !== "treemap" &&
                      n.axes.drawAxis(r.config.chart.type, g);
                  var x = new Tt(e.ctx, g),
                    v = new Qt(e.ctx, g);
                  if (
                    (g !== null &&
                      (x.xAxisLabelCorrections(g.xAxisTickWidth),
                      v.setYAxisTextAlignments(),
                      r.config.yaxis.map(function (C, P) {
                        r.globals.ignoreYAxisIndexes.indexOf(P) === -1 &&
                          v.yAxisTitleRotate(P, C.opposite);
                      })),
                    n.annotations.drawAxesAnnotations(),
                    !r.globals.noData)
                  ) {
                    if (
                      (r.config.tooltip.enabled &&
                        !r.globals.noData &&
                        n.w.globals.tooltip.drawTooltip(i.xyRatios),
                      r.globals.axisCharts &&
                        (r.globals.isXNumeric ||
                          r.config.xaxis.convertedCatToNumeric ||
                          r.globals.isRangeBar))
                    )
                      (r.config.chart.zoom.enabled ||
                        (r.config.chart.selection &&
                          r.config.chart.selection.enabled) ||
                        (r.config.chart.pan && r.config.chart.pan.enabled)) &&
                        n.zoomPanSelection.init({ xyRatios: i.xyRatios });
                    else {
                      var w = r.config.chart.toolbar.tools;
                      [
                        "zoom",
                        "zoomin",
                        "zoomout",
                        "selection",
                        "pan",
                        "reset",
                      ].forEach(function (C) {
                        w[C] = !1;
                      });
                    }
                    r.config.chart.toolbar.show &&
                      !r.globals.allSeriesCollapsed &&
                      n.toolbar.createToolbar();
                  }
                  r.globals.memory.methodsToExec.length > 0 &&
                    r.globals.memory.methodsToExec.forEach(function (C) {
                      C.method(C.params, !1, C.context);
                    }),
                    r.globals.axisCharts ||
                      r.globals.noData ||
                      n.core.resizeNonAxisCharts(),
                    o(n);
                });
              },
            },
            {
              key: "destroy",
              value: function () {
                var e, i;
                window.removeEventListener("resize", this.windowResizeHandler),
                  this.el.parentNode,
                  (e = this.parentResizeHandler),
                  (i = ht.get(e)) && (i.disconnect(), ht.delete(e));
                var n = this.w.config.chart.id;
                n &&
                  Apex._chartInstances.forEach(function (r, o) {
                    r.id === L.escapeString(n) &&
                      Apex._chartInstances.splice(o, 1);
                  }),
                  new Hi(this.ctx).clear({ isUpdating: !1 });
              },
            },
            {
              key: "updateOptions",
              value: function (e) {
                var i = this,
                  n =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  r =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  o =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  l =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  h = this.w;
                return (
                  (h.globals.selection = void 0),
                  e.series &&
                    (this.series.resetSeries(!1, !0, !1),
                    e.series.length &&
                      e.series[0].data &&
                      (e.series = e.series.map(function (d, g) {
                        return i.updateHelpers._extendSeries(d, g);
                      })),
                    this.updateHelpers.revertDefaultAxisMinMax()),
                  e.xaxis && (e = this.updateHelpers.forceXAxisUpdate(e)),
                  e.yaxis && (e = this.updateHelpers.forceYAxisUpdate(e)),
                  h.globals.collapsedSeriesIndices.length > 0 &&
                    this.series.clearPreviousPaths(),
                  e.theme && (e = this.theme.updateThemeOptions(e)),
                  this.updateHelpers._updateOptions(e, n, r, o, l)
                );
              },
            },
            {
              key: "updateSeries",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2];
                return (
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(e, i, n)
                );
              },
            },
            {
              key: "appendSeries",
              value: function (e) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  r = this.w.config.series.slice();
                return (
                  r.push(e),
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(r, i, n)
                );
              },
            },
            {
              key: "appendData",
              value: function (e) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n = this;
                (n.w.globals.dataChanged = !0), n.series.getPreviousPaths();
                for (
                  var r = n.w.config.series.slice(), o = 0;
                  o < r.length;
                  o++
                )
                  if (e[o] !== null && e[o] !== void 0)
                    for (var l = 0; l < e[o].data.length; l++)
                      r[o].data.push(e[o].data[l]);
                return (
                  (n.w.config.series = r),
                  i && (n.w.globals.initialSeries = L.clone(n.w.config.series)),
                  this.update()
                );
              },
            },
            {
              key: "update",
              value: function (e) {
                var i = this;
                return new Promise(function (n, r) {
                  new Hi(i.ctx).clear({ isUpdating: !0 });
                  var o = i.create(i.w.config.series, e);
                  if (!o) return n(i);
                  i.mount(o)
                    .then(function () {
                      typeof i.w.config.chart.events.updated == "function" &&
                        i.w.config.chart.events.updated(i, i.w),
                        i.events.fireEvent("updated", [i, i.w]),
                        (i.w.globals.isDirty = !0),
                        n(i);
                    })
                    .catch(function (l) {
                      r(l);
                    });
                });
              },
            },
            {
              key: "getSyncedCharts",
              value: function () {
                var e = this.getGroupedCharts(),
                  i = [this];
                return (
                  e.length &&
                    ((i = []),
                    e.forEach(function (n) {
                      i.push(n);
                    })),
                  i
                );
              },
            },
            {
              key: "getGroupedCharts",
              value: function () {
                var e = this;
                return Apex._chartInstances
                  .filter(function (i) {
                    if (i.group) return !0;
                  })
                  .map(function (i) {
                    return e.w.config.chart.group === i.group ? i.chart : e;
                  });
              },
            },
            {
              key: "toggleSeries",
              value: function (e) {
                return this.series.toggleSeries(e);
              },
            },
            {
              key: "highlightSeriesOnLegendHover",
              value: function (e, i) {
                return this.series.toggleSeriesOnHover(e, i);
              },
            },
            {
              key: "showSeries",
              value: function (e) {
                this.series.showSeries(e);
              },
            },
            {
              key: "hideSeries",
              value: function (e) {
                this.series.hideSeries(e);
              },
            },
            {
              key: "resetSeries",
              value: function () {
                var e =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1];
                this.series.resetSeries(e, i);
              },
            },
            {
              key: "addEventListener",
              value: function (e, i) {
                this.events.addEventListener(e, i);
              },
            },
            {
              key: "removeEventListener",
              value: function (e, i) {
                this.events.removeEventListener(e, i);
              },
            },
            {
              key: "addXaxisAnnotation",
              value: function (e) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  r = this;
                n && (r = n), r.annotations.addXaxisAnnotationExternal(e, i, r);
              },
            },
            {
              key: "addYaxisAnnotation",
              value: function (e) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  r = this;
                n && (r = n), r.annotations.addYaxisAnnotationExternal(e, i, r);
              },
            },
            {
              key: "addPointAnnotation",
              value: function (e) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  n =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  r = this;
                n && (r = n), r.annotations.addPointAnnotationExternal(e, i, r);
              },
            },
            {
              key: "clearAnnotations",
              value: function () {
                var e =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : void 0,
                  i = this;
                e && (i = e), i.annotations.clearAnnotations(i);
              },
            },
            {
              key: "removeAnnotation",
              value: function (e) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : void 0,
                  n = this;
                i && (n = i), n.annotations.removeAnnotation(n, e);
              },
            },
            {
              key: "getChartArea",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-inner"
                );
              },
            },
            {
              key: "getSeriesTotalXRange",
              value: function (e, i) {
                return this.coreUtils.getSeriesTotalsXRange(e, i);
              },
            },
            {
              key: "getHighestValueInSeries",
              value: function () {
                var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new li(this.ctx).getMinYMaxY(e).highestY;
              },
            },
            {
              key: "getLowestValueInSeries",
              value: function () {
                var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new li(this.ctx).getMinYMaxY(e).lowestY;
              },
            },
            {
              key: "getSeriesTotal",
              value: function () {
                return this.w.globals.seriesTotals;
              },
            },
            {
              key: "toggleDataPointSelection",
              value: function (e, i) {
                return this.updateHelpers.toggleDataPointSelection(e, i);
              },
            },
            {
              key: "zoomX",
              value: function (e, i) {
                this.ctx.toolbar.zoomUpdateOptions(e, i);
              },
            },
            {
              key: "setLocale",
              value: function (e) {
                this.localization.setCurrentLocaleValues(e);
              },
            },
            {
              key: "dataURI",
              value: function (e) {
                return new Ot(this.ctx).dataURI(e);
              },
            },
            {
              key: "exportToCSV",
              value: function () {
                var e =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
                return new Ot(this.ctx).exportToCSV(e);
              },
            },
            {
              key: "paper",
              value: function () {
                return this.w.globals.dom.Paper;
              },
            },
            {
              key: "_parentResizeCallback",
              value: function () {
                this.w.globals.animationEnded &&
                  this.w.config.chart.redrawOnParentResize &&
                  this._windowResize();
              },
            },
            {
              key: "_windowResize",
              value: function () {
                var e = this;
                clearTimeout(this.w.globals.resizeTimer),
                  (this.w.globals.resizeTimer = window.setTimeout(function () {
                    (e.w.globals.resized = !0),
                      (e.w.globals.dataChanged = !1),
                      e.ctx.update();
                  }, 150));
              },
            },
            {
              key: "_windowResizeHandler",
              value: function () {
                var e = this.w.config.chart.redrawOnWindowResize;
                typeof e == "function" && (e = e()), e && this._windowResize();
              },
            },
          ],
          [
            {
              key: "getChartByID",
              value: function (e) {
                var i = L.escapeString(e),
                  n = Apex._chartInstances.filter(function (r) {
                    return r.id === i;
                  })[0];
                return n && n.chart;
              },
            },
            {
              key: "initOnLoad",
              value: function () {
                for (
                  var e = document.querySelectorAll("[data-apexcharts]"), i = 0;
                  i < e.length;
                  i++
                )
                  new T(
                    e[i],
                    JSON.parse(e[i].getAttribute("data-options"))
                  ).render();
              },
            },
            {
              key: "exec",
              value: function (e, i) {
                var n = this.getChartByID(e);
                if (n) {
                  n.w.globals.isExecCalled = !0;
                  var r = null;
                  if (n.publicMethods.indexOf(i) !== -1) {
                    for (
                      var o = arguments.length,
                        l = new Array(o > 2 ? o - 2 : 0),
                        h = 2;
                      h < o;
                      h++
                    )
                      l[h - 2] = arguments[h];
                    r = n[i].apply(n, l);
                  }
                  return r;
                }
              },
            },
            {
              key: "merge",
              value: function (e, i) {
                return L.extend(e, i);
              },
            },
          ]
        ),
        T
      );
    })();
  t.exports = Na;
})(yy, no);
var Df;
Object.defineProperty(Rf, "__esModule", { value: !0 });
var by =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? function (t) {
          return typeof t;
        }
      : function (t) {
          return t &&
            typeof Symbol == "function" &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? "symbol"
            : typeof t;
        },
  wy =
    Object.assign ||
    function (t) {
      for (var a = 1; a < arguments.length; a++) {
        var s,
          c = arguments[a];
        for (s in c)
          Object.prototype.hasOwnProperty.call(c, s) && (t[s] = c[s]);
      }
      return t;
    },
  ky = (function () {
    function t(a, s) {
      for (var c = 0; c < s.length; c++) {
        var u = s[c];
        (u.enumerable = u.enumerable || !1),
          (u.configurable = !0),
          "value" in u && (u.writable = !0),
          Object.defineProperty(a, u.key, u);
      }
    }
    return function (a, s, c) {
      return s && t(a.prototype, s), c && t(a, c), a;
    };
  })(),
  Sy = no,
  jf = gh(Sy),
  zf = ee,
  ar = gh(zf),
  Cy = Ae,
  Xi = gh(Cy);
function gh(t) {
  return t && t.__esModule ? t : { default: t };
}
function Ay(t, a, s) {
  return (
    a in t
      ? Object.defineProperty(t, a, {
          value: s,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[a] = s),
    t
  );
}
function Py(t, a) {
  var s,
    c = {};
  for (s in t)
    0 <= a.indexOf(s) ||
      (Object.prototype.hasOwnProperty.call(t, s) && (c[s] = t[s]));
  return c;
}
function Ly(t, a) {
  if (!(t instanceof a))
    throw new TypeError("Cannot call a class as a function");
}
function Ey(t, a) {
  if (t) return !a || (typeof a != "object" && typeof a != "function") ? t : a;
  throw new ReferenceError(
    "this hasn't been initialised - super() hasn't been called"
  );
}
function My(t, a) {
  if (typeof a != "function" && a !== null)
    throw new TypeError(
      "Super expression must either be null or a function, not " + typeof a
    );
  (t.prototype = Object.create(a && a.prototype, {
    constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 },
  })),
    a &&
      (Object.setPrototypeOf ? Object.setPrototypeOf(t, a) : (t.__proto__ = a));
}
window.ApexCharts = jf.default;
var rd = (function () {
  function t(a) {
    Ly(this, t);
    var s = Ey(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, a));
    return (
      ar.default.createRef
        ? (s.chartRef = ar.default.createRef())
        : (s.setRef = function (c) {
            return (s.chartRef = c);
          }),
      (s.chart = null),
      s
    );
  }
  return (
    My(t, zf.Component),
    ky(t, [
      {
        key: "render",
        value: function () {
          var a = Py(this.props, []);
          return ar.default.createElement(
            "div",
            wy({ ref: ar.default.createRef ? this.chartRef : this.setRef }, a)
          );
        },
      },
      {
        key: "componentDidMount",
        value: function () {
          var a = ar.default.createRef ? this.chartRef.current : this.chartRef;
          (this.chart = new jf.default(a, this.getConfig())),
            this.chart.render();
        },
      },
      {
        key: "getConfig",
        value: function () {
          var p = this.props,
            a = p.type,
            s = p.height,
            c = p.width,
            u = p.series,
            p = p.options;
          return this.extend(p, {
            chart: { type: a, height: s, width: c },
            series: u,
          });
        },
      },
      {
        key: "isObject",
        value: function (a) {
          return (
            a &&
            (a === void 0 ? "undefined" : by(a)) === "object" &&
            !Array.isArray(a) &&
            a != null
          );
        },
      },
      {
        key: "extend",
        value: function (a, s) {
          var c = this,
            u =
              (typeof Object.assign != "function" &&
                (Object.assign = function (p) {
                  if (p == null)
                    throw new TypeError(
                      "Cannot convert undefined or null to object"
                    );
                  for (var b = Object(p), S = 1; S < arguments.length; S++) {
                    var E = arguments[S];
                    if (E != null)
                      for (var N in E) E.hasOwnProperty(N) && (b[N] = E[N]);
                  }
                  return b;
                }),
              Object.assign({}, a));
          return (
            this.isObject(a) &&
              this.isObject(s) &&
              Object.keys(s).forEach(function (p) {
                c.isObject(s[p]) && p in a
                  ? (u[p] = c.extend(a[p], s[p]))
                  : Object.assign(u, Ay({}, p, s[p]));
              }),
            u
          );
        },
      },
      {
        key: "componentDidUpdate",
        value: function (a) {
          if (!this.chart) return null;
          var u = this.props,
            S = u.options,
            s = u.series,
            c = u.height,
            u = u.width,
            p = JSON.stringify(a.options),
            b = JSON.stringify(a.series),
            S = JSON.stringify(S),
            E = JSON.stringify(s);
          (p === S && b === E && c === a.height && u === a.width) ||
            (b !== E && p === S && c === a.height && u === a.width
              ? this.chart.updateSeries(s)
              : this.chart.updateOptions(this.getConfig()));
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.chart &&
            typeof this.chart.destroy == "function" &&
            this.chart.destroy();
        },
      },
    ]),
    t
  );
})();
((Df = Rf.default = rd).propTypes = {
  type: Xi.default.string.isRequired,
  width: Xi.default.oneOfType([Xi.default.string, Xi.default.number]),
  height: Xi.default.oneOfType([Xi.default.string, Xi.default.number]),
  series: Xi.default.array.isRequired,
  options: Xi.default.object.isRequired,
}),
  (rd.defaultProps = { type: "line", width: "100%", height: "auto" });
class Ny extends yt.Component {
  constructor(a) {
    super(a),
      (this.state = {
        series: [{ data: [] }],
        options: {
          chart: {
            id: "realtime",
            height: 350,
            type: "line",
            animations: {
              enabled: !0,
              easing: "linear",
              dynamicAnimation: { speed: 1e3 },
            },
            toolbar: { show: !1 },
            zoom: { enabled: !0 },
          },
          dataLabels: { enabled: !1 },
          stroke: { curve: "smooth" },
          title: { text: "", align: "left" },
          markers: { size: 0 },
          xaxis: { type: "datetime" },
          yaxis: { max: 100 },
          legend: { show: !1 },
        },
      });
  }
  getRandomDataPoint() {
    const a = new Date(),
      s = Math.floor(Math.random() * 100);
    return { x: a.getTime(), y: s };
  }
  componentDidMount() {
    this.interval = setInterval(() => {
      try {
        const a = this.getRandomDataPoint();
        this.setState((s) => ({
          series: [{ data: [...s.series[0].data, a] }],
        }));
      } catch (a) {
        console.error("Error updating series data:", a);
      }
    }, 1e3);
  }
  componentWillUnmount() {
    clearInterval(this.interval);
  }
  render() {
    return k.jsx("div", {
      id: "chart",
      style: { width: "100%", height: "100%" },
      children: k.jsx(Df, {
        options: this.state.options,
        series: this.state.series,
        type: "line",
        height: "100%",
        width: "100%",
      }),
    });
  }
}
const Ty = () => {
  const [t, a] = ee.useState(!1),
    [s, c] = ee.useState(""),
    u = ta(),
    p = ee.useContext(yi),
    [b, S] = ee.useState(p.store.userinfo.ownerstatic[0]),
    [E, N] = ee.useState(p.store.userinfo.ownerstatic[1]),
    [F, H] = ee.useState(p.store.userinfo.ownerstatic[2]),
    [j, V] = ee.useState(p.store.userinfo.ownerstatic[3]),
    [q, K] = ee.useState(p.store.userinfo.info),
    [ae, G] = ee.useState(p.store.userinfo.phone),
    [L, R] = ee.useState(p.store.userinfo.phone1),
    [O, X] = ee.useState(p.store.userinfo.email),
    [W, U] = ee.useState(p.store.userinfo.regn),
    [te, he] = ee.useState(p.store.userinfo.gstn),
    [J, Y] = ee.useState(p.store.billseries.main),
    [se, fe] = ee.useState(p.store.billseries.esti),
    [ie, ke] = ee.useState(p.store.billseries.challan),
    [_e, Le] = ee.useState(p.store.billseries.saleorder),
    [ue, xe] = ee.useState(p.store.billseries.purchaseorder),
    [be, Me] = ee.useState(p.store.billseries.receipt),
    [Te, He] = ee.useState(p.store.bankinfo.bank1.name),
    [De, Ke] = ee.useState(p.store.bankinfo.bank1.add),
    [je, pt] = ee.useState(p.store.bankinfo.bank1.upid),
    [Ze, Ot] = ee.useState(p.store.bankinfo.bank1.ifsc),
    [Tt, oi] = ee.useState(p.store.bankinfo.bank1.ac),
    [_t, li] = ee.useState(p.store.bankinfo.bank2.name),
    [Qt, Wt] = ee.useState(p.store.bankinfo.bank2.add),
    [ci, Se] = ee.useState(p.store.bankinfo.bank2.upid),
    [Ce, ze] = ee.useState(p.store.bankinfo.bank2.ifsc),
    [Ie, bi] = ee.useState(p.store.bankinfo.bank2.ac),
    [wi, La] = ee.useState(null),
    ki = (Q) => {
      c(Q), a(!0);
    },
    Oi = () => {
      p.updateStore((Q) => ({
        ...Q,
        recdic: { ...Q.recdic, pan: p.store.recdic.pantemplate },
      })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, cscr: "CASH" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, regn: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, gstn: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, add1: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, add2: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, mobile: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, stcode: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, pan: { ...Q.recdic.pan, email: "" } },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, ac: p.store.recdic.ac },
        })),
        p.updateStore((Q) => ({
          ...Q,
          recdic: { ...Q.recdic, grid: { [0]: p.store.recdic.itemtemplate } },
        })),
        setnavlinkKey(Date.now()),
        u("/");
    },
    Gt = (Q, le) => {
      switch ((Q.preventDefault(), le)) {
        case "updateuserinfo":
          ia(te) || (alert("WRONG GST"), a(!1));
          const ge = {
            name: b,
            add1: E,
            add2: F,
            add3: j,
            info: q,
            phone1: ae,
            phone2: L,
            email: O,
            regn: W,
            gstn: te,
          };
          fetch(`${p.api}/adduserinfo`, {
            method: "post",
            headers: { "content-type": "application/json" },
            body: JSON.stringify(ge),
          })
            .then((ve) => ve.json())
            .then((ve) => {
              u("/");
            })
            .catch((ve) => {
              console.error("Error fetching data:", ve);
            });
          break;
        case "updateBillSeries":
          const me = {
            main: J,
            esti: se,
            saleorder: _e,
            purchaseorder: ue,
            receipt: be,
            challan: ie,
          };
          fetch(`${p.api}/addbillseriesinfo`, {
            method: "post",
            headers: { "content-type": "application/json" },
            body: JSON.stringify(me),
          })
            .then((ve) => ve.json())
            .then((ve) => {
              u("/");
            })
            .catch((ve) => {
              console.error("Error fetching data:", ve);
            });
          break;
        case "updateBankInfo":
          const Ee = {
            name1: Te,
            acno1: Tt,
            ifsc1: Ze,
            upid1: je,
            add1: De,
            name2: _t,
            acno2: Ie,
            ifsc2: Ce,
            upid2: ci,
            add2: Qt,
          };
          fetch(`${p.api}/addbankinfo`, {
            method: "post",
            headers: { "content-type": "application/json" },
            body: JSON.stringify(Ee),
          })
            .then((ve) => ve.json())
            .then((ve) => {
              u("/");
            })
            .catch((ve) => {
              console.error("Error fetching data:", ve);
            });
          break;
      }
      a(!1);
    },
    Ea = (Q) => {
      const le = Q.target.files[0];
      La(le);
    },
    Si = (Q) => {
      const le = new FormData();
      le.append("ownerimage", wi),
        le.append("filename", sessionStorage.getItem("username")),
        fetch(`${p.api}/ownerimage`, { method: "post", body: le })
          .then((ge) => ge.json())
          .then((ge) => {
            console.log("Image uploaded successfully!");
          })
          .catch((ge) => {
            console.error("Error uploading image:", ge);
          }),
        a(!1),
        window.location.reload();
    };
  function ia(Q) {
    if (Q.length !== 15) return !1;
    var le = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
      ge = le.length;
    let me = {},
      Ee = {};
    for (let Ue = 0; Ue < ge; Ue++) me[le[Ue]] = Ue;
    for (let Ue = 0; Ue < le.length; Ue++) Ee[Ue] = le[Ue];
    const we = Q.split("")
        .slice(0, 14)
        .map((Ue, Qe) =>
          Qe % 2 === 0 ? me[Ue.toUpperCase()] : me[Ue.toUpperCase()] * 2
        ),
      Ge = we.map((Ue) => Math.floor(Ue / ge)),
      it = we
        .map((Ue, Qe) => Ue - Ge[Qe] * ge)
        .map((Ue, Qe) => Ue + Ge[Qe])
        .reduce((Ue, Qe) => Ue + Qe, 0),
      wt = it + -(Math.floor(it / ge) * ge),
      Vt = ge - wt,
      Fi = Q[14],
      Ma = Ee[Vt];
    return Fi === Ma;
  }
  const At = (Q) => {
      const { name: le, value: ge } = Q.target,
        me = ge.toUpperCase();
      switch (le) {
        case "shopname":
          S(me);
          break;
        case "add1":
          N(me);
          break;
        case "add2":
          H(me);
          break;
        case "add3":
          V(me);
          break;
        case "disclaimer":
          K(me);
          break;
        case "phoneno":
          G(me);
          break;
        case "altphone":
          R(me);
          break;
        case "email":
          X(me);
          break;
        case "regn":
          U(me);
          break;
        case "gstn":
          he(me);
          break;
      }
    },
    ei = (Q) => {
      const { name: le, value: ge } = Q.target,
        me = ge.toUpperCase();
      switch (le) {
        case "mainbill":
          Y(me);
          break;
        case "challanbill":
          ke(me);
          break;
        case "estibill":
          fe(me);
          break;
        case "saleorderbill":
          Le(me);
          break;
        case "purchaseorderbill":
          xe(me);
          break;
        case "receiptbill":
          Me(me);
          break;
      }
    },
    Pt = (Q) => {
      const { name: le, value: ge } = Q.target,
        me = ge.toUpperCase();
      switch (le) {
        case "bankName1":
          He(me);
          break;
        case "bankadd1":
          Ke(me);
          break;
        case "bankifsc1":
          Ot(me);
          break;
        case "bankupid1":
          pt(me);
          break;
        case "bankac1":
          oi(me);
          break;
        case "bankName2":
          li(me);
          break;
        case "bankadd2":
          Wt(me);
          break;
        case "bankifsc2":
          ze(me);
          break;
        case "bankupid2":
          Se(me);
          break;
        case "bankac2":
          bi(me);
          break;
      }
    },
    Ve = (Q) => {
      Q.preventDefault(), a(!1);
    },
    ne = () => {
      switch (s) {
        case "updateuserinfo":
          return k.jsxs("form", {
            onSubmit: (Q) => Gt(Q, "updateuserinfo"),
            children: [
              k.jsx("input", {
                type: "text",
                name: "shopname",
                placeholder: "Shop Name",
                value: b,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "add1",
                placeholder: "Address 1",
                value: E,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "add2",
                placeholder: "Address 2",
                value: F,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "add3",
                placeholder: "Address 3",
                value: j,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "disclaimer",
                placeholder: "Disclaimer",
                value: q,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "phoneno",
                placeholder: "Phone No",
                value: ae,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "altphone",
                placeholder: "Alternate Phone No",
                value: L,
                onChange: At,
              }),
              k.jsx("input", {
                type: "email",
                name: "email",
                placeholder: "Email",
                value: O,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "regn",
                placeholder: "Registration Number",
                value: W,
                onChange: At,
              }),
              k.jsx("input", {
                type: "text",
                name: "gstn",
                placeholder: "GSTIN",
                value: te,
                onChange: At,
              }),
              k.jsx("input", { type: "text", placeholder: "Bill Page Type" }),
              k.jsx("button", {
                className: "save-button-user-info",
                type: "submit",
                children: "Save",
              }),
              k.jsx("button", {
                className: "close-button-user-info",
                onClick: Ve,
                children: "Close",
              }),
            ],
          });
        case "updateBillSeries":
          return k.jsxs("form", {
            onSubmit: (Q) => Gt(Q, "updateBillSeries"),
            children: [
              k.jsx("input", {
                type: "text",
                name: "mainbill",
                placeholder: "Main",
                value: J,
                onChange: ei,
              }),
              k.jsx("input", {
                type: "text",
                name: "challanbill",
                placeholder: "Challan",
                value: ie,
                onChange: ei,
              }),
              k.jsx("input", {
                type: "text",
                name: "estibill",
                placeholder: "Estimate",
                value: se,
                onChange: ei,
              }),
              k.jsx("input", {
                type: "text",
                name: "saleorderbill",
                placeholder: "Sale Order",
                value: _e,
                onChange: ei,
              }),
              k.jsx("input", {
                type: "text",
                name: "purchaseorderbill",
                placeholder: "Purchase Order",
                value: ue,
                onChange: ei,
              }),
              k.jsx("input", {
                type: "text",
                name: "receiptbill",
                placeholder: "Receipt",
                value: be,
                onChange: ei,
              }),
              k.jsx("button", {
                className: "save-button-user-info",
                type: "submit",
                children: "Save",
              }),
              k.jsx("button", {
                className: "close-button-user-info",
                onClick: Ve,
                children: "Close",
              }),
            ],
          });
        case "updateBankInfo":
          return k.jsxs("form", {
            onSubmit: (Q) => Gt(Q, "updateBankInfo"),
            children: [
              k.jsx("input", {
                type: "text",
                name: "bankName1",
                placeholder: "Bank Name",
                value: Te,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankadd1",
                placeholder: "Bank Address",
                value: De,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankifsc1",
                placeholder: "IFSC code",
                value: Ze,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankupid1",
                placeholder: "UPI id",
                value: je,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankac1",
                placeholder: "Account Number",
                value: Tt,
                onChange: Pt,
              }),
              k.jsx("p", { children: "Other Bank" }),
              k.jsx("input", {
                type: "text",
                name: "bankName2",
                placeholder: "Bank Name",
                value: _t,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankadd2",
                placeholder: "Bank Address",
                value: Qt,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankifsc2",
                placeholder: "IFSC code",
                value: Ce,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankupid2",
                placeholder: "UPI id",
                value: ci,
                onChange: Pt,
              }),
              k.jsx("input", {
                type: "text",
                name: "bankac2",
                placeholder: "Account Number",
                value: Ie,
                onChange: Pt,
              }),
              k.jsx("button", {
                className: "save-button-user-info",
                type: "submit",
                children: "Save",
              }),
              k.jsx("button", {
                className: "close-button-user-info",
                onClick: Ve,
                children: "Close",
              }),
            ],
          });
        case "addPhoto":
          return k.jsxs(k.Fragment, {
            children: [
              k.jsx("input", {
                type: "file",
                accept: ".jpeg, .jpg, .png",
                onChange: Ea,
              }),
              k.jsx("button", {
                className: "save-button-user-info",
                onClick: Si,
                children: "Upload",
              }),
              k.jsx("button", {
                className: "close-button-user-info",
                onClick: Ve,
                children: "Close",
              }),
            ],
          });
        default:
          return null;
      }
    };
  return k.jsxs("div", {
    children: [
      k.jsx("div", {
        className: "dropdown-menu",
        children: k.jsxs("ul", {
          children: [
            k.jsx("li", {
              onClick: () => ki("updateuserinfo"),
              children: "Update Profile",
            }),
            k.jsx("li", {
              onClick: () => ki("updateBillSeries"),
              children: "Update Bill Series",
            }),
            k.jsx("li", {
              onClick: () => ki("updateBankInfo"),
              children: "Update Bank Info",
            }),
            k.jsx("li", {
              onClick: () => ki("addPhoto"),
              children: "Add Your Photo",
            }),
            k.jsx("li", {
              id: "usernme",
              children: sessionStorage.getItem("username"),
            }),
            k.jsx("li", { id: "logout", onClick: Oi, children: "Log Out" }),
          ],
        }),
      }),
      t &&
        k.jsx("div", {
          className: "modal-backdrop",
          children: k.jsx("div", {
            className: "modal-content",
            children: ne(),
          }),
        }),
    ],
  });
};
function _y() {
  const t = ta(),
    a = Fn(),
    s = ee.useContext(yi),
    [c, u] = ee.useState("Select Financial Year"),
    [p, b] = ee.useState([]),
    [S, E] = ee.useState(!1),
    [N, F] = ee.useState(0),
    [H, j] = ee.useState(0),
    [V, q] = ee.useState(0),
    [K, ae] = ee.useState({}),
    [G, L] = ee.useState([{}]),
    [R, O] = ee.useState(s.store.ownerimageURL),
    [X, W] = ee.useState(!1),
    [U, te] = ee.useState(Date.now());
  function he() {
    s.updateStore((Y) => ({
      ...Y,
      recdic: { ...Y.recdic, grid: { [0]: s.store.recdic.itemtemplate } },
    })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: s.store.recdic.pantemplate },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, cscr: "CASH" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, regn: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, gstn: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, add1: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, add2: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, mobile: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, stcode: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, email: "" } },
      })),
      s.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, ac: s.store.recdic.ac },
      })),
      te(Date.now());
  }
  ee.useEffect(() => {
    localStorage.getItem("username") ? W(!0) : t("/");
  }, []);
  const J = (Y) => {
    const se = new Date(),
      fe = new Date(se);
    fe.setMonth(se.getMonth() - 1);
    const ie = se.toISOString().split("T")[0],
      ke = fe.toISOString().split("T")[0],
      _e = { idf: Y, today: ie, fromday: ke };
    fetch(`${s.api}/getTotalsp`, {
      method: "post",
      headers: { "content-type": "application/json" },
      body: JSON.stringify(_e),
    })
      .then((Le) => Le.json())
      .then((Le) => {
        Y === "recentpurchase" && ae(Le),
          Y === "products" && q(Le),
          Y === "recentsale" && L(Le),
          Le.sales ? F(Le.sales) : Le.purchase && j(Le.purchase);
      })
      .catch((Le) => {
        console.error("Error fetching data:", Le);
      });
  };
  return (
    ee.useEffect(() => {
      !s.store.owner.cal ||
        s.store.owner.cal === void 0 ||
        s.store.owner.cal === null ||
        s.store.owner.cal === "" ||
        !Array.isArray(s.store.owner.cal) ||
        s.store.owner.cal.length === 0 ||
        (b(() => [...s.store.owner.cal]),
        J("sales"),
        J("purchase"),
        J("recentpurchase"),
        J("recentsale"),
        J("products"));
    }, []),
    k.jsxs("div", {
      className: "dashboard",
      children: [
        k.jsxs("div", {
          className: "dashboard-sidebar",
          children: [
            k.jsxs("div", {
              className: "sidebar-header",
              children: [
                k.jsx(Ao, {
                  to: "/",
                  children: k.jsx("img", {
                    src: fh,
                    alt: "MediTrade Logo",
                    className: "logo",
                  }),
                }),
                k.jsxs("select", {
                  onChange: (Y) => {
                    console.log(Y.target.value),
                      fetch(`${s.api}/selectfyear`, {
                        method: "post",
                        headers: { "content-type": "application/json" },
                        body: JSON.stringify({
                          action: "action",
                          type: "fyear",
                          daterow: JSON.parse(Y.target.value),
                        }),
                      })
                        .then((fe) => fe.json())
                        .then((fe) => {
                          s.updateStore(fe);
                        }),
                      E(!0);
                    var se = JSON.parse(Y.target.value);
                    u(`FROM ${se.frm} TO ${se.tod}`);
                  },
                  name: "",
                  id: "",
                  children: [
                    k.jsx("option", { value: "none", children: c }),
                    p.map((Y) =>
                      k.jsxs(
                        "option",
                        {
                          value: JSON.stringify(Y),
                          children: ["From ", Y.frm, " to ", Y.tod],
                        },
                        Y._id
                      )
                    ),
                  ],
                }),
                !S &&
                  k.jsx("p", {
                    className: "select-fin-year-paragraph",
                    children: "Please select a financial year",
                  }),
              ],
            }),
            k.jsxs("ul", {
              className: "sidebar-items",
              children: [
                k.jsx("li", {
                  children: k.jsx(
                    hi,
                    {
                      to: "purchase",
                      onClick: he,
                      className: `sidebar-link ${S ? "" : "disabled-link"}`,
                      isActive: (Y, se) => !!Y,
                      children: "Purchase",
                    },
                    U
                  ),
                }),
                k.jsx("li", {
                  children: k.jsx(
                    hi,
                    {
                      to: "sales",
                      onClick: he,
                      className: `sidebar-link ${S ? "" : "disabled-link"}`,
                      isActive: (Y, se) => !!Y,
                      children: "Sales",
                    },
                    U
                  ),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "search-purchase",
                    onClick: he,
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    isActive: (Y, se) => !!Y,
                    children: "Search Purchase",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "search-sales",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Search Sales",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "add-item",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Add Item",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "add-supplier",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Add Supplier",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "add-customer",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Add Customer",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "cash-ledger",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Cash Ledger",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "customer-ledger",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Customer Ledger",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "supplier-ledger",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Supplier Ledger",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "gst-summary",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "GST Summary",
                  }),
                }),
                k.jsx("li", {
                  children: k.jsx(hi, {
                    to: "company-stock",
                    className: `sidebar-link ${S ? "" : "disabled-link"}`,
                    onClick: he,
                    isActive: (Y, se) => !!Y,
                    children: "Company Stock Adjustment",
                  }),
                }),
              ],
            }),
          ],
        }),
        k.jsxs("div", {
          className: "dashboard-main",
          children: [
            k.jsx(Sv, {}),
            a.pathname === "/dashboard" &&
              k.jsx("div", {
                className: "dashboard-cover",
                children: k.jsxs("div", {
                  className: "dashboard-sections",
                  children: [
                    k.jsxs("div", {
                      className: "user-info",
                      children: [
                        k.jsx("div", {
                          className: "tagName",
                          children: "Dashboard",
                        }),
                        k.jsxs("div", {
                          className: "user-info-display",
                          children: [
                            k.jsxs("div", {
                              className: "user-avatar",
                              children: [
                                k.jsx("img", {
                                  src: `${s.api}${R}`,
                                  alt: "Profile",
                                }),
                                k.jsx(Ty, {}),
                              ],
                            }),
                            k.jsx("div", {
                              children: sessionStorage.getItem("username"),
                            }),
                          ],
                        }),
                      ],
                    }),
                    k.jsx("div", { className: "dashboard-user-info" }),
                    k.jsxs("div", {
                      className: "dashboard-info",
                      children: [
                        k.jsxs("div", {
                          className: "dashboard-info-sales",
                          children: [
                            k.jsx("img", {
                              className: "sicon",
                              src: dy,
                              alt: "",
                            }),
                            k.jsxs("div", {
                              className: "dashboard-info-sales-values",
                              children: [
                                k.jsx("p", { children: "Total Sales" }),
                                k.jsxs("div", {
                                  className: "dashboard-info-sales-values-fin",
                                  children: [
                                    k.jsx("img", { src: gs, alt: "" }),
                                    k.jsx("h2", { children: N }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        k.jsxs("div", {
                          className: "dashboard-info-sales",
                          children: [
                            k.jsx("img", {
                              className: "picon",
                              src: py,
                              alt: "",
                            }),
                            k.jsxs("div", {
                              className: "dashboard-info-sales-values",
                              children: [
                                k.jsx("p", { children: "Total Purchase" }),
                                k.jsxs("div", {
                                  className: "dashboard-info-sales-values-fin",
                                  children: [
                                    k.jsx("img", { src: gs, alt: "" }),
                                    k.jsx("h2", { children: H }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                        k.jsxs("div", {
                          className: "dashboard-info-sales",
                          children: [
                            k.jsx("img", {
                              className: "prodicon",
                              src: fy,
                              alt: "",
                            }),
                            k.jsxs("div", {
                              className: "dashboard-info-sales-values",
                              children: [
                                k.jsx("p", { children: "Total Products" }),
                                k.jsxs("div", {
                                  className: "dashboard-info-sales-values-fin",
                                  children: [
                                    k.jsx("img", { src: gs, alt: "" }),
                                    k.jsx("h2", { children: V }),
                                  ],
                                }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "dashboard-center",
                      children: [
                        k.jsx("div", {
                          className: "dashboard-center-first",
                          children: k.jsx(Ny, {}),
                        }),
                        "     ",
                        k.jsxs("div", {
                          className: "dashboard-center-second",
                          children: [
                            k.jsx("p", { children: "Recent Purchase Report" }),
                            k.jsxs("div", {
                              className: "dashboard-center-second-data",
                              children: [
                                k.jsxs("div", {
                                  className:
                                    "dashboard-center-second-data-heads",
                                  children: [
                                    k.jsx("img", { src: gy, alt: "" }),
                                    k.jsx("h4", { children: "Party Name" }),
                                  ],
                                }),
                                k.jsx("p", { children: K.name }),
                              ],
                            }),
                            k.jsxs("div", {
                              className: "dashboard-center-second-data",
                              children: [
                                k.jsxs("div", {
                                  className:
                                    "dashboard-center-second-data-heads",
                                  children: [
                                    k.jsx("img", { src: my, alt: "" }),
                                    k.jsx("h4", { children: "Bill No" }),
                                  ],
                                }),
                                k.jsx("p", { children: K.billno }),
                              ],
                            }),
                            k.jsxs("div", {
                              className: "dashboard-center-second-data",
                              children: [
                                k.jsxs("div", {
                                  className:
                                    "dashboard-center-second-data-heads",
                                  children: [
                                    k.jsx("img", { src: xy, alt: "" }),
                                    k.jsx("h4", { children: "Bill Date" }),
                                  ],
                                }),
                                k.jsx("p", { children: K.billdate }),
                              ],
                            }),
                            k.jsxs("div", {
                              className: "dashboard-center-second-data",
                              children: [
                                k.jsxs("div", {
                                  className:
                                    "dashboard-center-second-data-heads",
                                  children: [
                                    k.jsx("img", { src: vy, alt: "" }),
                                    k.jsx("h4", { children: "Trns. Type" }),
                                  ],
                                }),
                                k.jsx("p", {
                                  children:
                                    K.itype === 1
                                      ? "Cash"
                                      : K.itype === 2
                                      ? "Credit"
                                      : "Challan",
                                }),
                              ],
                            }),
                            k.jsxs("div", {
                              className: "dashboard-center-second-data",
                              children: [
                                k.jsxs("div", {
                                  className:
                                    "dashboard-center-second-data-heads",
                                  children: [
                                    k.jsx("img", { src: gs, alt: "" }),
                                    k.jsx("h4", { children: "Amount" }),
                                  ],
                                }),
                                k.jsx("p", { children: K.amount }),
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "dashboard-bottom",
                      children: [
                        k.jsx("p", { children: "Recent Sales" }),
                        k.jsxs("table", {
                          className: "dashboard-search-table",
                          children: [
                            k.jsx("thead", {
                              children: k.jsxs("tr", {
                                className: "dashboard-search-table-header",
                                children: [
                                  k.jsx("th", { children: "inv. Date" }),
                                  k.jsx("th", { children: "Inv No" }),
                                  k.jsx("th", { children: "inv Type" }),
                                  k.jsx("th", { children: "Party Name" }),
                                  k.jsx("th", { children: "Amount" }),
                                ],
                              }),
                            }),
                            k.jsx("tbody", {
                              children: G.map((Y, se) =>
                                k.jsxs(
                                  "tr",
                                  {
                                    onClick: () => console.log(G[se]),
                                    children: [
                                      k.jsx("td", { children: Y.billdate }),
                                      k.jsx("td", { children: Y.billno }),
                                      k.jsx("td", {
                                        children:
                                          Y.trtype === 2
                                            ? "CREDIT"
                                            : Y.itype === 1
                                            ? "CASH"
                                            : Y.itype === 3
                                            ? "CHALLAN"
                                            : "",
                                      }),
                                      k.jsx("td", { children: Y.name }),
                                      k.jsx("td", { children: Y.amount }),
                                    ],
                                  },
                                  se
                                )
                              ),
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              }),
          ],
        }),
      ],
    })
  );
}
function Iy() {
  return k.jsxs("div", {
    className: "error-page",
    children: [
      k.jsx("h1", { children: "Oops" }),
      k.jsxs("p", {
        className: "message",
        children: [
          k.jsx("span", { className: "status", children: "404" }),
          " - Page Not Found!",
        ],
      }),
    ],
  });
}
class Vr extends yt.Component {
  constructor(s) {
    super(s);
    _a(this, "fetchSearchResults", async (s) => {
      try {
        const u = await (
          await fetch(s, { method: "GET", mode: "cors" })
        ).json();
        this.setState({ searchResults: u });
      } catch (c) {
        console.error("Error fetching search results:", c);
      }
    });
    _a(this, "handleItemNameChange", (s) => {
      this.setState({ selectedItemIndex: 0 });
      const { value: c } = s.target;
      this.setState({ itemName: c }),
        (this.mylink =
          this.item_Link_Obj.links +
          "idf=" +
          this.item_Link_Obj.idf +
          "&getcolumn=" +
          this.item_Link_Obj.colname +
          "&limit=" +
          this.item_Link_Obj.limit +
          "&action=" +
          this.item_Link_Obj.action +
          "&type=itemsearch&name=" +
          c +
          "&cs=" +
          this.item_Link_Obj.cs +
          "&limit=" +
          this.item_Link_Obj.limit),
        (this.provided_data = this.item_Link_Obj.provided_data),
        this.fetchSearchResults(this.mylink),
        this.state.searchResults.length > 0 &&
          (this.populateGridData(this.state.searchResults[0]),
          this.props.rowdatahandler(
            this.props.myobj,
            c,
            this.state.searchResults[0],
            "text"
          ));
    });
    _a(this, "populateGridData", (s) => {
      for (const [c, u] of Object.entries(s))
        this.context.updateStore((p) => ({
          ...p,
          recdic: {
            ...p.recdic,
            grid: {
              ...p.recdic.grid,
              [this.item_Link_Obj.id]: {
                ...p.recdic.grid[this.item_Link_Obj.id],
                [c]: u,
              },
            },
          },
        })),
          this.props.myobj.cs === "customer"
            ? c === "srate" &&
              this.context.updateStore((p) => ({
                ...p,
                recdic: {
                  ...p.recdic,
                  grid: {
                    ...p.recdic.grid,
                    [this.item_Link_Obj.id]: {
                      ...p.recdic.grid[this.item_Link_Obj.id],
                      rate: parseFloat(u),
                    },
                  },
                },
              }))
            : c === "prate" &&
              this.context.updateStore((p) => ({
                ...p,
                recdic: {
                  ...p.recdic,
                  grid: {
                    ...p.recdic.grid,
                    [this.item_Link_Obj.id]: {
                      ...p.recdic.grid[this.item_Link_Obj.id],
                      rate: parseFloat(u),
                    },
                  },
                },
              }));
    });
    _a(this, "handleItemClick", (s) => {
      if (
        (console.log(this.context.store.recdic),
        this.item_Link_Obj.idf === "supplier" ||
          this.item_Link_Obj.idf === "customer")
      ) {
        console.log(this.context.store.recdic);
        let c = { ...this.context.store.recdic.pantemplate };
        for (const [u, p] of Object.entries(s)) c[u] = p;
        this.setState({ itemName: s.name, searchResults: [] }),
          this.context.updateStore((u) => ({
            ...u,
            recdic: { ...u.recdic, pan: c },
          }));
      } else
        this.item_Link_Obj.idf === "items" &&
          (this.setState({ itemName: s.name, searchResults: [] }),
          (this.itemid = s.itemid),
          this.populateGridData(s));
      this.props.rowdatahandler(this.props.myobj, s.name, s, "select");
    });
    _a(this, "handleKeyDown", (s) => {
      const { searchResults: c, selectedItemIndex: u } = this.state;
      if (s.key === "ArrowUp") {
        s.preventDefault();
        const p = u > 0 ? u - 1 : c.length - 1;
        this.setState({ selectedItemIndex: p }),
          this.populateGridData(this.state.searchResults[p]),
          this.props.rowdatahandler(
            this.props.myobj,
            s.target.value,
            this.state.searchResults[p],
            "text"
          );
      } else if (s.key === "ArrowDown") {
        s.preventDefault();
        const p = u < c.length - 1 ? u + 1 : 0;
        console.log("down next ind ", p, " selectedItemIndex -- ", u),
          this.setState({ selectedItemIndex: p }),
          this.populateGridData(this.state.searchResults[p]),
          this.props.rowdatahandler(
            this.props.myobj,
            s.target.value,
            this.state.searchResults[p],
            "text"
          );
      } else if (s.key === "Enter") {
        s.preventDefault();
        const { searchResults: p, selectedItemIndex: b } = this.state;
        if (b !== -1) {
          const S = p[b];
          this.handleItemClick(S);
        }
      }
    });
    (this.mylink = ""),
      (this.provided_data = ""),
      (this.idf = ""),
      (this.itemid = ""),
      (this.item_Link_Obj = this.props.myobj),
      (this.textInput = yt.createRef()),
      (this.state = {
        itemName: this.props.myobj.itemname,
        searchResults: [],
        selectedItemIndex: 0,
        isShown: !1,
      });
  }
  componentDidMount() {
    this.context,
      this.props.myobj.page === "spbill" &&
        this.props.myobj.idf !== "items" &&
        this.textInput.current.focus();
  }
  render() {
    const {
        searchResults: s,
        selectedItemIndex: c,
        isShown: u,
        hoveredItemIndex: p,
      } = this.state,
      b = {
        display: "block",
        padding: "10px",
        cursor: "pointer",
        width: "100%",
        background: "transparent",
      };
    c !== -1 && (b.background = "#f1f1f1");
    const S = "#3ddc8d",
      E = this.provided_data,
      N = s.map((j, V) =>
        k.jsx(
          "span",
          {
            className: "dropdownthing-span",
            onClick: () => this.handleItemClick(j),
            style: {
              ...b,
              background: c === V ? "#3ddc8d" : p === V ? S : "transparent",
            },
            onMouseEnter: () => {
              c !== V && this.setState({ hoveredItemIndex: V });
            },
            onMouseLeave: () => {
              c !== V && this.setState({ hoveredItemIndex: null });
            },
            children: j[E],
          },
          j._id
        )
      ),
      H = { width: parseInt(this.item_Link_Obj.widthstyle) ? "200px" : "5rem" };
    return k.jsxs("div", {
      id: "myDropdown",
      style: { position: "relative" },
      children: [
        k.jsx("input", {
          type: "text",
          onFocus: () => this.setState({ isShown: !0 }),
          onBlur: () => this.setState({ isShown: !1 }),
          placeholder: this.item_Link_Obj.info,
          id: this.props.id,
          value: this.state.itemName,
          onChange: this.handleItemNameChange,
          onKeyDown: this.handleKeyDown,
          ref: this.textInput,
          style: H,
        }),
        k.jsx("div", { className: "dropdownthing", children: N }),
      ],
    });
  }
}
_a(Vr, "contextType", yi);
function Of({ deleteHandler: t, id: a, cs: s, addNewRow: c }) {
  const u = ee.useContext(yi);
  function p(W) {
    return /^-?\d*$/.test(W);
  }
  function b(W) {
    return /^(?!.*\++.*\+)[0-9 +]*$/i.test(W);
  }
  function S(W) {
    return /^-?\d*[.,]?\d*$/.test(W);
  }
  function E(W) {
    return /^[0-9 /]*$/i.test(W);
  }
  function N(W) {
    return typeof W != "string" ? !1 : !isNaN(W) && !isNaN(parseFloat(W));
  }
  function F(W) {
    var U = !1,
      te = ["0", ""];
    N(W) || (te = W.split("+").map(Number));
    var he = 0,
      J = te[0],
      Y = te[1];
    return (
      Number.isNaN(J) && ((J = 0), (he = te[0]), (U = !1)),
      J === 0 && ((J = 0), (he = 0), (U = !0)),
      Y === void 0 && ((Y = 0), (he = parseInt(te[0])), (U = !0)),
      N(te[0]) &&
        ((U = !0), (he = parseInt(te[0])), (J = parseInt(W)), (Y = 0)),
      [U, he, J, Y]
    );
  }
  function H(W, U, te, he, J, Y) {
    isNaN(W) && console.log("ismei aya qty NaN mei");
    var se = j("gst");
    if (typeof W === void 0) return [0, 0, 0, 0, 0, 0, 0];
    var fe = parseInt(W),
      ie = 0,
      ke = parseFloat(te),
      _e = parseFloat(he),
      Le = parseFloat(se);
    isNaN(fe) && (fe = 0),
      isNaN(ke) && (ke = 0),
      isNaN(_e) && (_e = 0),
      isNaN(Le) && (Le = 0);
    var [ue, xe, be, Me] = F(U),
      Te,
      He,
      De,
      Ke,
      je,
      pt,
      Ze,
      Ot;
    ue
      ? ((Te = ke * fe), (ie = fe + parseInt(be)))
      : ((ie = fe), (Te = parseFloat(((ke * be) / (be + Me)) * fe)));
    var Tt = 0;
    s === "supplier"
      ? (Tt = j("totstk") + ie)
      : (console.log(j("totstk"), ie),
        console.log(typeof j("totstk"), typeof ie),
        (Tt = j("totstk") - ie)),
      (document.getElementById(
        "statusinfo"
      ).innerHTML = `BALANCE STOCK : ${Tt}`),
      isNaN(fe) && (_e = 0),
      (He = Te * (_e / 100)),
      (De = Te - He),
      (Ke = De * (Le / 100)),
      (pt = De + Ke),
      (je = pt / fe),
      isNaN(je) && (je = 0),
      (Ze = Ot = Ke / 2),
      V("tdisamt", parseFloat(He.toFixed(2))),
      V("amt", parseFloat(De.toFixed(2))),
      V("amttot", parseFloat(pt.toFixed(2))),
      V("ttaxamt", parseFloat(Ke.toFixed(2))),
      V("netamt", parseFloat((je * fe).toFixed(2))),
      V("sgst", parseFloat(Ze.toFixed(2))),
      V("cgst", parseFloat(Ot.toFixed(2))),
      V("netrate", parseFloat(je.toFixed(2))),
      V("tqty", ie),
      (J[Y].qty = fe),
      (J[Y].tqty = ie),
      (J[Y].prate = ke),
      (J[Y].dis = _e),
      (J[Y].tdisamt = He.toFixed(2)),
      (J[Y].amt = De.toFixed(2)),
      (J[Y].amttot = pt.toFixed(2)),
      (J[Y].rate = ke),
      (J[Y].gst = Le),
      (J[Y].ttaxamt = Ke.toFixed(2)),
      (J[Y].netamt = (je * fe).toFixed(2)),
      (J[Y].netrate = je.toFixed(2)),
      (J[Y].sgst = Ze.toFixed(2)),
      (J[Y].cgst = Ot.toFixed(2)),
      (J[Y].bonus = U);
    let oi = 0,
      _t = 0,
      li = 0,
      Qt = 0,
      Wt = 0,
      ci = 0,
      Se = 0,
      Ce = 0,
      ze = 0;
    for (const Ie of Object.values(J))
      (Se += parseFloat(Ie.netamt)),
        (oi += parseFloat(Ie.amttot || 0)),
        (_t += parseFloat(Ie.cgst || 0)),
        (li += parseFloat(Ie.sgst || 0)),
        (Qt += parseFloat(Ie.ttaxamt || 0)),
        (Wt += parseFloat(Ie.amt || 0)),
        (ci += parseFloat(Ie.tdisamt || 0));
    (ze = Se.toFixed(0)), (Ce = parseFloat(ze) - Se);
    for (const [Ie, bi] of Object.entries({
      gtot: Se,
      cgst: _t,
      sgst: li,
      ttaxamt: Qt,
      tsubtot: Wt,
      tamt: oi,
      tdisamt: ci,
      roundoff: Ce,
    }))
      u.updateStore((wi) => ({
        ...wi,
        recdic: { ...wi.recdic, pan: { ...wi.recdic.pan, [Ie]: bi } },
      }));
    return [pt, je, He, Ke, De, Ze, Ot];
  }
  const j = (W) => u.store.recdic.grid[a][W],
    V = (W, U) => {
      u.updateStore((te) => ({
        ...te,
        recdic: {
          ...te.recdic,
          grid: { ...te.recdic.grid, [a]: { ...te.recdic.grid[a], [W]: U } },
        },
      }));
    },
    q = (W, U, te, he) => {
      var J;
      if (te) {
        for (const [Y, se] of Object.entries(te))
          if (
            (V(Y, se),
            s === "customer"
              ? Y === "srate" && V("rate", parseFloat(se))
              : Y === "prate" && V("rate", parseFloat(se)),
            te.stockarray.length > 0)
          ) {
            let fe = 0;
            for (let ie = 0; ie < te.stockarray.length; ie++)
              te.stockarray[ie].qty && (fe += parseInt(te.stockarray[ie].qty));
            V("totstk", fe),
              V("stockid", te.stockarray[0].stockid),
              V("expdate", te.stockarray[0].expdate),
              V("batchno", te.stockarray[0].batchno);
          } else V("stockid", null), V("totstk", 0);
        he === "select" &&
          ((J = document.getElementById(a + "_qty")) == null || J.focus());
      }
    };
  function K(W) {
    const U = parseInt(W.target.id.split("_")[0]);
    document.getElementById(
      "statusinfo"
    ).innerHTML = `S.No: ${u.store.recdic.grid[U].sno}; 
  HSN: ${u.store.recdic.grid[U].hsn}; Item-Name: ${u.store.recdic.grid[U].name};
  MRP: ${u.store.recdic.grid[U].mrp}; UNIT: ${u.store.recdic.grid[U].unit}; 
  GROUP: ${u.store.recdic.grid[U].igroup};`;
  }
  const ae = (W) => {
    var J, Y;
    const U = {
        _qty: "_batchno",
        _batchno: "_bonus",
        _bonus: "_rate",
        _rate: "_dis",
        _dis: "_exp",
      },
      te = W.keyCode || W.which;
    let he = W.target.value;
    if (te === 13 || te === 35 || te === 9) {
      if (he) {
        let se = U["_" + W.target.id.split("_")[1]];
        (se = a + se), (J = document.getElementById(se)) == null || J.focus();
      }
      W.target.id === a + "_exp" &&
        (V("expdate", G(he)),
        (a = a + 1),
        (Y = document.getElementById(a + "item-grid")) == null || Y.focus(),
        c());
    }
  };
  function G(W) {
    let U = "01/01",
      [te, he] = W.split("/");
    return he.trim().length == 0
      ? ((U = L()), U)
      : (parseInt(te) > 12 ? (U = L()) : (U = W),
        parseInt(he) < 10 && (U = te + "/" + he + "0"),
        console.log("expvald --- ", U),
        U);
  }
  function L() {
    let W = new Date();
    var U = (W.getMonth() + 1).toString();
    return U < 10 && (U = "0" + U), U + "/" + (W.getYear() - 100).toString();
  }
  function R(W) {
    let U = W.target.value;
    if ((console.log(U), E(U))) {
      let te = U.slice(0, 1),
        he = U.slice(0, 2),
        J = U.slice(2, 3);
      parseInt(te) > 1 && (U = "0" + te + "/"),
        parseInt(he) > 12 && (U = te + "2/"),
        U.length === 1 && te === " " && (U = L()),
        U.length === 2 && (U = U + "/"),
        U.length === 3 && U.slice(2, 3) !== "/" && (isNaN(J) || (U = he + "/")),
        U.length === 4 &&
          (U.slice(3, 4) === " " && (U = he + "/30"),
          U.slice(3, 4) === "/" && (U = he + "/30")),
        U.length === 5 &&
          U.slice(4, 5) === " " &&
          (U = he + "/" + U.slice(3, 4) + "0"),
        (U.match(new RegExp("/", "g")) || []).length > 1 && (U = L()),
        V("expdate", U);
    }
  }
  function O(W, U) {
    if (W === "qty") {
      if (p(U)) {
        U.trim() === "" && (U = "0");
        const te = {
          ...u.store.recdic.grid,
          [a]: { ...u.store.recdic.grid[a], [W]: parseInt(U) },
        };
        V(W, parseInt(U)), H(U, j("bonus"), j("rate"), j("dis"), te, a);
      }
    } else if (W === "bonus") {
      if (b(U)) {
        const te = {
          ...u.store.recdic.grid,
          [a]: { ...u.store.recdic.grid[a], [W]: U },
        };
        V(W, U), H(j("qty"), U, j("rate"), j("dis"), te, a);
      }
    } else if (W === "batchno") {
      const te = {
        ...u.store.recdic.grid,
        [a]: { ...u.store.recdic.grid[a], [W]: U },
      };
      V(W, U), H(j("qty"), U, j("rate"), j("dis"), te, a);
    } else if (W === "rate") {
      if (S(U)) {
        U.trim() === "" && (U = "0");
        const te = {
          ...u.store.recdic.grid,
          [a]: { ...u.store.recdic.grid[a], [W]: parseFloat(U) },
        };
        V(W, parseFloat(U)), H(j("qty"), j("bonus"), U, j("dis"), te, a);
      }
    } else if (W === "dis") {
      if (S(U)) {
        U.trim() === "" && (U = "0");
        const te = {
          ...u.store.recdic.grid,
          [a]: { ...u.store.recdic.grid[a], [W]: parseFloat(U) },
        };
        V(W, parseFloat(U)), H(j("qty"), j("bonus"), j("rate"), U, te, a);
      }
    } else V(W, U);
  }
  function X() {
    if (s === "supplier")
      return k.jsx("input", {
        type: "text",
        id: a + "_mrp",
        value: j("mrp"),
        placeholder: "mrp",
        onFocus: K,
        onKeyDown: ae,
        onChange: (W) => O("mrp", W.target.value),
      });
  }
  return k.jsxs("div", {
    className: "table-row",
    children: [
      k.jsx("button", {
        className: "delete-row",
        onClick: t,
        children: k.jsx("svg", {
          fill: "currentColor",
          viewBox: "0 0 20 20",
          xmlns: "http://www.w3.org/2000/svg",
          "aria-hidden": "true",
          children: k.jsx("path", {
            d: "M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z",
          }),
        }),
      }),
      k.jsx(
        Vr,
        {
          id: a + "item-grid",
          myobj: {
            id: a,
            page: "spbill",
            info: "Item Name",
            idf: "items",
            colname: "name",
            limit: "5",
            action: "search",
            cs: s,
            links: `${u.api}/itemsearchenter?`,
            provided_data: "name",
            widthstyle: "1",
            itemname: u.store.recdic.grid[a].name || "",
          },
          rowdatahandler: q,
        },
        `inputHandler_${s}`
      ),
      k.jsx("span", { className: "pack-field", children: j("pack") }),
      k.jsx("input", {
        type: "text",
        id: a + "_qty",
        value: j("qty"),
        placeholder: "qty",
        onFocus: K,
        onKeyDown: ae,
        onChange: (W) => O("qty", W.target.value),
      }),
      k.jsx("input", {
        type: "text",
        id: a + "_batchno",
        onFocus: K,
        value: j("batchno"),
        onKeyDown: ae,
        onChange: (W) => O("batchno", W.target.value),
      }),
      k.jsx("input", {
        type: "text",
        placeholder: "bonus",
        id: a + "_bonus",
        value: j("bonus"),
        onFocus: K,
        maxLength: "5",
        onKeyDown: ae,
        onChange: (W) => O("bonus", W.target.value),
      }),
      k.jsx("input", {
        type: "text",
        id: a + "_rate",
        placeholder: "rate",
        value: j("rate"),
        onFocus: K,
        onKeyDown: ae,
        onChange: (W) => O("rate", W.target.value),
      }),
      X(),
      k.jsx("input", {
        type: "text",
        maxLength: "5",
        placeholder: "discount",
        value: j("dis"),
        id: a + "_dis",
        onFocus: K,
        onKeyDown: ae,
        onChange: (W) => O("dis", W.target.value),
      }),
      k.jsx("input", {
        type: "text",
        placeholder: "0.00",
        id: a + "_amt",
        onFocus: K,
        value: j("amt"),
        readOnly: !0,
      }),
      k.jsx("input", {
        type: "text",
        placeholder: "mm/yy",
        value: j("expdate"),
        id: a + "_exp",
        onFocus: K,
        onKeyDown: ae,
        onChange: R,
      }),
      k.jsx("span", {
        className: "gst-field",
        id: a + "_gst",
        children: j("gst"),
      }),
      k.jsx("input", {
        type: "text",
        placeholder: "0.00",
        id: a + "_netrate",
        onFocus: K,
        value: j("netrate"),
        readOnly: !0,
      }),
    ],
  });
}
const Ry = "/assets/Indian-Rupee-symbol-ee5cfa5b.svg",
  sd = ({ whichPage: t, idf: a }) => {
    var R, O, X, W, U, te, he, J;
    console.log("check -- ", a), ee.useRef(0);
    const s = ta();
    ee.useState(0), ee.useState(!1);
    const c = ee.useContext(yi);
    new Date().toISOString().slice(0, 10);
    function p() {
      c.updateStore((Y) => ({
        ...Y,
        recdic: { ...Y.recdic, pan: c.store.recdic.pantemplate },
      })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, cscr: "CASH" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, regn: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, gstn: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, add1: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, add2: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, mobile: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, stcode: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, pan: { ...Y.recdic.pan, email: "" } },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, ac: c.store.recdic.ac },
        })),
        c.updateStore((Y) => ({
          ...Y,
          recdic: { ...Y.recdic, grid: { [0]: c.store.recdic.itemtemplate } },
        }));
    }
    const b = (Y) => {
      const se = S.filter((fe) => fe.id !== Y);
      E(se),
        c.updateStore((fe) => {
          const ie = { ...fe };
          return delete ie[Y], ie;
        });
    };
    ee.useEffect(() => {
      p();
    }, []);
    const [S, E] = ee.useState([{ id: 0 }]);
    new Date().toISOString().split("T")[0];
    const N = (Y) => {
        const se = Y.match(/([A-Za-z]+)(\d+)/);
        if (!se) return Y;
        const fe = se[1];
        let ie = parseInt(se[2], 10);
        ie++;
        const ke = String(ie).padStart(se[2].length, "0");
        return fe + ke;
      },
      F = (Y, se, fe, ie) => {
        var ke, _e;
        if (fe) {
          for (const [Le, ue] of Object.entries(fe))
            c.store.recdic.pan[Le] = fe[Le];
          if (ie === "select")
            if (t === "purchase")
              (ke = document.getElementById("billno")) == null || ke.focus();
            else {
              (_e = document.getElementById("cscr")) == null || _e.focus();
              const Le =
                  "http://localhost/partysearchenter?name=customer&getcolumn=billno&limit%5Bbillhead%5D=S&limit%5Bfyear%5D=0&limit%5Bbillas%5D=M&idf=billnoset",
                xe = (async () => {
                  try {
                    const be = await fetch(Le);
                    if (!be.ok) throw new Error("API request failed");
                    return await be.json();
                  } catch {
                    return null;
                  }
                })();
              xe &&
                xe.then((be) => {
                  be ? V("billno", N(be[0].billno)) : V("billno", "");
                });
            }
        }
      },
      H = (Y) => {
        var ke;
        const se = {
            billno: "cscr",
            cscr: "dis",
            dis: "billdate",
            billdate: "invdate",
            invdate: "0item-grid",
          },
          fe = Y.keyCode || Y.which;
        let ie = Y.target.value;
        (fe === 13 || fe === 35 || fe === 9) &&
          ie &&
          ((ke = document.getElementById(se[Y.target.id])) == null ||
            ke.focus());
      },
      j = (Y) => c.store.recdic.pan[Y],
      V = (Y, se) => {
        Y === "billdate" &&
          c.updateStore((fe) => ({
            ...fe,
            recdic: { ...fe.recdic, pan: { ...fe.recdic.pan, dbbilldate: se } },
          })),
          Y === "cscr" &&
            (se === "CREDIT" &&
              c.updateStore((fe) => ({
                ...fe,
                recdic: { ...fe.recdic, pan: { ...fe.recdic.pan, dbcscr: 2 } },
              })),
            se === "CHALLAN" &&
              c.updateStore((fe) => ({
                ...fe,
                recdic: { ...fe.recdic, pan: { ...fe.recdic.pan, dbcscr: 3 } },
              })),
            se === "CHALLAN" &&
              c.updateStore((fe) => ({
                ...fe,
                recdic: { ...fe.recdic, pan: { ...fe.recdic.pan, dbcscr: 1 } },
              }))),
          c.updateStore((fe) => ({
            ...fe,
            recdic: { ...fe.recdic, pan: { ...fe.recdic.pan, [Y]: se } },
          }));
      };
    function q(Y) {
      if (Y.target.id === "acname1") {
        c.updateStore((se) => ({
          ...se,
          recdic: {
            ...se.recdic,
            ac: { ...se.recdic.ac, [Y.target.id]: Y.target.value },
          },
        }));
        return;
      }
      /^-?\d*[.,]?\d*$/.test(Y.target.value) &&
        (Y.target.id === "dis"
          ? V("dis", Y.target.value)
          : c.updateStore((se) => ({
              ...se,
              recdic: {
                ...se.recdic,
                ac: { ...se.recdic.ac, [Y.target.id]: Y.target.value },
              },
            })));
    }
    const K = () => {
        const Y = Math.max(...S.map((se) => se.id)) + 1;
        E((se) => [...se, { id: Y }]),
          c.updateStore((se) => ({
            ...se,
            recdic: {
              ...se.recdic,
              grid: { ...se.recdic.grid, [Y]: c.store.recdic.itemtemplate },
            },
          })),
          c.updateStore((se) => ({
            ...se,
            recdic: {
              ...se.recdic,
              grid: {
                ...se.recdic.grid,
                [Y]: { ...se.recdic.grid[Y], sno: Y },
              },
            },
          })),
          console.log(c.store.recdic);
      },
      ae = () => {
        let Y = c.store.recdic.pan;
        if (Y._id === "" || Y.name === "" || Y.ledgid === 0 || Y.csid === 0) {
          alert("Enter Supplier Details");
          return;
        }
        if (Y.amount === 0 || Y.amt === "" || Y.tamt === "" || Y.gtot === "") {
          alert("Enter Items First");
          return;
        }
        if (Y.amount === 0 || Y.amt === "" || Y.tamt === 0 || Y.gtot === "") {
          alert("Internal Error Reload Page");
          return;
        }
        if (j("billno") === "") {
          alert("Enter Invoice Number");
          return;
        }
        const se = { idf: a, mode: "save", getdata: c.store.recdic };
        fetch(`${c.api}/sendbilltodb`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(se),
        })
          .finally(p())
          .catch((fe) => {
            console.log(fe);
          });
      },
      G = () => {
        p(), s("/dashboard");
      };
    function L() {
      if (a === "supplier") return k.jsx("span", { children: "MRP" });
    }
    return k.jsxs("div", {
      className: "purchase-section",
      children: [
        k.jsxs("div", {
          className: "purchase-header",
          children: [
            k.jsx("div", {
              className: "purchase-input",
              children: k.jsx(
                Vr,
                {
                  myobj: {
                    id: "spinput",
                    page: "spbill",
                    info: a,
                    idf: a,
                    colname: "name",
                    limit: "10",
                    action: "search",
                    cs: a,
                    links: `${c.api}/partysearchenter?`,
                    provided_data: "name",
                    widthstyle: "1",
                    itemname: c.store.recdic.pan.name || "",
                  },
                  rowdatahandler: F,
                },
                `inputHandler_${a}`
              ),
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "billno",
                  placeholder: "abcd",
                  value: j("billno"),
                  onKeyDown: H,
                  onChange: (Y) => V("billno", Y.target.value.toUpperCase()),
                  type: "text",
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsxs("select", {
                  id: "cscr",
                  name: "transType",
                  value: j("cscr"),
                  onKeyDown: H,
                  onChange: (Y) => V("cscr", Y.target.value),
                  children: [
                    k.jsx("option", { value: "CASH", children: "Cash" }),
                    k.jsx("option", { value: "CREDIT", children: "Credit" }),
                    k.jsx("option", { value: "CHALLAN", children: "Challan" }),
                  ],
                }),
                k.jsx("label", { htmlFor: "", children: "Transaction" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "dis",
                  placeholder: "",
                  type: "text",
                  onKeyDown: H,
                  maxLength: "5",
                  value: j("dis"),
                  onChange: (Y) => V("dis", Y.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "D. Discount" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "billdate",
                  placeholder: "",
                  value: j("billdate"),
                  onKeyDown: H,
                  type: "date",
                  onChange: (Y) => V("billdate", Y.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "Bill Date" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "invdate",
                  placeholder: "",
                  value: j("invdate"),
                  onKeyDown: H,
                  type: "date",
                  onChange: (Y) => V("invdate", Y.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice Date" }),
              ],
            }),
          ],
        }),
        k.jsxs("div", {
          className: "info-data",
          children: [
            k.jsx("p", {
              children: `${j("add1")} - ${j("add2")} - 
          ${j("stcode")}`,
            }),
            k.jsxs("p", {
              children: [
                `${j("gstn")} - ${j("regn")} `,
                `${j("mobile")} - ${j("email")}`,
              ],
            }),
          ],
        }),
        k.jsx("div", {
          className: "info-data",
          children: k.jsx("p", { id: "statusinfo" }),
        }),
        k.jsxs("div", {
          className: "purchase-table",
          children: [
            k.jsxs("div", {
              className: "table-header",
              children: [
                k.jsx("span", {}),
                k.jsx("span", { children: "item name" }),
                k.jsx("span", { children: "pack" }),
                k.jsx("span", { children: "qty" }),
                k.jsx("span", { children: "batch" }),
                k.jsx("span", { children: "bonus" }),
                k.jsx("span", { children: "rate" }),
                L(),
                k.jsx("span", { children: "discount" }),
                k.jsx("span", { children: "amount" }),
                k.jsx("span", { children: "exp" }),
                k.jsx("span", { children: "gst %" }),
                k.jsx("span", { children: "net rate" }),
              ],
            }),
            k.jsxs("div", {
              className: "table-body",
              children: [
                S.map((Y) =>
                  k.jsx(
                    Of,
                    {
                      addNewRow: K,
                      id: Y.id,
                      cs: a,
                      deleteHandler: () => b(Y.id),
                    },
                    Y.id
                  )
                ),
                k.jsx("button", {
                  className: "add-row",
                  onClick: K,
                  children: k.jsx("svg", {
                    fill: "currentColor",
                    viewBox: "0 0 20 20",
                    xmlns: "http://www.w3.org/2000/svg",
                    "aria-hidden": "true",
                    children: k.jsx("path", {
                      d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z",
                    }),
                  }),
                }),
              ],
            }),
          ],
        }),
        k.jsxs("div", {
          className: "purchase-summary",
          children: [
            k.jsxs("div", {
              className: "col-1",
              children: [
                k.jsxs("div", {
                  className: "summary-comment",
                  children: [
                    k.jsx("textarea", {
                      name: "",
                      value: j("cmnt"),
                      onChange: (Y) => V("cmnt", Y.target.value.toUpperCase()),
                      children: j("cmnt"),
                    }),
                    k.jsx("label", { htmlFor: "", children: "Bill Comment" }),
                  ],
                }),
                k.jsxs("div", {
                  className: "account",
                  children: [
                    k.jsxs("div", {
                      className: "summary-account",
                      children: [
                        k.jsx("input", {
                          id: "acname1",
                          type: "text",
                          value: c.store.recdic.ac.acname1,
                          onChange: q,
                        }),
                        k.jsx("label", {
                          htmlFor: "",
                          children: "Account Name",
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "account-value",
                      children: [
                        k.jsx("input", {
                          id: "acval1",
                          type: "text",
                          value: c.store.recdic.ac.acval1,
                          onChange: q,
                        }),
                        k.jsx("label", { htmlFor: "", children: "Value" }),
                      ],
                    }),
                  ],
                }),
                k.jsxs("div", {
                  className: "btns",
                  children: [
                    k.jsx("button", {
                      className: "save",
                      onClick: ae,
                      children: "Save",
                    }),
                    k.jsx("button", {
                      className: "close",
                      onClick: G,
                      children: "Close",
                    }),
                    k.jsx("button", { className: "reset", children: "Reset" }),
                  ],
                }),
              ],
            }),
            k.jsxs("div", {
              className: "col-2",
              children: [
                k.jsxs("div", {
                  className: "gst-col",
                  children: [
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "GST" }),
                        k.jsx("span", {
                          id: "ttaxamt",
                          className: "value",
                          children:
                            (R = j("ttaxamt")) == null ? void 0 : R.toFixed(2),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "CGST" }),
                        k.jsx("span", {
                          id: "cgst",
                          className: "value",
                          children:
                            (O = j("cgst")) == null ? void 0 : O.toFixed(2),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "SGST" }),
                        k.jsx("span", {
                          id: "sgst",
                          className: "value",
                          children:
                            (X = j("sgst")) == null ? void 0 : X.toFixed(2),
                        }),
                      ],
                    }),
                  ],
                }),
                k.jsxs("div", {
                  className: "total-col",
                  children: [
                    k.jsxs("div", {
                      className: "bill-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Bill Total",
                        }),
                        k.jsxs("span", {
                          id: "gtot",
                          className: "value",
                          children: [
                            k.jsx("img", { src: Ry, alt: "" }),
                            (W = j("gtot")) == null ? void 0 : W.toFixed(0),
                          ],
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "sub-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Sub Total",
                        }),
                        k.jsx("span", {
                          id: "tsubtot",
                          className: "value",
                          children:
                            (U = j("tsubtot")) == null ? void 0 : U.toFixed(2),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "roundoff",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Round Off",
                        }),
                        k.jsx("span", {
                          id: "roundoff",
                          className: "value",
                          children:
                            (te = j("roundoff")) == null
                              ? void 0
                              : te.toFixed(2),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "discount",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Discount",
                        }),
                        k.jsx("span", {
                          id: "tdisamt",
                          className: "value",
                          children:
                            (he = j("tdisamt")) == null
                              ? void 0
                              : he.toFixed(2),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "amt-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Amount Total",
                        }),
                        k.jsx("span", {
                          id: "tamt",
                          className: "value",
                          children:
                            (J = j("tamt")) == null ? void 0 : J.toFixed(2),
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    });
  };
function nr(t, a, s, c, u, p, b = !1, S = "#f5f3ba", E = "whitesmoke") {
  var N = [],
    F = c.children,
    H = F.length;
  for (let j = 0; j < F.length; j++)
    F[j].style.display === "" &&
      ((F[j].style.backgroundColor = E), N.push(F[j]));
  if (t === "down")
    Object.entries(N).length > 0 &&
      (N[a] === void 0
        ? ((a = 0), (N[a].style.backgroundColor = S))
        : (N[a - 1] !== void 0 && (N[a - 1].style.backgroundColor = E),
          (N[a].style.backgroundColor = S)),
      a > s && (a = s));
  else if (t === "up") {
    for (let j = 0; j < N.length; j++) N[j].style.backgroundColor = E;
    if (Object.entries(N).length > 0)
      if (a < 0) (a = 0), (N[a].style.backgroundColor = S);
      else {
        if (N.length === 0) return (a = 0), !0;
        if (N[a] === void 0) return (a = 0), !0;
        if ((a--, H < 0)) a = 0;
        else
          try {
            N[a].style.backgroundColor = S;
          } catch {
            (a = 0), (N[0].style.backgroundColor = S);
          }
      }
  }
}
function od(t) {
  const a = document.getElementById(t + 1);
  a !== null ? a.focus() : document.getElementById("save").focus();
}
class Dy extends yt.Component {
  constructor(a) {
    super(a),
      (this.keyCount = -1),
      (this.listattr = this.props.iidf[this.props.setid].listattr),
      (this.handleComm = this.handleComm.bind(this)),
      (this.itemClicked = this.itemClicked.bind(this)),
      (this.onitemKeyDown = this.onitemKeyDown.bind(this)),
      (this.state = { mykey: this.props.setval, setlabel: "", xdata: [] });
  }
  onitemKeyDown(a) {
    const s = a.keyCode || a.which,
      c = document.getElementById(this.props.iidf[this.props.setid].listattr),
      u = this.state.xdata.length - 1;
    if (
      ((s === 8 || s === 46) &&
        this.props.iidf[this.props.setid].idf.startsWith("db_") &&
        a.target.value.length === 1 &&
        (this.setState({ xdata: [] }),
        (this.keyCount = -1),
        this.setState({ mykey: "" }),
        this.props.AddHandler(
          this.props.setid,
          this.props.iidf[this.props.setid].id,
          "",
          !1,
          []
        ),
        nr(
          "reset",
          this.keyCount,
          0,
          c,
          this.props.iidf[this.props.setid].listattr
        )),
      (s === 40 || s === 34) &&
        this.props.iidf[this.props.setid].idf.startsWith("db_"))
    ) {
      if (
        ((this.keyCount = this.keyCount + 1),
        nr(
          "down",
          this.keyCount,
          u,
          c,
          this.props.iidf[this.props.setid].listattr
        ),
        typeof this.state.xdata[this.keyCount] < "u")
      ) {
        const p = this.state.xdata[this.keyCount],
          b = p.name;
        this.props.AddHandler(
          this.props.setid,
          this.props.iidf[this.props.setid].id,
          b,
          !1,
          p
        );
      }
      this.keyCount > u && (this.keyCount = -1);
    }
    if (
      (s === 38 || s === 33) &&
      this.props.iidf[this.props.setid].idf.startsWith("db_")
    ) {
      if (
        (nr(
          "up",
          this.keyCount,
          u,
          c,
          this.props.iidf[this.props.setid].listattr
        ),
        typeof this.state.xdata[this.keyCount] < "u")
      ) {
        const p = this.state.xdata[this.keyCount],
          b = p.name;
        this.props.AddHandler(
          this.props.setid,
          this.props.iidf[this.props.setid].id,
          b,
          !1,
          p
        );
      }
      (this.keyCount = this.keyCount - 1),
        this.keyCount < 0 && (this.keyCount = 0);
    }
    if (s === 13 || s === 35 || s === 9)
      if (this.props.iidf[this.props.setid].idf.startsWith("db_")) {
        if (
          (this.keyCount < 0 && (this.keyCount = 0),
          this.state.xdata.length > 0)
        ) {
          const p = this.state.xdata[this.keyCount],
            b = p.name;
          this.setState({ mykey: b }),
            this.props.AddHandler(
              this.props.setid,
              this.props.iidf[this.props.setid].id,
              b,
              !1,
              p
            ),
            this.setState({ xdata: [] });
        } else this.setState({ mykey: "" });
        (this.keyCount = -1),
          nr(
            "reset",
            this.keyCount,
            0,
            c,
            this.props.iidf[this.props.setid].listattr
          ),
          console.log("abcd"),
          od(this.props.setid);
      } else od(this.props.setid);
  }
  itemClicked(a) {
    const s = this.state.xdata[a.target.id],
      c = s.name;
    this.setState({ mykey: c }),
      this.props.AddHandler(
        this.props.setid,
        this.props.iidf[this.props.setid].id,
        c,
        !1,
        s
      ),
      this.setState({ xdata: [] }),
      (this.keyCount = -1);
  }
  handleComm(a) {
    const s = a.target.value;
    if (this.props.iidf[this.props.setid].idf.startsWith("db_"))
      if (this.props.iidf[this.props.setid].regexp.test(s))
        if (
          (this.setState({ mykey: s }),
          (this.keyCount = -1),
          nr(
            "reset",
            this.keyCount,
            0,
            document.getElementById(this.props.iidf[this.props.setid].listattr),
            this.props.iidf[this.props.setid].listattr
          ),
          s.length > 0)
        ) {
          var c = new URLSearchParams({
            name: s.toUpperCase(),
            idf: this.props.iidf[this.props.setid].cssearch,
            getcolumn: "all",
            mode: "search",
            limit: 2,
          });
          const u = this.props.iidf[this.props.setid].url + c;
          console.log(u);
          let p = [];
          (async () => {
            try {
              (p = await (await fetch(u)).json()),
                this.setState({ xdata: p }),
                this.props.iidf[this.props.setid].id === "name"
                  ? p.length < 1
                    ? this.props.AddHandler(
                        this.props.setid,
                        this.props.iidf[this.props.setid].id,
                        s,
                        !0,
                        []
                      )
                    : this.props.AddHandler(
                        this.props.setid,
                        this.props.iidf[this.props.setid].id,
                        s,
                        !1,
                        p[0]
                      )
                  : p.length > 0
                  ? this.props.AddHandler(
                      this.props.setid,
                      this.props.iidf[this.props.setid].id,
                      s,
                      !0,
                      p[0]
                    )
                  : this.props.AddHandler(
                      this.props.setid,
                      this.props.iidf[this.props.setid].id,
                      s,
                      !0,
                      []
                    );
            } catch (S) {
              this.setState({
                setlabel: `Error ${
                  this.props.iidf[this.props.setid].cssearch
                } [ ${S} ] `,
              }),
                (this.props.iidf[this.props.setid].in = !1);
            }
          })();
        } else this.setState({ xdata: [] });
      else
        console.log("fallin "),
          this.props.AddHandler(
            this.props.setid,
            this.props.iidf[this.props.setid].id,
            s,
            !0,
            []
          );
    else
      this.props.iidf[this.props.setid].regexp.test(s) &&
        (this.setState({ mykey: s }),
        this.props.AddHandler(
          this.props.setid,
          this.props.iidf[this.props.setid].id,
          s,
          !0,
          []
        ));
  }
  render() {
    return k.jsxs(k.Fragment, {
      children: [
        k.jsx("label", {
          id: this.props.iidf[this.props.setid].labelid,
          className: "instructions",
          children: this.props.iidf[this.props.setid].info,
        }),
        this.props.iidf[this.props.setid].idf.startsWith("db_") &&
          k.jsxs("div", {
            children: [
              k.jsx("input", {
                type: "text",
                id: this.props.setid,
                value: this.props.setval,
                list: this.props.iidf[this.props.setid].listattr,
                name: this.props.setid,
                className: "cisinput",
                autoComplete: "off",
                onChange: this.handleComm,
                onKeyDown: this.onitemKeyDown,
                placeholder: this.props.iidf[this.props.setid].ph,
              }),
              k.jsx("div", {
                className: "cisspanlistdiv",
                list: this.props.iidf[this.props.setid].listattr,
                id: this.props.iidf[this.props.setid].listattr,
                children: this.state.xdata.map((a, s) =>
                  k.jsx(
                    "span",
                    {
                      className: "cisspanlist",
                      "data-id": a,
                      id: s,
                      onClick: this.itemClicked,
                      children: a.name,
                    },
                    s
                  )
                ),
              }),
            ],
          }),
        this.props.iidf[this.props.setid].idf.startsWith("dd_") &&
          k.jsx("div", {
            children: k.jsx("select", {
              className: "cisinput",
              selected: this.props.setval,
              onChange: this.handleComm,
              onKeyDown: this.onitemKeyDown,
              children: this.props.iidf[this.props.setid].dd.map((a, s) =>
                k.jsx("option", { children: a }, s)
              ),
            }),
          }),
        this.props.iidf[this.props.setid].idf.startsWith("si_") &&
          k.jsx("div", {
            children: k.jsx("input", {
              type: "text",
              id: this.props.setid,
              value: this.props.setval,
              name: this.props.setid,
              className: "cisinput",
              onChange: this.handleComm,
              onKeyDown: this.onitemKeyDown,
              placeholder: this.props.iidf[this.props.setid].ph,
              maxLength: this.props.iidf[this.props.setid].mxl,
            }),
          }),
      ],
    });
  }
}
function jy(t) {
  return !t || t.length === 0;
}
function ll({ rscr: t, whichPage: a }) {
  const s = ee.useContext(yi);
  let c = {
    0: {
      in: !0,
      value: "",
      labelid: "0info",
      id: "name",
      idf: "db_name",
      ph: "Add Customer-Name",
      mxl: "100",
      listattr: "list-name",
      info: "",
      cssearch: "",
      url: "",
      db_data: {},
      req: !0,
      regexp: /^[A-Za-z0-9.-]*$/,
    },
    1: {
      in: !0,
      value: "Bill By Bill",
      labelid: "1info",
      id: "mode",
      idf: "dd_mode",
      ph: "Transaction Type",
      mxl: "100",
      listattr: "",
      info: "",
      dd: ["Bill By Bill", "On Account"],
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
    2: {
      in: !0,
      value: "",
      labelid: "2info",
      id: "add1",
      idf: "si_add1",
      ph: "Address 1",
      mxl: "100",
      listattr: "",
      info: "",
      db_data: {},
      req: !0,
      regexp: /^[A-Za-z0-9.-]*$/,
    },
    3: {
      in: !0,
      value: "",
      labelid: "3info",
      id: "add2",
      idf: "si_add2",
      ph: "Address 2",
      mxl: "100",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9.-]*$/,
    },
    4: {
      in: !0,
      value: "",
      labelid: "4info",
      id: "add3",
      idf: "si_stcode",
      ph: "State Code",
      mxl: "2",
      listattr: "",
      info: "",
      db_data: {},
      req: !0,
      regexp: /^-?\d*$/,
    },
    5: {
      in: !0,
      value: "",
      labelid: "5info",
      id: "pincode",
      idf: "si_pincode",
      ph: "PIN Code",
      mxl: "6",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^-?\d*$/,
    },
    6: {
      in: !0,
      value: "",
      labelid: "6info",
      id: "area",
      idf: "db_area",
      ph: "Location Area",
      mxl: "18",
      listattr: "list-area",
      info: "",
      cssearch: "",
      url: "",
      db_data: {},
      req: !0,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
    7: {
      in: !0,
      value: "",
      labelid: "7info",
      id: "mobile",
      idf: "si_phone",
      ph: "Contact Number",
      mxl: "10",
      listattr: "",
      info: "",
      db_data: {},
      req: !0,
      regexp: /^-?\d*$/,
    },
    8: {
      in: !0,
      value: "",
      labelid: "8info",
      id: "email",
      idf: "si_email",
      ph: "email Address",
      mxl: "100",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9.@]*$/,
    },
    9: {
      in: !0,
      value: "",
      labelid: "9info",
      id: "ophone",
      idf: "si_offphone",
      ph: "Office Contact",
      mxl: "10",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^-?\d*$/,
    },
    10: {
      in: !0,
      value: "",
      labelid: "10info",
      id: "pan",
      idf: "si_pan",
      ph: "PAN",
      mxl: "10",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
    11: {
      in: !0,
      value: "",
      labelid: "11info",
      id: "bal",
      idf: "si_obal",
      ph: "Opening Balance",
      mxl: "8",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^-?\d*$/,
    },
    12: {
      in: !0,
      value: "",
      labelid: "12info",
      id: "regn",
      idf: "si_regn",
      ph: "Registeration No",
      mxl: "30",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
    13: {
      in: !0,
      value: "",
      labelid: "13info",
      id: "gstn",
      idf: "si_gstn",
      ph: "GST Number",
      mxl: "15",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
    14: {
      in: !0,
      value: "",
      labelid: "14info",
      id: "cmnt",
      idf: "si_cmnt",
      ph: "Composition-Tax-Payer [Y=YES; N=NO]",
      mxl: "11",
      listattr: "",
      info: "",
      db_data: {},
      req: !1,
      regexp: /^[A-Za-z0-9_-]*$/,
    },
  };
  ee.useEffect(() => {
    const R = "addsupplier";
    console.log(" ====== ", a),
      a == "items"
        ? ((t.cs = "suppliers"),
          (t.cssearch = "supplier"),
          (t.pagename = "ADD-ITEM"),
          (c = {
            0: {
              in: !0,
              value: "",
              labelid: "0info",
              id: "name",
              idf: "db_name",
              ph: "Item-Name",
              mxl: "100",
              listattr: "list-name",
              info: "",
              cssearch: "items",
              url: "http://localhost:80/itemsearchenter?",
              db_data: {},
              req: !0,
              regexp: /^[A-Za-z0-9.-]*$/,
            },
            1: {
              in: !0,
              value: "TAB",
              labelid: "1info",
              id: "unit",
              idf: "dd_unit",
              ph: "Item-Unit",
              mxl: "10",
              listattr: "",
              info: "",
              dd: [
                "TAB",
                "CAP",
                "VIAL",
                "BOTT",
                "DROP",
                "PCS",
                "OINT",
                "CREAM",
              ],
              db_data: {},
              req: !0,
              regexp: /^[A-Za-z0-9_-]*$/,
            },
            2: {
              in: !0,
              value: "",
              labelid: "2info",
              id: "pack",
              idf: "si_pack",
              ph: "Item-Pack",
              mxl: "10",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^(?!.*\**.*\+)[a-zA-Z0-9 *]*$/i,
            },
            3: {
              in: !0,
              value: "",
              labelid: "3info",
              id: "igroup",
              idf: "db_igroup",
              ph: "Item-Composition",
              mxl: "500",
              listattr: "list-igroup",
              info: "",
              cssearch: "items_igroup",
              url: "http://localhost:80/addtodb?",
              db_data: {},
              req: !1,
              regexp: /^[A-Za-z0-9.-]*$/,
            },
            4: {
              in: !0,
              value: "",
              labelid: "4info",
              id: "irack",
              idf: "db_irack",
              ph: "Item-Rack Name",
              mxl: "25",
              listattr: "list-irack",
              info: "",
              cssearch: "items_irack",
              url: "http://localhost:80/addtodb?",
              db_data: {},
              req: !1,
              regexp: /^[A-Za-z0-9_-]*$/,
            },
            5: {
              in: !0,
              value: "",
              labelid: "5info",
              id: "comp",
              idf: "db_comp",
              ph: "Item-Manufecturer",
              mxl: "25",
              listattr: "list-comp",
              info: "",
              cssearch: "comp",
              url: "http://localhost:80/addtodb?",
              db_data: {},
              req: !0,
              regexp: /^[A-Za-z0-9.-]*$/,
            },
            6: {
              in: !0,
              value: "",
              labelid: "6info",
              id: "prate",
              idf: "si_prate",
              ph: "Purchase Rate",
              mxl: "10",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            7: {
              in: !0,
              value: "",
              labelid: "7info",
              id: "srate",
              idf: "si_srate",
              ph: "Sale Rate",
              mxl: "10",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            8: {
              in: !0,
              value: "",
              labelid: "8info",
              id: "mrp",
              idf: "si_mrp",
              ph: "M.R.P",
              mxl: "10",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            9: {
              in: !0,
              value: "12",
              labelid: "9info",
              id: "gst",
              idf: "dd_gst",
              ph: "IGST",
              mxl: "4",
              listattr: "",
              info: "",
              dd: ["12", "5", "18", "28", "0"],
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            10: {
              in: !0,
              value: "",
              labelid: "10info",
              id: "cgst",
              idf: "si_cgst",
              ph: "CGST",
              mxl: "4",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            11: {
              in: !0,
              value: "",
              labelid: "11info",
              id: "sgst",
              idf: "si_sgst",
              ph: "SGST",
              mxl: "4",
              listattr: "",
              info: "",
              db_data: {},
              req: !0,
              regexp: /^-?\d*[.,]?\d*$/,
            },
            12: {
              in: !0,
              value: "",
              labelid: "12info",
              id: "hsn",
              idf: "db_hsn",
              ph: "HSN Code",
              mxl: "8",
              listattr: "list-hsn",
              info: "",
              cssearch: "hsn",
              url: "http://localhost:80/addtodb?",
              db_data: {},
              req: !0,
              regexp: /^-?\d*$/,
            },
            13: {
              in: !0,
              value: "",
              labelid: "13info",
              id: "sup",
              idf: "db_sup",
              ph: "Item-Supplier Name",
              mxl: "100",
              listattr: "list-sup",
              info: "",
              cssearch: "sup",
              url: "http://localhost:80/addtodb?",
              db_data: {},
              req: !0,
              regexp: /^[A-Za-z0-9.-]*$/,
            },
            14: {
              in: !0,
              value: "",
              labelid: "14info",
              id: "cmnt",
              idf: "si_cmnt",
              ph: "Comment and Notes",
              mxl: "20",
              listattr: "",
              info: "",
              db_data: {},
              req: !1,
              regexp: /^[A-Za-z0-9.-]*$/,
            },
          }))
        : window.location.search.split("?")[1] === R || a == "supplier"
        ? ((t.cs = "suppliers"),
          (t.cssearch = "supplier"),
          (t.pagename = "ADD-SUPPLIER"),
          (c[0].ph = "Add Supplier-Name"),
          (c[0].cssearch = "supplier"),
          (c[0].url = "http://localhost:80/partysearchenter?"),
          (c[6].cssearch = "supplier_area"),
          (c[6].url = "http://localhost:80/addtodb?"))
        : ((t.cs = "customer"),
          (t.cssearch = "customer"),
          (t.pagename = "ADD-CUSTOMER"),
          (c[0].ph = "Add Customer-Name"),
          (c[0].cssearch = "customer"),
          (c[0].url = "http://localhost:80/partysearchenter?"),
          (c[6].cssearch = "customer_area"),
          (c[6].url = "http://localhost:80/addtodb?")),
      b(c);
  }, [a]);
  const u = ta(),
    [p, b] = ee.useState(c);
  let S = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""];
  const [E, N] = ee.useState(S);
  function F(R, O, X) {
    c[R].info = `Add New [ ${O.toUpperCase()} ] Records`;
    const W = [...X];
    (W[R] = O), N(W);
    for (const U of Object.entries(p))
      b((te) => ({ ...te, [U[0]]: { ...te[U[0]], in: !0 } })),
        b((te) => ({ ...te, [U[0]]: { ...te[U[0]], value: "" } })),
        b((te) => ({ ...te, [U[0]]: { ...te[U[0]], db_data: {} } })),
        b((te) => ({ ...te, [U[0]]: { ...te[U[0]], info: "" } }));
    t.pagename === "ADD-ITEM"
      ? b((U) => ({ ...U, [1]: { ...U[1], value: "TAB" } }))
      : b((U) => ({ ...U, [1]: { ...U[1], value: "BILL BY BILL" } }));
  }
  function H(R, O, X, W, U) {
    const te = [...E];
    var he = "";
    if (
      ((X = X.toUpperCase()),
      b((J) => ({ ...J, [R]: { ...J[R], value: X } })),
      O === "area" ||
        O === "igroup" ||
        O === "irack" ||
        O === "comp" ||
        O === "hsn" ||
        O === "sup")
    )
      if (((te[R] = X), N(te), Object.keys(U).length > 0)) {
        b((J) => ({ ...J, [R]: { ...J[R], db_data: U } })),
          b((J) => ({
            ...J,
            [R]: { ...J[R], info: `Select [ ${U.name} ] as ${c[R].ph} ` },
          }));
        return;
      } else {
        b((J) => ({ ...J, [R]: { ...J[R], db_data: null } })),
          b((J) => ({
            ...J,
            [R]: {
              ...J[R],
              info: `Add [ ${X.toUpperCase()} ] as New ${c[R].ph} `,
            },
          }));
        return;
      }
    if (W)
      if (O === "name") {
        F(R, X, S),
          (he = `Add New [ ${X.toUpperCase()} ] Records`),
          b((J) => ({ ...J, [R]: { ...J[R], in: !0 } })),
          b((J) => ({ ...J, [R]: { ...J[R], info: he } })),
          b((J) => ({ ...J, [R]: { ...J[R], value: X } }));
        return;
      } else {
        b((J) => ({ ...J, [R]: { ...J[R], value: X } })),
          b((J) => ({
            ...J,
            [R]: { ...J[R], info: ` [ ${X.toUpperCase()} ] as ${c[R].ph} ` },
          })),
          (te[R] = X),
          N(te),
          console.log("dddd ", W, O, X, p[R].value);
        return;
      }
    if (O === "name")
      if (W)
        F(R, X, S),
          (he = `Add New [ ${X.toUpperCase()} ] Records`),
          b((J) => ({ ...J, [R]: { ...J[R], in: !0 } })),
          b((J) => ({ ...J, [R]: { ...J[R], info: he } })),
          b((J) => ({ ...J, [R]: { ...J[R], db_data: null } }));
      else if (X.length > 0) {
        (he = `EDIT [ ${U.name} ] Records`),
          b((J) => ({ ...J, [R]: { ...J[R], in: !1 } })),
          b((J) => ({ ...J, [R]: { ...J[R], db_data: U } }));
        for (const [J, Y] of Object.entries(p))
          for (const [se, fe] of Object.entries(Y))
            typeof U[fe] < "u" &&
              (b((ie) => ({ ...ie, [J]: { ...ie[J], value: U[fe] } })),
              b((ie) => ({ ...ie, [J]: { ...ie[J], info: "" } })),
              (te[J] = U[fe]));
        (te[R] = X),
          N(te),
          b((J) => ({ ...J, [R]: { ...J[R], value: X } })),
          b((J) => ({ ...J, [R]: { ...J[R], info: he } }));
      } else
        F(R, "", S),
          (he = `Add New [ ${X.toUpperCase()} ] Records`),
          b((J) => ({ ...J, [R]: { ...J[R], in: !0 } })),
          b((J) => ({ ...J, [R]: { ...J[R], info: he } })),
          b((J) => ({ ...J, [R]: { ...J[R], db_data: null } }));
  }
  function j(R, O) {
    (document.getElementById("save").style.display = R),
      (document.getElementById("delete").style.display = R),
      (document.getElementById("reset").style.display = R),
      (document.getElementById("confirm").style.display = O),
      (document.getElementById("cancel").style.display = O);
  }
  function V(R) {
    let O = !0;
    for (const U of Object.entries(p)) {
      var X = U[1];
      if (X.req) {
        var W = `NOT ALLOWED !! Fill [ ${X.ph} ] Value`;
        if (
          ((document.getElementById(X.labelid).innerHTML = ""),
          jy(X.value) && X.value.trim() === "")
        ) {
          (O = !1),
            (document.getElementById(X.labelid).innerHTML = W),
            (document.getElementById(
              "statusinfo2"
            ).innerHTML = `${X.ph} Fields is Empty ! Check Again !!`);
          return;
        }
      }
    }
    p[0].in
      ? (document.getElementById("statusinfo2").innerHTML =
          "Ready to SAVE Records")
      : (document.getElementById("statusinfo2").innerHTML =
          "Ready to UPDATE Records"),
      O
        ? j("none", "block")
        : console.log(
            "cannot Save of Update, do not move for confirmation button"
          );
  }
  function q(R) {
    (document.getElementById("statusinfo2").innerHTML =
      "DataBase Warning for Delete Show Confirm Button "),
      console.log("Delete Pressed"),
      j("none", "block");
  }
  function K(R) {
    (document.getElementById("statusinfo2").innerHTML = "Reset All Fields"),
      console.log("Reset Pressed"),
      F("0", "", S);
  }
  function ae(R) {
    let O = !1,
      X = "save",
      W = a,
      U = "all",
      te = {};
    a === "items" &&
      (p[5].db_data === null && (O = !0),
      typeof p[0].db_data._id < "u" && (X = "update"),
      (te = {
        addcomp: O,
        _id: p[0].db_data._id,
        name: p[0].value,
        unit: p[1].value,
        pack: p[2].value,
        igroup: p[3].value,
        irack: p[4].value,
        comp: p[5].value,
        prate: p[6].value,
        srate: p[7].value,
        mrp: p[8].value,
        igst: p[9].value,
        cgst: p[10].value,
        sgst: p[11].value,
        hsn: p[12].value,
        sup: p[13].value,
        compname: p[5].value,
        cmnt: p[14].value,
        compid: p[0].db_data.compid,
        itemid: p[0].db_data.itemid,
        netrate: p[0].db_data.netrate,
        dis: p[0].db_data.dis,
        csid: p[0].db_data.csid,
      })),
      a === "supplier"
        ? (typeof p[0].db_data._id < "u" && (X = "update"),
          (te = {
            _id: p[0].db_data._id,
            csid: p[0].db_data.csid,
            ledgid: p[0].db_data.ledgid,
            name: p[0].value,
            add1: p[2].value,
            add2: p[3].value,
            add3: p[4].value,
            pincode: p[5].value,
            area: p[6].value,
            mobile: p[7].value,
            email: p[8].value,
            ophone: p[9].value,
            pan: p[10].value,
            bal: p[11].value,
            regn: p[12].value,
            gstn: p[13].value,
            cmnt: p[14].value,
            mode: p[1].value,
            stcode: p[4].value,
            phone: p[7].value,
            offphone: p[9].value,
            obal: "",
          }))
        : (console.log(p),
          typeof p[0].db_data._id < "u" && (X = "update"),
          (te = {
            _id: p[0].db_data._id,
            csid: p[0].db_data.csid,
            ledgid: p[0].db_data.ledgid,
            name: p[0].value,
            add1: p[2].value,
            add2: p[3].value,
            add3: p[4].value,
            pincode: p[5].value,
            area: p[6].value,
            mobile: p[7].value,
            email: p[8].value,
            ophone: p[9].value,
            pan: p[10].value,
            bal: p[11].value,
            regn: p[12].value,
            gstn: p[13].value,
            cmnt: p[14].value,
            mode: p[1].value,
            stcode: p[4].value,
            phone: p[7].value,
            offphone: p[9].value,
            obal: "",
          }));
    const he = { text: te, cs: W, getcolumn: U, mode: X };
    fetch(`${s.api}/addtodb`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(he),
    })
      .then((J) => {
        if (!J.ok) throw new Error("Network response was not ok");
        return J.json();
      })
      .then((J) => {
        J[0] === void 0 ? (J = J.name) : (J = J[0]),
          (document.getElementById(
            "statusinfo2"
          ).innerHTML = `${J}  ${X} to DataBase `),
          K();
      })
      .catch((J) => {
        console.log(J);
      }),
      console.log("Confirm Pressed"),
      j("block", "none");
  }
  function G(R) {
    (document.getElementById("statusinfo2").innerHTML =
      "Cancel Button Pressed"),
      console.log("Cancel Pressed"),
      j("block", "none");
  }
  function L(R) {
    u("/dashboard");
  }
  return k.jsx(k.Fragment, {
    children: k.jsxs("div", {
      children: [
        k.jsx("label", { hidden: "hidden", id: "cs", children: c[1].cssearch }),
        k.jsxs("div", {
          className: "container",
          id: "container",
          children: [
            k.jsx("div", {
              id: "statusinfo",
              className: "blink_me info",
              children: t.pagename,
            }),
            Object.entries(c).map((R, O) =>
              k.jsx(
                Dy,
                {
                  iidf: p,
                  setid: O,
                  setname: R[1].id,
                  setval: E[O],
                  AddHandler: H,
                },
                O
              )
            ),
            k.jsx("div", { id: "statusinfo2", className: "blink_me info" }),
            k.jsxs("div", {
              className: "cisbtmbtn",
              children: [
                k.jsx("button", {
                  id: "save",
                  className: "mbtmbt",
                  onClick: V,
                  style: { display: "block" },
                  children: "SAVE",
                }),
                k.jsx("button", {
                  id: "delete",
                  className: "mbtmbtdlt",
                  onClick: q,
                  style: { display: "block" },
                  children: "DELETE",
                }),
                k.jsx("button", {
                  id: "confirm",
                  className: "mbtmbtrst",
                  onClick: ae,
                  style: { display: "none" },
                  children: "CONFIRM",
                }),
                k.jsx("button", {
                  id: "cancel",
                  className: "mbtmbt",
                  onClick: G,
                  style: { display: "none" },
                  children: "CANCEL",
                }),
                k.jsx("button", {
                  id: "reset",
                  className: "mbtmbtrst",
                  onClick: K,
                  style: { display: "block" },
                  children: "RESET",
                }),
                k.jsx("button", {
                  type: "submit",
                  id: "submit",
                  className: "mbtmbtbck",
                  onClick: L,
                  children: "BACK",
                }),
              ],
            }),
          ],
        }),
      ],
    }),
  });
}
const Ra = ({ idf: t, sp: a, searchroutes: s }) => {
    const c = ee.useContext(yi),
      [u, p] = ee.useState(""),
      [b, S] = ee.useState(""),
      [E, N] = ee.useState("('1','2')"),
      [F, H] = ee.useState("('I','M','E')"),
      [j, V] = ee.useState([{}]),
      [q, K] = ee.useState(c.store.recdic.pan),
      ae = ta(),
      [G, L] = ee.useState(!0);
    function R(ie) {
      var ke = "0";
      return (
        isNaN(parseFloat(ie))
          ? (ke = "========")
          : (ke = parseFloat(ie).toFixed(2)),
        ke
      );
    }
    function O(ie, ke, _e) {
      ie.push({
        tax: "",
        billno: _e,
        cgst: "",
        sgst: "",
        igst: "",
        taxamt: "",
        taxable: "",
        netpayable: "",
      }),
        Object.entries(ke).map((Le, ue) => {
          var xe = R(Le[1].cgst),
            be = R(Le[1].sgst);
          R(Le[1].taxamt);
          var Me = R(Le[1].taxable),
            Te = R(Le[1].taxamt),
            He = R(Le[1].netpayable);
          ie.push({
            tax: Le[1].tax,
            billno: Le[1].billno,
            cgst: xe,
            sgst: be,
            igst: Te,
            taxamt: Te,
            taxable: Me,
            netpayable: He,
          });
        }),
        V(ie);
    }
    const X = new Date().toISOString().split("T")[0];
    ee.useState(() => {
      p(X), S(X);
    }, []);
    const W = (ie, ke, _e, Le) => {
        if (_e) {
          for (const [ue, xe] of Object.entries(_e))
            (c.store.recdic.pan[ue] = _e[ue]),
              K((be) => ({ ...be, [ue]: _e[ue] }));
          U();
        }
      },
      U = () => {
        if (
          (a == "saleledger" || a == "customerledger") &&
          c.store.recdic.pan.name == ""
        ) {
          alert("enter party Name");
          return;
        }
        const ie = {
          name: a,
          searchtxt: c.store.recdic.pan.name || "",
          partyname: "",
          billno: "",
          idf: t,
          keyc: "0",
          frm: u,
          tod: b,
          itype: E,
          billas: F,
          ledgid: c.store.recdic.pan.ledgid || "",
          fyear: 0,
        };
        fetch(`${c.api}${s}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(ie),
        })
          .then((ke) => {
            if (!ke.ok) throw new Error("Network response was not ok");
            return ke.json();
          })
          .then((ke) => {
            if ((console.log(ke), a === "gstsummary")) {
              var _e = [];
              O(_e, ke.rowp, "Purchase"), O(_e, ke.rows, "Sale");
            } else V(ke);
          })
          .catch((ke) => {
            console.log(ke);
          }),
          console.log(u, b, F, E, t);
      },
      te = () => {
        ae("/dashboard/speditpage");
      };
    function he() {
      c.updateStore((ie) => ({
        ...ie,
        recdic: { ...ie.recdic, pan: c.store.recdic.pantemplate },
      })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, cscr: "CASH" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, regn: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, gstn: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, add1: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, add2: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, mobile: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, stcode: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, pan: { ...ie.recdic.pan, email: "" } },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, ac: c.store.recdic.ac },
        })),
        c.updateStore((ie) => ({
          ...ie,
          recdic: { ...ie.recdic, grid: { [0]: c.store.recdic.itemtemplate } },
        }));
    }
    function J() {
      if (
        a === "saleledger" ||
        a === "purchaseledger" ||
        a === "purchase" ||
        a === "sale" ||
        a === "cashledger"
      )
        return k.jsxs(k.Fragment, {
          children: [
            k.jsxs("div", {
              className: "search-input",
              children: [
                k.jsxs("select", {
                  name: "billas",
                  onChange: (ie) => H(ie.target.value),
                  children: [
                    k.jsx("option", {
                      value: "('I','M','E')",
                      children: "Both",
                    }),
                    k.jsx("option", {
                      value: "('I')",
                      children: "Inter State Only",
                    }),
                    k.jsx("option", {
                      value: "('M')",
                      children: "Intra State Only",
                    }),
                    k.jsx("option", { value: "('E')", children: "Challan" }),
                  ],
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice Type 1" }),
              ],
            }),
            k.jsxs("div", {
              className: "search-input",
              children: [
                k.jsxs("select", {
                  name: "itype",
                  onChange: (ie) => N(ie.target.value),
                  children: [
                    k.jsx("option", { value: "('1','2')", children: "Both" }),
                    k.jsx("option", {
                      value: "('2')",
                      children: "Registered Party",
                    }),
                    k.jsx("option", {
                      value: "('1')",
                      children: "Un-Registered Party",
                    }),
                  ],
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice Type 2" }),
              ],
            }),
            k.jsx("div", {
              className: "search-input",
              children: k.jsx(Vr, {
                myobj: {
                  id: "spinput",
                  page: "searchsp",
                  info: t,
                  idf: t,
                  colname: "name",
                  limit: "10",
                  action: "search",
                  cs: "supplier",
                  links: `${c.api}/partysearchenter?`,
                  provided_data: "name",
                  widthstyle: "1",
                  itemname: "",
                },
                rowdatahandler: W,
              }),
            }),
            k.jsxs("div", {
              className: "info-data",
              children: [
                k.jsx("p", {
                  children: `${q.add1} - ${q.add2} - 
            ${c.store.recdic.pan.stcode}`,
                }),
                k.jsxs("p", {
                  children: [
                    `${q.gstn} - ${q.regn} `,
                    `${q.mobile} - ${q.email}`,
                  ],
                }),
              ],
            }),
          ],
        });
      if (a === "gstsummary" || a === "Updatecompanystock")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("br", {}),
            k.jsx("br", {}),
            k.jsx("br", {}),
            k.jsx("br", {}),
          ],
        });
    }
    function Y() {
      if (a === "purchase" || a === "sale")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "inv. Date" }),
            k.jsx("th", { children: "inv. No" }),
            k.jsx("th", { children: "inv Type" }),
            k.jsx("th", { children: "Party Name" }),
            k.jsx("th", { children: "Amount" }),
          ],
        });
      if (a === "cashledger")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "inv. Date" }),
            k.jsx("th", { children: "Inv No" }),
            k.jsx("th", { children: "inv Type" }),
            k.jsx("th", { children: "Party Name" }),
            k.jsx("th", { children: "Amount" }),
          ],
        });
      if (a === "saleledger")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "inv. Date" }),
            k.jsx("th", { children: "Inv No" }),
            k.jsx("th", { children: "inv Type" }),
            k.jsx("th", { children: "Party Name" }),
            k.jsx("th", { children: "CREDIT" }),
            k.jsx("th", { children: "DEBIT" }),
          ],
        });
      if (a === "purchaseledger")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "inv. Date" }),
            k.jsx("th", { children: "Inv No" }),
            k.jsx("th", { children: "inv Type" }),
            k.jsx("th", { children: "Party Name" }),
            k.jsx("th", { children: "CREDIT" }),
            k.jsx("th", { children: "DEBIT" }),
          ],
        });
      if (a === "gstsummary")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "TaxRates" }),
            k.jsx("th", { children: "MODE" }),
            k.jsx("th", { children: "CGST" }),
            k.jsx("th", { children: "SGST" }),
            k.jsx("th", { children: "IGST" }),
            k.jsx("th", { children: "Taxable" }),
            k.jsx("th", { children: "TaxAmount" }),
            k.jsx("th", { children: "Payable" }),
          ],
        });
      if (a === "Updatecompanystock")
        return k.jsxs("tr", {
          className: "search-table-header",
          children: [
            k.jsx("th", { children: "TaxRates" }),
            k.jsx("th", { children: "MODE" }),
            k.jsx("th", { children: "CGST" }),
            k.jsx("th", { children: "SGST" }),
            k.jsx("th", { children: "IGST" }),
            k.jsx("th", { children: "Taxable" }),
            k.jsx("th", { children: "TaxAmount" }),
            k.jsx("th", { children: "Payable" }),
          ],
        });
    }
    function se(ie) {
      if ((console.log(ie), a === "purchase" || a === "sale"))
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.billdate }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", {
              children:
                ie.itype === 1
                  ? "CASH"
                  : ie.itype === 2
                  ? "CREDIT"
                  : ie.itype === 3
                  ? "CHALLAN"
                  : "",
            }),
            k.jsx("td", { children: ie.name }),
            k.jsx("td", { children: ie.amount }),
          ],
        });
      if (a === "cashledger")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.billdate }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", {
              children:
                ie.itype === 1
                  ? "CASH"
                  : ie.itype === 2
                  ? "CREDIT"
                  : ie.itype === 3
                  ? "CHALLAN"
                  : "",
            }),
            k.jsx("td", { children: ie.name }),
            k.jsx("td", { children: ie.debit }),
          ],
        });
      if (a === "saleledger")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.billdate }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", {
              children:
                ie.trtype === "1"
                  ? "CREDIT"
                  : ie.itype === "2"
                  ? "CASH"
                  : ie.itype === "3"
                  ? "CHALLAN"
                  : "",
            }),
            k.jsx("td", { children: ie.name }),
            k.jsx("td", { children: ie.credit }),
            k.jsx("td", { children: ie.debit }),
          ],
        });
      if (a === "purchaseledger")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.billdate }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", {
              children:
                ie.trtype === "1"
                  ? "CREDIT"
                  : ie.itype === "2"
                  ? "CASH"
                  : ie.itype === "3"
                  ? "CHALLAN"
                  : "",
            }),
            k.jsx("td", { children: ie.name }),
            k.jsx("td", { children: ie.credit }),
            k.jsx("td", { children: ie.debit }),
          ],
        });
      if (a === "gstsummary")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.tax }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", { children: ie.cgst }),
            k.jsx("td", { children: ie.sgst }),
            k.jsx("td", { children: ie.igst }),
            k.jsx("td", { children: ie.taxable }),
            k.jsx("td", { children: ie.taxamt }),
            k.jsx("td", { children: ie.netpayable }),
          ],
        });
      if (a === "Updatecompanystock")
        return k.jsxs(k.Fragment, {
          children: [
            k.jsx("td", { children: ie.tax }),
            k.jsx("td", { children: ie.billno }),
            k.jsx("td", { children: ie.cgst }),
            k.jsx("td", { children: ie.sgst }),
            k.jsx("td", { children: ie.igst }),
            k.jsx("td", { children: ie.taxable }),
            k.jsx("td", { children: ie.taxamt }),
            k.jsx("td", { children: ie.netpayable }),
          ],
        });
    }
    function fe(ie) {
      console.log("recdic =--- ", c.store.recdic);
      var ke = j[ie];
      ke.idf = t;
      var _e = new URLSearchParams(ke);
      console.log("yeaha ");
      const Le = `${c.api}/speditcalculate?${_e}`;
      fetch(Le, {
        method: "GET",
        headers: { "Content-Type": "application/json" },
      })
        .then((ue) => {
          if (!ue.ok) throw new Error("Network response was not ok");
          return ue.json();
        })
        .then((ue) => {
          console.log(ue),
            c.updateStore((xe) => ({
              ...xe,
              recdic: { ...xe.recdic, pan: ue.pan },
            })),
            c.updateStore((xe) => ({
              ...xe,
              recdic: { ...xe.recdic, grid: ue.grid },
            }));
        }),
        (document.getElementById("show").style.background = "#f1f5f4"),
        (document.getElementById("show").disabled = !0),
        L(!1),
        (document.getElementById("open").style.background = "yellow"),
        (document.getElementById("open").style.color = "blue");
    }
    return k.jsxs("div", {
      className: "search-section",
      children: [
        k.jsxs("div", {
          className: "search-header",
          children: [
            k.jsxs("div", {
              className: "search-input",
              children: [
                k.jsx("input", {
                  placeholder: "",
                  type: "date",
                  autoFocus: !0,
                  value: u,
                  onChange: (ie) => p(ie.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "From Date" }),
              ],
            }),
            k.jsxs("div", {
              className: "search-input",
              children: [
                k.jsx("input", {
                  placeholder: "",
                  type: "date",
                  value: b,
                  onChange: (ie) => S(ie.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "To Date" }),
              ],
            }),
            J(),
          ],
        }),
        k.jsx("div", {
          className: "table-container",
          children: k.jsxs("table", {
            className: "search-table",
            children: [
              k.jsx("thead", { children: Y() }),
              k.jsx("tbody", {
                children: j.map((ie, ke) =>
                  k.jsx("tr", { onClick: () => fe(ke), children: se(ie) }, ke)
                ),
              }),
            ],
          }),
        }),
        k.jsx("br", {}),
        k.jsxs("div", {
          className: "btns",
          children: [
            k.jsx("button", {
              id: "show",
              className: "show",
              onClick: U,
              children: "Show",
            }),
            k.jsx("button", {
              id: "open",
              className: "open",
              disabled: G,
              onClick: te,
              children: "Open",
            }),
            k.jsx("button", {
              id: "close",
              className: "close",
              onClick: () => {
                he(), ae("/dashboard");
              },
              children: "Close",
            }),
          ],
        }),
      ],
    });
  },
  zy = "/assets/Indian-Rupee-symbol-ee5cfa5b.svg",
  ld = ({ whichPage: t, idf: a }) => {
    ee.useRef(0);
    const s = ta(),
      [c, u] = ee.useState(0);
    ee.useState(!1);
    const p = ee.useContext(yi),
      b = (L) => {
        const R = S.filter((O) => O.id !== L);
        E(R),
          p.updateStore((O) => {
            const X = { ...O };
            return delete X[L], X;
          });
      };
    ee.useEffect(() => {
      var L = [];
      let R = 0,
        O = 0,
        X = 0,
        W = 0,
        U = 0,
        te = 0,
        he = 0,
        J = 0,
        Y = 0;
      var se = 0;
      for (const fe of Object.values(p.store.recdic.grid))
        (he += parseFloat(fe.netamt)),
          (R += parseFloat(fe.amttot || 0)),
          (O += parseFloat(fe.cgst || 0)),
          (X += parseFloat(fe.sgst || 0)),
          (W += parseFloat(fe.ttaxamt || 0)),
          (U += parseFloat(fe.amt || 0)),
          (te += parseFloat(fe.tdisamt || 0)),
          L.push({ id: se }),
          (se += 1);
      (Y = he.toFixed(0)), (J = parseFloat(Y) - he), E(L);
      for (const [fe, ie] of Object.entries({
        gtot: he,
        cgst: O,
        sgst: X,
        ttaxamt: W,
        tsubtot: U,
        tamt: R,
        tdisamt: te,
        roundoff: J,
      }))
        p.updateStore((ke) => ({
          ...ke,
          recdic: { ...ke.recdic, pan: { ...ke.recdic.pan, [fe]: ie } },
        }));
    }, [a, t]);
    const [S, E] = ee.useState([{ id: 0 }]);
    new Date().toISOString().split("T")[0];
    const N = (L) => {
        const R = L.match(/([A-Za-z]+)(\d+)/);
        if (!R) return L;
        const O = R[1];
        let X = parseInt(R[2], 10);
        X++;
        const W = String(X).padStart(R[2].length, "0");
        return O + W;
      },
      F = (L, R, O, X) => {
        var W, U;
        if (O) {
          for (const [te, he] of Object.entries(O))
            p.store.recdic.pan[te] = O[te];
          if (X === "select")
            if (t === "purchase")
              (W = document.getElementById("billno")) == null || W.focus();
            else {
              (U = document.getElementById("cscr")) == null || U.focus();
              const te =
                  "http://localhost/partysearchenter?name=customer&getcolumn=billno&limit%5Bbillhead%5D=S&limit%5Bfyear%5D=0&limit%5Bbillas%5D=M&idf=billnoset",
                J = (async () => {
                  try {
                    const Y = await fetch(te);
                    if (!Y.ok) throw new Error("API request failed");
                    return await Y.json();
                  } catch {
                    return null;
                  }
                })();
              J &&
                J.then((Y) => {
                  Y ? V("billno", N(Y[0].billno)) : V("billno", "");
                });
            }
          console.log("purchase component", p.store.recdic.pan),
            console.log(L.idf, R, O, X);
        }
      },
      H = (L) => {
        var W;
        const R = {
            billno: "cscr",
            cscr: "dis",
            dis: "billdate",
            billdate: "invdate",
            invdate: "0item-grid",
          },
          O = L.keyCode || L.which;
        let X = L.target.value;
        (O === 13 || O === 35 || O === 9) &&
          X &&
          ((W = document.getElementById(R[L.target.id])) == null || W.focus());
      },
      j = (L) => p.store.recdic.pan[L],
      V = (L, R) => {
        p.updateStore((O) => ({
          ...O,
          recdic: { ...O.recdic, pan: { ...O.recdic.pan, [L]: R } },
        }));
      };
    function q(L) {
      if (L.target.id === "acname1") {
        p.updateStore((R) => ({
          ...R,
          recdic: {
            ...R.recdic,
            ac: { ...R.recdic.ac, [L.target.id]: L.target.value },
          },
        }));
        return;
      }
      /^-?\d*[.,]?\d*$/.test(L.target.value) &&
        (L.target.id === "dis"
          ? V("dis", L.target.value)
          : p.updateStore((R) => ({
              ...R,
              recdic: {
                ...R.recdic,
                ac: { ...R.recdic.ac, [L.target.id]: L.target.value },
              },
            })));
    }
    const K = () => {
        const L = Math.max(...S.map((R) => R.id)) + 1;
        E((R) => [...R, { id: L }]),
          p.updateStore((R) => ({
            ...R,
            recdic: {
              ...R.recdic,
              grid: { ...R.recdic.grid, [L]: p.store.recdic.itemtemplate },
            },
          })),
          p.updateStore((R) => ({
            ...R,
            recdic: {
              ...R.recdic,
              grid: { ...R.recdic.grid, [L]: { ...R.recdic.grid[L], sno: L } },
            },
          })),
          console.log(p.store.recdic);
      },
      ae = () => {
        let L = p.store.recdic.pan;
        if (L._id === "" || L.name === "" || L.ledgid === 0 || L.csid === 0) {
          alert("Enter Supplier Details");
          return;
        }
        if (L.amount === 0 || L.amt === "" || L.tamt === "" || L.gtot === "") {
          alert("Enter Items First");
          return;
        }
        if (L.amount === 0 || L.amt === "" || L.tamt === 0 || L.gtot === "") {
          alert("Internal Error Reload Page");
          return;
        }
        if (j("billno") === "") {
          alert("Enter Invoice Number");
          return;
        }
        const R = { idf: "supplier", mode: "save", getdata: p.store.recdic };
        fetch(`${p.api}/sendbilltodb`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(R),
        })
          .finally(s("/dashboard"))
          .catch((O) => {
            console.log(O);
          });
      },
      G = () => {
        p.updateStore((L) => ({
          ...L,
          recdic: { ...L.recdic, pan: p.store.recdic.pantemplate },
        })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, cscr: "CASH" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, regn: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, gstn: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, add1: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, add2: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, mobile: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, stcode: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, pan: { ...L.recdic.pan, email: "" } },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, ac: p.store.recdic.ac },
          })),
          p.updateStore((L) => ({
            ...L,
            recdic: { ...L.recdic, grid: { [0]: p.store.recdic.itemtemplate } },
          })),
          s("/dashboard");
      };
    return k.jsxs("div", {
      className: "purchase-section",
      children: [
        k.jsxs("div", {
          className: "purchase-header",
          children: [
            k.jsx("div", {
              className: "purchase-input",
              children: k.jsx(
                Vr,
                {
                  myobj: {
                    id: "spinput",
                    page: "spbill",
                    info: a,
                    idf: a,
                    colname: "name",
                    limit: "10",
                    action: "search",
                    cs: a,
                    links: `${p.api}/partysearchenter?`,
                    provided_data: "name",
                    widthstyle: "1",
                    itemname: p.store.recdic.pan.name || "",
                  },
                  rowdatahandler: F,
                },
                c
              ),
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "billno",
                  placeholder: "abcd",
                  value: j("billno"),
                  onKeyDown: H,
                  onChange: (L) => V("billno", L.target.value.toUpperCase()),
                  type: "text",
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsxs("select", {
                  id: "cscr",
                  name: "transType",
                  value: j("cscr"),
                  onKeyDown: H,
                  onChange: (L) => V("cscr", L.target.value),
                  children: [
                    k.jsx("option", { value: "cash", children: "Cash" }),
                    k.jsx("option", { value: "credit", children: "Credit" }),
                    k.jsx("option", { value: "challan", children: "Challan" }),
                  ],
                }),
                k.jsx("label", { htmlFor: "", children: "Transaction" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "dis",
                  placeholder: "",
                  type: "text",
                  onKeyDown: H,
                  maxLength: "5",
                  value: j("dis"),
                  onChange: (L) => V("dis", L.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "D. Discount" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "billdate",
                  placeholder: "",
                  value: j("billdate"),
                  onKeyDown: H,
                  type: "date",
                  onChange: (L) => V("billdate", L.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "Bill Date" }),
              ],
            }),
            k.jsxs("div", {
              className: "purchase-input",
              children: [
                k.jsx("input", {
                  id: "invdate",
                  placeholder: "",
                  value: j("invdate"),
                  onKeyDown: H,
                  type: "date",
                  onChange: (L) => V("invdate", L.target.value),
                }),
                k.jsx("label", { htmlFor: "", children: "Invoice Date" }),
              ],
            }),
          ],
        }),
        k.jsxs("div", {
          className: "info-data",
          children: [
            k.jsx("p", {
              children: `${j("add1")} - ${j("add2")} - 
          ${j("stcode")}`,
            }),
            k.jsxs("p", {
              children: [
                `${j("gstn")} - ${j("regn")} `,
                `${j("mobile")} - ${j("email")}`,
              ],
            }),
          ],
        }),
        k.jsx("div", {
          className: "info-data",
          children: k.jsx("p", { id: "statusinfo" }),
        }),
        k.jsxs("div", {
          className: "purchase-table",
          children: [
            k.jsxs("div", {
              className: "table-header",
              children: [
                k.jsx("span", {}),
                k.jsx("span", { children: "item name" }),
                k.jsx("span", { children: "pack" }),
                k.jsx("span", { children: "qty" }),
                k.jsx("span", { children: "batch" }),
                k.jsx("span", { children: "bonus" }),
                k.jsx("span", { children: "rate" }),
                k.jsx("span", { children: "discount" }),
                k.jsx("span", { children: "amount" }),
                k.jsx("span", { children: "exp" }),
                k.jsx("span", { children: "gst %" }),
                k.jsx("span", { children: "net rate" }),
              ],
            }),
            k.jsxs("div", {
              className: "table-body",
              children: [
                S.map((L) =>
                  k.jsx(
                    Of,
                    {
                      addNewRow: K,
                      id: L.id,
                      cs: a,
                      deleteHandler: () => b(L.id),
                    },
                    L.id
                  )
                ),
                k.jsx("button", {
                  className: "add-row",
                  onClick: K,
                  children: k.jsx("svg", {
                    fill: "currentColor",
                    viewBox: "0 0 20 20",
                    xmlns: "http://www.w3.org/2000/svg",
                    "aria-hidden": "true",
                    children: k.jsx("path", {
                      d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z",
                    }),
                  }),
                }),
              ],
            }),
          ],
        }),
        k.jsxs("div", {
          className: "purchase-summary",
          children: [
            k.jsxs("div", {
              className: "col-1",
              children: [
                k.jsxs("div", {
                  className: "summary-comment",
                  children: [
                    k.jsx("textarea", {
                      name: "",
                      value: j("cmnt"),
                      onChange: (L) => V("cmnt", L.target.value.toUpperCase()),
                      children: j("cmnt"),
                    }),
                    k.jsx("label", { htmlFor: "", children: "Bill Comment" }),
                  ],
                }),
                k.jsxs("div", {
                  className: "account",
                  children: [
                    k.jsxs("div", {
                      className: "summary-account",
                      children: [
                        k.jsx("input", {
                          id: "acname1",
                          type: "text",
                          value: p.store.recdic.ac.acname1,
                          onChange: q,
                        }),
                        k.jsx("label", {
                          htmlFor: "",
                          children: "Account Name",
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "account-value",
                      children: [
                        k.jsx("input", {
                          id: "acval1",
                          type: "text",
                          value: p.store.recdic.ac.acval1,
                          onChange: q,
                        }),
                        k.jsx("label", { htmlFor: "", children: "Value" }),
                      ],
                    }),
                  ],
                }),
                k.jsxs("div", {
                  className: "btns",
                  children: [
                    k.jsx("button", {
                      className: "save",
                      onClick: ae,
                      children: "Save",
                    }),
                    k.jsx("button", {
                      className: "close",
                      onClick: G,
                      children: "Close",
                    }),
                    k.jsx("button", { className: "reset", children: "Reset" }),
                  ],
                }),
              ],
            }),
            k.jsxs("div", {
              className: "col-2",
              children: [
                k.jsxs("div", {
                  className: "gst-col",
                  children: [
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "GST" }),
                        k.jsx("span", {
                          id: "ttaxamt",
                          className: "value",
                          children: j("ttaxamt"),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "CGST" }),
                        k.jsx("span", {
                          id: "cgst",
                          className: "value",
                          children: j("cgst"),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      children: [
                        k.jsx("span", { className: "label", children: "SGST" }),
                        k.jsx("span", {
                          id: "sgst",
                          className: "value",
                          children: j("sgst"),
                        }),
                      ],
                    }),
                  ],
                }),
                k.jsxs("div", {
                  className: "total-col",
                  children: [
                    k.jsxs("div", {
                      className: "bill-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Bill Total",
                        }),
                        k.jsxs("span", {
                          id: "gtot",
                          className: "value",
                          children: [
                            k.jsx("img", { src: zy, alt: "" }),
                            j("gtot"),
                          ],
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "sub-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Sub Total",
                        }),
                        k.jsx("span", {
                          id: "tsubtot",
                          className: "value",
                          children: j("tsubtot"),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "roundoff",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Round Off",
                        }),
                        k.jsx("span", {
                          id: "roundoff",
                          className: "value",
                          children: j("roundoff"),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "discount",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Discount",
                        }),
                        k.jsx("span", {
                          id: "tdisamt",
                          className: "value",
                          children: j("tdisamt"),
                        }),
                      ],
                    }),
                    k.jsxs("div", {
                      className: "amt-total",
                      children: [
                        k.jsx("span", {
                          className: "label",
                          children: "Amount Total",
                        }),
                        k.jsx("span", {
                          id: "tamt",
                          className: "value",
                          children: j("tamt"),
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      ],
    });
  },
  Oy = { cs: "supplier", pagename: "", cssearch: "supplier" },
  Fy = { cs: "supplier", pagename: "", cssearch: "supplier" },
  By = { cs: "supplier", pagename: "", cssearch: "supplier" },
  Hy = Nv([
    {
      path: "/",
      errorElement: k.jsx(Iy, {}),
      children: [
        { index: !0, element: k.jsx(jv, {}) },
        { path: "signup", element: k.jsx(uy, {}) },
        {
          path: "dashboard",
          element: k.jsx(_y, {}),
          children: [
            {
              path: "purchase",
              element: k.jsx(sd, { whichPage: "purchase", idf: "supplier" }),
            },
            {
              path: "sales",
              element: k.jsx(sd, { whichPage: "sale", idf: "customer" }),
            },
            {
              path: "search-purchase",
              element: k.jsx(Ra, {
                idf: "supplier",
                sp: "purchase",
                searchroutes: "/sppartysearch",
              }),
            },
            {
              path: "search-sales",
              element: k.jsx(Ra, {
                idf: "customer",
                sp: "sale",
                searchroutes: "/sppartysearch",
              }),
            },
            {
              path: "cash-ledger",
              element: k.jsx(Ra, {
                idf: "cashledger",
                sp: "cashledger",
                searchroutes: "/ledgersearch",
              }),
            },
            {
              path: "customer-ledger",
              element: k.jsx(Ra, {
                idf: "customer",
                sp: "saleledger",
                searchroutes: "/ledgersearch",
              }),
            },
            {
              path: "supplier-ledger",
              element: k.jsx(Ra, {
                idf: "supplier",
                sp: "purchaseledger",
                searchroutes: "/ledgersearch",
              }),
            },
            {
              path: "gst-summary",
              element: k.jsx(Ra, {
                idf: "gst-summary",
                sp: "gstsummary",
                searchroutes: "/ledgersearch",
              }),
            },
            {
              path: "company-stock",
              element: k.jsx(Ra, {
                idf: "company-stock",
                sp: "Updatecompanystock",
                searchroutes: "/ledgersearch",
              }),
            },
            {
              path: "speditpage",
              element: k.jsx(ld, { whichPage: "sale", idf: "customer" }),
            },
            {
              path: "speditpage_purchase",
              element: k.jsx(ld, { whichPage: "purchase", idf: "supplier" }),
            },
            {
              path: "add-item",
              element: k.jsx(ll, { rscr: Oy, whichPage: "items" }),
            },
            {
              path: "add-supplier",
              element: k.jsx(ll, { rscr: Fy, whichPage: "supplier" }),
            },
            {
              path: "add-customer",
              element: k.jsx(ll, { rscr: By, whichPage: "customer" }),
            },
          ],
        },
      ],
    },
  ]);
function Xy() {
  ee.useContext(yi);
  const t = "http://localhost",
    [a, s] = ee.useState({ owner: { cal: null } }),
    [c, u] = ee.useState(!0),
    p = (b) => {
      s(b), u(!1);
    };
  return (
    ee.useEffect(() => {
      const S = setTimeout(() => {
        const E = localStorage.getItem("rscr");
        if (E) {
          const N = JSON.parse(E);
          p(N);
        } else u(!1);
      }, 1e3);
      return () => clearTimeout(S);
    }, []),
    k.jsx("div", {
      className: "App",
      children: c
        ? k.jsxs("div", {
            className: "ring",
            children: ["Loading", k.jsx("span", {})],
          })
        : k.jsx(yi.Provider, {
            value: { api: t, store: a, updateStore: p },
            children: k.jsx(wv, { router: Hy }),
          }),
    })
  );
}
cl.createRoot(document.getElementById("root")).render(
  k.jsx(yt.StrictMode, { children: k.jsx(Xy, {}) })
);
